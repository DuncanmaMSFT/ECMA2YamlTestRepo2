### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.Choices
  id: Choices
  children:
  - System.Speech.Recognition.Choices.#ctor
  - System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])
  - System.Speech.Recognition.Choices.#ctor(System.String[])
  - System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])
  - System.Speech.Recognition.Choices.Add(System.String[])
  - System.Speech.Recognition.Choices.ToGrammarBuilder
  langs:
  - csharp
  name: Choices
  nameWithType: Choices
  fullName: System.Speech.Recognition.Choices
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{_oneOf.DebugSummary}")]

      public class Choices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Recognition.Choices.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: Choices()
  nameWithType: Choices.Choices()
  fullName: System.Speech.Recognition.Choices.Choices()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Choices ();
    parameters: []
  overload: System.Speech.Recognition.Choices.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])
  id: '#ctor(System.Speech.Recognition.GrammarBuilder[])'
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: Choices(GrammarBuilder[])
  nameWithType: Choices.Choices(GrammarBuilder[])
  fullName: System.Speech.Recognition.Choices.Choices(GrammarBuilder[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Choices (System.Speech.Recognition.GrammarBuilder[] alternateChoices);
    parameters:
    - id: alternateChoices
      type: System.Speech.Recognition.GrammarBuilder[]
      description: To be added.
  overload: System.Speech.Recognition.Choices.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Recognition.Choices.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: Choices(String[])
  nameWithType: Choices.Choices(String[])
  fullName: System.Speech.Recognition.Choices.Choices(String[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Choices (string[] phrases);
    parameters:
    - id: phrases
      type: System.String[]
      description: To be added.
  overload: System.Speech.Recognition.Choices.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])
  id: Add(System.Speech.Recognition.GrammarBuilder[])
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: Add(GrammarBuilder[])
  nameWithType: Choices.Add(GrammarBuilder[])
  fullName: System.Speech.Recognition.Choices.Add(GrammarBuilder[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Add (System.Speech.Recognition.GrammarBuilder[] alternateChoices);
    parameters:
    - id: alternateChoices
      type: System.Speech.Recognition.GrammarBuilder[]
      description: To be added.
  overload: System.Speech.Recognition.Choices.Add*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Recognition.Choices.Add(System.String[])
  id: Add(System.String[])
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: Add(String[])
  nameWithType: Choices.Add(String[])
  fullName: System.Speech.Recognition.Choices.Add(String[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Add (string[] phrases);
    parameters:
    - id: phrases
      type: System.String[]
      description: To be added.
  overload: System.Speech.Recognition.Choices.Add*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Speech.Recognition.Choices.ToGrammarBuilder
  id: ToGrammarBuilder
  parent: System.Speech.Recognition.Choices
  langs:
  - csharp
  name: ToGrammarBuilder()
  nameWithType: Choices.ToGrammarBuilder()
  fullName: System.Speech.Recognition.Choices.ToGrammarBuilder()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();
    parameters: []
    return:
      type: System.Speech.Recognition.GrammarBuilder
      description: To be added.
  overload: System.Speech.Recognition.Choices.ToGrammarBuilder*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.Choices.#ctor
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Choices()
  nameWithType: Choices.Choices()
  fullName: System.Speech.Recognition.Choices.Choices()
- uid: System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Choices(GrammarBuilder[])
  nameWithType: Choices.Choices(GrammarBuilder[])
  fullName: System.Speech.Recognition.Choices.Choices(GrammarBuilder[])
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder[]
- uid: System.Speech.Recognition.Choices.#ctor(System.String[])
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Choices(String[])
  nameWithType: Choices.Choices(String[])
  fullName: System.Speech.Recognition.Choices.Choices(String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Add(GrammarBuilder[])
  nameWithType: Choices.Add(GrammarBuilder[])
  fullName: System.Speech.Recognition.Choices.Add(GrammarBuilder[])
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder[]
- uid: System.Speech.Recognition.Choices.Add(System.String[])
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Add(String[])
  nameWithType: Choices.Add(String[])
  fullName: System.Speech.Recognition.Choices.Add(String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Speech.Recognition.Choices.ToGrammarBuilder
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: ToGrammarBuilder()
  nameWithType: Choices.ToGrammarBuilder()
  fullName: System.Speech.Recognition.Choices.ToGrammarBuilder()
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder
- uid: System.Speech.Recognition.Choices.#ctor*
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Choices
  nameWithType: Choices.Choices
- uid: System.Speech.Recognition.Choices.Add*
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: Add
  nameWithType: Choices.Add
- uid: System.Speech.Recognition.Choices.ToGrammarBuilder*
  parent: System.Speech.Recognition.Choices
  isExternal: false
  name: ToGrammarBuilder
  nameWithType: Choices.ToGrammarBuilder
