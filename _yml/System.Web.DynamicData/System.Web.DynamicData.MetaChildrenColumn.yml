### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.MetaChildrenColumn
  id: MetaChildrenColumn
  children:
  - System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  - System.Web.DynamicData.MetaChildrenColumn.ChildTable
  - System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable
  - System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)
  - System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)
  - System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)
  - System.Web.DynamicData.MetaChildrenColumn.Initialize
  - System.Web.DynamicData.MetaChildrenColumn.IsManyToMany
  langs:
  - csharp
  name: MetaChildrenColumn
  nameWithType: MetaChildrenColumn
  fullName: System.Web.DynamicData.MetaChildrenColumn
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public class MetaChildrenColumn : System.Web.DynamicData.MetaColumn'
  inheritance:
  - System.Object
  - System.Web.DynamicData.MetaColumn
  implements: []
  inheritedMembers:
  - System.Web.DynamicData.MetaColumn.AllowInitialValue
  - System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode
  - System.Web.DynamicData.MetaColumn.Attributes
  - System.Web.DynamicData.MetaColumn.BuildAttributeCollection
  - System.Web.DynamicData.MetaColumn.ColumnType
  - System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull
  - System.Web.DynamicData.MetaColumn.DataFormatString
  - System.Web.DynamicData.MetaColumn.DataTypeAttribute
  - System.Web.DynamicData.MetaColumn.DefaultValue
  - System.Web.DynamicData.MetaColumn.Description
  - System.Web.DynamicData.MetaColumn.DisplayName
  - System.Web.DynamicData.MetaColumn.EntityTypeProperty
  - System.Web.DynamicData.MetaColumn.FilterUIHint
  - System.Web.DynamicData.MetaColumn.HtmlEncode
  - System.Web.DynamicData.MetaColumn.IsBinaryData
  - System.Web.DynamicData.MetaColumn.IsCustomProperty
  - System.Web.DynamicData.MetaColumn.IsFloatingPoint
  - System.Web.DynamicData.MetaColumn.IsForeignKeyComponent
  - System.Web.DynamicData.MetaColumn.IsGenerated
  - System.Web.DynamicData.MetaColumn.IsInteger
  - System.Web.DynamicData.MetaColumn.IsLongString
  - System.Web.DynamicData.MetaColumn.IsPrimaryKey
  - System.Web.DynamicData.MetaColumn.IsReadOnly
  - System.Web.DynamicData.MetaColumn.IsRequired
  - System.Web.DynamicData.MetaColumn.IsString
  - System.Web.DynamicData.MetaColumn.MaxLength
  - System.Web.DynamicData.MetaColumn.Model
  - System.Web.DynamicData.MetaColumn.Name
  - System.Web.DynamicData.MetaColumn.NullDisplayText
  - System.Web.DynamicData.MetaColumn.Prompt
  - System.Web.DynamicData.MetaColumn.Provider
  - System.Web.DynamicData.MetaColumn.RequiredErrorMessage
  - System.Web.DynamicData.MetaColumn.ResetMetadata
  - System.Web.DynamicData.MetaColumn.Scaffold
  - System.Web.DynamicData.MetaColumn.ShortDisplayName
  - System.Web.DynamicData.MetaColumn.SortExpression
  - System.Web.DynamicData.MetaColumn.Table
  - System.Web.DynamicData.MetaColumn.ToString
  - System.Web.DynamicData.MetaColumn.TypeCode
  - System.Web.DynamicData.MetaColumn.UIHint
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  id: '#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)'
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: MetaChildrenColumn(MetaTable,ColumnProvider)
  nameWithType: MetaChildrenColumn.MetaChildrenColumn(MetaTable,ColumnProvider)
  fullName: System.Web.DynamicData.MetaChildrenColumn.MetaChildrenColumn(MetaTable,ColumnProvider)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public MetaChildrenColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);
    parameters:
    - id: table
      type: System.Web.DynamicData.MetaTable
      description: To be added.
    - id: entityMember
      type: System.Web.DynamicData.ModelProviders.ColumnProvider
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.DynamicData.MetaChildrenColumn.ChildTable
  id: ChildTable
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: ChildTable
  nameWithType: MetaChildrenColumn.ChildTable
  fullName: System.Web.DynamicData.MetaChildrenColumn.ChildTable
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Web.DynamicData.MetaTable ChildTable { get; }
    return:
      type: System.Web.DynamicData.MetaTable
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable
  id: ColumnInOtherTable
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: ColumnInOtherTable
  nameWithType: MetaChildrenColumn.ColumnInOtherTable
  fullName: System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Web.DynamicData.MetaColumn ColumnInOtherTable { get; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)
  id: GetChildrenListPath(System.Object)
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: GetChildrenListPath(Object)
  nameWithType: MetaChildrenColumn.GetChildrenListPath(Object)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string GetChildrenListPath (object row);
    parameters:
    - id: row
      type: System.Object
      description: To be added.
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)
  id: GetChildrenPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: GetChildrenPath(String,Object)
  nameWithType: MetaChildrenColumn.GetChildrenPath(String,Object)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(String,Object)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string GetChildrenPath (string action, object row);
    parameters:
    - id: action
      type: System.String
      description: To be added.
    - id: row
      type: System.Object
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)
  id: GetChildrenPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: GetChildrenPath(String,Object,String)
  nameWithType: MetaChildrenColumn.GetChildrenPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(String,Object,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string GetChildrenPath (string action, object row, string path);
    parameters:
    - id: action
      type: System.String
      description: To be added.
    - id: row
      type: System.Object
      description: To be added.
    - id: path
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.DynamicData.MetaChildrenColumn.Initialize
  id: Initialize
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: Initialize()
  nameWithType: MetaChildrenColumn.Initialize()
  fullName: System.Web.DynamicData.MetaChildrenColumn.Initialize()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void Initialize ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.DynamicData.MetaChildrenColumn.IsManyToMany
  id: IsManyToMany
  parent: System.Web.DynamicData.MetaChildrenColumn
  langs:
  - csharp
  name: IsManyToMany
  nameWithType: MetaChildrenColumn.IsManyToMany
  fullName: System.Web.DynamicData.MetaChildrenColumn.IsManyToMany
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsManyToMany { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Web.DynamicData.MetaColumn
  isExternal: false
  name: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: MetaChildrenColumn(MetaTable,ColumnProvider)
  nameWithType: MetaChildrenColumn.MetaChildrenColumn(MetaTable,ColumnProvider)
  fullName: System.Web.DynamicData.MetaChildrenColumn.MetaChildrenColumn(MetaTable,ColumnProvider)
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.ModelProviders.ColumnProvider
  parent: System.Web.DynamicData.ModelProviders
  isExternal: false
  name: ColumnProvider
  nameWithType: ColumnProvider
  fullName: System.Web.DynamicData.ModelProviders.ColumnProvider
- uid: System.Web.DynamicData.MetaChildrenColumn.ChildTable
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: ChildTable
  nameWithType: MetaChildrenColumn.ChildTable
  fullName: System.Web.DynamicData.MetaChildrenColumn.ChildTable
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: ColumnInOtherTable
  nameWithType: MetaChildrenColumn.ColumnInOtherTable
  fullName: System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: GetChildrenListPath(Object)
  nameWithType: MetaChildrenColumn.GetChildrenListPath(Object)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: GetChildrenPath(String,Object)
  nameWithType: MetaChildrenColumn.GetChildrenPath(String,Object)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: GetChildrenPath(String,Object,String)
  nameWithType: MetaChildrenColumn.GetChildrenPath(String,Object,String)
  fullName: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(String,Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.MetaChildrenColumn.Initialize
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: Initialize()
  nameWithType: MetaChildrenColumn.Initialize()
  fullName: System.Web.DynamicData.MetaChildrenColumn.Initialize()
- uid: System.Web.DynamicData.MetaChildrenColumn.IsManyToMany
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: IsManyToMany
  nameWithType: MetaChildrenColumn.IsManyToMany
  fullName: System.Web.DynamicData.MetaChildrenColumn.IsManyToMany
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath*
  parent: System.Web.DynamicData.MetaChildrenColumn
  isExternal: false
  name: GetChildrenPath
  nameWithType: MetaChildrenColumn.GetChildrenPath
