### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.Package
  id: Package
  children:
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  - System.IO.Packaging.Package.Close
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  - System.IO.Packaging.Package.DeletePart(System.Uri)
  - System.IO.Packaging.Package.DeletePartCore(System.Uri)
  - System.IO.Packaging.Package.DeleteRelationship(System.String)
  - System.IO.Packaging.Package.Dispose(System.Boolean)
  - System.IO.Packaging.Package.FileOpenAccess
  - System.IO.Packaging.Package.Flush
  - System.IO.Packaging.Package.FlushCore
  - System.IO.Packaging.Package.GetPart(System.Uri)
  - System.IO.Packaging.Package.GetPartCore(System.Uri)
  - System.IO.Packaging.Package.GetParts
  - System.IO.Packaging.Package.GetPartsCore
  - System.IO.Packaging.Package.GetRelationship(System.String)
  - System.IO.Packaging.Package.GetRelationships
  - System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream)
  - System.IO.Packaging.Package.Open(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Packaging.Package.PackageProperties
  - System.IO.Packaging.Package.PartExists(System.Uri)
  - System.IO.Packaging.Package.RelationshipExists(System.String)
  - System.IO.Packaging.Package.System#IDisposable#Dispose
  langs:
  - csharp
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public abstract class Package : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  id: '#ctor(System.IO.FileAccess)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  id: '#ctor(System.IO.FileAccess,System.Boolean)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess, bool streaming);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: To be added.
    - id: streaming
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.Close
  id: Close
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Close ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  id: CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);
    parameters:
    - id: partUri
      type: System.Uri
      description: To be added.
    - id: contentType
      type: System.String
      description: To be added.
    return:
      type: System.IO.Packaging.PackagePart
      description: To be added.
  overload: System.IO.Packaging.Package.CreatePart*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: To be added.
    - id: contentType
      type: System.String
      description: To be added.
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: To be added.
    return:
      type: System.IO.Packaging.PackagePart
      description: To be added.
  overload: System.IO.Packaging.Package.CreatePart*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: To be added.
    - id: contentType
      type: System.String
      description: To be added.
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: To be added.
    return:
      type: System.IO.Packaging.PackagePart
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);
    parameters:
    - id: targetUri
      type: System.Uri
      description: To be added.
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: To be added.
    - id: relationshipType
      type: System.String
      description: To be added.
    return:
      type: System.IO.Packaging.PackageRelationship
      description: To be added.
  overload: System.IO.Packaging.Package.CreateRelationship*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);
    parameters:
    - id: targetUri
      type: System.Uri
      description: To be added.
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: To be added.
    - id: relationshipType
      type: System.String
      description: To be added.
    - id: id
      type: System.String
      description: To be added.
    return:
      type: System.IO.Packaging.PackageRelationship
      description: To be added.
  overload: System.IO.Packaging.Package.CreateRelationship*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  id: DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void DeletePart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  id: DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract void DeletePartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  id: DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void DeleteRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.FileOpenAccess
  id: FileOpenAccess
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.FileAccess FileOpenAccess { get; }
    return:
      type: System.IO.FileAccess
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.Flush
  id: Flush
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Flush ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.FlushCore
  id: FlushCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract void FlushCore ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  id: GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.Packaging.PackagePart GetPart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: To be added.
    return:
      type: System.IO.Packaging.PackagePart
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  id: GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: To be added.
    return:
      type: System.IO.Packaging.PackagePart
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.GetParts
  id: GetParts
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.Packaging.PackagePartCollection GetParts ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePartCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.GetPartsCore
  id: GetPartsCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePart[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  id: GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.Packaging.PackageRelationship GetRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: To be added.
    return:
      type: System.IO.Packaging.PackageRelationship
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.GetRelationships
  id: GetRelationships
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();
    parameters: []
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  id: GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);
    parameters:
    - id: relationshipType
      type: System.String
      description: To be added.
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  id: Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: To be added.
    return:
      type: System.IO.Packaging.Package
      description: To be added.
  overload: System.IO.Packaging.Package.Open*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.Open(System.String)
  id: Open(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.Packaging.Package Open (string path);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    return:
      type: System.IO.Packaging.Package
      description: To be added.
  overload: System.IO.Packaging.Package.Open*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  id: Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: To be added.
    - id: packageMode
      type: System.IO.FileMode
      description: To be added.
    return:
      type: System.IO.Packaging.Package
      description: To be added.
  overload: System.IO.Packaging.Package.Open*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    - id: packageMode
      type: System.IO.FileMode
      description: To be added.
    return:
      type: System.IO.Packaging.Package
      description: To be added.
  overload: System.IO.Packaging.Package.Open*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: To be added.
    - id: packageMode
      type: System.IO.FileMode
      description: To be added.
    - id: packageAccess
      type: System.IO.FileAccess
      description: To be added.
    return:
      type: System.IO.Packaging.Package
      description: To be added.
  overload: System.IO.Packaging.Package.Open*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    - id: packageMode
      type: System.IO.FileMode
      description: To be added.
    - id: packageAccess
      type: System.IO.FileAccess
      description: To be added.
    return:
      type: System.IO.Packaging.Package
      description: To be added.
  overload: System.IO.Packaging.Package.Open*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    - id: packageMode
      type: System.IO.FileMode
      description: To be added.
    - id: packageAccess
      type: System.IO.FileAccess
      description: To be added.
    - id: packageShare
      type: System.IO.FileShare
      description: To be added.
    return:
      type: System.IO.Packaging.Package
      description: To be added.
  overload: System.IO.Packaging.Package.Open*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.IO.Packaging.PackageProperties PackageProperties { get; }
    return:
      type: System.IO.Packaging.PackageProperties
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  id: PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool PartExists (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  id: RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool RelationshipExists (string id);
    parameters:
    - id: id
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: To be added.
  remarks: To be added.
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.Package.Close
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  nameWithType: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  nameWithType: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  nameWithType: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  nameWithType: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.Package.FileOpenAccess
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.Package.Flush
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
- uid: System.IO.Packaging.Package.FlushCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.Package.GetParts
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
- uid: System.IO.Packaging.PackagePartCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePartCollection
  nameWithType: PackagePartCollection
  fullName: System.IO.Packaging.PackagePartCollection
- uid: System.IO.Packaging.Package.GetPartsCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart[]
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.GetRelationships
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  nameWithType: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  nameWithType: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Packaging.Package.Open(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.Packaging.Package.PackageProperties
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
- uid: System.IO.Packaging.PackageProperties
  parent: System.IO.Packaging
  isExternal: false
  name: PackageProperties
  nameWithType: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
- uid: System.IO.Packaging.Package.CreatePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart
  nameWithType: Package.CreatePart
- uid: System.IO.Packaging.Package.CreateRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship
  nameWithType: Package.CreateRelationship
- uid: System.IO.Packaging.Package.Open*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open
  nameWithType: Package.Open
