### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activities.ReceiveContent
  id: ReceiveContent
  children:
  - System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument)
  - System.ServiceModel.Activities.ReceiveContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})
  - System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument,System.Type)
  langs:
  - csharp
  name: ReceiveContent
  nameWithType: ReceiveContent
  fullName: System.ServiceModel.Activities.ReceiveContent
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract class ReceiveContent
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument)
  id: Create(System.Activities.OutArgument)
  parent: System.ServiceModel.Activities.ReceiveContent
  langs:
  - csharp
  name: Create(OutArgument)
  nameWithType: ReceiveContent.Create(OutArgument)
  fullName: System.ServiceModel.Activities.ReceiveContent.Create(OutArgument)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.ServiceModel.Activities.ReceiveMessageContent Create (System.Activities.OutArgument message);
    parameters:
    - id: message
      type: System.Activities.OutArgument
      description: To be added.
    return:
      type: System.ServiceModel.Activities.ReceiveMessageContent
      description: To be added.
  overload: System.ServiceModel.Activities.ReceiveContent.Create*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.Activities.ReceiveContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})
  id: Create(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})
  parent: System.ServiceModel.Activities.ReceiveContent
  langs:
  - csharp
  name: Create(IDictionary<String,OutArgument>)
  nameWithType: ReceiveContent.Create(IDictionary<String,OutArgument>)
  fullName: System.ServiceModel.Activities.ReceiveContent.Create(IDictionary<String,OutArgument>)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.ServiceModel.Activities.ReceiveParametersContent Create (System.Collections.Generic.IDictionary<string,System.Activities.OutArgument> parameters);
    parameters:
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument}
      description: To be added.
    return:
      type: System.ServiceModel.Activities.ReceiveParametersContent
      description: To be added.
  overload: System.ServiceModel.Activities.ReceiveContent.Create*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument,System.Type)
  id: Create(System.Activities.OutArgument,System.Type)
  parent: System.ServiceModel.Activities.ReceiveContent
  langs:
  - csharp
  name: Create(OutArgument,Type)
  nameWithType: ReceiveContent.Create(OutArgument,Type)
  fullName: System.ServiceModel.Activities.ReceiveContent.Create(OutArgument,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.ServiceModel.Activities.ReceiveMessageContent Create (System.Activities.OutArgument message, Type declaredMessageType);
    parameters:
    - id: message
      type: System.Activities.OutArgument
      description: To be added.
    - id: declaredMessageType
      type: System.Type
      description: To be added.
    return:
      type: System.ServiceModel.Activities.ReceiveMessageContent
      description: To be added.
  overload: System.ServiceModel.Activities.ReceiveContent.Create*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument)
  parent: System.ServiceModel.Activities.ReceiveContent
  isExternal: false
  name: Create(OutArgument)
  nameWithType: ReceiveContent.Create(OutArgument)
  fullName: System.ServiceModel.Activities.ReceiveContent.Create(OutArgument)
- uid: System.ServiceModel.Activities.ReceiveMessageContent
  parent: System.ServiceModel.Activities
  isExternal: false
  name: ReceiveMessageContent
  nameWithType: ReceiveMessageContent
  fullName: System.ServiceModel.Activities.ReceiveMessageContent
- uid: System.Activities.OutArgument
  parent: System.Activities
  isExternal: false
  name: OutArgument
  nameWithType: OutArgument
  fullName: System.Activities.OutArgument
- uid: System.ServiceModel.Activities.ReceiveContent.Create(System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument})
  parent: System.ServiceModel.Activities.ReceiveContent
  isExternal: false
  name: Create(IDictionary<String,OutArgument>)
  nameWithType: ReceiveContent.Create(IDictionary<String,OutArgument>)
  fullName: System.ServiceModel.Activities.ReceiveContent.Create(IDictionary<String,OutArgument>)
- uid: System.ServiceModel.Activities.ReceiveParametersContent
  parent: System.ServiceModel.Activities
  isExternal: false
  name: ReceiveParametersContent
  nameWithType: ReceiveParametersContent
  fullName: System.ServiceModel.Activities.ReceiveParametersContent
- uid: System.Collections.Generic.IDictionary{System.String,System.Activities.OutArgument}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,OutArgument>
  nameWithType: IDictionary<String,OutArgument>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Activities.OutArgument>
- uid: System.ServiceModel.Activities.ReceiveContent.Create(System.Activities.OutArgument,System.Type)
  parent: System.ServiceModel.Activities.ReceiveContent
  isExternal: false
  name: Create(OutArgument,Type)
  nameWithType: ReceiveContent.Create(OutArgument,Type)
  fullName: System.ServiceModel.Activities.ReceiveContent.Create(OutArgument,Type)
- uid: System.ServiceModel.Activities.ReceiveMessageContent
  parent: System.ServiceModel.Activities
  isExternal: false
  name: ReceiveMessageContent
  nameWithType: ReceiveMessageContent
  fullName: System.ServiceModel.Activities.ReceiveMessageContent
- uid: System.Activities.OutArgument
  parent: System.Activities
  isExternal: false
  name: OutArgument
  nameWithType: OutArgument
  fullName: System.Activities.OutArgument
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Activities.ReceiveContent.Create*
  parent: System.ServiceModel.Activities.ReceiveContent
  isExternal: false
  name: Create
  nameWithType: ReceiveContent.Create
