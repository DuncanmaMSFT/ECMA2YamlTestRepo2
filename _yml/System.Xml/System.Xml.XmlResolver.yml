### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlResolver
  id: XmlResolver
  children:
  - System.Xml.XmlResolver.#ctor
  - System.Xml.XmlResolver.Credentials
  - System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract class XmlResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected XmlResolver ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: To be added.
    - id: role
      type: System.String
      description: To be added.
    - id: ofObjectToReturn
      type: System.Type
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: To be added.
    - id: role
      type: System.String
      description: To be added.
    - id: ofObjectToReturn
      type: System.Type
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: To be added.
    - id: relativeUri
      type: System.String
      description: To be added.
    return:
      type: System.Uri
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: To be added.
    - id: type
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlResolver.#ctor
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
- uid: System.Xml.XmlResolver.Credentials
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
