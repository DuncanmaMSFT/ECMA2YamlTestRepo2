### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.AggregateTokenResolver
  id: AggregateTokenResolver
  children:
  - System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  - System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  langs:
  - csharp
  name: AggregateTokenResolver
  nameWithType: AggregateTokenResolver
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public class AggregateTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenResolver
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})'
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public AggregateTokenResolver (System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver> tokenResolvers);
    parameters:
    - id: tokenResolvers
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}
      description: To be added.
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  id: TokenResolvers
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver> TokenResolvers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}
      description: To be added.
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: To be added.
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: To be added.
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: To be added.
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SecurityTokenResolver>
  nameWithType: IEnumerable<SecurityTokenResolver>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver>
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityTokenResolver>
  nameWithType: ReadOnlyCollection<SecurityTokenResolver>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver>
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: AggregateTokenResolver
  nameWithType: AggregateTokenResolver.AggregateTokenResolver
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore
  nameWithType: AggregateTokenResolver.TryResolveTokenCore
