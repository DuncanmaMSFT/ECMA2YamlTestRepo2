### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.ICompensatableActivity
  id: ICompensatableActivity
  children:
  - System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)
  langs:
  - csharp
  name: ICompensatableActivity
  nameWithType: ICompensatableActivity
  fullName: System.Workflow.ComponentModel.ICompensatableActivity
  type: Interface
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public interface ICompensatableActivity
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.ICompensatableActivity
  langs:
  - csharp
  name: Compensate(ActivityExecutionContext)
  nameWithType: ICompensatableActivity.Compensate(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Workflow.ComponentModel.ActivityExecutionStatus Compensate (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: To be added.
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: To be added.
  overload: System.Workflow.ComponentModel.ICompensatableActivity.Compensate*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.ICompensatableActivity
  isExternal: false
  name: Compensate(ActivityExecutionContext)
  nameWithType: ICompensatableActivity.Compensate(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.ICompensatableActivity.Compensate(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.ComponentModel.ICompensatableActivity.Compensate*
  parent: System.Workflow.ComponentModel.ICompensatableActivity
  isExternal: false
  name: Compensate
  nameWithType: ICompensatableActivity.Compensate
