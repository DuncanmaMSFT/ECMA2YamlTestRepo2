### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.TcpClient
  id: TcpClient
  children:
  - System.Net.Sockets.TcpClient.#ctor
  - System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)
  - System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)
  - System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)
  - System.Net.Sockets.TcpClient.Active
  - System.Net.Sockets.TcpClient.Available
  - System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.TcpClient.Client
  - System.Net.Sockets.TcpClient.Close
  - System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)
  - System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)
  - System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)
  - System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)
  - System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)
  - System.Net.Sockets.TcpClient.Connected
  - System.Net.Sockets.TcpClient.Dispose
  - System.Net.Sockets.TcpClient.Dispose(System.Boolean)
  - System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)
  - System.Net.Sockets.TcpClient.ExclusiveAddressUse
  - System.Net.Sockets.TcpClient.Finalize
  - System.Net.Sockets.TcpClient.GetStream
  - System.Net.Sockets.TcpClient.LingerState
  - System.Net.Sockets.TcpClient.NoDelay
  - System.Net.Sockets.TcpClient.ReceiveBufferSize
  - System.Net.Sockets.TcpClient.ReceiveTimeout
  - System.Net.Sockets.TcpClient.SendBufferSize
  - System.Net.Sockets.TcpClient.SendTimeout
  langs:
  - csharp
  name: TcpClient
  nameWithType: TcpClient
  fullName: System.Net.Sockets.TcpClient
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public class TcpClient : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.#ctor
  id: '#ctor'
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: TcpClient()
  nameWithType: TcpClient.TcpClient()
  fullName: System.Net.Sockets.TcpClient.TcpClient()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public TcpClient ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)
  id: '#ctor(System.Net.IPEndPoint)'
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: TcpClient(IPEndPoint)
  nameWithType: TcpClient.TcpClient(IPEndPoint)
  fullName: System.Net.Sockets.TcpClient.TcpClient(IPEndPoint)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public TcpClient (System.Net.IPEndPoint localEP);
    parameters:
    - id: localEP
      type: System.Net.IPEndPoint
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)
  id: '#ctor(System.Net.Sockets.AddressFamily)'
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: TcpClient(AddressFamily)
  nameWithType: TcpClient.TcpClient(AddressFamily)
  fullName: System.Net.Sockets.TcpClient.TcpClient(AddressFamily)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public TcpClient (System.Net.Sockets.AddressFamily family);
    parameters:
    - id: family
      type: System.Net.Sockets.AddressFamily
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: TcpClient(String,Int32)
  nameWithType: TcpClient.TcpClient(String,Int32)
  fullName: System.Net.Sockets.TcpClient.TcpClient(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public TcpClient (string hostname, int port);
    parameters:
    - id: hostname
      type: System.String
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Active
  id: Active
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Active
  nameWithType: TcpClient.Active
  fullName: System.Net.Sockets.TcpClient.Active
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected bool Active { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Available
  id: Available
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Available
  nameWithType: TcpClient.Available
  fullName: System.Net.Sockets.TcpClient.Available
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int Available { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)
  id: BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: BeginConnect(IPAddress,Int32,AsyncCallback,Object)
  nameWithType: TcpClient.BeginConnect(IPAddress,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.TcpClient.BeginConnect(IPAddress,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
    - id: requestCallback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Sockets.TcpClient.BeginConnect*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)
  id: BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: BeginConnect(IPAddress[],Int32,AsyncCallback,Object)
  nameWithType: TcpClient.BeginConnect(IPAddress[],Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.TcpClient.BeginConnect(IPAddress[],Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);
    parameters:
    - id: addresses
      type: System.Net.IPAddress[]
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
    - id: requestCallback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Sockets.TcpClient.BeginConnect*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)
  id: BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: BeginConnect(String,Int32,AsyncCallback,Object)
  nameWithType: TcpClient.BeginConnect(String,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.TcpClient.BeginConnect(String,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);
    parameters:
    - id: host
      type: System.String
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
    - id: requestCallback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Sockets.TcpClient.BeginConnect*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Client
  id: Client
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Client
  nameWithType: TcpClient.Client
  fullName: System.Net.Sockets.TcpClient.Client
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Net.Sockets.Socket Client { get; set; }
    return:
      type: System.Net.Sockets.Socket
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Close
  id: Close
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Close()
  nameWithType: TcpClient.Close()
  fullName: System.Net.Sockets.TcpClient.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Close ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)
  id: Connect(System.Net.IPEndPoint)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Connect(IPEndPoint)
  nameWithType: TcpClient.Connect(IPEndPoint)
  fullName: System.Net.Sockets.TcpClient.Connect(IPEndPoint)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Connect (System.Net.IPEndPoint remoteEP);
    parameters:
    - id: remoteEP
      type: System.Net.IPEndPoint
      description: To be added.
  overload: System.Net.Sockets.TcpClient.Connect*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)
  id: Connect(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Connect(IPAddress,Int32)
  nameWithType: TcpClient.Connect(IPAddress,Int32)
  fullName: System.Net.Sockets.TcpClient.Connect(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Connect (System.Net.IPAddress address, int port);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.TcpClient.Connect*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)
  id: Connect(System.Net.IPAddress[],System.Int32)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Connect(IPAddress[],Int32)
  nameWithType: TcpClient.Connect(IPAddress[],Int32)
  fullName: System.Net.Sockets.TcpClient.Connect(IPAddress[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Connect (System.Net.IPAddress[] ipAddresses, int port);
    parameters:
    - id: ipAddresses
      type: System.Net.IPAddress[]
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.TcpClient.Connect*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)
  id: Connect(System.String,System.Int32)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Connect(String,Int32)
  nameWithType: TcpClient.Connect(String,Int32)
  fullName: System.Net.Sockets.TcpClient.Connect(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Connect (string hostname, int port);
    parameters:
    - id: hostname
      type: System.String
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.TcpClient.Connect*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)
  id: ConnectAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: ConnectAsync(IPAddress,Int32)
  nameWithType: TcpClient.ConnectAsync(IPAddress,Int32)
  fullName: System.Net.Sockets.TcpClient.ConnectAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Sockets.TcpClient.ConnectAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)
  id: ConnectAsync(System.Net.IPAddress[],System.Int32)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: ConnectAsync(IPAddress[],Int32)
  nameWithType: TcpClient.ConnectAsync(IPAddress[],Int32)
  fullName: System.Net.Sockets.TcpClient.ConnectAsync(IPAddress[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);
    parameters:
    - id: addresses
      type: System.Net.IPAddress[]
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Sockets.TcpClient.ConnectAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)
  id: ConnectAsync(System.String,System.Int32)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: ConnectAsync(String,Int32)
  nameWithType: TcpClient.ConnectAsync(String,Int32)
  fullName: System.Net.Sockets.TcpClient.ConnectAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (string host, int port);
    parameters:
    - id: host
      type: System.String
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Sockets.TcpClient.ConnectAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Connected
  id: Connected
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Connected
  nameWithType: TcpClient.Connected
  fullName: System.Net.Sockets.TcpClient.Connected
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool Connected { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: TcpClient.Dispose()
  fullName: System.Net.Sockets.TcpClient.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.TcpClient.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TcpClient.Dispose(Boolean)
  fullName: System.Net.Sockets.TcpClient.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  overload: System.Net.Sockets.TcpClient.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)
  id: EndConnect(System.IAsyncResult)
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: EndConnect(IAsyncResult)
  nameWithType: TcpClient.EndConnect(IAsyncResult)
  fullName: System.Net.Sockets.TcpClient.EndConnect(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void EndConnect (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.ExclusiveAddressUse
  id: ExclusiveAddressUse
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: ExclusiveAddressUse
  nameWithType: TcpClient.ExclusiveAddressUse
  fullName: System.Net.Sockets.TcpClient.ExclusiveAddressUse
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool ExclusiveAddressUse { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.Finalize
  id: Finalize
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: Finalize()
  nameWithType: TcpClient.Finalize()
  fullName: System.Net.Sockets.TcpClient.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: ~TcpClient ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.GetStream
  id: GetStream
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: GetStream()
  nameWithType: TcpClient.GetStream()
  fullName: System.Net.Sockets.TcpClient.GetStream()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Net.Sockets.NetworkStream GetStream ();
    parameters: []
    return:
      type: System.Net.Sockets.NetworkStream
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.LingerState
  id: LingerState
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: LingerState
  nameWithType: TcpClient.LingerState
  fullName: System.Net.Sockets.TcpClient.LingerState
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Net.Sockets.LingerOption LingerState { get; set; }
    return:
      type: System.Net.Sockets.LingerOption
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.NoDelay
  id: NoDelay
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: NoDelay
  nameWithType: TcpClient.NoDelay
  fullName: System.Net.Sockets.TcpClient.NoDelay
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool NoDelay { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: TcpClient.ReceiveBufferSize
  fullName: System.Net.Sockets.TcpClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.ReceiveTimeout
  id: ReceiveTimeout
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: ReceiveTimeout
  nameWithType: TcpClient.ReceiveTimeout
  fullName: System.Net.Sockets.TcpClient.ReceiveTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int ReceiveTimeout { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: TcpClient.SendBufferSize
  fullName: System.Net.Sockets.TcpClient.SendBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.TcpClient.SendTimeout
  id: SendTimeout
  parent: System.Net.Sockets.TcpClient
  langs:
  - csharp
  name: SendTimeout
  nameWithType: TcpClient.SendTimeout
  fullName: System.Net.Sockets.TcpClient.SendTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int SendTimeout { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Sockets.TcpClient.#ctor
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: TcpClient()
  nameWithType: TcpClient.TcpClient()
  fullName: System.Net.Sockets.TcpClient.TcpClient()
- uid: System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: TcpClient(IPEndPoint)
  nameWithType: TcpClient.TcpClient(IPEndPoint)
  fullName: System.Net.Sockets.TcpClient.TcpClient(IPEndPoint)
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: TcpClient(AddressFamily)
  nameWithType: TcpClient.TcpClient(AddressFamily)
  fullName: System.Net.Sockets.TcpClient.TcpClient(AddressFamily)
- uid: System.Net.Sockets.AddressFamily
  parent: System.Net.Sockets
  isExternal: true
  name: AddressFamily
  nameWithType: AddressFamily
  fullName: System.Net.Sockets.AddressFamily
- uid: System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: TcpClient(String,Int32)
  nameWithType: TcpClient.TcpClient(String,Int32)
  fullName: System.Net.Sockets.TcpClient.TcpClient(String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.Active
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Active
  nameWithType: TcpClient.Active
  fullName: System.Net.Sockets.TcpClient.Active
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.TcpClient.Available
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Available
  nameWithType: TcpClient.Available
  fullName: System.Net.Sockets.TcpClient.Available
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: BeginConnect(IPAddress,Int32,AsyncCallback,Object)
  nameWithType: TcpClient.BeginConnect(IPAddress,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.TcpClient.BeginConnect(IPAddress,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: BeginConnect(IPAddress[],Int32,AsyncCallback,Object)
  nameWithType: TcpClient.BeginConnect(IPAddress[],Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.TcpClient.BeginConnect(IPAddress[],Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress[]
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: BeginConnect(String,Int32,AsyncCallback,Object)
  nameWithType: TcpClient.BeginConnect(String,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.TcpClient.BeginConnect(String,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Sockets.TcpClient.Client
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Client
  nameWithType: TcpClient.Client
  fullName: System.Net.Sockets.TcpClient.Client
- uid: System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: true
  name: Socket
  nameWithType: Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Net.Sockets.TcpClient.Close
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Close()
  nameWithType: TcpClient.Close()
  fullName: System.Net.Sockets.TcpClient.Close()
- uid: System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Connect(IPEndPoint)
  nameWithType: TcpClient.Connect(IPEndPoint)
  fullName: System.Net.Sockets.TcpClient.Connect(IPEndPoint)
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Connect(IPAddress,Int32)
  nameWithType: TcpClient.Connect(IPAddress,Int32)
  fullName: System.Net.Sockets.TcpClient.Connect(IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Connect(IPAddress[],Int32)
  nameWithType: TcpClient.Connect(IPAddress[],Int32)
  fullName: System.Net.Sockets.TcpClient.Connect(IPAddress[],Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress[]
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Connect(String,Int32)
  nameWithType: TcpClient.Connect(String,Int32)
  fullName: System.Net.Sockets.TcpClient.Connect(String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: ConnectAsync(IPAddress,Int32)
  nameWithType: TcpClient.ConnectAsync(IPAddress,Int32)
  fullName: System.Net.Sockets.TcpClient.ConnectAsync(IPAddress,Int32)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: ConnectAsync(IPAddress[],Int32)
  nameWithType: TcpClient.ConnectAsync(IPAddress[],Int32)
  fullName: System.Net.Sockets.TcpClient.ConnectAsync(IPAddress[],Int32)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress[]
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: ConnectAsync(String,Int32)
  nameWithType: TcpClient.ConnectAsync(String,Int32)
  fullName: System.Net.Sockets.TcpClient.ConnectAsync(String,Int32)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.Connected
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Connected
  nameWithType: TcpClient.Connected
  fullName: System.Net.Sockets.TcpClient.Connected
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.TcpClient.Dispose
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Dispose()
  nameWithType: TcpClient.Dispose()
  fullName: System.Net.Sockets.TcpClient.Dispose()
- uid: System.Net.Sockets.TcpClient.Dispose(System.Boolean)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TcpClient.Dispose(Boolean)
  fullName: System.Net.Sockets.TcpClient.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: EndConnect(IAsyncResult)
  nameWithType: TcpClient.EndConnect(IAsyncResult)
  fullName: System.Net.Sockets.TcpClient.EndConnect(IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.Sockets.TcpClient.ExclusiveAddressUse
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: ExclusiveAddressUse
  nameWithType: TcpClient.ExclusiveAddressUse
  fullName: System.Net.Sockets.TcpClient.ExclusiveAddressUse
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.TcpClient.Finalize
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Finalize()
  nameWithType: TcpClient.Finalize()
  fullName: System.Net.Sockets.TcpClient.Finalize()
- uid: System.Net.Sockets.TcpClient.GetStream
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: GetStream()
  nameWithType: TcpClient.GetStream()
  fullName: System.Net.Sockets.TcpClient.GetStream()
- uid: System.Net.Sockets.NetworkStream
  parent: System.Net.Sockets
  isExternal: false
  name: NetworkStream
  nameWithType: NetworkStream
  fullName: System.Net.Sockets.NetworkStream
- uid: System.Net.Sockets.TcpClient.LingerState
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: LingerState
  nameWithType: TcpClient.LingerState
  fullName: System.Net.Sockets.TcpClient.LingerState
- uid: System.Net.Sockets.LingerOption
  parent: System.Net.Sockets
  isExternal: false
  name: LingerOption
  nameWithType: LingerOption
  fullName: System.Net.Sockets.LingerOption
- uid: System.Net.Sockets.TcpClient.NoDelay
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: NoDelay
  nameWithType: TcpClient.NoDelay
  fullName: System.Net.Sockets.TcpClient.NoDelay
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.TcpClient.ReceiveBufferSize
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: TcpClient.ReceiveBufferSize
  fullName: System.Net.Sockets.TcpClient.ReceiveBufferSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.ReceiveTimeout
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: ReceiveTimeout
  nameWithType: TcpClient.ReceiveTimeout
  fullName: System.Net.Sockets.TcpClient.ReceiveTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.SendBufferSize
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: SendBufferSize
  nameWithType: TcpClient.SendBufferSize
  fullName: System.Net.Sockets.TcpClient.SendBufferSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.SendTimeout
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: SendTimeout
  nameWithType: TcpClient.SendTimeout
  fullName: System.Net.Sockets.TcpClient.SendTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.TcpClient.BeginConnect*
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: BeginConnect
  nameWithType: TcpClient.BeginConnect
- uid: System.Net.Sockets.TcpClient.Connect*
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Connect
  nameWithType: TcpClient.Connect
- uid: System.Net.Sockets.TcpClient.ConnectAsync*
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: ConnectAsync
  nameWithType: TcpClient.ConnectAsync
- uid: System.Net.Sockets.TcpClient.Dispose*
  parent: System.Net.Sockets.TcpClient
  isExternal: false
  name: Dispose
  nameWithType: TcpClient.Dispose
