### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.IPPacketInformation
  id: IPPacketInformation
  children:
  - System.Net.Sockets.IPPacketInformation.Address
  - System.Net.Sockets.IPPacketInformation.Equals(System.Object)
  - System.Net.Sockets.IPPacketInformation.GetHashCode
  - System.Net.Sockets.IPPacketInformation.Interface
  - System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)
  - System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)
  langs:
  - csharp
  name: IPPacketInformation
  nameWithType: IPPacketInformation
  fullName: System.Net.Sockets.IPPacketInformation
  type: Struct
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public struct IPPacketInformation
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.IPPacketInformation.Address
  id: Address
  parent: System.Net.Sockets.IPPacketInformation
  langs:
  - csharp
  name: Address
  nameWithType: IPPacketInformation.Address
  fullName: System.Net.Sockets.IPPacketInformation.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Net.IPAddress Address { get; }
    return:
      type: System.Net.IPAddress
      description: To be added.
  overload: System.Net.Sockets.IPPacketInformation.Address*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.IPPacketInformation.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Sockets.IPPacketInformation
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: IPPacketInformation.Equals(Object)
  fullName: System.Net.Sockets.IPPacketInformation.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object comparand);
    parameters:
    - id: comparand
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Net.Sockets.IPPacketInformation.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.IPPacketInformation.GetHashCode
  id: GetHashCode
  parent: System.Net.Sockets.IPPacketInformation
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: IPPacketInformation.GetHashCode()
  fullName: System.Net.Sockets.IPPacketInformation.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.IPPacketInformation.GetHashCode*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.IPPacketInformation.Interface
  id: Interface
  parent: System.Net.Sockets.IPPacketInformation
  langs:
  - csharp
  name: Interface
  nameWithType: IPPacketInformation.Interface
  fullName: System.Net.Sockets.IPPacketInformation.Interface
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int Interface { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.IPPacketInformation.Interface*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)
  id: op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)
  parent: System.Net.Sockets.IPPacketInformation
  langs:
  - csharp
  name: op_Equality(IPPacketInformation,IPPacketInformation)
  nameWithType: IPPacketInformation.op_Equality(IPPacketInformation,IPPacketInformation)
  fullName: System.Net.Sockets.IPPacketInformation.op_Equality(IPPacketInformation,IPPacketInformation)
  type: Operator
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (System.Net.Sockets.IPPacketInformation packetInformation1, System.Net.Sockets.IPPacketInformation packetInformation2);
    parameters:
    - id: packetInformation1
      type: System.Net.Sockets.IPPacketInformation
      description: To be added.
    - id: packetInformation2
      type: System.Net.Sockets.IPPacketInformation
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Net.Sockets.IPPacketInformation.op_Equality*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)
  id: op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)
  parent: System.Net.Sockets.IPPacketInformation
  langs:
  - csharp
  name: op_Inequality(IPPacketInformation,IPPacketInformation)
  nameWithType: IPPacketInformation.op_Inequality(IPPacketInformation,IPPacketInformation)
  fullName: System.Net.Sockets.IPPacketInformation.op_Inequality(IPPacketInformation,IPPacketInformation)
  type: Operator
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (System.Net.Sockets.IPPacketInformation packetInformation1, System.Net.Sockets.IPPacketInformation packetInformation2);
    parameters:
    - id: packetInformation1
      type: System.Net.Sockets.IPPacketInformation
      description: To be added.
    - id: packetInformation2
      type: System.Net.Sockets.IPPacketInformation
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Net.Sockets.IPPacketInformation.op_Inequality*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Net.Sockets.IPPacketInformation.Address
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: Address
  nameWithType: IPPacketInformation.Address
  fullName: System.Net.Sockets.IPPacketInformation.Address
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.Sockets.IPPacketInformation.Equals(System.Object)
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: Equals(Object)
  nameWithType: IPPacketInformation.Equals(Object)
  fullName: System.Net.Sockets.IPPacketInformation.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Sockets.IPPacketInformation.GetHashCode
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: GetHashCode()
  nameWithType: IPPacketInformation.GetHashCode()
  fullName: System.Net.Sockets.IPPacketInformation.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.IPPacketInformation.Interface
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: Interface
  nameWithType: IPPacketInformation.Interface
  fullName: System.Net.Sockets.IPPacketInformation.Interface
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.IPPacketInformation.op_Equality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: op_Equality(IPPacketInformation,IPPacketInformation)
  nameWithType: IPPacketInformation.op_Equality(IPPacketInformation,IPPacketInformation)
  fullName: System.Net.Sockets.IPPacketInformation.op_Equality(IPPacketInformation,IPPacketInformation)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.IPPacketInformation
  parent: System.Net.Sockets
  isExternal: false
  name: IPPacketInformation
  nameWithType: IPPacketInformation
  fullName: System.Net.Sockets.IPPacketInformation
- uid: System.Net.Sockets.IPPacketInformation
  parent: System.Net.Sockets
  isExternal: false
  name: IPPacketInformation
  nameWithType: IPPacketInformation
  fullName: System.Net.Sockets.IPPacketInformation
- uid: System.Net.Sockets.IPPacketInformation.op_Inequality(System.Net.Sockets.IPPacketInformation,System.Net.Sockets.IPPacketInformation)
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: op_Inequality(IPPacketInformation,IPPacketInformation)
  nameWithType: IPPacketInformation.op_Inequality(IPPacketInformation,IPPacketInformation)
  fullName: System.Net.Sockets.IPPacketInformation.op_Inequality(IPPacketInformation,IPPacketInformation)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.IPPacketInformation
  parent: System.Net.Sockets
  isExternal: false
  name: IPPacketInformation
  nameWithType: IPPacketInformation
  fullName: System.Net.Sockets.IPPacketInformation
- uid: System.Net.Sockets.IPPacketInformation
  parent: System.Net.Sockets
  isExternal: false
  name: IPPacketInformation
  nameWithType: IPPacketInformation
  fullName: System.Net.Sockets.IPPacketInformation
- uid: System.Net.Sockets.IPPacketInformation.Address*
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: Address
  nameWithType: IPPacketInformation.Address
- uid: System.Net.Sockets.IPPacketInformation.Equals*
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: Equals
  nameWithType: IPPacketInformation.Equals
- uid: System.Net.Sockets.IPPacketInformation.GetHashCode*
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: GetHashCode
  nameWithType: IPPacketInformation.GetHashCode
- uid: System.Net.Sockets.IPPacketInformation.Interface*
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: Interface
  nameWithType: IPPacketInformation.Interface
- uid: System.Net.Sockets.IPPacketInformation.op_Equality*
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: op_Equality
  nameWithType: IPPacketInformation.op_Equality
- uid: System.Net.Sockets.IPPacketInformation.op_Inequality*
  parent: System.Net.Sockets.IPPacketInformation
  isExternal: false
  name: op_Inequality
  nameWithType: IPPacketInformation.op_Inequality
