### YamlMime:ManagedReference
items:
- uid: System.Net.Security.NegotiateStream
  id: NegotiateStream
  children:
  - System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)
  - System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.NegotiateStream.AuthenticateAsClient
  - System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)
  - System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)
  - System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  - System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  - System.Net.Security.NegotiateStream.AuthenticateAsClientAsync
  - System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)
  - System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)
  - System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  - System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  - System.Net.Security.NegotiateStream.AuthenticateAsServer
  - System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)
  - System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  - System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  - System.Net.Security.NegotiateStream.AuthenticateAsServerAsync
  - System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)
  - System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  - System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  - System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.NegotiateStream.CanRead
  - System.Net.Security.NegotiateStream.CanSeek
  - System.Net.Security.NegotiateStream.CanTimeout
  - System.Net.Security.NegotiateStream.CanWrite
  - System.Net.Security.NegotiateStream.Dispose(System.Boolean)
  - System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)
  - System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.NegotiateStream.Flush
  - System.Net.Security.NegotiateStream.ImpersonationLevel
  - System.Net.Security.NegotiateStream.IsAuthenticated
  - System.Net.Security.NegotiateStream.IsEncrypted
  - System.Net.Security.NegotiateStream.IsMutuallyAuthenticated
  - System.Net.Security.NegotiateStream.IsServer
  - System.Net.Security.NegotiateStream.IsSigned
  - System.Net.Security.NegotiateStream.Length
  - System.Net.Security.NegotiateStream.Position
  - System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.NegotiateStream.ReadTimeout
  - System.Net.Security.NegotiateStream.RemoteIdentity
  - System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.NegotiateStream.SetLength(System.Int64)
  - System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.NegotiateStream.WriteTimeout
  langs:
  - csharp
  name: NegotiateStream
  nameWithType: NegotiateStream
  fullName: System.Net.Security.NegotiateStream
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public class NegotiateStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: NegotiateStream(Stream)
  nameWithType: NegotiateStream.NegotiateStream(Stream)
  fullName: System.Net.Security.NegotiateStream.NegotiateStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public NegotiateStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: NegotiateStream(Stream,Boolean)
  nameWithType: NegotiateStream.NegotiateStream(Stream,Boolean)
  fullName: System.Net.Security.NegotiateStream.NegotiateStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: To be added.
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient
  id: AuthenticateAsClient
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsClient()
  nameWithType: NegotiateStream.AuthenticateAsClient()
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClient()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AuthenticateAsClient ();
    parameters: []
  overload: System.Net.Security.NegotiateStream.AuthenticateAsClient*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)
  id: AuthenticateAsClient(System.Net.NetworkCredential,System.String)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsClient(NetworkCredential,String)
  nameWithType: NegotiateStream.AuthenticateAsClient(NetworkCredential,String)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClient(NetworkCredential,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsClient*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)
  id: AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsClient(NetworkCredential,ChannelBinding,String)
  nameWithType: NegotiateStream.AuthenticateAsClient(NetworkCredential,ChannelBinding,String)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClient(NetworkCredential,ChannelBinding,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: binding
      type: System.Security.Authentication.ExtendedProtection.ChannelBinding
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsClient*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  id: AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: allowedImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsClient*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  id: AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: binding
      type: System.Security.Authentication.ExtendedProtection.ChannelBinding
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: allowedImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsClient*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync
  id: AuthenticateAsClientAsync
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync()
  nameWithType: NegotiateStream.AuthenticateAsClientAsync()
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)
  id: AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(NetworkCredential,String)
  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,String)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)
  id: AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String)
  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: binding
      type: System.Security.Authentication.ExtendedProtection.ChannelBinding
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  id: AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: allowedImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  id: AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: binding
      type: System.Security.Authentication.ExtendedProtection.ChannelBinding
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: allowedImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServer
  id: AuthenticateAsServer
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsServer()
  nameWithType: NegotiateStream.AuthenticateAsServer()
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServer()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AuthenticateAsServer ();
    parameters: []
  overload: System.Net.Security.NegotiateStream.AuthenticateAsServer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)
  id: AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsServer(ExtendedProtectionPolicy)
  nameWithType: NegotiateStream.AuthenticateAsServer(ExtendedProtectionPolicy)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServer(ExtendedProtectionPolicy)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);
    parameters:
    - id: policy
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsServer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  id: AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: requiredImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsServer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  id: AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: policy
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: requiredImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsServer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync
  id: AuthenticateAsServerAsync
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync()
  nameWithType: NegotiateStream.AuthenticateAsServerAsync()
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)
  id: AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(ExtendedProtectionPolicy)
  nameWithType: NegotiateStream.AuthenticateAsServerAsync(ExtendedProtectionPolicy)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(ExtendedProtectionPolicy)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);
    parameters:
    - id: policy
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  id: AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: requiredImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  id: AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: policy
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: requiredImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsClient(AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(NetworkCredential,String,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,String,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: binding
      type: System.Security.Authentication.ExtendedProtection.ChannelBinding
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: allowedImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: binding
      type: System.Security.Authentication.ExtendedProtection.ChannelBinding
      description: To be added.
    - id: targetName
      type: System.String
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: allowedImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsServer(AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(ExtendedProtectionPolicy,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsServer(ExtendedProtectionPolicy,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(ExtendedProtectionPolicy,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: policy
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: requiredImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: credential
      type: System.Net.NetworkCredential
      description: To be added.
    - id: policy
      type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
      description: To be added.
    - id: requiredProtectionLevel
      type: System.Net.Security.ProtectionLevel
      description: To be added.
    - id: requiredImpersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    - id: asyncCallback
      type: System.AsyncCallback
      description: To be added.
    - id: asyncState
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.CanRead
  id: CanRead
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: CanRead
  nameWithType: NegotiateStream.CanRead
  fullName: System.Net.Security.NegotiateStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: NegotiateStream.CanSeek
  fullName: System.Net.Security.NegotiateStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: NegotiateStream.CanTimeout
  fullName: System.Net.Security.NegotiateStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: NegotiateStream.CanWrite
  fullName: System.Net.Security.NegotiateStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: NegotiateStream.Dispose(Boolean)
  fullName: System.Net.Security.NegotiateStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: NegotiateStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.NegotiateStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: NegotiateStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.NegotiateStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: NegotiateStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.NegotiateStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: NegotiateStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.NegotiateStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.Flush
  id: Flush
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: Flush()
  nameWithType: NegotiateStream.Flush()
  fullName: System.Net.Security.NegotiateStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void Flush ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.ImpersonationLevel
  id: ImpersonationLevel
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: ImpersonationLevel
  nameWithType: NegotiateStream.ImpersonationLevel
  fullName: System.Net.Security.NegotiateStream.ImpersonationLevel
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }
    return:
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: NegotiateStream.IsAuthenticated
  fullName: System.Net.Security.NegotiateStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: NegotiateStream.IsEncrypted
  fullName: System.Net.Security.NegotiateStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: NegotiateStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.NegotiateStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.IsServer
  id: IsServer
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: IsServer
  nameWithType: NegotiateStream.IsServer
  fullName: System.Net.Security.NegotiateStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: NegotiateStream.IsSigned
  fullName: System.Net.Security.NegotiateStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.Length
  id: Length
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: Length
  nameWithType: NegotiateStream.Length
  fullName: System.Net.Security.NegotiateStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.Position
  id: Position
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: Position
  nameWithType: NegotiateStream.Position
  fullName: System.Net.Security.NegotiateStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: NegotiateStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.NegotiateStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: NegotiateStream.ReadTimeout
  fullName: System.Net.Security.NegotiateStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.RemoteIdentity
  id: RemoteIdentity
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: RemoteIdentity
  nameWithType: NegotiateStream.RemoteIdentity
  fullName: System.Net.Security.NegotiateStream.RemoteIdentity
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: NegotiateStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.NegotiateStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: To be added.
    - id: origin
      type: System.IO.SeekOrigin
      description: To be added.
    return:
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: NegotiateStream.SetLength(Int64)
  fullName: System.Net.Security.NegotiateStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: NegotiateStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.NegotiateStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Security.NegotiateStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.NegotiateStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: NegotiateStream.WriteTimeout
  fullName: System.Net.Security.NegotiateStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: NegotiateStream(Stream)
  nameWithType: NegotiateStream.NegotiateStream(Stream)
  fullName: System.Net.Security.NegotiateStream.NegotiateStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: NegotiateStream(Stream,Boolean)
  nameWithType: NegotiateStream.NegotiateStream(Stream,Boolean)
  fullName: System.Net.Security.NegotiateStream.NegotiateStream(Stream,Boolean)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClient()
  nameWithType: NegotiateStream.AuthenticateAsClient()
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClient()
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClient(NetworkCredential,String)
  nameWithType: NegotiateStream.AuthenticateAsClient(NetworkCredential,String)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClient(NetworkCredential,String)
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClient(NetworkCredential,ChannelBinding,String)
  nameWithType: NegotiateStream.AuthenticateAsClient(NetworkCredential,ChannelBinding,String)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClient(NetworkCredential,ChannelBinding,String)
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: true
  name: ChannelBinding
  nameWithType: ChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: true
  name: ChannelBinding
  nameWithType: ChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClientAsync()
  nameWithType: NegotiateStream.AuthenticateAsClientAsync()
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClientAsync(NetworkCredential,String)
  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,String)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String)
  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: true
  name: ChannelBinding
  nameWithType: ChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClientAsync(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: true
  name: ChannelBinding
  nameWithType: ChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServer
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsServer()
  nameWithType: NegotiateStream.AuthenticateAsServer()
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServer()
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsServer(ExtendedProtectionPolicy)
  nameWithType: NegotiateStream.AuthenticateAsServer(ExtendedProtectionPolicy)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServer(ExtendedProtectionPolicy)
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsServerAsync()
  nameWithType: NegotiateStream.AuthenticateAsServerAsync()
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsServerAsync(ExtendedProtectionPolicy)
  nameWithType: NegotiateStream.AuthenticateAsServerAsync(ExtendedProtectionPolicy)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(ExtendedProtectionPolicy)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsServerAsync(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsServerAsync(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
  nameWithType: NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
  fullName: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsClient(AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsClient(AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsClient(NetworkCredential,String,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,String,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: true
  name: ChannelBinding
  nameWithType: ChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: true
  name: ChannelBinding
  nameWithType: ChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsServer(AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsServer(AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsServer(ExtendedProtectionPolicy,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsServer(ExtendedProtectionPolicy,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(ExtendedProtectionPolicy,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(NetworkCredential,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginAuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: NegotiateStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.NegotiateStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.NegotiateStream.CanRead
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: CanRead
  nameWithType: NegotiateStream.CanRead
  fullName: System.Net.Security.NegotiateStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.CanSeek
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: CanSeek
  nameWithType: NegotiateStream.CanSeek
  fullName: System.Net.Security.NegotiateStream.CanSeek
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.CanTimeout
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: CanTimeout
  nameWithType: NegotiateStream.CanTimeout
  fullName: System.Net.Security.NegotiateStream.CanTimeout
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.CanWrite
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: CanWrite
  nameWithType: NegotiateStream.CanWrite
  fullName: System.Net.Security.NegotiateStream.CanWrite
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.Dispose(System.Boolean)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: NegotiateStream.Dispose(Boolean)
  fullName: System.Net.Security.NegotiateStream.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: NegotiateStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.NegotiateStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: NegotiateStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.NegotiateStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: NegotiateStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.NegotiateStream.EndRead(IAsyncResult)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: NegotiateStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.NegotiateStream.EndWrite(IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Net.Security.NegotiateStream.Flush
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: Flush()
  nameWithType: NegotiateStream.Flush()
  fullName: System.Net.Security.NegotiateStream.Flush()
- uid: System.Net.Security.NegotiateStream.ImpersonationLevel
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: ImpersonationLevel
  nameWithType: NegotiateStream.ImpersonationLevel
  fullName: System.Net.Security.NegotiateStream.ImpersonationLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Security.NegotiateStream.IsAuthenticated
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: NegotiateStream.IsAuthenticated
  fullName: System.Net.Security.NegotiateStream.IsAuthenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.IsEncrypted
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: IsEncrypted
  nameWithType: NegotiateStream.IsEncrypted
  fullName: System.Net.Security.NegotiateStream.IsEncrypted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.IsMutuallyAuthenticated
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: NegotiateStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.NegotiateStream.IsMutuallyAuthenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.IsServer
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: IsServer
  nameWithType: NegotiateStream.IsServer
  fullName: System.Net.Security.NegotiateStream.IsServer
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.IsSigned
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: IsSigned
  nameWithType: NegotiateStream.IsSigned
  fullName: System.Net.Security.NegotiateStream.IsSigned
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.NegotiateStream.Length
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: Length
  nameWithType: NegotiateStream.Length
  fullName: System.Net.Security.NegotiateStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.NegotiateStream.Position
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: Position
  nameWithType: NegotiateStream.Position
  fullName: System.Net.Security.NegotiateStream.Position
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: NegotiateStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.NegotiateStream.Read(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.NegotiateStream.ReadTimeout
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: ReadTimeout
  nameWithType: NegotiateStream.ReadTimeout
  fullName: System.Net.Security.NegotiateStream.ReadTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.NegotiateStream.RemoteIdentity
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: RemoteIdentity
  nameWithType: NegotiateStream.RemoteIdentity
  fullName: System.Net.Security.NegotiateStream.RemoteIdentity
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: NegotiateStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.NegotiateStream.Seek(Int64,SeekOrigin)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.NegotiateStream.SetLength(System.Int64)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: NegotiateStream.SetLength(Int64)
  fullName: System.Net.Security.NegotiateStream.SetLength(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: NegotiateStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.NegotiateStream.Write(Byte[],Int32,Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.NegotiateStream.WriteTimeout
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: WriteTimeout
  nameWithType: NegotiateStream.WriteTimeout
  fullName: System.Net.Security.NegotiateStream.WriteTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClient*
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: NegotiateStream.AuthenticateAsClient
- uid: System.Net.Security.NegotiateStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: NegotiateStream.AuthenticateAsClientAsync
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServer*
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: NegotiateStream.AuthenticateAsServer
- uid: System.Net.Security.NegotiateStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: NegotiateStream.AuthenticateAsServerAsync
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: NegotiateStream.BeginAuthenticateAsClient
- uid: System.Net.Security.NegotiateStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.NegotiateStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: NegotiateStream.BeginAuthenticateAsServer
