### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.LicFileLicenseProvider
  id: LicFileLicenseProvider
  children:
  - System.ComponentModel.LicFileLicenseProvider.#ctor
  - System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)
  - System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  - System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)
  langs:
  - csharp
  name: LicFileLicenseProvider
  nameWithType: LicFileLicenseProvider
  fullName: System.ComponentModel.LicFileLicenseProvider
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public class LicFileLicenseProvider : System.ComponentModel.LicenseProvider'
  inheritance:
  - System.Object
  - System.ComponentModel.LicenseProvider
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.LicFileLicenseProvider.#ctor
  id: '#ctor'
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: LicFileLicenseProvider()
  nameWithType: LicFileLicenseProvider.LicFileLicenseProvider()
  fullName: System.ComponentModel.LicFileLicenseProvider.LicFileLicenseProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public LicFileLicenseProvider ();
    parameters: []
  overload: System.ComponentModel.LicFileLicenseProvider.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)
  id: GetKey(System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: GetKey(Type)
  nameWithType: LicFileLicenseProvider.GetKey(Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetKey(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual string GetKey (Type type);
    parameters:
    - id: type
      type: System.Type
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.ComponentModel.LicFileLicenseProvider.GetKey*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  id: GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: GetLicense(LicenseContext,Type,Object,Boolean)
  nameWithType: LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.ComponentModel.License GetLicense (System.ComponentModel.LicenseContext context, Type type, object instance, bool allowExceptions);
    parameters:
    - id: context
      type: System.ComponentModel.LicenseContext
      description: To be added.
    - id: type
      type: System.Type
      description: To be added.
    - id: instance
      type: System.Object
      description: To be added.
    - id: allowExceptions
      type: System.Boolean
      description: To be added.
    return:
      type: System.ComponentModel.License
      description: To be added.
  overload: System.ComponentModel.LicFileLicenseProvider.GetLicense*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)
  id: IsKeyValid(System.String,System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: IsKeyValid(String,Type)
  nameWithType: LicFileLicenseProvider.IsKeyValid(String,Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(String,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual bool IsKeyValid (string key, Type type);
    parameters:
    - id: key
      type: System.String
      description: To be added.
    - id: type
      type: System.Type
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.ComponentModel.LicFileLicenseProvider.IsKeyValid*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.LicenseProvider
  isExternal: false
  name: System.ComponentModel.LicenseProvider
- uid: System.ComponentModel.LicFileLicenseProvider.#ctor
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: LicFileLicenseProvider()
  nameWithType: LicFileLicenseProvider.LicFileLicenseProvider()
  fullName: System.ComponentModel.LicFileLicenseProvider.LicFileLicenseProvider()
- uid: System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetKey(Type)
  nameWithType: LicFileLicenseProvider.GetKey(Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetKey(Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetLicense(LicenseContext,Type,Object,Boolean)
  nameWithType: LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
- uid: System.ComponentModel.License
  parent: System.ComponentModel
  isExternal: false
  name: License
  nameWithType: License
  fullName: System.ComponentModel.License
- uid: System.ComponentModel.LicenseContext
  parent: System.ComponentModel
  isExternal: false
  name: LicenseContext
  nameWithType: LicenseContext
  fullName: System.ComponentModel.LicenseContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: IsKeyValid(String,Type)
  nameWithType: LicFileLicenseProvider.IsKeyValid(String,Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(String,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.LicFileLicenseProvider.#ctor*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: LicFileLicenseProvider
  nameWithType: LicFileLicenseProvider.LicFileLicenseProvider
- uid: System.ComponentModel.LicFileLicenseProvider.GetKey*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetKey
  nameWithType: LicFileLicenseProvider.GetKey
- uid: System.ComponentModel.LicFileLicenseProvider.GetLicense*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetLicense
  nameWithType: LicFileLicenseProvider.GetLicense
- uid: System.ComponentModel.LicFileLicenseProvider.IsKeyValid*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: IsKeyValid
  nameWithType: LicFileLicenseProvider.IsKeyValid
