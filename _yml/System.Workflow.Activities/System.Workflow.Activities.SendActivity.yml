### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.SendActivity
  id: SendActivity
  children:
  - System.Workflow.Activities.SendActivity.#ctor
  - System.Workflow.Activities.SendActivity.#ctor(System.String)
  - System.Workflow.Activities.SendActivity.AfterResponse
  - System.Workflow.Activities.SendActivity.AfterResponseEvent
  - System.Workflow.Activities.SendActivity.BeforeSend
  - System.Workflow.Activities.SendActivity.BeforeSendEvent
  - System.Workflow.Activities.SendActivity.ChannelToken
  - System.Workflow.Activities.SendActivity.Context
  - System.Workflow.Activities.SendActivity.CustomAddress
  - System.Workflow.Activities.SendActivity.CustomAddressProperty
  - System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  - System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  - System.Workflow.Activities.SendActivity.InitializeProperties
  - System.Workflow.Activities.SendActivity.ParameterBindings
  - System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  - System.Workflow.Activities.SendActivity.ServiceOperationInfo
  - System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  langs:
  - csharp
  name: SendActivity
  nameWithType: SendActivity
  fullName: System.Workflow.Activities.SendActivity
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.SendActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SendActivity), "Design.Resources.SendActivity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.SendActivityValidator))]

      public sealed class SendActivity : System.Workflow.ComponentModel.Activity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements: []
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SendActivity()
  nameWithType: SendActivity.SendActivity()
  fullName: System.Workflow.Activities.SendActivity.SendActivity()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public SendActivity ();
    parameters: []
  overload: System.Workflow.Activities.SendActivity.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SendActivity(String)
  nameWithType: SendActivity.SendActivity(String)
  fullName: System.Workflow.Activities.SendActivity.SendActivity(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public SendActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.AfterResponse
  id: AfterResponse
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: AfterResponse
  nameWithType: SendActivity.AfterResponse
  fullName: System.Workflow.Activities.SendActivity.AfterResponse
  type: Event
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public event EventHandler<System.Workflow.Activities.SendActivityEventArgs> AfterResponse;
    return:
      type: System.EventHandler{System.Workflow.Activities.SendActivityEventArgs}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.AfterResponseEvent
  id: AfterResponseEvent
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: AfterResponseEvent
  nameWithType: SendActivity.AfterResponseEvent
  fullName: System.Workflow.Activities.SendActivity.AfterResponseEvent
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.BeforeSend
  id: BeforeSend
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: BeforeSend
  nameWithType: SendActivity.BeforeSend
  fullName: System.Workflow.Activities.SendActivity.BeforeSend
  type: Event
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public event EventHandler<System.Workflow.Activities.SendActivityEventArgs> BeforeSend;
    return:
      type: System.EventHandler{System.Workflow.Activities.SendActivityEventArgs}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.BeforeSendEvent
  id: BeforeSendEvent
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: BeforeSendEvent
  nameWithType: SendActivity.BeforeSendEvent
  fullName: System.Workflow.Activities.SendActivity.BeforeSendEvent
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.ChannelToken
  id: ChannelToken
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ChannelToken
  nameWithType: SendActivity.ChannelToken
  fullName: System.Workflow.Activities.SendActivity.ChannelToken
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Workflow.Activities.ChannelToken ChannelToken { get; set; }
    return:
      type: System.Workflow.Activities.ChannelToken
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.ChannelToken*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.Context
  id: Context
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: Context
  nameWithType: SendActivity.Context
  fullName: System.Workflow.Activities.SendActivity.Context
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Context { get; set; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.Context*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.CustomAddress
  id: CustomAddress
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: CustomAddress
  nameWithType: SendActivity.CustomAddress
  fullName: System.Workflow.Activities.SendActivity.CustomAddress
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public string CustomAddress { get; set; }
    return:
      type: System.String
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.CustomAddress*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.CustomAddressProperty
  id: CustomAddressProperty
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: CustomAddressProperty
  nameWithType: SendActivity.CustomAddressProperty
  fullName: System.Workflow.Activities.SendActivity.CustomAddressProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: SendActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.SendActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: To be added.
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.Execute*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: GetContext(Activity,ChannelToken,Type)
  nameWithType: SendActivity.GetContext(Activity,ChannelToken,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,ChannelToken,Type)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: To be added.
    - id: endpoint
      type: System.Workflow.Activities.ChannelToken
      description: To be added.
    - id: contractType
      type: System.Type
      description: To be added.
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.GetContext*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: GetContext(Activity,String,String,Type)
  nameWithType: SendActivity.GetContext(Activity,String,String,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,String,String,Type)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: To be added.
    - id: endpointName
      type: System.String
      description: To be added.
    - id: ownerActivityName
      type: System.String
      description: To be added.
    - id: contractType
      type: System.Type
      description: To be added.
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.GetContext*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: SendActivity.InitializeProperties()
  fullName: System.Workflow.Activities.SendActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.SendActivity.InitializeProperties*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: SendActivity.ParameterBindings
  fullName: System.Workflow.Activities.SendActivity.ParameterBindings
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.ParameterBindings*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  id: ReturnValuePropertyName
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ReturnValuePropertyName
  nameWithType: SendActivity.ReturnValuePropertyName
  fullName: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public const string ReturnValuePropertyName;
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.ServiceOperationInfo
  id: ServiceOperationInfo
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: ServiceOperationInfo
  nameWithType: SendActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.SendActivity.ServiceOperationInfo
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo { get; set; }
    return:
      type: System.Workflow.Activities.TypedOperationInfo
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.ServiceOperationInfo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  id: SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static void SetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: To be added.
    - id: endpoint
      type: System.Workflow.Activities.ChannelToken
      description: To be added.
    - id: contractType
      type: System.Type
      description: To be added.
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.SetContext*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  id: SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  langs:
  - csharp
  name: SetContext(Activity,String,String,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static void SetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: To be added.
    - id: endpointName
      type: System.String
      description: To be added.
    - id: ownerActivityName
      type: System.String
      description: To be added.
    - id: contractType
      type: System.Type
      description: To be added.
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: To be added.
  overload: System.Workflow.Activities.SendActivity.SetContext*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.SendActivity.#ctor
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SendActivity()
  nameWithType: SendActivity.SendActivity()
  fullName: System.Workflow.Activities.SendActivity.SendActivity()
- uid: System.Workflow.Activities.SendActivity.#ctor(System.String)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SendActivity(String)
  nameWithType: SendActivity.SendActivity(String)
  fullName: System.Workflow.Activities.SendActivity.SendActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.SendActivity.AfterResponse
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: AfterResponse
  nameWithType: SendActivity.AfterResponse
  fullName: System.Workflow.Activities.SendActivity.AfterResponse
- uid: System.EventHandler{System.Workflow.Activities.SendActivityEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SendActivityEventArgs>
  nameWithType: EventHandler<SendActivityEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.SendActivityEventArgs>
- uid: System.Workflow.Activities.SendActivity.AfterResponseEvent
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: AfterResponseEvent
  nameWithType: SendActivity.AfterResponseEvent
  fullName: System.Workflow.Activities.SendActivity.AfterResponseEvent
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.SendActivity.BeforeSend
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: BeforeSend
  nameWithType: SendActivity.BeforeSend
  fullName: System.Workflow.Activities.SendActivity.BeforeSend
- uid: System.EventHandler{System.Workflow.Activities.SendActivityEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SendActivityEventArgs>
  nameWithType: EventHandler<SendActivityEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.SendActivityEventArgs>
- uid: System.Workflow.Activities.SendActivity.BeforeSendEvent
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: BeforeSendEvent
  nameWithType: SendActivity.BeforeSendEvent
  fullName: System.Workflow.Activities.SendActivity.BeforeSendEvent
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.SendActivity.ChannelToken
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ChannelToken
  nameWithType: SendActivity.ChannelToken
  fullName: System.Workflow.Activities.SendActivity.ChannelToken
- uid: System.Workflow.Activities.ChannelToken
  parent: System.Workflow.Activities
  isExternal: false
  name: ChannelToken
  nameWithType: ChannelToken
  fullName: System.Workflow.Activities.ChannelToken
- uid: System.Workflow.Activities.SendActivity.Context
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Context
  nameWithType: SendActivity.Context
  fullName: System.Workflow.Activities.SendActivity.Context
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
- uid: System.Workflow.Activities.SendActivity.CustomAddress
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: CustomAddress
  nameWithType: SendActivity.CustomAddress
  fullName: System.Workflow.Activities.SendActivity.CustomAddress
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.SendActivity.CustomAddressProperty
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: CustomAddressProperty
  nameWithType: SendActivity.CustomAddressProperty
  fullName: System.Workflow.Activities.SendActivity.CustomAddressProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: SendActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.SendActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: GetContext(Activity,ChannelToken,Type)
  nameWithType: SendActivity.GetContext(Activity,ChannelToken,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,ChannelToken,Type)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.ChannelToken
  parent: System.Workflow.Activities
  isExternal: false
  name: ChannelToken
  nameWithType: ChannelToken
  fullName: System.Workflow.Activities.ChannelToken
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: GetContext(Activity,String,String,Type)
  nameWithType: SendActivity.GetContext(Activity,String,String,Type)
  fullName: System.Workflow.Activities.SendActivity.GetContext(Activity,String,String,Type)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.SendActivity.InitializeProperties
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: SendActivity.InitializeProperties()
  fullName: System.Workflow.Activities.SendActivity.InitializeProperties()
- uid: System.Workflow.Activities.SendActivity.ParameterBindings
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: SendActivity.ParameterBindings
  fullName: System.Workflow.Activities.SendActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ReturnValuePropertyName
  nameWithType: SendActivity.ReturnValuePropertyName
  fullName: System.Workflow.Activities.SendActivity.ReturnValuePropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.SendActivity.ServiceOperationInfo
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: SendActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.SendActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.TypedOperationInfo
  parent: System.Workflow.Activities
  isExternal: false
  name: TypedOperationInfo
  nameWithType: TypedOperationInfo
  fullName: System.Workflow.Activities.TypedOperationInfo
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,ChannelToken,Type,IDictionary<String,String>)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.ChannelToken
  parent: System.Workflow.Activities
  isExternal: false
  name: ChannelToken
  nameWithType: ChannelToken
  fullName: System.Workflow.Activities.ChannelToken
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
- uid: System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SetContext(Activity,String,String,Type,IDictionary<String,String>)
  nameWithType: SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
  fullName: System.Workflow.Activities.SendActivity.SetContext(Activity,String,String,Type,IDictionary<String,String>)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
- uid: System.Workflow.Activities.SendActivity.#ctor*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SendActivity
  nameWithType: SendActivity.SendActivity
- uid: System.Workflow.Activities.SendActivity.ChannelToken*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ChannelToken
  nameWithType: SendActivity.ChannelToken
- uid: System.Workflow.Activities.SendActivity.Context*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Context
  nameWithType: SendActivity.Context
- uid: System.Workflow.Activities.SendActivity.CustomAddress*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: CustomAddress
  nameWithType: SendActivity.CustomAddress
- uid: System.Workflow.Activities.SendActivity.Execute*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: Execute
  nameWithType: SendActivity.Execute
- uid: System.Workflow.Activities.SendActivity.GetContext*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: GetContext
  nameWithType: SendActivity.GetContext
- uid: System.Workflow.Activities.SendActivity.InitializeProperties*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: SendActivity.InitializeProperties
- uid: System.Workflow.Activities.SendActivity.ParameterBindings*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: SendActivity.ParameterBindings
- uid: System.Workflow.Activities.SendActivity.ServiceOperationInfo*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: SendActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.SendActivity.SetContext*
  parent: System.Workflow.Activities.SendActivity
  isExternal: false
  name: SetContext
  nameWithType: SendActivity.SetContext
