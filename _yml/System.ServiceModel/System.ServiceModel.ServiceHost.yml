### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceHost
  id: ServiceHost
  children:
  - System.ServiceModel.ServiceHost.#ctor
  - System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])
  - System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHost.ApplyConfiguration
  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.OnClosed
  - System.ServiceModel.ServiceHost.SingletonInstance
  langs:
  - csharp
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: System.ServiceModel.ServiceHost
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public class ServiceHost : System.ServiceModel.ServiceHostBase'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ServiceHost()
  nameWithType: ServiceHost.ServiceHost()
  fullName: System.ServiceModel.ServiceHost.ServiceHost()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected ServiceHost ();
    parameters: []
  overload: System.ServiceModel.ServiceHost.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])
  id: '#ctor(System.Object,System.Uri[])'
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ServiceHost(Object,Uri[])
  nameWithType: ServiceHost.ServiceHost(Object,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Object,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ServiceHost (object singletonInstance, Uri[] baseAddresses);
    parameters:
    - id: singletonInstance
      type: System.Object
      description: To be added.
    - id: baseAddresses
      type: System.Uri[]
      description: To be added.
  overload: System.ServiceModel.ServiceHost.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ServiceHost(Type,Uri[])
  nameWithType: ServiceHost.ServiceHost(Type,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public ServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: To be added.
    - id: baseAddresses
      type: System.Uri[]
      description: To be added.
  overload: System.ServiceModel.ServiceHost.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: To be added.
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: To be added.
    - id: address
      type: System.String
      description: To be added.
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: To be added.
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: To be added.
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: To be added.
    - id: address
      type: System.Uri
      description: To be added.
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: To be added.
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: To be added.
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: To be added.
    - id: address
      type: System.String
      description: To be added.
    - id: listenUri
      type: System.Uri
      description: To be added.
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: To be added.
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: To be added.
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: To be added.
    - id: address
      type: System.Uri
      description: To be added.
    - id: listenUri
      type: System.Uri
      description: To be added.
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: To be added.
  overload: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.ApplyConfiguration
  id: ApplyConfiguration
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: ApplyConfiguration()
  nameWithType: ServiceHost.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHost.ApplyConfiguration()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void ApplyConfiguration ();
    parameters: []
  overload: System.ServiceModel.ServiceHost.ApplyConfiguration*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: To be added.
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: To be added.
  overload: System.ServiceModel.ServiceHost.CreateDescription*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: InitializeDescription(Object,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected void InitializeDescription (object singletonInstance, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: singletonInstance
      type: System.Object
      description: To be added.
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: To be added.
  overload: System.ServiceModel.ServiceHost.InitializeDescription*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: InitializeDescription(Type,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected void InitializeDescription (Type serviceType, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: To be added.
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: To be added.
  overload: System.ServiceModel.ServiceHost.InitializeDescription*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.OnClosed
  id: OnClosed
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ServiceHost.OnClosed()
  fullName: System.ServiceModel.ServiceHost.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.ServiceHost.OnClosed*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.ServiceHost.SingletonInstance
  id: SingletonInstance
  parent: System.ServiceModel.ServiceHost
  langs:
  - csharp
  name: SingletonInstance
  nameWithType: ServiceHost.SingletonInstance
  fullName: System.ServiceModel.ServiceHost.SingletonInstance
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public object SingletonInstance { get; }
    return:
      type: System.Object
      description: To be added.
  overload: System.ServiceModel.ServiceHost.SingletonInstance*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.ServiceHost.#ctor
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost()
  nameWithType: ServiceHost.ServiceHost()
  fullName: System.ServiceModel.ServiceHost.ServiceHost()
- uid: System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost(Object,Uri[])
  nameWithType: ServiceHost.ServiceHost(Object,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Object,Uri[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
- uid: System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost(Type,Uri[])
  nameWithType: ServiceHost.ServiceHost(Type,Uri[])
  fullName: System.ServiceModel.ServiceHost.ServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ServiceHost.ApplyConfiguration
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ApplyConfiguration()
  nameWithType: ServiceHost.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHost.ApplyConfiguration()
- uid: System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: InitializeDescription(Object,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Object,UriSchemeKeyedCollection)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.UriSchemeKeyedCollection
  parent: System.ServiceModel
  isExternal: false
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection
  fullName: System.ServiceModel.UriSchemeKeyedCollection
- uid: System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: InitializeDescription(Type,UriSchemeKeyedCollection)
  nameWithType: ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHost.InitializeDescription(Type,UriSchemeKeyedCollection)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.UriSchemeKeyedCollection
  parent: System.ServiceModel
  isExternal: false
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection
  fullName: System.ServiceModel.UriSchemeKeyedCollection
- uid: System.ServiceModel.ServiceHost.OnClosed
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: OnClosed()
  nameWithType: ServiceHost.OnClosed()
  fullName: System.ServiceModel.ServiceHost.OnClosed()
- uid: System.ServiceModel.ServiceHost.SingletonInstance
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: SingletonInstance
  nameWithType: ServiceHost.SingletonInstance
  fullName: System.ServiceModel.ServiceHost.SingletonInstance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceHost.#ctor*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ServiceHost
  nameWithType: ServiceHost.ServiceHost
- uid: System.ServiceModel.ServiceHost.AddServiceEndpoint*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: ServiceHost.AddServiceEndpoint
- uid: System.ServiceModel.ServiceHost.ApplyConfiguration*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ServiceHost.ApplyConfiguration
- uid: System.ServiceModel.ServiceHost.CreateDescription*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: CreateDescription
  nameWithType: ServiceHost.CreateDescription
- uid: System.ServiceModel.ServiceHost.InitializeDescription*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: InitializeDescription
  nameWithType: ServiceHost.InitializeDescription
- uid: System.ServiceModel.ServiceHost.OnClosed*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: OnClosed
  nameWithType: ServiceHost.OnClosed
- uid: System.ServiceModel.ServiceHost.SingletonInstance*
  parent: System.ServiceModel.ServiceHost
  isExternal: false
  name: SingletonInstance
  nameWithType: ServiceHost.SingletonInstance
