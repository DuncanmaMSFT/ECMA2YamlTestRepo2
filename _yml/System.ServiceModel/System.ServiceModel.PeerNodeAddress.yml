### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.PeerNodeAddress
  id: PeerNodeAddress
  children:
  - System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})
  - System.ServiceModel.PeerNodeAddress.EndpointAddress
  - System.ServiceModel.PeerNodeAddress.IPAddresses
  langs:
  - csharp
  name: PeerNodeAddress
  nameWithType: PeerNodeAddress
  fullName: System.ServiceModel.PeerNodeAddress
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract(Name="PeerNodeAddress", Namespace="http://schemas.microsoft.com/net/2006/05/peer")]

      [System.Runtime.Serialization.KnownType(typeof(System.Net.IPAddress[]))]

      public sealed class PeerNodeAddress
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})
  id: '#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})'
  parent: System.ServiceModel.PeerNodeAddress
  langs:
  - csharp
  name: PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
  nameWithType: PeerNodeAddress.PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
  fullName: System.ServiceModel.PeerNodeAddress.PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public PeerNodeAddress (System.ServiceModel.EndpointAddress endpointAddress, System.Collections.ObjectModel.ReadOnlyCollection<System.Net.IPAddress> ipAddresses);
    parameters:
    - id: endpointAddress
      type: System.ServiceModel.EndpointAddress
      description: To be added.
    - id: ipAddresses
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress}
      description: To be added.
  overload: System.ServiceModel.PeerNodeAddress.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.PeerNodeAddress.EndpointAddress
  id: EndpointAddress
  parent: System.ServiceModel.PeerNodeAddress
  langs:
  - csharp
  name: EndpointAddress
  nameWithType: PeerNodeAddress.EndpointAddress
  fullName: System.ServiceModel.PeerNodeAddress.EndpointAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.ServiceModel.EndpointAddress EndpointAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: To be added.
  overload: System.ServiceModel.PeerNodeAddress.EndpointAddress*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ServiceModel.PeerNodeAddress.IPAddresses
  id: IPAddresses
  parent: System.ServiceModel.PeerNodeAddress
  langs:
  - csharp
  name: IPAddresses
  nameWithType: PeerNodeAddress.IPAddresses
  fullName: System.ServiceModel.PeerNodeAddress.IPAddresses
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Net.IPAddress> IPAddresses { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress}
      description: To be added.
  overload: System.ServiceModel.PeerNodeAddress.IPAddresses*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
  nameWithType: PeerNodeAddress.PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
  fullName: System.ServiceModel.PeerNodeAddress.PeerNodeAddress(EndpointAddress,ReadOnlyCollection<IPAddress>)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IPAddress>
  nameWithType: ReadOnlyCollection<IPAddress>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Net.IPAddress>
- uid: System.ServiceModel.PeerNodeAddress.EndpointAddress
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: EndpointAddress
  nameWithType: PeerNodeAddress.EndpointAddress
  fullName: System.ServiceModel.PeerNodeAddress.EndpointAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.PeerNodeAddress.IPAddresses
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: IPAddresses
  nameWithType: PeerNodeAddress.IPAddresses
  fullName: System.ServiceModel.PeerNodeAddress.IPAddresses
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IPAddress>
  nameWithType: ReadOnlyCollection<IPAddress>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Net.IPAddress>
- uid: System.ServiceModel.PeerNodeAddress.#ctor*
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: PeerNodeAddress
  nameWithType: PeerNodeAddress.PeerNodeAddress
- uid: System.ServiceModel.PeerNodeAddress.EndpointAddress*
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: EndpointAddress
  nameWithType: PeerNodeAddress.EndpointAddress
- uid: System.ServiceModel.PeerNodeAddress.IPAddresses*
  parent: System.ServiceModel.PeerNodeAddress
  isExternal: false
  name: IPAddresses
  nameWithType: PeerNodeAddress.IPAddresses
