### YamlMime:ManagedReference
items:
- uid: System.Transactions.TransactionManager
  id: TransactionManager
  children:
  - System.Transactions.TransactionManager.DefaultTimeout
  - System.Transactions.TransactionManager.DistributedTransactionStarted
  - System.Transactions.TransactionManager.HostCurrentCallback
  - System.Transactions.TransactionManager.MaximumTimeout
  - System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  - System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  langs:
  - csharp
  name: TransactionManager
  nameWithType: TransactionManager
  fullName: System.Transactions.TransactionManager
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static class TransactionManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Transactions.TransactionManager.DefaultTimeout
  id: DefaultTimeout
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
  fullName: System.Transactions.TransactionManager.DefaultTimeout
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static TimeSpan DefaultTimeout { get; }
    return:
      type: System.TimeSpan
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Transactions.TransactionManager.DistributedTransactionStarted
  id: DistributedTransactionStarted
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: DistributedTransactionStarted
  nameWithType: TransactionManager.DistributedTransactionStarted
  fullName: System.Transactions.TransactionManager.DistributedTransactionStarted
  type: Event
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static event System.Transactions.TransactionStartedEventHandler DistributedTransactionStarted;
    return:
      type: System.Transactions.TransactionStartedEventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Transactions.TransactionManager.HostCurrentCallback
  id: HostCurrentCallback
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
  fullName: System.Transactions.TransactionManager.HostCurrentCallback
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Transactions.HostCurrentTransactionCallback HostCurrentCallback { get; set; }
    return:
      type: System.Transactions.HostCurrentTransactionCallback
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Transactions.TransactionManager.MaximumTimeout
  id: MaximumTimeout
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
  fullName: System.Transactions.TransactionManager.MaximumTimeout
  type: Property
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static TimeSpan MaximumTimeout { get; }
    return:
      type: System.TimeSpan
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  id: RecoveryComplete(System.Guid)
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: RecoveryComplete(Guid)
  nameWithType: TransactionManager.RecoveryComplete(Guid)
  fullName: System.Transactions.TransactionManager.RecoveryComplete(Guid)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static void RecoveryComplete (Guid resourceManagerIdentifier);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  id: Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  parent: System.Transactions.TransactionManager
  langs:
  - csharp
  name: Reenlist(Guid,Byte[],IEnlistmentNotification)
  nameWithType: TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  fullName: System.Transactions.TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  type: Method
  assemblies:
  - System.Transactions
  namespace: System.Transactions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Transactions.Enlistment Reenlist (Guid resourceManagerIdentifier, byte[] recoveryInformation, System.Transactions.IEnlistmentNotification enlistmentNotification);
    parameters:
    - id: resourceManagerIdentifier
      type: System.Guid
      description: To be added.
    - id: recoveryInformation
      type: System.Byte[]
      description: To be added.
    - id: enlistmentNotification
      type: System.Transactions.IEnlistmentNotification
      description: To be added.
    return:
      type: System.Transactions.Enlistment
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Transactions.TransactionManager.DefaultTimeout
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DefaultTimeout
  nameWithType: TransactionManager.DefaultTimeout
  fullName: System.Transactions.TransactionManager.DefaultTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Transactions.TransactionManager.DistributedTransactionStarted
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: DistributedTransactionStarted
  nameWithType: TransactionManager.DistributedTransactionStarted
  fullName: System.Transactions.TransactionManager.DistributedTransactionStarted
- uid: System.Transactions.TransactionStartedEventHandler
  parent: System.Transactions
  isExternal: false
  name: TransactionStartedEventHandler
  nameWithType: TransactionStartedEventHandler
  fullName: System.Transactions.TransactionStartedEventHandler
- uid: System.Transactions.TransactionManager.HostCurrentCallback
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: HostCurrentCallback
  nameWithType: TransactionManager.HostCurrentCallback
  fullName: System.Transactions.TransactionManager.HostCurrentCallback
- uid: System.Transactions.HostCurrentTransactionCallback
  parent: System.Transactions
  isExternal: false
  name: HostCurrentTransactionCallback
  nameWithType: HostCurrentTransactionCallback
  fullName: System.Transactions.HostCurrentTransactionCallback
- uid: System.Transactions.TransactionManager.MaximumTimeout
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: MaximumTimeout
  nameWithType: TransactionManager.MaximumTimeout
  fullName: System.Transactions.TransactionManager.MaximumTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Transactions.TransactionManager.RecoveryComplete(System.Guid)
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: RecoveryComplete(Guid)
  nameWithType: TransactionManager.RecoveryComplete(Guid)
  fullName: System.Transactions.TransactionManager.RecoveryComplete(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)
  parent: System.Transactions.TransactionManager
  isExternal: false
  name: Reenlist(Guid,Byte[],IEnlistmentNotification)
  nameWithType: TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
  fullName: System.Transactions.TransactionManager.Reenlist(Guid,Byte[],IEnlistmentNotification)
- uid: System.Transactions.Enlistment
  parent: System.Transactions
  isExternal: false
  name: Enlistment
  nameWithType: Enlistment
  fullName: System.Transactions.Enlistment
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Transactions.IEnlistmentNotification
  parent: System.Transactions
  isExternal: false
  name: IEnlistmentNotification
  nameWithType: IEnlistmentNotification
  fullName: System.Transactions.IEnlistmentNotification
