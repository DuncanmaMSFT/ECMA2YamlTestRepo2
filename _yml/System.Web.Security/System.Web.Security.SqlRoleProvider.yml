### YamlMime:ManagedReference
items:
- uid: System.Web.Security.SqlRoleProvider
  id: SqlRoleProvider
  children:
  - System.Web.Security.SqlRoleProvider.#ctor
  - System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.SqlRoleProvider.ApplicationName
  - System.Web.Security.SqlRoleProvider.CreateRole(System.String)
  - System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.SqlRoleProvider.GetAllRoles
  - System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.SqlRoleProvider.RoleExists(System.String)
  langs:
  - csharp
  name: SqlRoleProvider
  nameWithType: SqlRoleProvider
  fullName: System.Web.Security.SqlRoleProvider
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public class SqlRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: SqlRoleProvider()
  nameWithType: SqlRoleProvider.SqlRoleProvider()
  fullName: System.Web.Security.SqlRoleProvider.SqlRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public SqlRoleProvider ();
    parameters: []
  overload: System.Web.Security.SqlRoleProvider.#ctor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: SqlRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: To be added.
    - id: roleNames
      type: System.String[]
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.AddUsersToRoles*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlRoleProvider.ApplicationName
  fullName: System.Web.Security.SqlRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.ApplicationName*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: SqlRoleProvider.CreateRole(String)
  fullName: System.Web.Security.SqlRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.CreateRole*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: SqlRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.SqlRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: To be added.
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.DeleteRole*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: SqlRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: To be added.
    - id: usernameToMatch
      type: System.String
      description: To be added.
    return:
      type: System.String[]
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.FindUsersInRole*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: SqlRoleProvider.GetAllRoles()
  fullName: System.Web.Security.SqlRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.GetAllRoles*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: SqlRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.SqlRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: To be added.
    return:
      type: System.String[]
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.GetRolesForUser*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: SqlRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.SqlRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: To be added.
    return:
      type: System.String[]
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.GetUsersInRole*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.Initialize*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: SqlRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: To be added.
    - id: roleName
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.IsUserInRole*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: To be added.
    - id: roleNames
      type: System.String[]
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.SqlRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: SqlRoleProvider.RoleExists(String)
  fullName: System.Web.Security.SqlRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Web.Security.SqlRoleProvider.RoleExists*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.Web.Security.SqlRoleProvider.#ctor
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: SqlRoleProvider()
  nameWithType: SqlRoleProvider.SqlRoleProvider()
  fullName: System.Web.Security.SqlRoleProvider.SqlRoleProvider()
- uid: System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: SqlRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Web.Security.SqlRoleProvider.ApplicationName
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlRoleProvider.ApplicationName
  fullName: System.Web.Security.SqlRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: SqlRoleProvider.CreateRole(String)
  fullName: System.Web.Security.SqlRoleProvider.CreateRole(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: SqlRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.SqlRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: SqlRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.FindUsersInRole(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlRoleProvider.GetAllRoles
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: SqlRoleProvider.GetAllRoles()
  fullName: System.Web.Security.SqlRoleProvider.GetAllRoles()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: SqlRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.SqlRoleProvider.GetRolesForUser(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: SqlRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.SqlRoleProvider.GetUsersInRole(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlRoleProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: SqlRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.IsUserInRole(String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Web.Security.SqlRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: SqlRoleProvider.RoleExists(String)
  fullName: System.Web.Security.SqlRoleProvider.RoleExists(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlRoleProvider.#ctor*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: SqlRoleProvider
  nameWithType: SqlRoleProvider.SqlRoleProvider
- uid: System.Web.Security.SqlRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: SqlRoleProvider.AddUsersToRoles
- uid: System.Web.Security.SqlRoleProvider.ApplicationName*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlRoleProvider.ApplicationName
- uid: System.Web.Security.SqlRoleProvider.CreateRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: SqlRoleProvider.CreateRole
- uid: System.Web.Security.SqlRoleProvider.DeleteRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: SqlRoleProvider.DeleteRole
- uid: System.Web.Security.SqlRoleProvider.FindUsersInRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: SqlRoleProvider.FindUsersInRole
- uid: System.Web.Security.SqlRoleProvider.GetAllRoles*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: SqlRoleProvider.GetAllRoles
- uid: System.Web.Security.SqlRoleProvider.GetRolesForUser*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: SqlRoleProvider.GetRolesForUser
- uid: System.Web.Security.SqlRoleProvider.GetUsersInRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: SqlRoleProvider.GetUsersInRole
- uid: System.Web.Security.SqlRoleProvider.Initialize*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: SqlRoleProvider.Initialize
- uid: System.Web.Security.SqlRoleProvider.IsUserInRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: SqlRoleProvider.IsUserInRole
- uid: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: SqlRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.SqlRoleProvider.RoleExists*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: SqlRoleProvider.RoleExists
