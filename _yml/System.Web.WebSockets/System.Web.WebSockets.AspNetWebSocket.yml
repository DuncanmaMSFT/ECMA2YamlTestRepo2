### YamlMime:ManagedReference
items:
- uid: System.Web.WebSockets.AspNetWebSocket
  id: AspNetWebSocket
  children:
  - System.Web.WebSockets.AspNetWebSocket.Abort
  - System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  - System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  - System.Web.WebSockets.AspNetWebSocket.CloseStatus
  - System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription
  - System.Web.WebSockets.AspNetWebSocket.Dispose
  - System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  - System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  - System.Web.WebSockets.AspNetWebSocket.State
  - System.Web.WebSockets.AspNetWebSocket.SubProtocol
  langs:
  - csharp
  name: AspNetWebSocket
  nameWithType: AspNetWebSocket
  fullName: System.Web.WebSockets.AspNetWebSocket
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket'
  inheritance:
  - System.Object
  - System.Net.WebSockets.WebSocket
  implements: []
  inheritedMembers:
  - System.Net.WebSockets.WebSocket.CreateClientBuffer(System.Int32,System.Int32)
  - System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})
  - System.Net.WebSockets.WebSocket.CreateServerBuffer(System.Int32)
  - System.Net.WebSockets.WebSocket.DefaultKeepAliveInterval
  - System.Net.WebSockets.WebSocket.IsApplicationTargeting45
  - System.Net.WebSockets.WebSocket.IsStateTerminal(System.Net.WebSockets.WebSocketState)
  - System.Net.WebSockets.WebSocket.RegisterPrefixes
  - System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.WebSockets.AspNetWebSocket.Abort
  id: Abort
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: Abort()
  nameWithType: AspNetWebSocket.Abort()
  fullName: System.Web.WebSockets.AspNetWebSocket.Abort()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void Abort ();
    parameters: []
  overload: System.Web.WebSockets.AspNetWebSocket.Abort*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  id: CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: CloseAsync(WebSocketCloseStatus,String,CancellationToken)
  nameWithType: AspNetWebSocket.CloseAsync(WebSocketCloseStatus,String,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseAsync(WebSocketCloseStatus,String,CancellationToken)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: closeStatus
      type: System.Net.WebSockets.WebSocketCloseStatus
      description: To be added.
    - id: statusDescription
      type: System.String
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Web.WebSockets.AspNetWebSocket.CloseAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  id: CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
  nameWithType: AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: closeStatus
      type: System.Net.WebSockets.WebSocketCloseStatus
      description: To be added.
    - id: statusDescription
      type: System.String
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatus
  id: CloseStatus
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: CloseStatus
  nameWithType: AspNetWebSocket.CloseStatus
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseStatus
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override Nullable<System.Net.WebSockets.WebSocketCloseStatus> CloseStatus { get; }
    return:
      type: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
      description: To be added.
  overload: System.Web.WebSockets.AspNetWebSocket.CloseStatus*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription
  id: CloseStatusDescription
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: CloseStatusDescription
  nameWithType: AspNetWebSocket.CloseStatusDescription
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string CloseStatusDescription { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.WebSockets.AspNetWebSocket.Dispose
  id: Dispose
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: Dispose()
  nameWithType: AspNetWebSocket.Dispose()
  fullName: System.Web.WebSockets.AspNetWebSocket.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override void Dispose ();
    parameters: []
  overload: System.Web.WebSockets.AspNetWebSocket.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  id: ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: ReceiveAsync(ArraySegment<Byte>,CancellationToken)
  nameWithType: AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>,CancellationToken)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult> ReceiveAsync (ArraySegment<byte> buffer, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
      description: To be added.
  overload: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  id: SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
  nameWithType: AspNetWebSocket.SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Threading.Tasks.Task SendAsync (ArraySegment<byte> buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: To be added.
    - id: messageType
      type: System.Net.WebSockets.WebSocketMessageType
      description: To be added.
    - id: endOfMessage
      type: System.Boolean
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  overload: System.Web.WebSockets.AspNetWebSocket.SendAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.WebSockets.AspNetWebSocket.State
  id: State
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: State
  nameWithType: AspNetWebSocket.State
  fullName: System.Web.WebSockets.AspNetWebSocket.State
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override System.Net.WebSockets.WebSocketState State { get; }
    return:
      type: System.Net.WebSockets.WebSocketState
      description: To be added.
  overload: System.Web.WebSockets.AspNetWebSocket.State*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.WebSockets.AspNetWebSocket.SubProtocol
  id: SubProtocol
  parent: System.Web.WebSockets.AspNetWebSocket
  langs:
  - csharp
  name: SubProtocol
  nameWithType: AspNetWebSocket.SubProtocol
  fullName: System.Web.WebSockets.AspNetWebSocket.SubProtocol
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.WebSockets
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string SubProtocol { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Web.WebSockets.AspNetWebSocket.SubProtocol*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Net.WebSockets.WebSocket
  isExternal: false
  name: System.Net.WebSockets.WebSocket
- uid: System.Web.WebSockets.AspNetWebSocket.Abort
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: Abort()
  nameWithType: AspNetWebSocket.Abort()
  fullName: System.Web.WebSockets.AspNetWebSocket.Abort()
- uid: System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseAsync(WebSocketCloseStatus,String,CancellationToken)
  nameWithType: AspNetWebSocket.CloseAsync(WebSocketCloseStatus,String,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseAsync(WebSocketCloseStatus,String,CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.WebSockets.WebSocketCloseStatus
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketCloseStatus
  nameWithType: WebSocketCloseStatus
  fullName: System.Net.WebSockets.WebSocketCloseStatus
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
  nameWithType: AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.WebSockets.WebSocketCloseStatus
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketCloseStatus
  nameWithType: WebSocketCloseStatus
  fullName: System.Net.WebSockets.WebSocketCloseStatus
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatus
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseStatus
  nameWithType: AspNetWebSocket.CloseStatus
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseStatus
- uid: System.Nullable{System.Net.WebSockets.WebSocketCloseStatus}
  parent: System
  isExternal: true
  name: Nullable<WebSocketCloseStatus>
  nameWithType: Nullable<WebSocketCloseStatus>
  fullName: System.Nullable<System.Net.WebSockets.WebSocketCloseStatus>
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseStatusDescription
  nameWithType: AspNetWebSocket.CloseStatusDescription
  fullName: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.WebSockets.AspNetWebSocket.Dispose
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: Dispose()
  nameWithType: AspNetWebSocket.Dispose()
  fullName: System.Web.WebSockets.AspNetWebSocket.Dispose()
- uid: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: ReceiveAsync(ArraySegment<Byte>,CancellationToken)
  nameWithType: AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(ArraySegment<Byte>,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Net.WebSockets.WebSocketReceiveResult}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<WebSocketReceiveResult>
  nameWithType: Task<WebSocketReceiveResult>
  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.WebSocketReceiveResult>
- uid: System.ArraySegment{System.Byte}
  parent: System
  isExternal: true
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
  nameWithType: AspNetWebSocket.SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
  fullName: System.Web.WebSockets.AspNetWebSocket.SendAsync(ArraySegment<Byte>,WebSocketMessageType,Boolean,CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.ArraySegment{System.Byte}
  parent: System
  isExternal: true
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
- uid: System.Net.WebSockets.WebSocketMessageType
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketMessageType
  nameWithType: WebSocketMessageType
  fullName: System.Net.WebSockets.WebSocketMessageType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.WebSockets.AspNetWebSocket.State
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: State
  nameWithType: AspNetWebSocket.State
  fullName: System.Web.WebSockets.AspNetWebSocket.State
- uid: System.Net.WebSockets.WebSocketState
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketState
  nameWithType: WebSocketState
  fullName: System.Net.WebSockets.WebSocketState
- uid: System.Web.WebSockets.AspNetWebSocket.SubProtocol
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: SubProtocol
  nameWithType: AspNetWebSocket.SubProtocol
  fullName: System.Web.WebSockets.AspNetWebSocket.SubProtocol
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.WebSockets.AspNetWebSocket.Abort*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: Abort
  nameWithType: AspNetWebSocket.Abort
- uid: System.Web.WebSockets.AspNetWebSocket.CloseAsync*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseAsync
  nameWithType: AspNetWebSocket.CloseAsync
- uid: System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseOutputAsync
  nameWithType: AspNetWebSocket.CloseOutputAsync
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatus*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseStatus
  nameWithType: AspNetWebSocket.CloseStatus
- uid: System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: CloseStatusDescription
  nameWithType: AspNetWebSocket.CloseStatusDescription
- uid: System.Web.WebSockets.AspNetWebSocket.Dispose*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: Dispose
  nameWithType: AspNetWebSocket.Dispose
- uid: System.Web.WebSockets.AspNetWebSocket.ReceiveAsync*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: ReceiveAsync
  nameWithType: AspNetWebSocket.ReceiveAsync
- uid: System.Web.WebSockets.AspNetWebSocket.SendAsync*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: SendAsync
  nameWithType: AspNetWebSocket.SendAsync
- uid: System.Web.WebSockets.AspNetWebSocket.State*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: State
  nameWithType: AspNetWebSocket.State
- uid: System.Web.WebSockets.AspNetWebSocket.SubProtocol*
  parent: System.Web.WebSockets.AspNetWebSocket
  isExternal: false
  name: SubProtocol
  nameWithType: AspNetWebSocket.SubProtocol
