### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.CryptoProvider
  id: CryptoProvider
  children:
  - System.Security.RightsManagement.CryptoProvider.BlockSize
  - System.Security.RightsManagement.CryptoProvider.BoundGrants
  - System.Security.RightsManagement.CryptoProvider.CanDecrypt
  - System.Security.RightsManagement.CryptoProvider.CanEncrypt
  - System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  - System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])
  - System.Security.RightsManagement.CryptoProvider.Dispose
  - System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)
  - System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])
  - System.Security.RightsManagement.CryptoProvider.Finalize
  langs:
  - csharp
  name: CryptoProvider
  nameWithType: CryptoProvider
  fullName: System.Security.RightsManagement.CryptoProvider
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class CryptoProvider : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.RightsManagement.CryptoProvider.BlockSize
  id: BlockSize
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: BlockSize
  nameWithType: CryptoProvider.BlockSize
  fullName: System.Security.RightsManagement.CryptoProvider.BlockSize
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int BlockSize { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Security.RightsManagement.CryptoProvider.BlockSize*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants
  id: BoundGrants
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: BoundGrants
  nameWithType: CryptoProvider.BoundGrants
  fullName: System.Security.RightsManagement.CryptoProvider.BoundGrants
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentGrant> BoundGrants { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentGrant}
      description: To be added.
  overload: System.Security.RightsManagement.CryptoProvider.BoundGrants*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt
  id: CanDecrypt
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: CanDecrypt
  nameWithType: CryptoProvider.CanDecrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanDecrypt
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool CanDecrypt { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Security.RightsManagement.CryptoProvider.CanDecrypt*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt
  id: CanEncrypt
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: CanEncrypt
  nameWithType: CryptoProvider.CanEncrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanEncrypt
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool CanEncrypt { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Security.RightsManagement.CryptoProvider.CanEncrypt*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  id: CanMergeBlocks
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: CanMergeBlocks
  nameWithType: CryptoProvider.CanMergeBlocks
  fullName: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool CanMergeBlocks { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])
  id: Decrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Decrypt(Byte[])
  nameWithType: CryptoProvider.Decrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Decrypt(Byte[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public byte[] Decrypt (byte[] cryptoText);
    parameters:
    - id: cryptoText
      type: System.Byte[]
      description: To be added.
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.RightsManagement.CryptoProvider.Decrypt*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.RightsManagement.CryptoProvider.Dispose
  id: Dispose
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: CryptoProvider.Dispose()
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.RightsManagement.CryptoProvider.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CryptoProvider.Dispose(Boolean)
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  overload: System.Security.RightsManagement.CryptoProvider.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])
  id: Encrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Encrypt(Byte[])
  nameWithType: CryptoProvider.Encrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Encrypt(Byte[])
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public byte[] Encrypt (byte[] clearText);
    parameters:
    - id: clearText
      type: System.Byte[]
      description: To be added.
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.RightsManagement.CryptoProvider.Encrypt*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.RightsManagement.CryptoProvider.Finalize
  id: Finalize
  parent: System.Security.RightsManagement.CryptoProvider
  langs:
  - csharp
  name: Finalize()
  nameWithType: CryptoProvider.Finalize()
  fullName: System.Security.RightsManagement.CryptoProvider.Finalize()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: To be added.
  remarks: To be added.
  syntax:
    content: ~CryptoProvider ();
    parameters: []
  overload: System.Security.RightsManagement.CryptoProvider.Finalize*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.RightsManagement.CryptoProvider.BlockSize
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BlockSize
  nameWithType: CryptoProvider.BlockSize
  fullName: System.Security.RightsManagement.CryptoProvider.BlockSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BoundGrants
  nameWithType: CryptoProvider.BoundGrants
  fullName: System.Security.RightsManagement.CryptoProvider.BoundGrants
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.RightsManagement.ContentGrant}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ContentGrant>
  nameWithType: ReadOnlyCollection<ContentGrant>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.RightsManagement.ContentGrant>
- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanDecrypt
  nameWithType: CryptoProvider.CanDecrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanDecrypt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanEncrypt
  nameWithType: CryptoProvider.CanEncrypt
  fullName: System.Security.RightsManagement.CryptoProvider.CanEncrypt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanMergeBlocks
  nameWithType: CryptoProvider.CanMergeBlocks
  fullName: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Decrypt(Byte[])
  nameWithType: CryptoProvider.Decrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Decrypt(Byte[])
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.RightsManagement.CryptoProvider.Dispose
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Dispose()
  nameWithType: CryptoProvider.Dispose()
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose()
- uid: System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CryptoProvider.Dispose(Boolean)
  fullName: System.Security.RightsManagement.CryptoProvider.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Encrypt(Byte[])
  nameWithType: CryptoProvider.Encrypt(Byte[])
  fullName: System.Security.RightsManagement.CryptoProvider.Encrypt(Byte[])
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.RightsManagement.CryptoProvider.Finalize
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Finalize()
  nameWithType: CryptoProvider.Finalize()
  fullName: System.Security.RightsManagement.CryptoProvider.Finalize()
- uid: System.Security.RightsManagement.CryptoProvider.BlockSize*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BlockSize
  nameWithType: CryptoProvider.BlockSize
- uid: System.Security.RightsManagement.CryptoProvider.BoundGrants*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: BoundGrants
  nameWithType: CryptoProvider.BoundGrants
- uid: System.Security.RightsManagement.CryptoProvider.CanDecrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanDecrypt
  nameWithType: CryptoProvider.CanDecrypt
- uid: System.Security.RightsManagement.CryptoProvider.CanEncrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanEncrypt
  nameWithType: CryptoProvider.CanEncrypt
- uid: System.Security.RightsManagement.CryptoProvider.CanMergeBlocks*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: CanMergeBlocks
  nameWithType: CryptoProvider.CanMergeBlocks
- uid: System.Security.RightsManagement.CryptoProvider.Decrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Decrypt
  nameWithType: CryptoProvider.Decrypt
- uid: System.Security.RightsManagement.CryptoProvider.Dispose*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Dispose
  nameWithType: CryptoProvider.Dispose
- uid: System.Security.RightsManagement.CryptoProvider.Encrypt*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Encrypt
  nameWithType: CryptoProvider.Encrypt
- uid: System.Security.RightsManagement.CryptoProvider.Finalize*
  parent: System.Security.RightsManagement.CryptoProvider
  isExternal: false
  name: Finalize
  nameWithType: CryptoProvider.Finalize
