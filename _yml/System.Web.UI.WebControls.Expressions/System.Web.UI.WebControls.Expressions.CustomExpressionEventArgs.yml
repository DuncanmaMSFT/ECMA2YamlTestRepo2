### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs
  id: CustomExpressionEventArgs
  children:
  - System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.#ctor(System.Linq.IQueryable,System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Query
  - System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Values
  langs:
  - csharp
  name: CustomExpressionEventArgs
  nameWithType: CustomExpressionEventArgs
  fullName: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public class CustomExpressionEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.#ctor(System.Linq.IQueryable,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Linq.IQueryable,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs
  langs:
  - csharp
  name: CustomExpressionEventArgs(IQueryable,IDictionary<String,Object>)
  nameWithType: CustomExpressionEventArgs.CustomExpressionEventArgs(IQueryable,IDictionary<String,Object>)
  fullName: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.CustomExpressionEventArgs(IQueryable,IDictionary<String,Object>)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public CustomExpressionEventArgs (System.Linq.IQueryable source, System.Collections.Generic.IDictionary<string,object> values);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: To be added.
    - id: values
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Query
  id: Query
  parent: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs
  langs:
  - csharp
  name: Query
  nameWithType: CustomExpressionEventArgs.Query
  fullName: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Query
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Linq.IQueryable Query { get; set; }
    return:
      type: System.Linq.IQueryable
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Values
  id: Values
  parent: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs
  langs:
  - csharp
  name: Values
  nameWithType: CustomExpressionEventArgs.Values
  fullName: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Values
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Collections.Generic.IDictionary<string,object> Values { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.#ctor(System.Linq.IQueryable,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs
  isExternal: false
  name: CustomExpressionEventArgs(IQueryable,IDictionary<String,Object>)
  nameWithType: CustomExpressionEventArgs.CustomExpressionEventArgs(IQueryable,IDictionary<String,Object>)
  fullName: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.CustomExpressionEventArgs(IQueryable,IDictionary<String,Object>)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
- uid: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Query
  parent: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs
  isExternal: false
  name: Query
  nameWithType: CustomExpressionEventArgs.Query
  fullName: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Query
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Values
  parent: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs
  isExternal: false
  name: Values
  nameWithType: CustomExpressionEventArgs.Values
  fullName: System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Values
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
