### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.WebClientAsyncResult
  id: WebClientAsyncResult
  children:
  - System.Web.Services.Protocols.WebClientAsyncResult.Abort
  - System.Web.Services.Protocols.WebClientAsyncResult.AsyncState
  - System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle
  - System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously
  - System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted
  langs:
  - csharp
  name: WebClientAsyncResult
  nameWithType: WebClientAsyncResult
  fullName: System.Web.Services.Protocols.WebClientAsyncResult
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public class WebClientAsyncResult : IAsyncResult'
  inheritance:
  - System.Object
  implements:
  - System.IAsyncResult
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Services.Protocols.WebClientAsyncResult.Abort
  id: Abort
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  langs:
  - csharp
  name: Abort()
  nameWithType: WebClientAsyncResult.Abort()
  fullName: System.Web.Services.Protocols.WebClientAsyncResult.Abort()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Web.Services.Protocols.WebClientAsyncResult.Abort*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Services.Protocols.WebClientAsyncResult.AsyncState
  id: AsyncState
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  langs:
  - csharp
  name: AsyncState
  nameWithType: WebClientAsyncResult.AsyncState
  fullName: System.Web.Services.Protocols.WebClientAsyncResult.AsyncState
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public object AsyncState { get; }
    return:
      type: System.Object
      description: To be added.
  overload: System.Web.Services.Protocols.WebClientAsyncResult.AsyncState*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle
  id: AsyncWaitHandle
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  langs:
  - csharp
  name: AsyncWaitHandle
  nameWithType: WebClientAsyncResult.AsyncWaitHandle
  fullName: System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Threading.WaitHandle AsyncWaitHandle { get; }
    return:
      type: System.Threading.WaitHandle
      description: To be added.
  overload: System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously
  id: CompletedSynchronously
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  langs:
  - csharp
  name: CompletedSynchronously
  nameWithType: WebClientAsyncResult.CompletedSynchronously
  fullName: System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool CompletedSynchronously { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted
  id: IsCompleted
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  langs:
  - csharp
  name: IsCompleted
  nameWithType: WebClientAsyncResult.IsCompleted
  fullName: System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsCompleted { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.WebClientAsyncResult.Abort
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  isExternal: false
  name: Abort()
  nameWithType: WebClientAsyncResult.Abort()
  fullName: System.Web.Services.Protocols.WebClientAsyncResult.Abort()
- uid: System.Web.Services.Protocols.WebClientAsyncResult.AsyncState
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  isExternal: false
  name: AsyncState
  nameWithType: WebClientAsyncResult.AsyncState
  fullName: System.Web.Services.Protocols.WebClientAsyncResult.AsyncState
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  isExternal: false
  name: AsyncWaitHandle
  nameWithType: WebClientAsyncResult.AsyncWaitHandle
  fullName: System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: true
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  isExternal: false
  name: CompletedSynchronously
  nameWithType: WebClientAsyncResult.CompletedSynchronously
  fullName: System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  isExternal: false
  name: IsCompleted
  nameWithType: WebClientAsyncResult.IsCompleted
  fullName: System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.WebClientAsyncResult.Abort*
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  isExternal: false
  name: Abort
  nameWithType: WebClientAsyncResult.Abort
- uid: System.Web.Services.Protocols.WebClientAsyncResult.AsyncState*
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  isExternal: false
  name: AsyncState
  nameWithType: WebClientAsyncResult.AsyncState
- uid: System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle*
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  isExternal: false
  name: AsyncWaitHandle
  nameWithType: WebClientAsyncResult.AsyncWaitHandle
- uid: System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously*
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  isExternal: false
  name: CompletedSynchronously
  nameWithType: WebClientAsyncResult.CompletedSynchronously
- uid: System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted*
  parent: System.Web.Services.Protocols.WebClientAsyncResult
  isExternal: false
  name: IsCompleted
  nameWithType: WebClientAsyncResult.IsCompleted
