### YamlMime:ManagedReference
items:
- uid: System.Drawing.Size
  id: Size
  children:
  - System.Drawing.Size.#ctor(System.Drawing.Point)
  - System.Drawing.Size.#ctor(System.Int32,System.Int32)
  - System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.Ceiling(System.Drawing.SizeF)
  - System.Drawing.Size.Empty
  - System.Drawing.Size.Equals(System.Object)
  - System.Drawing.Size.GetHashCode
  - System.Drawing.Size.Height
  - System.Drawing.Size.IsEmpty
  - System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.op_Explicit(System.Drawing.Size to System.Drawing.Point)
  - System.Drawing.Size.op_Implicit(System.Drawing.Size)
  - System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.Round(System.Drawing.SizeF)
  - System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)
  - System.Drawing.Size.ToString
  - System.Drawing.Size.Truncate(System.Drawing.SizeF)
  - System.Drawing.Size.Width
  langs:
  - csharp
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
  type: Struct
  summary: To be added.
  remarks: To be added.
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Drawing.SizeConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct Size
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.#ctor(System.Drawing.Point)
  id: '#ctor(System.Drawing.Point)'
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Size(Point)
  nameWithType: Size.Size(Point)
  fullName: System.Drawing.Size.Size(Point)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Size (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Size(Int32,Int32)
  nameWithType: Size.Size(Int32,Int32)
  fullName: System.Drawing.Size.Size(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Size (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: To be added.
    - id: height
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)
  id: Add(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Add(Size,Size)
  nameWithType: Size.Add(Size,Size)
  fullName: System.Drawing.Size.Add(Size,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Drawing.Size Add (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: To be added.
    - id: sz2
      type: System.Drawing.Size
      description: To be added.
    return:
      type: System.Drawing.Size
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.Ceiling(System.Drawing.SizeF)
  id: Ceiling(System.Drawing.SizeF)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Ceiling(SizeF)
  nameWithType: Size.Ceiling(SizeF)
  fullName: System.Drawing.Size.Ceiling(SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Drawing.Size Ceiling (System.Drawing.SizeF value);
    parameters:
    - id: value
      type: System.Drawing.SizeF
      description: To be added.
    return:
      type: System.Drawing.Size
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.Empty
  id: Empty
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Empty
  nameWithType: Size.Empty
  fullName: System.Drawing.Size.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static readonly System.Drawing.Size Empty;
    return:
      type: System.Drawing.Size
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Size.Equals(Object)
  fullName: System.Drawing.Size.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Size
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: System.Drawing.Size.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.Height
  id: Height
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Height
  nameWithType: Size.Height
  fullName: System.Drawing.Size.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.IsEmpty
  id: IsEmpty
  parent: System.Drawing.Size
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: System.Drawing.Size.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)
  id: op_Addition(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Addition(Size,Size)
  nameWithType: Size.op_Addition(Size,Size)
  fullName: System.Drawing.Size.op_Addition(Size,Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Drawing.Size op_Addition (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: To be added.
    - id: sz2
      type: System.Drawing.Size
      description: To be added.
    return:
      type: System.Drawing.Size
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)
  id: op_Equality(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Equality(Size,Size)
  nameWithType: Size.op_Equality(Size,Size)
  fullName: System.Drawing.Size.op_Equality(Size,Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: To be added.
    - id: sz2
      type: System.Drawing.Size
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.op_Explicit(System.Drawing.Size to System.Drawing.Point)
  id: op_Explicit(System.Drawing.Size to System.Drawing.Point)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Drawing.Size.op_Explicit(Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Drawing.Point op_Explicit (System.Drawing.Size size);
    parameters:
    - id: size
      type: System.Drawing.Size
      description: To be added.
    return:
      type: System.Drawing.Point
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.op_Implicit(System.Drawing.Size)
  id: op_Implicit(System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Implicit(Size)
  nameWithType: Size.op_Implicit(Size)
  fullName: System.Drawing.Size.op_Implicit(Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Drawing.SizeF op_Implicit (System.Drawing.Size p);
    parameters:
    - id: p
      type: System.Drawing.Size
      description: To be added.
    return:
      type: System.Drawing.SizeF
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)
  id: op_Inequality(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Inequality(Size,Size)
  nameWithType: Size.op_Inequality(Size,Size)
  fullName: System.Drawing.Size.op_Inequality(Size,Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: To be added.
    - id: sz2
      type: System.Drawing.Size
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)
  id: op_Subtraction(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: op_Subtraction(Size,Size)
  nameWithType: Size.op_Subtraction(Size,Size)
  fullName: System.Drawing.Size.op_Subtraction(Size,Size)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Drawing.Size op_Subtraction (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: To be added.
    - id: sz2
      type: System.Drawing.Size
      description: To be added.
    return:
      type: System.Drawing.Size
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.Round(System.Drawing.SizeF)
  id: Round(System.Drawing.SizeF)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Round(SizeF)
  nameWithType: Size.Round(SizeF)
  fullName: System.Drawing.Size.Round(SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Drawing.Size Round (System.Drawing.SizeF value);
    parameters:
    - id: value
      type: System.Drawing.SizeF
      description: To be added.
    return:
      type: System.Drawing.Size
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)
  id: Subtract(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Subtract(Size,Size)
  nameWithType: Size.Subtract(Size,Size)
  fullName: System.Drawing.Size.Subtract(Size,Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Drawing.Size Subtract (System.Drawing.Size sz1, System.Drawing.Size sz2);
    parameters:
    - id: sz1
      type: System.Drawing.Size
      description: To be added.
    - id: sz2
      type: System.Drawing.Size
      description: To be added.
    return:
      type: System.Drawing.Size
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.ToString
  id: ToString
  parent: System.Drawing.Size
  langs:
  - csharp
  name: ToString()
  nameWithType: Size.ToString()
  fullName: System.Drawing.Size.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.Truncate(System.Drawing.SizeF)
  id: Truncate(System.Drawing.SizeF)
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Truncate(SizeF)
  nameWithType: Size.Truncate(SizeF)
  fullName: System.Drawing.Size.Truncate(SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static System.Drawing.Size Truncate (System.Drawing.SizeF value);
    parameters:
    - id: value
      type: System.Drawing.SizeF
      description: To be added.
    return:
      type: System.Drawing.Size
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Size.Width
  id: Width
  parent: System.Drawing.Size
  langs:
  - csharp
  name: Width
  nameWithType: Size.Width
  fullName: System.Drawing.Size.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.Size.#ctor(System.Drawing.Point)
  parent: System.Drawing.Size
  isExternal: false
  name: Size(Point)
  nameWithType: Size.Size(Point)
  fullName: System.Drawing.Size.Size(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size.#ctor(System.Int32,System.Int32)
  parent: System.Drawing.Size
  isExternal: false
  name: Size(Int32,Int32)
  nameWithType: Size.Size(Int32,Int32)
  fullName: System.Drawing.Size.Size(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Size.Add(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: Add(Size,Size)
  nameWithType: Size.Add(Size,Size)
  fullName: System.Drawing.Size.Add(Size,Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size.Ceiling(System.Drawing.SizeF)
  parent: System.Drawing.Size
  isExternal: false
  name: Ceiling(SizeF)
  nameWithType: Size.Ceiling(SizeF)
  fullName: System.Drawing.Size.Ceiling(SizeF)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Size.Empty
  parent: System.Drawing.Size
  isExternal: false
  name: Empty
  nameWithType: Size.Empty
  fullName: System.Drawing.Size.Empty
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size.Equals(System.Object)
  parent: System.Drawing.Size
  isExternal: false
  name: Equals(Object)
  nameWithType: Size.Equals(Object)
  fullName: System.Drawing.Size.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Size.GetHashCode
  parent: System.Drawing.Size
  isExternal: false
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: System.Drawing.Size.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Size.Height
  parent: System.Drawing.Size
  isExternal: false
  name: Height
  nameWithType: Size.Height
  fullName: System.Drawing.Size.Height
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Size.IsEmpty
  parent: System.Drawing.Size
  isExternal: false
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: System.Drawing.Size.IsEmpty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Size.op_Addition(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Addition(Size,Size)
  nameWithType: Size.op_Addition(Size,Size)
  fullName: System.Drawing.Size.op_Addition(Size,Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size.op_Equality(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Equality(Size,Size)
  nameWithType: Size.op_Equality(Size,Size)
  fullName: System.Drawing.Size.op_Equality(Size,Size)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size.op_Explicit(System.Drawing.Size to System.Drawing.Point)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Explicit(Size)
  nameWithType: Size.op_Explicit(Size)
  fullName: System.Drawing.Size.op_Explicit(Size)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size.op_Implicit(System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Implicit(Size)
  nameWithType: Size.op_Implicit(Size)
  fullName: System.Drawing.Size.op_Implicit(Size)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size.op_Inequality(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Inequality(Size,Size)
  nameWithType: Size.op_Inequality(Size,Size)
  fullName: System.Drawing.Size.op_Inequality(Size,Size)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size.op_Subtraction(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: op_Subtraction(Size,Size)
  nameWithType: Size.op_Subtraction(Size,Size)
  fullName: System.Drawing.Size.op_Subtraction(Size,Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size.Round(System.Drawing.SizeF)
  parent: System.Drawing.Size
  isExternal: false
  name: Round(SizeF)
  nameWithType: Size.Round(SizeF)
  fullName: System.Drawing.Size.Round(SizeF)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Size.Subtract(System.Drawing.Size,System.Drawing.Size)
  parent: System.Drawing.Size
  isExternal: false
  name: Subtract(Size,Size)
  nameWithType: Size.Subtract(Size,Size)
  fullName: System.Drawing.Size.Subtract(Size,Size)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Size.ToString
  parent: System.Drawing.Size
  isExternal: false
  name: ToString()
  nameWithType: Size.ToString()
  fullName: System.Drawing.Size.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Size.Truncate(System.Drawing.SizeF)
  parent: System.Drawing.Size
  isExternal: false
  name: Truncate(SizeF)
  nameWithType: Size.Truncate(SizeF)
  fullName: System.Drawing.Size.Truncate(SizeF)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Size.Width
  parent: System.Drawing.Size
  isExternal: false
  name: Width
  nameWithType: Size.Width
  fullName: System.Drawing.Size.Width
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
