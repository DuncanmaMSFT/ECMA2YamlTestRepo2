### YamlMime:ManagedReference
items:
- uid: System.Drawing.Pen
  id: Pen
  children:
  - System.Drawing.Pen.#ctor(System.Drawing.Brush)
  - System.Drawing.Pen.#ctor(System.Drawing.Color)
  - System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  - System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  - System.Drawing.Pen.Alignment
  - System.Drawing.Pen.Brush
  - System.Drawing.Pen.Clone
  - System.Drawing.Pen.Color
  - System.Drawing.Pen.CompoundArray
  - System.Drawing.Pen.CustomEndCap
  - System.Drawing.Pen.CustomStartCap
  - System.Drawing.Pen.DashCap
  - System.Drawing.Pen.DashOffset
  - System.Drawing.Pen.DashPattern
  - System.Drawing.Pen.DashStyle
  - System.Drawing.Pen.Dispose
  - System.Drawing.Pen.EndCap
  - System.Drawing.Pen.Finalize
  - System.Drawing.Pen.LineJoin
  - System.Drawing.Pen.MiterLimit
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.PenType
  - System.Drawing.Pen.ResetTransform
  - System.Drawing.Pen.RotateTransform(System.Single)
  - System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  - System.Drawing.Pen.StartCap
  - System.Drawing.Pen.Transform
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.Width
  langs:
  - csharp
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
  type: Class
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  id: '#ctor(System.Drawing.Brush)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Pen (System.Drawing.Brush brush);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  id: '#ctor(System.Drawing.Color)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Pen (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  id: '#ctor(System.Drawing.Brush,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Pen (System.Drawing.Brush brush, float width);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: To be added.
    - id: width
      type: System.Single
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.Color,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public Pen (System.Drawing.Color color, float width);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: To be added.
    - id: width
      type: System.Single
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.Alignment
  id: Alignment
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }
    return:
      type: System.Drawing.Drawing2D.PenAlignment
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.Brush
  id: Brush
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Brush Brush { get; set; }
    return:
      type: System.Drawing.Brush
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.Clone
  id: Clone
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.Color
  id: Color
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Color Color { get; set; }
    return:
      type: System.Drawing.Color
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.CompoundArray
  id: CompoundArray
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public float[] CompoundArray { get; set; }
    return:
      type: System.Single[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.CustomEndCap
  id: CustomEndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.CustomStartCap
  id: CustomStartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.DashCap
  id: DashCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Drawing2D.DashCap DashCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashCap
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.DashOffset
  id: DashOffset
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public float DashOffset { get; set; }
    return:
      type: System.Single
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.DashPattern
  id: DashPattern
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public float[] DashPattern { get; set; }
    return:
      type: System.Single[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.DashStyle
  id: DashStyle
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashStyle
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.Dispose
  id: Dispose
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void Dispose ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.EndCap
  id: EndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Drawing2D.LineCap EndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.Finalize
  id: Finalize
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: ~Pen ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.LineJoin
  id: LineJoin
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineJoin
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.MiterLimit
  id: MiterLimit
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public float MiterLimit { get; set; }
    return:
      type: System.Single
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: To be added.
  overload: System.Drawing.Pen.MultiplyTransform*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: To be added.
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: To be added.
  overload: System.Drawing.Pen.MultiplyTransform*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.PenType
  id: PenType
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Drawing2D.PenType PenType { get; }
    return:
      type: System.Drawing.Drawing2D.PenType
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void ResetTransform ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: To be added.
  overload: System.Drawing.Pen.RotateTransform*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: To be added.
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: To be added.
  overload: System.Drawing.Pen.RotateTransform*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: To be added.
    - id: sy
      type: System.Single
      description: To be added.
  overload: System.Drawing.Pen.ScaleTransform*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: To be added.
    - id: sy
      type: System.Single
      description: To be added.
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: To be added.
  overload: System.Drawing.Pen.ScaleTransform*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  id: SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);
    parameters:
    - id: startCap
      type: System.Drawing.Drawing2D.LineCap
      description: To be added.
    - id: endCap
      type: System.Drawing.Drawing2D.LineCap
      description: To be added.
    - id: dashCap
      type: System.Drawing.Drawing2D.DashCap
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.StartCap
  id: StartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Drawing2D.LineCap StartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.Transform
  id: Transform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: To be added.
    - id: dy
      type: System.Single
      description: To be added.
  overload: System.Drawing.Pen.TranslateTransform*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: To be added.
    - id: dy
      type: System.Single
      description: To be added.
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: To be added.
  overload: System.Drawing.Pen.TranslateTransform*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Drawing.Pen.Width
  id: Width
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.Alignment
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
- uid: System.Drawing.Drawing2D.PenAlignment
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenAlignment
  nameWithType: PenAlignment
  fullName: System.Drawing.Drawing2D.PenAlignment
- uid: System.Drawing.Pen.Brush
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Drawing.Pen.Clone
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Pen.Color
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Pen.CompoundArray
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
- uid: System.Drawing.Pen.CustomEndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
- uid: System.Drawing.Drawing2D.CustomLineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CustomLineCap
  nameWithType: CustomLineCap
  fullName: System.Drawing.Drawing2D.CustomLineCap
- uid: System.Drawing.Pen.CustomStartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
- uid: System.Drawing.Drawing2D.CustomLineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CustomLineCap
  nameWithType: CustomLineCap
  fullName: System.Drawing.Drawing2D.CustomLineCap
- uid: System.Drawing.Pen.DashCap
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
- uid: System.Drawing.Drawing2D.DashCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashCap
  nameWithType: DashCap
  fullName: System.Drawing.Drawing2D.DashCap
- uid: System.Drawing.Pen.DashOffset
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.DashPattern
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
- uid: System.Drawing.Pen.DashStyle
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
- uid: System.Drawing.Drawing2D.DashStyle
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashStyle
  nameWithType: DashStyle
  fullName: System.Drawing.Drawing2D.DashStyle
- uid: System.Drawing.Pen.Dispose
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
- uid: System.Drawing.Pen.EndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Pen.Finalize
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
- uid: System.Drawing.Pen.LineJoin
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
- uid: System.Drawing.Drawing2D.LineJoin
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineJoin
  nameWithType: LineJoin
  fullName: System.Drawing.Drawing2D.LineJoin
- uid: System.Drawing.Pen.MiterLimit
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Pen.PenType
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
- uid: System.Drawing.Drawing2D.PenType
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenType
  nameWithType: PenType
  fullName: System.Drawing.Drawing2D.PenType
- uid: System.Drawing.Pen.ResetTransform
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Drawing2D.DashCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashCap
  nameWithType: DashCap
  fullName: System.Drawing.Drawing2D.DashCap
- uid: System.Drawing.Pen.StartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Pen.Transform
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Pen.Width
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.MultiplyTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform
  nameWithType: Pen.MultiplyTransform
- uid: System.Drawing.Pen.RotateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform
  nameWithType: Pen.RotateTransform
- uid: System.Drawing.Pen.ScaleTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform
  nameWithType: Pen.ScaleTransform
- uid: System.Drawing.Pen.TranslateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform
  nameWithType: Pen.TranslateTransform
