<Type Name="PropertyChangedEventHandler" FullName="System.ComponentModel.PropertyChangedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void PropertyChangedEventHandler(object sender, PropertyChangedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyChangedEventHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">To be added.</param>
    <param name="e">To be added.</param>
    <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event raised when a property is changed on a component.</summary>
    <remarks>To be added.</remarks>
    <threadsafe />
  </Docs>
</Type>