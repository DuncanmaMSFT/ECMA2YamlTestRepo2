<Type Name="VoiceAge" FullName="System.Speech.Synthesis.VoiceAge">
  <TypeSignature Language="C#" Value="public enum VoiceAge" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VoiceAge extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Defines the values for the age of a synthesized voice.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 VoiceAge can indicate the age of an existing voice or an age preference when selecting a voice. Three of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods and two of the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods use VoiceAge to specify the age when selecting a voice. The <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> property obtains the age of an existing voice using a VoiceAge member.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName="Adult">
      <MemberSignature Language="C#" Value="Adult" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.VoiceAge Adult = int32(30)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceAge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates an adult voice (age 30).</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="Child" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.VoiceAge Child = int32(10)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceAge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates a child voice (age 10).</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="NotSet">
      <MemberSignature Language="C#" Value="NotSet" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.VoiceAge NotSet = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceAge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that no voice age is specified.</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Senior">
      <MemberSignature Language="C#" Value="Senior" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.VoiceAge Senior = int32(65)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceAge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates a senior voice (age 65).</summary>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Teen">
      <MemberSignature Language="C#" Value="Teen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.VoiceAge Teen = int32(15)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceAge</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates a teenage voice (age 15).</summary>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>