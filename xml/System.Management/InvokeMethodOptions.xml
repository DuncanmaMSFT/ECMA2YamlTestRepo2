<Type Name="InvokeMethodOptions" FullName="System.Management.InvokeMethodOptions">
  <TypeSignature Language="C#" Value="public class InvokeMethodOptions : System.Management.ManagementOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvokeMethodOptions extends System.Management.ManagementOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifies options for invoking a management method.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example invokes the **Win32_Process::Create** method to start a new process of Calc.exe. The InvokeMethodOptions class is used to invoke the method.  
  
 [!code-vb[wminet_InvokeMethodOptions#1](../../add/codesnippet/VisualBasic/t-system.management.invo_1.vb)]
 [!code-cs[wminet_InvokeMethodOptions#1](../../add/codesnippet/CSharp/t-system.management.invo_1.cs)]  
  
 ]]></format>
    </remarks>
    <threadsafe />
    <returns />
    <value />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvokeMethodOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Management.InvokeMethodOptions" /> class for the [InvokeMethod(String,â€‚Object\[\])](assetId:///M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])?qualifyHint=False</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md).  
  
   
  
## Examples  
 The following example invokes the **Win32_Process::Create** method to start a new process of Calc.exe. The default constructor of the <xref:System.Management.InvokeMethodOptions> class is used.  
  
 [!code-vb[wminet_InvokeMethodOptions()#1](../../add/codesnippet/VisualBasic/m-system.management.invo_1.vb)]
 [!code-cs[wminet_InvokeMethodOptions()#1](../../add/codesnippet/CSharp/m-system.management.invo_1.cs)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns />
        <value />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvokeMethodOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementNamedValueCollection context, valuetype System.TimeSpan timeout) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Management.ManagementNamedValueCollection" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">A provider-specific, named-value pairs object to be passed through to the provider.</param>
        <param name="timeout">The length of time to let the operation perform before it times out. The default value is &lt;xref:System.TimeSpan&gt;. Setting this parameter will invoke the operation semisynchronously.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Management.InvokeMethodOptions" /> class for an invoke operation using the specified values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md).  
  
   
  
## Examples  
 The following example invokes the **Win32_Process::Create** method to start a new process of Calc.exe. The <xref:System.Management.InvokeMethodOptions> class is used to invoke the method.  
  
 [!code-cs[wminet_InvokeMethodOptions(2)#1](../../add/codesnippet/CSharp/c4e43701-cf8d-4b81-bc50-_1.cs)]
 [!code-vb[wminet_InvokeMethodOptions(2)#1](../../add/codesnippet/VisualBasic/c4e43701-cf8d-4b81-bc50-_1.vb)]  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns />
        <value />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of the object.</summary>
        <returns>The cloned object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## .NET Framework Security  
 Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see [Using Libraries from Partially Trusted Code](../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md).  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <value>The cloned object.</value>
      </Docs>
    </Member>
  </Members>
</Type>