<Type Name="ScrollProperties" FullName="System.Windows.Forms.ScrollProperties">
  <TypeSignature Language="C#" Value="public abstract class ScrollProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ScrollProperties extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Encapsulates properties related to scrolling.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is an abstract class. The actual derived classes used directly by Windows Forms are <xref:System.Windows.Forms.HScrollProperties> and <xref:System.Windows.Forms.VScrollProperties>, which are returned by the <xref:System.Windows.Forms.ScrollableControl.HorizontalScroll%2A> and <xref:System.Windows.Forms.ScrollableControl.VerticalScroll%2A> properties of <xref:System.Windows.Forms.ScrollableControl>.  
  
 ]]></format>
    </remarks>
    <threadsafe />
    <returns />
    <value />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ScrollProperties (System.Windows.Forms.ScrollableControl container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ScrollableControl container) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.Forms.ScrollableControl" />
      </Parameters>
      <Docs>
        <param name="container">The <see cref="T:System.Windows.Forms.ScrollableControl" /> whose scrolling properties this object describes.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ScrollProperties" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot instantiate this class directly, as it is abstract. You must instantiate one of its derived classes instead, such as <xref:System.Windows.Forms.HScrollProperties> or <xref:System.Windows.Forms.VScrollProperties>.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns />
        <value />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the scroll bar can be used on the container.</summary>
        <value>
          <see langword="true" /> if the scroll bar can be used; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
        <returns>
          <see langword="true" /> if the scroll bar can be used; otherwise, <see langword="false" />.</returns>
      </Docs>
    </Member>
    <Member MemberName="LargeChange">
      <MemberSignature Language="C#" Value="public int LargeChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the distance to move a scroll bar in response to a large scroll command.</summary>
        <value>An &lt;xref:System.Int32&gt; describing how far, in pixels, to move the scroll bar in response to a large change.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 LargeChange is used to determine how far the scroll bar is moved in response to a request to move a considerable distance, such as when the user presses the PAGE UP or PAGE DOWN button.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">LargeChange cannot be less than zero.</exception>
        <threadsafe />
        <returns>An &lt;xref:System.Int32&gt; describing how far, in pixels, to move the scroll bar in response to a large change.</returns>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public int Maximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the upper limit of the scrollable range.</summary>
        <value>An &lt;xref:System.Int32&gt; representing the maximum range of the scroll bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the new value of Maximum is less than <xref:System.Windows.Forms.ScrollProperties.Minimum%2A>, then <xref:System.Windows.Forms.ScrollProperties.Minimum%2A> is set equal to Maximum.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>An &lt;xref:System.Int32&gt; representing the maximum range of the scroll bar.</returns>
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public int Minimum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the lower limit of the scrollable range.</summary>
        <value>An &lt;xref:System.Int32&gt; representing the lower range of the scroll bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the new value of Minimum is greater than <xref:System.Windows.Forms.ScrollProperties.Maximum%2A>, then <xref:System.Windows.Forms.ScrollProperties.Maximum%2A> is set equal to Minimum.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Minimum cannot be less than zero.</exception>
        <threadsafe />
        <returns>An &lt;xref:System.Int32&gt; representing the lower range of the scroll bar.</returns>
      </Docs>
    </Member>
    <Member MemberName="ParentControl">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.ScrollableControl ParentControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ScrollableControl ParentControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScrollableControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the control to which this scroll information applies.</summary>
        <value>The control to which this scroll information applies.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
        <returns>The control to which this scroll information applies.</returns>
      </Docs>
    </Member>
    <Member MemberName="SmallChange">
      <MemberSignature Language="C#" Value="public int SmallChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SmallChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the distance to move a scroll bar in response to a small scroll command.</summary>
        <value>An &lt;xref:System.Int32&gt; representing how far, in pixels, to move the scroll bar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SmallChange is used to calculate how far to move the scroll bar in response to an arrow key click or a click on a scroll bar button.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>An &lt;xref:System.Int32&gt; representing how far, in pixels, to move the scroll bar.</returns>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public int Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a numeric value that represents the current position of the scroll bar box.</summary>
        <value>An &lt;xref:System.Int32&gt; representing the position of the scroll bar box, in pixels.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
        <returns>An &lt;xref:System.Int32&gt; representing the position of the scroll bar box, in pixels.</returns>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the scroll bar can be seen by the user.</summary>
        <value>
          <see langword="true" /> if it can be seen; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
        <returns>
          <see langword="true" /> if it can be seen; otherwise, <see langword="false" />.</returns>
      </Docs>
    </Member>
  </Members>
</Type>