<Type Name="WSTrustMessage" FullName="System.IdentityModel.Protocols.WSTrust.WSTrustMessage">
  <TypeSignature Language="C#" Value="public abstract class WSTrustMessage : System.IdentityModel.OpenObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WSTrustMessage extends System.IdentityModel.OpenObject" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.OpenObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The Base class for RST and RSTR.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about the message and elements that this class represents, see the version of the WS-Trust specification that applies to your scenario.  
  
 ]]></format>
    </remarks>
    <threadsafe />
    <returns />
    <value />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WSTrustMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.IdentityModel.Protocols.WSTrust.WSTrustMessage" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default constructor for extensibility.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns />
        <value />
      </Docs>
    </Member>
    <Member MemberName="AllowPostdating">
      <MemberSignature Language="C#" Value="public bool AllowPostdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPostdating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:AllowPostdating element.</summary>
        <value>
          <see langword="true" /> if returned tokens should allow requests for postdated tokens; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional element indicates that returned tokens should allow requests for postdated tokens.  
  
 This property is usually used with the token renewal binding.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>
          <see langword="true" /> if returned tokens should allow requests for postdated tokens; otherwise, <see langword="false" />.</returns>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.EndpointReference AppliesTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.EndpointReference AppliesTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.EndpointReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wsp:AppliesTo element.</summary>
        <value>An &lt;xref:System.ServiceModel.EndpointAddress&gt; that represents the endpoint address for which the security token is desired.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional element specifies the endpoint address for which this security token is desired; for example, the service to which the token applies.  
  
 Either wst:TokenType or wst:AppliesTo should be defined in the token request message. If both are specified, the wst:AppliesTo field takes precedence.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>An &lt;xref:System.ServiceModel.EndpointAddress&gt; that represents the endpoint address for which the security token is desired.</returns>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:AuthenticationType element.</summary>
        <value>A string that contains a URI that indicates the type of authentication desired.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional element indicates the type of authentication desired, specified as a URI.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A string that contains a URI that indicates the type of authentication desired.</returns>
      </Docs>
    </Member>
    <Member MemberName="BinaryExchange">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.BinaryExchange BinaryExchange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.BinaryExchange BinaryExchange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.BinaryExchange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:BinaryExchange element.</summary>
        <value>A <see cref="T:System.IdentityModel.Protocols.WSTrust.BinaryExchange" /> that contains the binary data exchanged. This includes the contents of the ValueType and EncodingType attributes as well as the actual data.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.BinaryExchange" /> that contains the binary data exchanged. This includes the contents of the ValueType and EncodingType attributes as well as the actual data.</returns>
      </Docs>
    </Member>
    <Member MemberName="CanonicalizationAlgorithm">
      <MemberSignature Language="C#" Value="public string CanonicalizationAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CanonicalizationAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:CanonicalizationAlgorithm element.</summary>
        <value>A string that contains a URI that indicates the canonicalization algorithm.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
        <returns>A string that contains a URI that indicates the canonicalization algorithm.</returns>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the Context attribute on the RST or RSTR.</summary>
        <value>A string that contains a URI that identifies the context of a request or response message.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The optional Context attribute on an RST element specifies an identifier (context) for a request. All subsequent RSTR elements relating to this request must carry this attribute.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A string that contains a URI that identifies the context of a request or response message.</returns>
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public string EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:EncryptionAlgorithm element.</summary>
        <value>A string that contains a URI that indicates the encryption algorithm.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional URI element indicates the desired encryption algorithm used within the returned token.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A string that contains a URI that indicates the encryption algorithm.</returns>
      </Docs>
    </Member>
    <Member MemberName="EncryptWith">
      <MemberSignature Language="C#" Value="public string EncryptWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:EncryptWith element.</summary>
        <value>A string that contains a URI that indicates the desired encryption algoritm to be used with the issued security token.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional URI element indicates the desired encryption algorithm to be used with the issued security token.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">An attempt to set the property to <see langword="null" /> or an empty string occurs.</exception>
        <threadsafe />
        <returns>A string that contains a URI that indicates the desired encryption algoritm to be used with the issued security token.</returns>
      </Docs>
    </Member>
    <Member MemberName="Entropy">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Entropy Entropy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Entropy Entropy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Entropy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:Entropy element.</summary>
        <value>A <see cref="T:System.IdentityModel.Protocols.WSTrust.Entropy" /> that represents the contents of the entropy element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional element allows a requestor to specify entropy that is to be used in creating the key. This is commonly used in a token issuance request message. The value of this element should be either an EncryptedKey or BinarySecret depending on whether or not the key is encrypted.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.Entropy" /> that represents the contents of the entropy element.</returns>
      </Docs>
    </Member>
    <Member MemberName="KeySizeInBits">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; KeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; KeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:KeySize element inside a RequestSecurityToken (RST) message.</summary>
        <value>The key size in bits.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">An attempt to set a value less than or equal to zero occurs.</exception>
        <threadsafe />
        <returns>The key size in bits.</returns>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public string KeyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:KeyType element inside a RequestSecurityToken (RST) message.</summary>
        <value>A string that contains the URI that identifies the type of key desired.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional URI element indicates the type of key desired in the security token.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A string that contains the URI that identifies the type of key desired.</returns>
      </Docs>
    </Member>
    <Member MemberName="KeyWrapAlgorithm">
      <MemberSignature Language="C#" Value="public string KeyWrapAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyWrapAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:KeyWrapAlgorithm element.</summary>
        <value>A string that contains the URI that identifies the key wrap algorithm.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional URI indicates the desired algorithm to use for key wrapping when STS encrypts the issued token for the relying party using an asymmetric key.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A string that contains the URI that identifies the key wrap algorithm.</returns>
      </Docs>
    </Member>
    <Member MemberName="Lifetime">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Lifetime Lifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Lifetime Lifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Lifetime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:Lifetime element inside a RequestSecurityToken (RST) message.</summary>
        <value>A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the desired time during which the returned token will be valid.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional element specifies the desired time range during which the returned security token is valid.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the desired time during which the returned token will be valid.</returns>
      </Docs>
    </Member>
    <Member MemberName="ReplyTo">
      <MemberSignature Language="C#" Value="public string ReplyTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the address to be used for replying to the Relying Party.</summary>
        <value>A string that contains the address.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This is a local extension that is used exclusively in passive scenarios with the WS-Federation protocol.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A string that contains the address.</returns>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the wst:RequestType element.</summary>
        <value>A string that contains a URI that indicates the request type; for example, one of the constants defined in the <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestTypes" /> class.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This required element indicates the request type.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A string that contains a URI that indicates the request type; for example, one of the constants defined in the <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestTypes" /> class.</returns>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public string SignatureAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:SignatureAlgorithm element.</summary>
        <value>A string that contains a URI that indicates the signature algorithm.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional URI element indicates the desired signature algorithm used within the returned token.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A string that contains a URI that indicates the signature algorithm.</returns>
      </Docs>
    </Member>
    <Member MemberName="SignWith">
      <MemberSignature Language="C#" Value="public string SignWith { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignWith" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:SignWith element.</summary>
        <value>A string that contains a URI that identifies the desired signature algorithm.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional URI element indicates the desired signature algorithm to be used with the issued security token. This is an extension to the RequestSecurityToken element.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">An attempt to set the value to <see langword="null" /> or an empty string occurs.</exception>
        <threadsafe />
        <returns>A string that contains a URI that identifies the desired signature algorithm.</returns>
      </Docs>
    </Member>
    <Member MemberName="TokenType">
      <MemberSignature Language="C#" Value="public string TokenType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:TokenType element.</summary>
        <value>A string that contains a URI that indicates the token type.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This optional element indicates the desired token type.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A string that contains a URI that indicates the token type.</returns>
      </Docs>
    </Member>
    <Member MemberName="UseKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.UseKey UseKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.UseKey UseKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.UseKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the contents of the wst:UseKey element.</summary>
        <value>A <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> that contains the key.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the requestor wishes to use an existing key rather than create a new one, then this property can be used to reference a security token containing the desired key. This is commonly used in the asymetric key issurance case.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" /> that contains the key.</returns>
      </Docs>
    </Member>
  </Members>
</Type>