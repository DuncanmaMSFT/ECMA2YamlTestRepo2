<Type Name="EventEntry" FullName="System.Web.UI.EventEntry">
  <TypeSignature Language="C#" Value="public class EventEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventEntry extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Acts as the property entry for event handlers.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The page parser uses property entry classes during parsing to represent expressions found within server control tags. The EventEntry class is used for expressions that are bound to properties that specify an event handler. These bound properties start with "on", such as `OnClick` or `OnInit`.  
  
 ]]></format>
    </remarks>
    <threadsafe />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.EventEntry" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HandlerMethodName">
      <MemberSignature Language="C#" Value="public string HandlerMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HandlerMethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the method that handles the event.</summary>
        <value>A &lt;xref:System.String&gt; containing the event handler method name.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In the property setting, the HandlerMethodName property is set to the value of the expression.  
  
 ]]></format>
        </remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="HandlerType">
      <MemberSignature Language="C#" Value="public Type HandlerType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type HandlerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of delegate for the event.</summary>
        <value>A &lt;xref:System.Type&gt; that represents the type of delegate for the event.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the property from the expression.</summary>
        <value>A &lt;xref:System.String&gt; that contains the name of the property.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
      </Docs>
    </Member>
  </Members>
</Type>