<Type Name="CodeTypeMember" FullName="System.CodeDom.CodeTypeMember">
  <TypeSignature Language="C#" Value="public class CodeTypeMember : System.CodeDom.CodeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeMember extends System.CodeDom.CodeObject" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides a base class for a member of a type. Type members include fields, methods, properties, constructors and nested types.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CodeTypeMember class can be used to represent the declaration for a member of a type. CodeTypeMember is a base class from which more specific types of members are derived, such as <xref:System.CodeDom.CodeMemberField> and <xref:System.CodeDom.CodeMemberMethod>. This class contains properties and methods common to all type members.  
  
 ]]></format>
    </remarks>
    <threadsafe />
    <returns />
    <value />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeMember" /> class.</summary>
        <remarks>To be added.</remarks>
        <threadsafe />
        <returns />
        <value />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.CodeDom.MemberAttributes Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.MemberAttributes Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.MemberAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the attributes of the member.</summary>
        <value>A bitwise combination of the <see cref="T:System.CodeDom.MemberAttributes" /> values used to indicate the attributes of the member. The default value is <see cref="T:System.CodeDom.MemberAttributes" /> | <see cref="T:System.CodeDom.MemberAttributes" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is used to specify the attributes of the type member.  
  
 Member attributes are classified in groups, with a mask for each group. The access group consists of flags containing the terms `Public`, `Private`, `Family`, or `Assembly`.  The scope group includes flags for <xref:System.CodeDom.MemberAttributes>, <xref:System.CodeDom.MemberAttributes>, <xref:System.CodeDom.MemberAttributes>, <xref:System.CodeDom.MemberAttributes>, and <xref:System.CodeDom.MemberAttributes>. The <xref:System.CodeDom.MemberAttributes> mask identifies the access attributes. The <xref:System.CodeDom.MemberAttributes> mask identifies the scope attributes. The default value for the Attributes property includes flags from both access and scope. To change either access or scope, first mask out the existing flags and then set the new value. For example, the code statement to identify a constructor (named `constructor1`) as public is `constructor1.Attributes = (constructor1.Attributes & ~MemberAttributes.AccessMask) | MemberAttributes.Public;`.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A bitwise combination of the <see cref="T:System.CodeDom.MemberAttributes" /> values used to indicate the attributes of the member. The default value is <see cref="T:System.CodeDom.MemberAttributes" /> | <see cref="T:System.CodeDom.MemberAttributes" />.</returns>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCommentStatementCollection Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeCommentStatementCollection Comments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCommentStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of comments for the type member.</summary>
        <value>A <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> that indicates the comments for the member.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The comments in this collection are written to the generated source file just before the declaration of the member.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> that indicates the comments for the member.</returns>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclarationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the custom attributes of the member.</summary>
        <value>A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the custom attributes of the member.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property can be used to add metadata attributes to the declaration of the member.  
  
> [!CAUTION]
>  This property is `null` by default and should be checked for content before being referenced.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> that indicates the custom attributes of the member.</returns>
      </Docs>
    </Member>
    <Member MemberName="EndDirectives">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeDirectiveCollection EndDirectives { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeDirectiveCollection EndDirectives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeDirectiveCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the end directives for the member.</summary>
        <value>A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing end directives.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
        <returns>A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing end directives.</returns>
      </Docs>
    </Member>
    <Member MemberName="LinePragma">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeLinePragma LinePragma { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeLinePragma LinePragma" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeLinePragma</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the line on which the type member statement occurs.</summary>
        <value>A <see cref="T:System.CodeDom.CodeLinePragma" /> object that indicates the location of the type member declaration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property indicates the location of the type member declaration. This property can be used for error reporting and debugging. The location of the type member declaration can be useful when code is generated based on a template file.  
  
> [!CAUTION]
>  This value is `null` by default and should be checked for content before being referenced.  
  
 ]]></format>
        </remarks>
        <threadsafe />
        <returns>A <see cref="T:System.CodeDom.CodeLinePragma" /> object that indicates the location of the type member declaration.</returns>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the member.</summary>
        <value>The name of the member.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
        <returns>The name of the member.</returns>
      </Docs>
    </Member>
    <Member MemberName="StartDirectives">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeDirectiveCollection StartDirectives { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeDirectiveCollection StartDirectives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeDirectiveCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the start directives for the member.</summary>
        <value>A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing start directives.</value>
        <remarks>To be added.</remarks>
        <threadsafe />
        <returns>A <see cref="T:System.CodeDom.CodeDirectiveCollection" /> object containing start directives.</returns>
      </Docs>
    </Member>
  </Members>
</Type>