### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.IExtensibleObject`1
  id: IExtensibleObject`1
  children:
  - System.ServiceModel.IExtensibleObject`1.Extensions
  langs:
  - csharp
  name: IExtensibleObject<T>
  nameWithType: IExtensibleObject<T>
  fullName: System.ServiceModel.IExtensibleObject<T>
  type: Interface
  syntax:
    content: 'public interface IExtensibleObject<T> where T : IExtensibleObject<T>'
    typeParameters:
    - id: T
      description: To be added.
  implements: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.IExtensibleObject`1.Extensions
  id: Extensions
  parent: System.ServiceModel.IExtensibleObject`1
  langs:
  - csharp
  name: Extensions
  nameWithType: IExtensibleObject<T>.Extensions
  fullName: System.ServiceModel.IExtensibleObject<T>.Extensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: public System.ServiceModel.IExtensionCollection<T> Extensions { get; }
    return:
      type: System.ServiceModel.IExtensionCollection`1
      description: To be added.
  overload: System.ServiceModel.IExtensibleObject`1.Extensions*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
references:
- uid: System.ServiceModel.IExtensibleObject`1.Extensions
  parent: System.ServiceModel.IExtensibleObject`1
  isExternal: false
  name: Extensions
  nameWithType: IExtensibleObject<T>.Extensions
  fullName: System.ServiceModel.IExtensibleObject<T>.Extensions
- uid: System.ServiceModel.IExtensionCollection`1
  parent: System.ServiceModel
  isExternal: false
  name: IExtensionCollection<T>
  nameWithType: IExtensionCollection<T>
  fullName: System.ServiceModel.IExtensionCollection<T>
- uid: System.ServiceModel.IExtensibleObject`1.Extensions*
  parent: System.ServiceModel.IExtensibleObject`1
  isExternal: false
  name: Extensions
  nameWithType: IExtensibleObject<T>.Extensions
