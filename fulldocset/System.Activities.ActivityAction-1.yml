### YamlMime:ManagedReference
items:
- uid: System.Activities.ActivityAction`1
  id: ActivityAction`1
  children:
  - System.Activities.ActivityAction`1.#ctor
  - System.Activities.ActivityAction`1.Argument
  langs:
  - csharp
  name: ActivityAction<T>
  nameWithType: ActivityAction<T>
  fullName: System.Activities.ActivityAction<T>
  type: Class
  syntax:
    content: 'public sealed class ActivityAction<T> : System.Activities.ActivityDelegate'
    typeParameters:
    - id: T
      description: To be added.
  inheritance:
  - System.Object
  - System.Activities.ActivityDelegate
  implements: []
  inheritedMembers:
  - System.Activities.ActivityDelegate.DisplayName
  - System.Activities.ActivityDelegate.GetResultArgument
  - System.Activities.ActivityDelegate.Handler
  - System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  - System.Activities.ActivityDelegate.ShouldSerializeDisplayName
  - System.Activities.ActivityDelegate.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netframework-4.0
- uid: System.Activities.ActivityAction`1.#ctor
  id: '#ctor'
  parent: System.Activities.ActivityAction`1
  langs:
  - csharp
  name: ActivityAction<T>()
  nameWithType: ActivityAction<T>.ActivityAction<T>()
  fullName: System.Activities.ActivityAction<T>.ActivityAction<T>()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public ActivityAction ();
    parameters: []
  overload: System.Activities.ActivityAction`1.#ctor*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.Activities.ActivityAction`1.Argument
  id: Argument
  parent: System.Activities.ActivityAction`1
  langs:
  - csharp
  name: Argument
  nameWithType: ActivityAction<T>.Argument
  fullName: System.Activities.ActivityAction<T>.Argument
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.DelegateInArgument<T> Argument { get; set; }
    return:
      type: System.Activities.DelegateInArgument`1
      description: To be added.
  overload: System.Activities.ActivityAction`1.Argument*
  exceptions: []
  version:
  - netframework-4.0
references:
- uid: System.Activities.ActivityDelegate
  isExternal: false
  name: System.Activities.ActivityDelegate
- uid: System.Activities.ActivityAction`1.#ctor
  parent: System.Activities.ActivityAction`1
  isExternal: false
  name: ActivityAction<T>()
  nameWithType: ActivityAction<T>.ActivityAction<T>()
  fullName: System.Activities.ActivityAction<T>.ActivityAction<T>()
- uid: System.Activities.ActivityAction`1.Argument
  parent: System.Activities.ActivityAction`1
  isExternal: false
  name: Argument
  nameWithType: ActivityAction<T>.Argument
  fullName: System.Activities.ActivityAction<T>.Argument
- uid: System.Activities.DelegateInArgument`1
  parent: System.Activities
  isExternal: false
  name: DelegateInArgument<T>
  nameWithType: DelegateInArgument<T>
  fullName: System.Activities.DelegateInArgument<T>
- uid: System.Activities.ActivityAction`1.#ctor*
  parent: System.Activities.ActivityAction`1
  isExternal: false
  name: ActivityAction<T>
  nameWithType: ActivityAction<T>.ActivityAction<T>
- uid: System.Activities.ActivityAction`1.Argument*
  parent: System.Activities.ActivityAction`1
  isExternal: false
  name: Argument
  nameWithType: ActivityAction<T>.Argument
