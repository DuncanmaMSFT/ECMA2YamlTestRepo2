### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.InstanceContext
  id: InstanceContext
  children:
  - System.ServiceModel.InstanceContext.#ctor(System.Object)
  - System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase,System.Object)
  - System.ServiceModel.InstanceContext.DefaultCloseTimeout
  - System.ServiceModel.InstanceContext.DefaultOpenTimeout
  - System.ServiceModel.InstanceContext.Extensions
  - System.ServiceModel.InstanceContext.GetServiceInstance
  - System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)
  - System.ServiceModel.InstanceContext.Host
  - System.ServiceModel.InstanceContext.IncomingChannels
  - System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.InstanceContext.ManualFlowControlLimit
  - System.ServiceModel.InstanceContext.OnAbort
  - System.ServiceModel.InstanceContext.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.InstanceContext.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.InstanceContext.OnClose(System.TimeSpan)
  - System.ServiceModel.InstanceContext.OnClosed
  - System.ServiceModel.InstanceContext.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.InstanceContext.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.InstanceContext.OnFaulted
  - System.ServiceModel.InstanceContext.OnOpen(System.TimeSpan)
  - System.ServiceModel.InstanceContext.OnOpened
  - System.ServiceModel.InstanceContext.OnOpening
  - System.ServiceModel.InstanceContext.OutgoingChannels
  - System.ServiceModel.InstanceContext.ReleaseServiceInstance
  - System.ServiceModel.InstanceContext.SynchronizationContext
  langs:
  - csharp
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
  type: Class
  summary: Represents the context information for a service instance.
  syntax:
    content: 'public sealed class InstanceContext : System.ServiceModel.Channels.CommunicationObject, System.ServiceModel.IExtensibleObject<System.ServiceModel.InstanceContext>'
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  implements:
  - System.ServiceModel.IExtensibleObject<System.ServiceModel.InstanceContext>
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: InstanceContext(Object)
  nameWithType: InstanceContext.InstanceContext(Object)
  fullName: System.ServiceModel.InstanceContext.InstanceContext(Object)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.InstanceContext"></xref> class for a specified object that implements the service instance.
  syntax:
    content: public InstanceContext (object implementation);
    parameters:
    - id: implementation
      type: System.Object
      description: To be added.
  overload: System.ServiceModel.InstanceContext.#ctor*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase)
  id: '#ctor(System.ServiceModel.ServiceHostBase)'
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: InstanceContext(ServiceHostBase)
  nameWithType: InstanceContext.InstanceContext(ServiceHostBase)
  fullName: System.ServiceModel.InstanceContext.InstanceContext(ServiceHostBase)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.InstanceContext"></xref> class for a service hosted by a specified host.
  syntax:
    content: public InstanceContext (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: To be added.
  overload: System.ServiceModel.InstanceContext.#ctor*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase,System.Object)
  id: '#ctor(System.ServiceModel.ServiceHostBase,System.Object)'
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: InstanceContext(ServiceHostBase,Object)
  nameWithType: InstanceContext.InstanceContext(ServiceHostBase,Object)
  fullName: System.ServiceModel.InstanceContext.InstanceContext(ServiceHostBase,Object)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.InstanceContext"></xref> class for a specified object that implements the service instance and is hosted by a specified host.
  syntax:
    content: public InstanceContext (System.ServiceModel.ServiceHostBase host, object implementation);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: To be added.
    - id: implementation
      type: System.Object
      description: To be added.
  overload: System.ServiceModel.InstanceContext.#ctor*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: InstanceContext.DefaultCloseTimeout
  fullName: System.ServiceModel.InstanceContext.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: To be added.
  overload: System.ServiceModel.InstanceContext.DefaultCloseTimeout*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: InstanceContext.DefaultOpenTimeout
  fullName: System.ServiceModel.InstanceContext.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: To be added.
  overload: System.ServiceModel.InstanceContext.DefaultOpenTimeout*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.Extensions
  id: Extensions
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: Extensions
  nameWithType: InstanceContext.Extensions
  fullName: System.ServiceModel.InstanceContext.Extensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the extension collection, if any, associated with the service instance.
  syntax:
    content: public System.ServiceModel.IExtensionCollection<System.ServiceModel.InstanceContext> Extensions { get; }
    return:
      type: System.ServiceModel.IExtensionCollection{System.ServiceModel.InstanceContext}
      description: To be added.
  overload: System.ServiceModel.InstanceContext.Extensions*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.GetServiceInstance
  id: GetServiceInstance
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: GetServiceInstance()
  nameWithType: InstanceContext.GetServiceInstance()
  fullName: System.ServiceModel.InstanceContext.GetServiceInstance()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Returns the instance of the service for the instance context.
  syntax:
    content: public object GetServiceInstance ();
    parameters: []
    return:
      type: System.Object
      description: To be added.
  overload: System.ServiceModel.InstanceContext.GetServiceInstance*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)
  id: GetServiceInstance(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: GetServiceInstance(Message)
  nameWithType: InstanceContext.GetServiceInstance(Message)
  fullName: System.ServiceModel.InstanceContext.GetServiceInstance(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Returns the instance of the service for the instance context in response to an incoming message.
  syntax:
    content: public object GetServiceInstance (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.ServiceModel.InstanceContext.GetServiceInstance*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.Host
  id: Host
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: Host
  nameWithType: InstanceContext.Host
  fullName: System.ServiceModel.InstanceContext.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the host for the service instance.
  syntax:
    content: public System.ServiceModel.ServiceHostBase Host { get; }
    return:
      type: System.ServiceModel.ServiceHostBase
      description: To be added.
  overload: System.ServiceModel.InstanceContext.Host*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.IncomingChannels
  id: IncomingChannels
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: IncomingChannels
  nameWithType: InstanceContext.IncomingChannels
  fullName: System.ServiceModel.InstanceContext.IncomingChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the sessionful channels that are incoming to the service instance.
  syntax:
    content: public System.Collections.Generic.ICollection<System.ServiceModel.Channels.IChannel> IncomingChannels { get; }
    return:
      type: System.Collections.Generic.ICollection{System.ServiceModel.Channels.IChannel}
      description: To be added.
  overload: System.ServiceModel.InstanceContext.IncomingChannels*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(System.Int32)
  id: IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: InstanceContext.IncrementManualFlowControlLimit(Int32)
  fullName: System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Increases the number of messages that can be processed by the service instance.
  syntax:
    content: public int IncrementManualFlowControlLimit (int incrementBy);
    parameters:
    - id: incrementBy
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.ManualFlowControlLimit
  id: ManualFlowControlLimit
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: ManualFlowControlLimit
  nameWithType: InstanceContext.ManualFlowControlLimit
  fullName: System.ServiceModel.InstanceContext.ManualFlowControlLimit
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a limit on the number of messages that can be processed by the instance context.
  syntax:
    content: public int ManualFlowControlLimit { get; set; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.ServiceModel.InstanceContext.ManualFlowControlLimit*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnAbort
  id: OnAbort
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnAbort()
  nameWithType: InstanceContext.OnAbort()
  fullName: System.ServiceModel.InstanceContext.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.InstanceContext.OnAbort*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceContext.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.InstanceContext.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: callback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.InstanceContext.OnBeginClose*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceContext.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.InstanceContext.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: callback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.InstanceContext.OnBeginOpen*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: InstanceContext.OnClose(TimeSpan)
  fullName: System.ServiceModel.InstanceContext.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
  overload: System.ServiceModel.InstanceContext.OnClose*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnClosed
  id: OnClosed
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnClosed()
  nameWithType: InstanceContext.OnClosed()
  fullName: System.ServiceModel.InstanceContext.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.InstanceContext.OnClosed*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: InstanceContext.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.InstanceContext.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.InstanceContext.OnEndClose*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: InstanceContext.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.InstanceContext.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.InstanceContext.OnEndOpen*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnFaulted
  id: OnFaulted
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnFaulted()
  nameWithType: InstanceContext.OnFaulted()
  fullName: System.ServiceModel.InstanceContext.OnFaulted()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnFaulted ();
    parameters: []
  overload: System.ServiceModel.InstanceContext.OnFaulted*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: InstanceContext.OnOpen(TimeSpan)
  fullName: System.ServiceModel.InstanceContext.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
  overload: System.ServiceModel.InstanceContext.OnOpen*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnOpened
  id: OnOpened
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnOpened()
  nameWithType: InstanceContext.OnOpened()
  fullName: System.ServiceModel.InstanceContext.OnOpened()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnOpened ();
    parameters: []
  overload: System.ServiceModel.InstanceContext.OnOpened*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OnOpening
  id: OnOpening
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OnOpening()
  nameWithType: InstanceContext.OnOpening()
  fullName: System.ServiceModel.InstanceContext.OnOpening()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnOpening ();
    parameters: []
  overload: System.ServiceModel.InstanceContext.OnOpening*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.OutgoingChannels
  id: OutgoingChannels
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: OutgoingChannels
  nameWithType: InstanceContext.OutgoingChannels
  fullName: System.ServiceModel.InstanceContext.OutgoingChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the sessionful channels that are outgoing from the service instance.
  syntax:
    content: public System.Collections.Generic.ICollection<System.ServiceModel.Channels.IChannel> OutgoingChannels { get; }
    return:
      type: System.Collections.Generic.ICollection{System.ServiceModel.Channels.IChannel}
      description: To be added.
  overload: System.ServiceModel.InstanceContext.OutgoingChannels*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.ReleaseServiceInstance
  id: ReleaseServiceInstance
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: ReleaseServiceInstance()
  nameWithType: InstanceContext.ReleaseServiceInstance()
  fullName: System.ServiceModel.InstanceContext.ReleaseServiceInstance()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Releases the service instance.
  syntax:
    content: public void ReleaseServiceInstance ();
    parameters: []
  overload: System.ServiceModel.InstanceContext.ReleaseServiceInstance*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.InstanceContext.SynchronizationContext
  id: SynchronizationContext
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  name: SynchronizationContext
  nameWithType: InstanceContext.SynchronizationContext
  fullName: System.ServiceModel.InstanceContext.SynchronizationContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the context used for thread synchronization with the current instance context.
  syntax:
    content: public System.Threading.SynchronizationContext SynchronizationContext { get; set; }
    return:
      type: System.Threading.SynchronizationContext
      description: To be added.
  overload: System.ServiceModel.InstanceContext.SynchronizationContext*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.ServiceModel.InstanceContext.#ctor(System.Object)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: InstanceContext(Object)
  nameWithType: InstanceContext.InstanceContext(Object)
  fullName: System.ServiceModel.InstanceContext.InstanceContext(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: InstanceContext(ServiceHostBase)
  nameWithType: InstanceContext.InstanceContext(ServiceHostBase)
  fullName: System.ServiceModel.InstanceContext.InstanceContext(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase,System.Object)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: InstanceContext(ServiceHostBase,Object)
  nameWithType: InstanceContext.InstanceContext(ServiceHostBase,Object)
  fullName: System.ServiceModel.InstanceContext.InstanceContext(ServiceHostBase,Object)
- uid: System.ServiceModel.InstanceContext.DefaultCloseTimeout
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: InstanceContext.DefaultCloseTimeout
  fullName: System.ServiceModel.InstanceContext.DefaultCloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.InstanceContext.DefaultOpenTimeout
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: InstanceContext.DefaultOpenTimeout
  fullName: System.ServiceModel.InstanceContext.DefaultOpenTimeout
- uid: System.ServiceModel.InstanceContext.Extensions
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: Extensions
  nameWithType: InstanceContext.Extensions
  fullName: System.ServiceModel.InstanceContext.Extensions
- uid: System.ServiceModel.IExtensionCollection{System.ServiceModel.InstanceContext}
  parent: System.ServiceModel
  isExternal: false
  name: IExtensionCollection<InstanceContext>
  nameWithType: IExtensionCollection<InstanceContext>
  fullName: System.ServiceModel.IExtensionCollection<System.ServiceModel.InstanceContext>
  spec.csharp:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: IExtensionCollection<System.ServiceModel.InstanceContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.InstanceContext
    name: InstanceContext
    nameWithType: InstanceContext
    fullName: InstanceContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.InstanceContext.GetServiceInstance
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: GetServiceInstance()
  nameWithType: InstanceContext.GetServiceInstance()
  fullName: System.ServiceModel.InstanceContext.GetServiceInstance()
- uid: System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: GetServiceInstance(Message)
  nameWithType: InstanceContext.GetServiceInstance(Message)
  fullName: System.ServiceModel.InstanceContext.GetServiceInstance(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.InstanceContext.Host
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: Host
  nameWithType: InstanceContext.Host
  fullName: System.ServiceModel.InstanceContext.Host
- uid: System.ServiceModel.InstanceContext.IncomingChannels
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: IncomingChannels
  nameWithType: InstanceContext.IncomingChannels
  fullName: System.ServiceModel.InstanceContext.IncomingChannels
- uid: System.Collections.Generic.ICollection{System.ServiceModel.Channels.IChannel}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<IChannel>
  nameWithType: ICollection<IChannel>
  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Channels.IChannel>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.ServiceModel.Channels.IChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Channels.IChannel
    name: IChannel
    nameWithType: IChannel
    fullName: IChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: InstanceContext.IncrementManualFlowControlLimit(Int32)
  fullName: System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.InstanceContext.ManualFlowControlLimit
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: InstanceContext.ManualFlowControlLimit
  fullName: System.ServiceModel.InstanceContext.ManualFlowControlLimit
- uid: System.ServiceModel.InstanceContext.OnAbort
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnAbort()
  nameWithType: InstanceContext.OnAbort()
  fullName: System.ServiceModel.InstanceContext.OnAbort()
- uid: System.ServiceModel.InstanceContext.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceContext.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.InstanceContext.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.InstanceContext.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: InstanceContext.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.InstanceContext.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.InstanceContext.OnClose(System.TimeSpan)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: InstanceContext.OnClose(TimeSpan)
  fullName: System.ServiceModel.InstanceContext.OnClose(TimeSpan)
- uid: System.ServiceModel.InstanceContext.OnClosed
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnClosed()
  nameWithType: InstanceContext.OnClosed()
  fullName: System.ServiceModel.InstanceContext.OnClosed()
- uid: System.ServiceModel.InstanceContext.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: InstanceContext.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.InstanceContext.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.InstanceContext.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: InstanceContext.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.InstanceContext.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.InstanceContext.OnFaulted
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnFaulted()
  nameWithType: InstanceContext.OnFaulted()
  fullName: System.ServiceModel.InstanceContext.OnFaulted()
- uid: System.ServiceModel.InstanceContext.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: InstanceContext.OnOpen(TimeSpan)
  fullName: System.ServiceModel.InstanceContext.OnOpen(TimeSpan)
- uid: System.ServiceModel.InstanceContext.OnOpened
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnOpened()
  nameWithType: InstanceContext.OnOpened()
  fullName: System.ServiceModel.InstanceContext.OnOpened()
- uid: System.ServiceModel.InstanceContext.OnOpening
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnOpening()
  nameWithType: InstanceContext.OnOpening()
  fullName: System.ServiceModel.InstanceContext.OnOpening()
- uid: System.ServiceModel.InstanceContext.OutgoingChannels
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OutgoingChannels
  nameWithType: InstanceContext.OutgoingChannels
  fullName: System.ServiceModel.InstanceContext.OutgoingChannels
- uid: System.ServiceModel.InstanceContext.ReleaseServiceInstance
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: ReleaseServiceInstance()
  nameWithType: InstanceContext.ReleaseServiceInstance()
  fullName: System.ServiceModel.InstanceContext.ReleaseServiceInstance()
- uid: System.ServiceModel.InstanceContext.SynchronizationContext
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: SynchronizationContext
  nameWithType: InstanceContext.SynchronizationContext
  fullName: System.ServiceModel.InstanceContext.SynchronizationContext
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: false
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
- uid: System.ServiceModel.InstanceContext.#ctor*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: InstanceContext
  nameWithType: InstanceContext.InstanceContext
- uid: System.ServiceModel.InstanceContext.DefaultCloseTimeout*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: InstanceContext.DefaultCloseTimeout
- uid: System.ServiceModel.InstanceContext.DefaultOpenTimeout*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: InstanceContext.DefaultOpenTimeout
- uid: System.ServiceModel.InstanceContext.Extensions*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: Extensions
  nameWithType: InstanceContext.Extensions
- uid: System.ServiceModel.InstanceContext.GetServiceInstance*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: GetServiceInstance
  nameWithType: InstanceContext.GetServiceInstance
- uid: System.ServiceModel.InstanceContext.Host*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: Host
  nameWithType: InstanceContext.Host
- uid: System.ServiceModel.InstanceContext.IncomingChannels*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: IncomingChannels
  nameWithType: InstanceContext.IncomingChannels
- uid: System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: IncrementManualFlowControlLimit
  nameWithType: InstanceContext.IncrementManualFlowControlLimit
- uid: System.ServiceModel.InstanceContext.ManualFlowControlLimit*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: InstanceContext.ManualFlowControlLimit
- uid: System.ServiceModel.InstanceContext.OnAbort*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnAbort
  nameWithType: InstanceContext.OnAbort
- uid: System.ServiceModel.InstanceContext.OnBeginClose*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnBeginClose
  nameWithType: InstanceContext.OnBeginClose
- uid: System.ServiceModel.InstanceContext.OnBeginOpen*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnBeginOpen
  nameWithType: InstanceContext.OnBeginOpen
- uid: System.ServiceModel.InstanceContext.OnClose*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnClose
  nameWithType: InstanceContext.OnClose
- uid: System.ServiceModel.InstanceContext.OnClosed*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnClosed
  nameWithType: InstanceContext.OnClosed
- uid: System.ServiceModel.InstanceContext.OnEndClose*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnEndClose
  nameWithType: InstanceContext.OnEndClose
- uid: System.ServiceModel.InstanceContext.OnEndOpen*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnEndOpen
  nameWithType: InstanceContext.OnEndOpen
- uid: System.ServiceModel.InstanceContext.OnFaulted*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnFaulted
  nameWithType: InstanceContext.OnFaulted
- uid: System.ServiceModel.InstanceContext.OnOpen*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnOpen
  nameWithType: InstanceContext.OnOpen
- uid: System.ServiceModel.InstanceContext.OnOpened*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnOpened
  nameWithType: InstanceContext.OnOpened
- uid: System.ServiceModel.InstanceContext.OnOpening*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OnOpening
  nameWithType: InstanceContext.OnOpening
- uid: System.ServiceModel.InstanceContext.OutgoingChannels*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: OutgoingChannels
  nameWithType: InstanceContext.OutgoingChannels
- uid: System.ServiceModel.InstanceContext.ReleaseServiceInstance*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: ReleaseServiceInstance
  nameWithType: InstanceContext.ReleaseServiceInstance
- uid: System.ServiceModel.InstanceContext.SynchronizationContext*
  parent: System.ServiceModel.InstanceContext
  isExternal: false
  name: SynchronizationContext
  nameWithType: InstanceContext.SynchronizationContext
