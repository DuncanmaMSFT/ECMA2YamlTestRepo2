### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.TextElementCollection`1
  id: TextElementCollection`1
  children:
  - System.Windows.Documents.TextElementCollection`1.Add(`0)
  - System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)
  - System.Windows.Documents.TextElementCollection`1.Clear
  - System.Windows.Documents.TextElementCollection`1.Contains(`0)
  - System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)
  - System.Windows.Documents.TextElementCollection`1.Count
  - System.Windows.Documents.TextElementCollection`1.GetEnumerator
  - System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)
  - System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)
  - System.Windows.Documents.TextElementCollection`1.IsReadOnly
  - System.Windows.Documents.TextElementCollection`1.Remove(`0)
  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count
  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized
  - System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)
  - System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: TextElementCollection<TextElementType>
  nameWithType: TextElementCollection<TextElementType>
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>
  type: Class
  summary: Provides standard facilities for creating and managing a type-safe, ordered collection of <xref href="System.Windows.Documents.TextElement"></xref> objects.  This is a generic collection for working with objects of a specified type that derives from <xref href="System.Windows.Documents.TextElement"></xref>.
  remarks: This collection supports zero-based indexing.
  syntax:
    content: 'public class TextElementCollection<TextElementType> : System.Collections.Generic.ICollection<TextElementType>, System.Collections.Generic.IEnumerable<TextElementType>, System.Collections.IList where TextElementType : TextElement'
    typeParameters:
    - id: TextElementType
      description: Type specifier for the generic collection.  Acceptable types are constrained to a type of <xref href="System.Windows.Documents.TextElement"></xref> or a descendant of <xref href="System.Windows.Documents.TextElement"></xref>.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<TextElementType>
  - System.Collections.Generic.IEnumerable<TextElementType>
  - System.Collections.IList
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.Add(`0)
  id: Add(`0)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: Add(TextElementType)
  nameWithType: TextElementCollection<TextElementType>.Add(TextElementType)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Add(TextElementType)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Appends a specified item to the collection.
  syntax:
    content: public void Add (TextElementType item);
    parameters:
    - id: item
      type: TextElementType
      description: An item to append to the collection.
  overload: System.Windows.Documents.TextElementCollection`1.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Raised when *item* already belongs to a collection.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Raised when *item* is **null**.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)
  id: AddRange(System.Collections.IEnumerable)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: AddRange(IEnumerable)
  nameWithType: TextElementCollection<TextElementType>.AddRange(IEnumerable)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.AddRange(IEnumerable)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Appends a specified range of items to the collection.
  syntax:
    content: public void AddRange (System.Collections.IEnumerable range);
    parameters:
    - id: range
      type: System.Collections.IEnumerable
      description: An object that implements the <xref href="System.Collections.IEnumerable"></xref> interface, and that specifies a range of items to add to the collection.
  overload: System.Windows.Documents.TextElementCollection`1.AddRange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Raised when *range* includes any **null** items.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Raised when *range* is **null**.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.Clear
  id: Clear
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: Clear()
  nameWithType: TextElementCollection<TextElementType>.Clear()
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Clears all items from the collection.
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Documents.TextElementCollection`1.Clear*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: Contains(TextElementType)
  nameWithType: TextElementCollection<TextElementType>.Contains(TextElementType)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Contains(TextElementType)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Queries for the presence of a specified item in the collection.
  syntax:
    content: public bool Contains (TextElementType item);
    parameters:
    - id: item
      type: TextElementType
      description: An item to query for the presence of in the collection.
    return:
      type: System.Boolean
      description: '**true** if the specified *item* is present in the collection; otherwise, **false**.'
  overload: System.Windows.Documents.TextElementCollection`1.Contains*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: CopyTo(TextElementType[],Int32)
  nameWithType: TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.
  syntax:
    content: public void CopyTo (TextElementType[] array, int arrayIndex);
    parameters:
    - id: array
      type: TextElementType[]
      description: A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: A zero-based index in <code>array</code> specifying the position at which to begin inserting the copied collection objects.
  overload: System.Windows.Documents.TextElementCollection`1.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Raised when *array* includes items that are not compatible with the type <xref href="System.Windows.Documents.TextElement"></xref>, or if *arrayIndex* specifies a position that falls outside of the bounds of *array*.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Raised when *array* is **null**.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Raised when *arrayIndex* is less than **0**.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.Count
  id: Count
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: Count
  nameWithType: TextElementCollection<TextElementType>.Count
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets the number of items currently in the collection.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: The number of items currently in the collection.
  overload: System.Windows.Documents.TextElementCollection`1.Count*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TextElementCollection<TextElementType>.GetEnumerator()
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Returns an enumerator for the contents of the collection.
  syntax:
    content: public System.Collections.Generic.IEnumerator<TextElementType> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{TextElementType}
      description: An enumerator for the contents of the collection.
  overload: System.Windows.Documents.TextElementCollection`1.GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)
  id: InsertAfter(`0,`0)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: InsertAfter(TextElementType,TextElementType)
  nameWithType: TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Inserts a specified item in the collection after a specified collection item.
  syntax:
    content: public void InsertAfter (TextElementType previousSibling, TextElementType newItem);
    parameters:
    - id: previousSibling
      type: TextElementType
      description: An item in the collection after which the new item will be inserted.
    - id: newItem
      type: TextElementType
      description: An item to insert into the collection.
  overload: System.Windows.Documents.TextElementCollection`1.InsertAfter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Raised when *newItem* already belongs to a collection.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Raised when *previousSibling* or *newItem* is **null**.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Raised when *previousSibling* does not belong to this collection.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)
  id: InsertBefore(`0,`0)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: InsertBefore(TextElementType,TextElementType)
  nameWithType: TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Inserts a specified item in the collection before a specified collection item.
  syntax:
    content: public void InsertBefore (TextElementType nextSibling, TextElementType newItem);
    parameters:
    - id: nextSibling
      type: TextElementType
      description: An item in the collection before which the new item will be inserted.
    - id: newItem
      type: TextElementType
      description: An item to insert into the collection.
  overload: System.Windows.Documents.TextElementCollection`1.InsertBefore*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Raised when *newItem* already belongs to a collection.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Raised when *nextSibling* or *newItem* is **null**.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Raised when *nextSibling* does not belong to this collection.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: TextElementCollection<TextElementType>.IsReadOnly
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets a value that indicates whether or not the collection is read-only.
  remarks: Currently, this property always returns **false**.
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '**true** if the collection is read-only; otherwise, **false**.'
  overload: System.Windows.Documents.TextElementCollection`1.IsReadOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.Remove(`0)
  id: Remove(`0)
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: Remove(TextElementType)
  nameWithType: TextElementCollection<TextElementType>.Remove(TextElementType)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Remove(TextElementType)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Removes a specified item from the collection.
  remarks: This method returns **false** if *item* is **null**.
  syntax:
    content: public bool Remove (TextElementType item);
    parameters:
    - id: item
      type: TextElementType
      description: An item to be removed fro the collection.
    return:
      type: System.Boolean
      description: '**true** if the specified item was found and removed; otherwise, **false**.'
  overload: System.Windows.Documents.TextElementCollection`1.Remove*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: ICollection.CopyTo(Array,Int32)
  nameWithType: TextElementCollection<TextElementType>.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Copies the elements of the <xref href="System.Collections.ICollection"></xref> to an <xref href="System.Array"></xref>, starting at a particular <xref href="System.Array"></xref> index..  Use the type-safe <xref href="stem.Windows.Documents.TextElementCollection%601.CopyTo%2A"></xref> method instead.
  syntax:
    content: void ICollection.CopyTo (Array array, int arrayIndex);
    parameters:
    - id: array
      type: System.Array
      description: The one-dimensional <xref href="System.Array"></xref> that is the destination of the elements copied from <xref href="System.Collections.ICollection"></xref>. The <xref href="System.Array"></xref> must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in <code>array</code> at which copying begins.
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: ICollection.Count
  nameWithType: TextElementCollection<TextElementType>.ICollection.Count
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.ICollection.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets the number of elements contained in the <xref href="System.Collections.ICollection"></xref>.  Use the type-safe <xref href="stem.Windows.Documents.TextElementCollection%601.Count%2A"></xref> property instead.
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="System.Collections.ICollection"></xref>.
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: ICollection.IsSynchronized
  nameWithType: TextElementCollection<TextElementType>.ICollection.IsSynchronized
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.ICollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets a value indicating whether access to the <xref href="System.Collections.ICollection"></xref> is synchronized (thread safe).
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: '`true` if access to the <xref href="System.Collections.ICollection"></xref> is synchronized (thread safe); otherwise, `false`.'
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: ICollection.SyncRoot
  nameWithType: TextElementCollection<TextElementType>.ICollection.SyncRoot
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.ICollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets an object that can be used to synchronize access to the <xref href="System.Collections.ICollection"></xref>.
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the <xref href="System.Collections.ICollection"></xref>.
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IEnumerable.GetEnumerator()
  nameWithType: TextElementCollection<TextElementType>.IEnumerable.GetEnumerator()
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Returns an enumerator that iterates through a collection.  Use the type-safe <xref href="stem.Windows.Documents.TextElementCollection%601.GetEnumerator%2A"></xref> method instead.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator"></xref> object that can be used to iterate through the collection.
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IList.Add(Object)
  nameWithType: TextElementCollection<TextElementType>.IList.Add(Object)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Add(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Adds an item to the <xref href="System.Collections.IList"></xref>.  Use the type-safe <xref href="stem.Windows.Documents.TextElementCollection%601.Add%2A"></xref> method instead.
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to add to the <xref href="System.Collections.IList"></xref>.
    return:
      type: System.Int32
      description: The position into which the new element was inserted.
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IList.Clear()
  nameWithType: TextElementCollection<TextElementType>.IList.Clear()
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](~/add/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.  Use the type-safe <xref href="stem.Windows.Documents.TextElementCollection%601.Clear%2A"></xref> method instead.
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IList.Contains(Object)
  nameWithType: TextElementCollection<TextElementType>.IList.Contains(Object)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Determines whether the <xref href="System.Collections.IList"></xref> contains a specific value..  Use the type-safe <xref href="stem.Windows.Documents.TextElementCollection%601.Contains%2A"></xref> method instead.
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to locate in the <xref href="System.Collections.IList"></xref>.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Object"></xref> is found in the <xref href="System.Collections.IList"></xref>; otherwise, `false`.'
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IList.IndexOf(Object)
  nameWithType: TextElementCollection<TextElementType>.IList.IndexOf(Object)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Determines the index of a specific item in the <xref href="System.Collections.IList"></xref>.
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to locate in the <xref href="System.Collections.IList"></xref>.
    return:
      type: System.Int32
      description: The index of <code>value</code> if found in the list; otherwise, -1.
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IList.Insert(Int32,Object)
  nameWithType: TextElementCollection<TextElementType>.IList.Insert(Int32,Object)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Inserts an item to the <xref href="System.Collections.IList"></xref> at the specified index.  Use the type-safe <xref href="stem.Windows.Documents.TextElementCollection%601.InsertAfter%2A"></xref> or <xref href="stem.Windows.Documents.TextElementCollection%601.InsertBefore%2A"></xref> methods instead.
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which <code>value</code> should be inserted.
    - id: value
      type: System.Object
      description: The object to insert into the <xref href="System.Collections.IList"></xref>.
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IList.IsFixedSize
  nameWithType: TextElementCollection<TextElementType>.IList.IsFixedSize
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets a value indicating whether the <xref href="System.Collections.IList"></xref> has a fixed size.
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Collections.IList"></xref> has a fixed size; otherwise, `false`.'
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IList.IsReadOnly
  nameWithType: TextElementCollection<TextElementType>.IList.IsReadOnly
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets a value indicating whether the <xref href="System.Collections.IList"></xref> is read-only.
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Collections.IList"></xref> is read-only; otherwise, `false`.'
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IList.Item(Int32)
  nameWithType: TextElementCollection<TextElementType>.IList.Item(Int32)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets or sets the element at the specified index.
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: System.Object
      description: The element at the specified index.
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IList.Remove(Object)
  nameWithType: TextElementCollection<TextElementType>.IList.Remove(Object)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Removes the first occurrence of a specific object from the <xref href="System.Collections.IList"></xref>.  Use the type-safe <xref href="stem.Windows.Documents.TextElementCollection%601.Remove%2A"></xref> method instead.
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to remove from the <xref href="System.Collections.IList"></xref>.
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Windows.Documents.TextElementCollection`1
  langs:
  - csharp
  name: IList.RemoveAt(Int32)
  nameWithType: TextElementCollection<TextElementType>.IList.RemoveAt(Int32)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Removes the <xref href="System.Collections.IList"></xref> item at the specified index.
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove.
  overload: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Documents\TextElementCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Documents/TextElementCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Windows.Documents.TextElementCollection`1.Add(`0)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: Add(TextElementType)
  nameWithType: TextElementCollection<TextElementType>.Add(TextElementType)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Add(TextElementType)
- uid: TextElementType
  isExternal: true
  name: TextElementType
  nameWithType: TextElementType
  fullName: TextElementType
- uid: System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: AddRange(IEnumerable)
  nameWithType: TextElementCollection<TextElementType>.AddRange(IEnumerable)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.AddRange(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Windows.Documents.TextElementCollection`1.Clear
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: Clear()
  nameWithType: TextElementCollection<TextElementType>.Clear()
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Clear()
- uid: System.Windows.Documents.TextElementCollection`1.Contains(`0)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: Contains(TextElementType)
  nameWithType: TextElementCollection<TextElementType>.Contains(TextElementType)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Contains(TextElementType)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: CopyTo(TextElementType[],Int32)
  nameWithType: TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.CopyTo(TextElementType[],Int32)
- uid: TextElementType[]
  isExternal: true
  name: TextElementType[]
  nameWithType: TextElementType[]
  fullName: TextElementType[]
  spec.csharp:
  - uid: TextElementType
    name: TextElementType
    nameWithType: TextElementType
    fullName: TextElementType[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TextElementCollection`1.Count
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: Count
  nameWithType: TextElementCollection<TextElementType>.Count
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Count
- uid: System.Windows.Documents.TextElementCollection`1.GetEnumerator
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: TextElementCollection<TextElementType>.GetEnumerator()
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{TextElementType}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<TextElementType>
  nameWithType: IEnumerator<TextElementType>
  fullName: System.Collections.Generic.IEnumerator<TextElementType>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<TextElementType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TextElementType
    name: TextElementType
    nameWithType: TextElementType
    fullName: TextElementType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: InsertAfter(TextElementType,TextElementType)
  nameWithType: TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertAfter(TextElementType,TextElementType)
- uid: System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: InsertBefore(TextElementType,TextElementType)
  nameWithType: TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.InsertBefore(TextElementType,TextElementType)
- uid: System.Windows.Documents.TextElementCollection`1.IsReadOnly
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IsReadOnly
  nameWithType: TextElementCollection<TextElementType>.IsReadOnly
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IsReadOnly
- uid: System.Windows.Documents.TextElementCollection`1.Remove(`0)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: Remove(TextElementType)
  nameWithType: TextElementCollection<TextElementType>.Remove(TextElementType)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.Remove(TextElementType)
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: ICollection.CopyTo(Array,Int32)
  nameWithType: TextElementCollection<TextElementType>.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: ICollection.Count
  nameWithType: TextElementCollection<TextElementType>.ICollection.Count
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.ICollection.Count
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: TextElementCollection<TextElementType>.ICollection.IsSynchronized
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.ICollection.IsSynchronized
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: TextElementCollection<TextElementType>.ICollection.SyncRoot
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.ICollection.SyncRoot
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: TextElementCollection<TextElementType>.IEnumerable.GetEnumerator()
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IList.Add(Object)
  nameWithType: TextElementCollection<TextElementType>.IList.Add(Object)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Add(Object)
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IList.Clear()
  nameWithType: TextElementCollection<TextElementType>.IList.Clear()
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Clear()
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IList.Contains(Object)
  nameWithType: TextElementCollection<TextElementType>.IList.Contains(Object)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Contains(Object)
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IList.IndexOf(Object)
  nameWithType: TextElementCollection<TextElementType>.IList.IndexOf(Object)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.IndexOf(Object)
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IList.Insert(Int32,Object)
  nameWithType: TextElementCollection<TextElementType>.IList.Insert(Int32,Object)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Insert(Int32,Object)
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IList.IsFixedSize
  nameWithType: TextElementCollection<TextElementType>.IList.IsFixedSize
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.IsFixedSize
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IList.IsReadOnly
  nameWithType: TextElementCollection<TextElementType>.IList.IsReadOnly
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.IsReadOnly
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IList.Item(Int32)
  nameWithType: TextElementCollection<TextElementType>.IList.Item(Int32)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Item(Int32)
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IList.Remove(Object)
  nameWithType: TextElementCollection<TextElementType>.IList.Remove(Object)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.Remove(Object)
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IList.RemoveAt(Int32)
  nameWithType: TextElementCollection<TextElementType>.IList.RemoveAt(Int32)
  fullName: System.Windows.Documents.TextElementCollection<TextElementType>.IList.RemoveAt(Int32)
- uid: System.Windows.Documents.TextElementCollection`1.Add*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: Add
  nameWithType: TextElementCollection<TextElementType>.Add
- uid: System.Windows.Documents.TextElementCollection`1.AddRange*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: AddRange
  nameWithType: TextElementCollection<TextElementType>.AddRange
- uid: System.Windows.Documents.TextElementCollection`1.Clear*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: Clear
  nameWithType: TextElementCollection<TextElementType>.Clear
- uid: System.Windows.Documents.TextElementCollection`1.Contains*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: Contains
  nameWithType: TextElementCollection<TextElementType>.Contains
- uid: System.Windows.Documents.TextElementCollection`1.CopyTo*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: CopyTo
  nameWithType: TextElementCollection<TextElementType>.CopyTo
- uid: System.Windows.Documents.TextElementCollection`1.Count*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: Count
  nameWithType: TextElementCollection<TextElementType>.Count
- uid: System.Windows.Documents.TextElementCollection`1.GetEnumerator*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: GetEnumerator
  nameWithType: TextElementCollection<TextElementType>.GetEnumerator
- uid: System.Windows.Documents.TextElementCollection`1.InsertAfter*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: InsertAfter
  nameWithType: TextElementCollection<TextElementType>.InsertAfter
- uid: System.Windows.Documents.TextElementCollection`1.InsertBefore*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: InsertBefore
  nameWithType: TextElementCollection<TextElementType>.InsertBefore
- uid: System.Windows.Documents.TextElementCollection`1.IsReadOnly*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: IsReadOnly
  nameWithType: TextElementCollection<TextElementType>.IsReadOnly
- uid: System.Windows.Documents.TextElementCollection`1.Remove*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: Remove
  nameWithType: TextElementCollection<TextElementType>.Remove
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#CopyTo*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.CopyTo
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#Count*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.Count
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TextElementCollection<TextElementType>.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Add*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Add
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Clear*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Clear
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Contains*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Contains
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IndexOf*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IndexOf
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Insert*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Insert
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsFixedSize
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#IsReadOnly*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.IsReadOnly
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Item*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Item
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#Remove*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.Remove
- uid: System.Windows.Documents.TextElementCollection`1.System#Collections#IList#RemoveAt*
  parent: System.Windows.Documents.TextElementCollection`1
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: TextElementCollection<TextElementType>.System.Collections.IList.RemoveAt
