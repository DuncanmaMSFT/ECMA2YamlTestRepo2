### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.SocketType
  id: SocketType
  children:
  - System.Net.Sockets.SocketType.Dgram
  - System.Net.Sockets.SocketType.Raw
  - System.Net.Sockets.SocketType.Rdm
  - System.Net.Sockets.SocketType.Seqpacket
  - System.Net.Sockets.SocketType.Stream
  - System.Net.Sockets.SocketType.Unknown
  langs:
  - csharp
  name: SocketType
  nameWithType: SocketType
  fullName: System.Net.Sockets.SocketType
  type: Enum
  summary: Specifies the type of socket that an instance of the <xref href="System.Net.Sockets.Socket"></xref> class represents.
  remarks: "Before a <xref:System.Net.Sockets.Socket> can send and receive data, it must first be created using an <xref:System.Net.Sockets.AddressFamily>, a SocketType, and a <xref:System.Net.Sockets.ProtocolType>. The SocketType enumeration provides several options for defining the type of <xref:System.Net.Sockets.Socket> that you intend to open.  \n  \n> [!NOTE]\n>  SocketType will sometimes implicitly indicate which <xref:System.Net.Sockets.ProtocolType> will be used within an <xref:System.Net.Sockets.AddressFamily>. For example when the SocketType is Dgram, the <xref:System.Net.Sockets.ProtocolType> is always <xref:System.Net.Sockets.ProtocolType>.When the SocketType is Stream, the <xref:System.Net.Sockets.ProtocolType> is always <xref:System.Net.Sockets.ProtocolType>. If you try to create a <xref:System.Net.Sockets.Socket> with an incompatible combination, <xref:System.Net.Sockets.Socket> will throw a <xref:System.Net.Sockets.SocketException>."
  example:
  - "The following example uses the Stream enumerated member as a parameter to the <xref:System.Net.Sockets.Socket> constructor.  \n  \n [!code-cs[SelectModeExample#1](~/add/codesnippet/csharp/t-system.net.sockets.soc_4_1.cs)]\n [!code-cpp[SelectModeExample#1](~/add/codesnippet/cpp/t-system.net.sockets.soc_4_1.cpp)]\n [!code-vb[SelectModeExample#1](~/add/codesnippet/visualbasic/t-system.net.sockets.soc_4_1.vb)]"
  syntax:
    content: public enum SocketType
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.Sockets\SocketType.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.Sockets/SocketType.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.Sockets.SocketType.Dgram
  id: Dgram
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  name: Dgram
  nameWithType: SocketType.Dgram
  fullName: System.Net.Sockets.SocketType.Dgram
  type: Field
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length. Messages might be lost or duplicated and might arrive out of order. A <xref href="System.Net.Sockets.Socket"></xref> of type Dgram requires no connection prior to sending and receiving data, and can communicate with multiple peers. Dgram uses the Datagram Protocol (<xref href="stem.Net.Sockets.ProtocolType.Udp"></xref>) and the <xref href="stem.Net.Sockets.AddressFamily.InterNetwork"></xref><xref href="System.Net.Sockets.AddressFamily"></xref>.
  syntax:
    content: Dgram
    return:
      type: System.Net.Sockets.SocketType
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.Sockets\SocketType.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.Sockets/SocketType.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.Sockets.SocketType.Raw
  id: Raw
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  name: Raw
  nameWithType: SocketType.Raw
  fullName: System.Net.Sockets.SocketType.Raw
  type: Field
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Supports access to the underlying transport protocol. Using the SocketTypeRaw, you can communicate using protocols like Internet Control Message Protocol (<xref href="stem.Net.Sockets.ProtocolType.Icmp"></xref>) and Internet Group Management Protocol (<xref href="stem.Net.Sockets.ProtocolType.Igmp"></xref>). Your application must provide a complete IP header when sending. Received datagrams return with the IP header and options intact.
  syntax:
    content: Raw
    return:
      type: System.Net.Sockets.SocketType
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.Sockets\SocketType.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.Sockets/SocketType.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.Sockets.SocketType.Rdm
  id: Rdm
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  name: Rdm
  nameWithType: SocketType.Rdm
  fullName: System.Net.Sockets.SocketType.Rdm
  type: Field
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data. Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order. Furthermore, the sender is notified if messages are lost. If you initialize a `Socket` using Rdm, you do not require a remote host connection before sending and receiving data. With Rdm, you can communicate with multiple peers.
  syntax:
    content: Rdm
    return:
      type: System.Net.Sockets.SocketType
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.Sockets\SocketType.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.Sockets/SocketType.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.Sockets.SocketType.Seqpacket
  id: Seqpacket
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  name: Seqpacket
  nameWithType: SocketType.Seqpacket
  fullName: System.Net.Sockets.SocketType.Seqpacket
  type: Field
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network. Seqpacket does not duplicate data, and it preserves boundaries within the data stream. A `Socket` of type Seqpacket communicates with a single peer and requires a remote host connection before communication can begin.
  syntax:
    content: Seqpacket
    return:
      type: System.Net.Sockets.SocketType
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.Sockets\SocketType.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.Sockets/SocketType.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.Sockets.SocketType.Stream
  id: Stream
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  name: Stream
  nameWithType: SocketType.Stream
  fullName: System.Net.Sockets.SocketType.Stream
  type: Field
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries. A `Socket` of this type communicates with a single peer and requires a remote host connection before communication can begin. Stream uses the Transmission Control Protocol (<xref href="System.Net.Sockets.ProtocolType"></xref>) <xref href="System.Net.Sockets.ProtocolType"></xref> and the `InterNetwork`<xref href="System.Net.Sockets.AddressFamily"></xref>.
  syntax:
    content: Stream
    return:
      type: System.Net.Sockets.SocketType
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.Sockets\SocketType.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.Sockets/SocketType.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.Sockets.SocketType.Unknown
  id: Unknown
  parent: System.Net.Sockets.SocketType
  langs:
  - csharp
  name: Unknown
  nameWithType: SocketType.Unknown
  fullName: System.Net.Sockets.SocketType.Unknown
  type: Field
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Specifies an unknown `Socket` type.
  syntax:
    content: Unknown
    return:
      type: System.Net.Sockets.SocketType
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.Sockets\SocketType.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.Sockets/SocketType.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Net.Sockets.SocketType.Dgram
  parent: System.Net.Sockets.SocketType
  isExternal: false
  name: Dgram
  nameWithType: SocketType.Dgram
  fullName: System.Net.Sockets.SocketType.Dgram
- uid: System.Net.Sockets.SocketType
  parent: System.Net.Sockets
  isExternal: false
  name: SocketType
  nameWithType: SocketType
  fullName: System.Net.Sockets.SocketType
- uid: System.Net.Sockets.SocketType.Raw
  parent: System.Net.Sockets.SocketType
  isExternal: false
  name: Raw
  nameWithType: SocketType.Raw
  fullName: System.Net.Sockets.SocketType.Raw
- uid: System.Net.Sockets.SocketType.Rdm
  parent: System.Net.Sockets.SocketType
  isExternal: false
  name: Rdm
  nameWithType: SocketType.Rdm
  fullName: System.Net.Sockets.SocketType.Rdm
- uid: System.Net.Sockets.SocketType.Seqpacket
  parent: System.Net.Sockets.SocketType
  isExternal: false
  name: Seqpacket
  nameWithType: SocketType.Seqpacket
  fullName: System.Net.Sockets.SocketType.Seqpacket
- uid: System.Net.Sockets.SocketType.Stream
  parent: System.Net.Sockets.SocketType
  isExternal: false
  name: Stream
  nameWithType: SocketType.Stream
  fullName: System.Net.Sockets.SocketType.Stream
- uid: System.Net.Sockets.SocketType.Unknown
  parent: System.Net.Sockets.SocketType
  isExternal: false
  name: Unknown
  nameWithType: SocketType.Unknown
  fullName: System.Net.Sockets.SocketType.Unknown
