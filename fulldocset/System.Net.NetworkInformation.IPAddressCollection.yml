### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.IPAddressCollection
  id: IPAddressCollection
  children:
  - System.Net.NetworkInformation.IPAddressCollection.#ctor
  - System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)
  - System.Net.NetworkInformation.IPAddressCollection.Clear
  - System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)
  - System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)
  - System.Net.NetworkInformation.IPAddressCollection.Count
  - System.Net.NetworkInformation.IPAddressCollection.GetEnumerator
  - System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  - System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)
  - System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)
  - System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: IPAddressCollection
  nameWithType: IPAddressCollection
  fullName: System.Net.NetworkInformation.IPAddressCollection
  type: Class
  summary: Stores a set of <xref href="System.Net.IPAddress"></xref> types.
  syntax:
    content: 'public class IPAddressCollection : System.Collections.Generic.ICollection<System.Net.IPAddress>, System.Collections.Generic.IEnumerable<System.Net.IPAddress>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Net.IPAddress>
  - System.Collections.Generic.IEnumerable<System.Net.IPAddress>
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: IPAddressCollection()
  nameWithType: IPAddressCollection.IPAddressCollection()
  fullName: System.Net.NetworkInformation.IPAddressCollection.IPAddressCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.IPAddressCollection"></xref> class.
  syntax:
    content: protected IPAddressCollection ();
    parameters: []
  overload: System.Net.NetworkInformation.IPAddressCollection.#ctor*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)
  id: Add(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: Add(IPAddress)
  nameWithType: IPAddressCollection.Add(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Add(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Throws a <xref href="System.NotSupportedException"></xref> because this operation is not supported for this collection.
  syntax:
    content: public virtual void Add (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: To be added.
  overload: System.Net.NetworkInformation.IPAddressCollection.Add*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.Clear
  id: Clear
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: IPAddressCollection.Clear()
  fullName: System.Net.NetworkInformation.IPAddressCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Throws a <xref href="System.NotSupportedException"></xref> because this operation is not supported for this collection.
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Net.NetworkInformation.IPAddressCollection.Clear*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)
  id: Contains(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: Contains(IPAddress)
  nameWithType: IPAddressCollection.Contains(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Contains(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Checks whether the collection contains the specified <xref href="System.Net.IPAddress"></xref> object.
  syntax:
    content: public virtual bool Contains (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Net.NetworkInformation.IPAddressCollection.Contains*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)
  id: CopyTo(System.Net.IPAddress[],System.Int32)
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: CopyTo(IPAddress[],Int32)
  nameWithType: IPAddressCollection.CopyTo(IPAddress[],Int32)
  fullName: System.Net.NetworkInformation.IPAddressCollection.CopyTo(IPAddress[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Copies the elements in this collection to a one-dimensional array of type <xref href="System.Net.IPAddress"></xref>.
  syntax:
    content: public virtual void CopyTo (System.Net.IPAddress[] array, int offset);
    parameters:
    - id: array
      type: System.Net.IPAddress[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
  overload: System.Net.NetworkInformation.IPAddressCollection.CopyTo*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.Count
  id: Count
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: Count
  nameWithType: IPAddressCollection.Count
  fullName: System.Net.NetworkInformation.IPAddressCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the number of <xref href="System.Net.IPAddress"></xref> types in this collection.
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Net.NetworkInformation.IPAddressCollection.Count*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IPAddressCollection.GetEnumerator()
  fullName: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Returns an object that can be used to iterate through this collection.
  syntax:
    content: public virtual System.Collections.Generic.IEnumerator<System.Net.IPAddress> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Net.IPAddress}
      description: To be added.
  overload: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IPAddressCollection.IsReadOnly
  fullName: System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets a value that indicates whether access to this collection is read-only.
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Net.NetworkInformation.IPAddressCollection.IsReadOnly*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IPAddressCollection.Item(Int32)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the <xref href="System.Net.IPAddress"></xref> at the specific index of the collection.
  syntax:
    content: public virtual System.Net.IPAddress this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    return:
      type: System.Net.IPAddress
      description: To be added.
  overload: System.Net.NetworkInformation.IPAddressCollection.Item*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)
  id: Remove(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: Remove(IPAddress)
  nameWithType: IPAddressCollection.Remove(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Remove(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Throws a <xref href="System.NotSupportedException"></xref> because this operation is not supported for this collection.
  syntax:
    content: public virtual bool Remove (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Net.NetworkInformation.IPAddressCollection.Remove*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.NetworkInformation.IPAddressCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: IPAddressCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.NetworkInformation.IPAddressCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Returns an object that can be used to iterate through this collection.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: To be added.
  overload: System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.NetworkInformation.IPAddressCollection.#ctor
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: IPAddressCollection()
  nameWithType: IPAddressCollection.IPAddressCollection()
  fullName: System.Net.NetworkInformation.IPAddressCollection.IPAddressCollection()
- uid: System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Add(IPAddress)
  nameWithType: IPAddressCollection.Add(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Add(IPAddress)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.IPAddressCollection.Clear
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Clear()
  nameWithType: IPAddressCollection.Clear()
  fullName: System.Net.NetworkInformation.IPAddressCollection.Clear()
- uid: System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Contains(IPAddress)
  nameWithType: IPAddressCollection.Contains(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Contains(IPAddress)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: CopyTo(IPAddress[],Int32)
  nameWithType: IPAddressCollection.CopyTo(IPAddress[],Int32)
  fullName: System.Net.NetworkInformation.IPAddressCollection.CopyTo(IPAddress[],Int32)
- uid: System.Net.IPAddress[]
  parent: System.Net
  isExternal: false
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress[]
  spec.csharp:
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: IPAddress[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.IPAddressCollection.Count
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Count
  nameWithType: IPAddressCollection.Count
  fullName: System.Net.NetworkInformation.IPAddressCollection.Count
- uid: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: IPAddressCollection.GetEnumerator()
  fullName: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Net.IPAddress}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<IPAddress>
  nameWithType: IEnumerator<IPAddress>
  fullName: System.Collections.Generic.IEnumerator<System.Net.IPAddress>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Net.IPAddress>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.IPAddress
    name: IPAddress
    nameWithType: IPAddress
    fullName: IPAddress
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: IPAddressCollection.IsReadOnly
  fullName: System.Net.NetworkInformation.IPAddressCollection.IsReadOnly
- uid: System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: IPAddressCollection.Item(Int32)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Item(Int32)
- uid: System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Remove(IPAddress)
  nameWithType: IPAddressCollection.Remove(IPAddress)
  fullName: System.Net.NetworkInformation.IPAddressCollection.Remove(IPAddress)
- uid: System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: IPAddressCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.NetworkInformation.IPAddressCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.NetworkInformation.IPAddressCollection.#ctor*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: IPAddressCollection
  nameWithType: IPAddressCollection.IPAddressCollection
- uid: System.Net.NetworkInformation.IPAddressCollection.Add*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Add
  nameWithType: IPAddressCollection.Add
- uid: System.Net.NetworkInformation.IPAddressCollection.Clear*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Clear
  nameWithType: IPAddressCollection.Clear
- uid: System.Net.NetworkInformation.IPAddressCollection.Contains*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Contains
  nameWithType: IPAddressCollection.Contains
- uid: System.Net.NetworkInformation.IPAddressCollection.CopyTo*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: CopyTo
  nameWithType: IPAddressCollection.CopyTo
- uid: System.Net.NetworkInformation.IPAddressCollection.Count*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Count
  nameWithType: IPAddressCollection.Count
- uid: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: IPAddressCollection.GetEnumerator
- uid: System.Net.NetworkInformation.IPAddressCollection.IsReadOnly*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: IPAddressCollection.IsReadOnly
- uid: System.Net.NetworkInformation.IPAddressCollection.Item*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Item
  nameWithType: IPAddressCollection.Item
- uid: System.Net.NetworkInformation.IPAddressCollection.Remove*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: Remove
  nameWithType: IPAddressCollection.Remove
- uid: System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.NetworkInformation.IPAddressCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: IPAddressCollection.System.Collections.IEnumerable.GetEnumerator
