### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.Dictionary`2
  id: Dictionary`2
  children:
  - System.Collections.Generic.Dictionary`2.#ctor
  - System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  - System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.Dictionary`2.#ctor(System.Int32)
  - System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Generic.Dictionary`2.Add(`0,`1)
  - System.Collections.Generic.Dictionary`2.Clear
  - System.Collections.Generic.Dictionary`2.Comparer
  - System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  - System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  - System.Collections.Generic.Dictionary`2.Count
  - System.Collections.Generic.Dictionary`2.GetEnumerator
  - System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Generic.Dictionary`2.Item(`0)
  - System.Collections.Generic.Dictionary`2.Keys
  - System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  - System.Collections.Generic.Dictionary`2.Remove(`0)
  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  - System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  - System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  - System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  - System.Collections.Generic.Dictionary`2.Values
  langs:
  - csharp
  name: Dictionary<TKey,TValue>
  nameWithType: Dictionary<TKey,TValue>
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>
  type: Class
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryDebugView`2))]

      [System.Runtime.InteropServices.ComVisible(false)]

      public class Dictionary<TKey,TValue> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IDictionary<TKey,TValue>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
    typeParameters:
    - id: TKey
      description: To be added.
    - id: TValue
      description: To be added.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  - System.Collections.Generic.IDictionary<TKey,TValue>
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  - System.Collections.IDictionary
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Dictionary<TKey,TValue>()
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public Dictionary ();
    parameters: []
  overload: System.Collections.Generic.Dictionary`2.#ctor*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Dictionary<TKey,TValue>(IDictionary<TKey,TValue>)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IDictionary<TKey,TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IDictionary<TKey,TValue>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public Dictionary (System.Collections.Generic.IDictionary<TKey,TValue> dictionary);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary`2
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.#ctor*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Dictionary<TKey,TValue>(IEqualityComparer<TKey>)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IEqualityComparer<TKey>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IEqualityComparer<TKey>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public Dictionary (System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.#ctor*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Dictionary<TKey,TValue>(Int32)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(Int32)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public Dictionary (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.#ctor*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Dictionary<TKey,TValue>(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public Dictionary (System.Collections.Generic.IDictionary<TKey,TValue> dictionary, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary`2
      description: To be added.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.#ctor*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Dictionary<TKey,TValue>(Int32,IEqualityComparer<TKey>)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(Int32,IEqualityComparer<TKey>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(Int32,IEqualityComparer<TKey>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public Dictionary (int capacity, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: capacity
      type: System.Int32
      description: To be added.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.#ctor*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Dictionary<TKey,TValue>(SerializationInfo,StreamingContext)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(SerializationInfo,StreamingContext)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: protected Dictionary (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.#ctor*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Add(TKey,TValue)
  nameWithType: Dictionary<TKey,TValue>.Add(TKey,TValue)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Add(TKey,TValue)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Add (TKey key, TValue value);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.Add*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.Clear
  id: Clear
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Clear()
  nameWithType: Dictionary<TKey,TValue>.Clear()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.Generic.Dictionary`2.Clear*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.Comparer
  id: Comparer
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Comparer
  nameWithType: Dictionary<TKey,TValue>.Comparer
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Comparer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public System.Collections.Generic.IEqualityComparer<TKey> Comparer { get; }
    return:
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.Comparer*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: ContainsKey(TKey)
  nameWithType: Dictionary<TKey,TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ContainsKey(TKey)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool ContainsKey (TKey key);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.ContainsKey*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  id: ContainsValue(`1)
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: ContainsValue(TValue)
  nameWithType: Dictionary<TKey,TValue>.ContainsValue(TValue)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ContainsValue(TValue)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool ContainsValue (TValue value);
    parameters:
    - id: value
      type: TValue
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.ContainsValue*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.Count
  id: Count
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Count
  nameWithType: Dictionary<TKey,TValue>.Count
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.Count*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Dictionary<TKey,TValue>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public System.Collections.Generic.Dictionary<TKey,TValue>.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary`2.Enumerator
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.GetEnumerator*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Dictionary<TKey,TValue>.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.GetObjectData*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Item(TKey)
  nameWithType: Dictionary<TKey,TValue>.Item(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Item(TKey)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public TValue this[TKey key] { get; set; }
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: TValue
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.Item*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.Keys
  id: Keys
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Keys
  nameWithType: Dictionary<TKey,TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public System.Collections.Generic.Dictionary<TKey,TValue>.KeyCollection Keys { get; }
    return:
      type: System.Collections.Generic.Dictionary`2.KeyCollection
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.Keys*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  id: OnDeserialization(System.Object)
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: OnDeserialization(Object)
  nameWithType: Dictionary<TKey,TValue>.OnDeserialization(Object)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.OnDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public virtual void OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.OnDeserialization*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Remove(TKey)
  nameWithType: Dictionary<TKey,TValue>.Remove(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Remove(TKey)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool Remove (TKey key);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.Remove*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
  nameWithType: Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection<KeyValuePair<TKey,TValue>>.Add (System.Collections.Generic.KeyValuePair<TKey,TValue> keyValuePair);
    parameters:
    - id: keyValuePair
      type: System.Collections.Generic.KeyValuePair`2
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#Add*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: ICollection<KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey,TValue>)
  nameWithType: Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey,TValue>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool ICollection<KeyValuePair<TKey,TValue>>.Contains (System.Collections.Generic.KeyValuePair<TKey,TValue> keyValuePair);
    parameters:
    - id: keyValuePair
      type: System.Collections.Generic.KeyValuePair`2
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#Contains*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[],Int32)
  nameWithType: Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[],Int32)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection<KeyValuePair<TKey,TValue>>.CopyTo (System.Collections.Generic.KeyValuePair<TKey,TValue>[] array, int index);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{TKey,TValue}[]
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#CopyTo*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
  nameWithType: Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#IsReadOnly*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
  nameWithType: Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool ICollection<KeyValuePair<TKey,TValue>>.Remove (System.Collections.Generic.KeyValuePair<TKey,TValue> keyValuePair);
    parameters:
    - id: keyValuePair
      type: System.Collections.Generic.KeyValuePair`2
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#Remove*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary<TKey,TValue>.Keys
  nameWithType: Dictionary<TKey,TValue>.IDictionary<TKey,TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary<TKey,TValue>.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.Generic.ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys { get; }
    return:
      type: System.Collections.Generic.ICollection{TKey}
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary<TKey,TValue>#Keys*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary<TKey,TValue>.Values
  nameWithType: Dictionary<TKey,TValue>.IDictionary<TKey,TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary<TKey,TValue>.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.Generic.ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values { get; }
    return:
      type: System.Collections.Generic.ICollection{TValue}
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary<TKey,TValue>#Values*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
  nameWithType: Dictionary<TKey,TValue>.IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>> IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{TKey,TValue}}
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<TKey,TValue>>#GetEnumerator*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: ICollection.CopyTo(Array,Int32)
  nameWithType: Dictionary<TKey,TValue>.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: ICollection.IsSynchronized
  nameWithType: Dictionary<TKey,TValue>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: ICollection.SyncRoot
  nameWithType: Dictionary<TKey,TValue>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary.Add(Object,Object)
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Add(Object,Object)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    - id: value
      type: System.Object
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary.Contains(Object)
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Contains(Object)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary.GetEnumerator()
  nameWithType: Dictionary<TKey,TValue>.IDictionary.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary.IsFixedSize
  nameWithType: Dictionary<TKey,TValue>.IDictionary.IsFixedSize
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary.IsReadOnly
  nameWithType: Dictionary<TKey,TValue>.IDictionary.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary.Item(Object)
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Item(Object)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Item(Object)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary.Keys
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Keys
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary.Remove(Object)
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Remove(Object)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IDictionary.Values
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Values
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }
    return:
      type: System.Collections.ICollection
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: IEnumerable.GetEnumerator()
  nameWithType: Dictionary<TKey,TValue>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: TryGetValue(TKey,TValue)
  nameWithType: Dictionary<TKey,TValue>.TryGetValue(TKey,TValue)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.TryGetValue(TKey,TValue)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool TryGetValue (TKey key, out TValue value);
    parameters:
    - id: key
      type: TKey
      description: To be added.
    - id: value
      type: TValue
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.TryGetValue*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.Generic.Dictionary`2.Values
  id: Values
  parent: System.Collections.Generic.Dictionary`2
  langs:
  - csharp
  name: Values
  nameWithType: Dictionary<TKey,TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public System.Collections.Generic.Dictionary<TKey,TValue>.ValueCollection Values { get; }
    return:
      type: System.Collections.Generic.Dictionary`2.ValueCollection
      description: To be added.
  overload: System.Collections.Generic.Dictionary`2.Values*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Collections.Generic.Dictionary`2.#ctor
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Dictionary<TKey,TValue>()
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>()
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Dictionary<TKey,TValue>(IDictionary<TKey,TValue>)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IDictionary<TKey,TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IDictionary<TKey,TValue>)
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Dictionary<TKey,TValue>(IEqualityComparer<TKey>)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IEqualityComparer<TKey>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IEqualityComparer<TKey>)
- uid: System.Collections.Generic.IEqualityComparer{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<TKey>
  nameWithType: IEqualityComparer<TKey>
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: IEqualityComparer<TKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Int32)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Dictionary<TKey,TValue>(Int32)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(Int32)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Dictionary<TKey,TValue>(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(IDictionary<TKey,TValue>,IEqualityComparer<TKey>)
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Dictionary<TKey,TValue>(Int32,IEqualityComparer<TKey>)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(Int32,IEqualityComparer<TKey>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(Int32,IEqualityComparer<TKey>)
- uid: System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Dictionary<TKey,TValue>(SerializationInfo,StreamingContext)
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(SerializationInfo,StreamingContext)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Dictionary<TKey,TValue>(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Add(TKey,TValue)
  nameWithType: Dictionary<TKey,TValue>.Add(TKey,TValue)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Add(TKey,TValue)
- uid: TKey
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.Dictionary`2.Clear
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Clear()
  nameWithType: Dictionary<TKey,TValue>.Clear()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Clear()
- uid: System.Collections.Generic.Dictionary`2.Comparer
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Comparer
  nameWithType: Dictionary<TKey,TValue>.Comparer
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Comparer
- uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ContainsKey(TKey)
  nameWithType: Dictionary<TKey,TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ContainsKey(TKey)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ContainsValue(TValue)
  nameWithType: Dictionary<TKey,TValue>.ContainsValue(TValue)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ContainsValue(TValue)
- uid: System.Collections.Generic.Dictionary`2.Count
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Count
  nameWithType: Dictionary<TKey,TValue>.Count
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Count
- uid: System.Collections.Generic.Dictionary`2.GetEnumerator
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: GetEnumerator()
  nameWithType: Dictionary<TKey,TValue>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.GetEnumerator()
- uid: System.Collections.Generic.Dictionary`2.Enumerator
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<TKey,TValue>+Enumerator
  nameWithType: Dictionary<TKey,TValue>+Enumerator
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+Enumerator
- uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Dictionary<TKey,TValue>.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Collections.Generic.Dictionary`2.Item(`0)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Item(TKey)
  nameWithType: Dictionary<TKey,TValue>.Item(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Item(TKey)
- uid: System.Collections.Generic.Dictionary`2.Keys
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Keys
  nameWithType: Dictionary<TKey,TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary`2.KeyCollection
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<TKey,TValue>+KeyCollection
  nameWithType: Dictionary<TKey,TValue>+KeyCollection
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+KeyCollection
- uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: OnDeserialization(Object)
  nameWithType: Dictionary<TKey,TValue>.OnDeserialization(Object)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.OnDeserialization(Object)
- uid: System.Collections.Generic.Dictionary`2.Remove(`0)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Remove(TKey)
  nameWithType: Dictionary<TKey,TValue>.Remove(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Remove(TKey)
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
  nameWithType: Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Add(KeyValuePair<TKey,TValue>)
- uid: System.Collections.Generic.KeyValuePair`2
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ICollection<KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey,TValue>)
  nameWithType: Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Contains(KeyValuePair<TKey,TValue>)
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[],Int32)
  nameWithType: Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[],Int32)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair<TKey,TValue>[],Int32)
- uid: System.Collections.Generic.KeyValuePair{TKey,TValue}[]
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<TKey,TValue>[]
  nameWithType: KeyValuePair<TKey,TValue>[]
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<TKey,TValue>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
  nameWithType: Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
  nameWithType: Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection<KeyValuePair<TKey,TValue>>.Remove(KeyValuePair<TKey,TValue>)
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary<TKey,TValue>.Keys
  nameWithType: Dictionary<TKey,TValue>.IDictionary<TKey,TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.ICollection{TKey}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<TKey>
  nameWithType: ICollection<TKey>
  fullName: System.Collections.Generic.ICollection<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<TKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary<TKey,TValue>.Values
  nameWithType: Dictionary<TKey,TValue>.IDictionary<TKey,TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.ICollection{TValue}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<TValue>
  nameWithType: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<TValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
  nameWithType: Dictionary<TKey,TValue>.IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IEnumerable<KeyValuePair<TKey,TValue>>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{TKey,TValue}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<KeyValuePair<TKey,TValue>>
  nameWithType: IEnumerator<KeyValuePair<TKey,TValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<TKey,TValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue
    name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ICollection.CopyTo(Array,Int32)
  nameWithType: Dictionary<TKey,TValue>.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: Dictionary<TKey,TValue>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection.IsSynchronized
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: Dictionary<TKey,TValue>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.ICollection.SyncRoot
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary.Add(Object,Object)
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Add(Object,Object)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Add(Object,Object)
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary.Contains(Object)
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Contains(Object)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Contains(Object)
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary.GetEnumerator()
  nameWithType: Dictionary<TKey,TValue>.IDictionary.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary.IsFixedSize
  nameWithType: Dictionary<TKey,TValue>.IDictionary.IsFixedSize
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.IsFixedSize
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary.IsReadOnly
  nameWithType: Dictionary<TKey,TValue>.IDictionary.IsReadOnly
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.IsReadOnly
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary.Item(Object)
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Item(Object)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Item(Object)
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary.Keys
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Keys
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary.Remove(Object)
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Remove(Object)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Remove(Object)
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IDictionary.Values
  nameWithType: Dictionary<TKey,TValue>.IDictionary.Values
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IDictionary.Values
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: Dictionary<TKey,TValue>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: TryGetValue(TKey,TValue)
  nameWithType: Dictionary<TKey,TValue>.TryGetValue(TKey,TValue)
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.TryGetValue(TKey,TValue)
- uid: System.Collections.Generic.Dictionary`2.Values
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Values
  nameWithType: Dictionary<TKey,TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary`2.ValueCollection
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<TKey,TValue>+ValueCollection
  nameWithType: Dictionary<TKey,TValue>+ValueCollection
  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection
- uid: System.Collections.Generic.Dictionary`2.#ctor*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Dictionary<TKey,TValue>
  nameWithType: Dictionary<TKey,TValue>.Dictionary<TKey,TValue>
- uid: System.Collections.Generic.Dictionary`2.Add*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Add
  nameWithType: Dictionary<TKey,TValue>.Add
- uid: System.Collections.Generic.Dictionary`2.Clear*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Clear
  nameWithType: Dictionary<TKey,TValue>.Clear
- uid: System.Collections.Generic.Dictionary`2.Comparer*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Comparer
  nameWithType: Dictionary<TKey,TValue>.Comparer
- uid: System.Collections.Generic.Dictionary`2.ContainsKey*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ContainsKey
  nameWithType: Dictionary<TKey,TValue>.ContainsKey
- uid: System.Collections.Generic.Dictionary`2.ContainsValue*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: ContainsValue
  nameWithType: Dictionary<TKey,TValue>.ContainsValue
- uid: System.Collections.Generic.Dictionary`2.Count*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Count
  nameWithType: Dictionary<TKey,TValue>.Count
- uid: System.Collections.Generic.Dictionary`2.GetEnumerator*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: GetEnumerator
  nameWithType: Dictionary<TKey,TValue>.GetEnumerator
- uid: System.Collections.Generic.Dictionary`2.GetObjectData*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: GetObjectData
  nameWithType: Dictionary<TKey,TValue>.GetObjectData
- uid: System.Collections.Generic.Dictionary`2.Item*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Item
  nameWithType: Dictionary<TKey,TValue>.Item
- uid: System.Collections.Generic.Dictionary`2.Keys*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Keys
  nameWithType: Dictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary`2.OnDeserialization*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: OnDeserialization
  nameWithType: Dictionary<TKey,TValue>.OnDeserialization
- uid: System.Collections.Generic.Dictionary`2.Remove*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Remove
  nameWithType: Dictionary<TKey,TValue>.Remove
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#Add*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#Contains*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#CopyTo*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#IsReadOnly*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<TKey,TValue>>#Remove*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary<TKey,TValue>#Keys*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary<TKey,TValue>#Values*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.Generic.IDictionary<TKey,TValue>.Values
  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IDictionary<TKey,TValue>.Values
- uid: System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<TKey,TValue>>#GetEnumerator*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
  nameWithType: Dictionary<TKey,TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: Dictionary<TKey,TValue>.System.Collections.ICollection.CopyTo
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: Dictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: Dictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Add
  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Add
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Contains
  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Contains
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator
  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Item
  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Item
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Keys
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Remove
  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Remove
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: Dictionary<TKey,TValue>.System.Collections.IDictionary.Values
- uid: System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: Dictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Generic.Dictionary`2.TryGetValue*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: TryGetValue
  nameWithType: Dictionary<TKey,TValue>.TryGetValue
- uid: System.Collections.Generic.Dictionary`2.Values*
  parent: System.Collections.Generic.Dictionary`2
  isExternal: false
  name: Values
  nameWithType: Dictionary<TKey,TValue>.Values
