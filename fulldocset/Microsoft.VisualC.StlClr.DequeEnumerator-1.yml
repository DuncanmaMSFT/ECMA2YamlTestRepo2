### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1
  id: DequeEnumerator`1
  children:
  - Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)
  - Microsoft.VisualC.StlClr.DequeEnumerator`1.Current
  - Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose
  - Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)
  - Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext
  - Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset
  langs:
  - csharp
  name: DequeEnumerator<TValue>
  nameWithType: DequeEnumerator<TValue>
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>
  type: Class
  summary: Supports simple iteration over any STL/CLR object that implements the <xref href="crosoft.VisualC.StlClr.IDeque%601"></xref> interface.
  remarks: '[!INCLUDE[unnamed_parm](~/add/includes/unnamed-parm-md.md)]'
  syntax:
    content: 'public class DequeEnumerator<TValue> : Microsoft.VisualC.StlClr.DequeEnumeratorBase<TValue>, System.Collections.Generic.IEnumerator<TValue>'
    typeParameters:
    - id: TValue
      description: '[!INCLUDE[cpp_iter_arg](~/add/includes/cpp-iter-arg-md.md)]'
  inheritance:
  - System.Object
  - Microsoft.VisualC.StlClr.DequeEnumeratorBase`1
  implements:
  - System.Collections.Generic.IEnumerator<TValue>
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\Microsoft.VisualC.StlClr\DequeEnumerator`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/Microsoft.VisualC.StlClr/DequeEnumerator`1.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)
  id: '#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)'
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  langs:
  - csharp
  name: DequeEnumerator<TValue>(IDeque<TValue>,Int32)
  nameWithType: DequeEnumerator<TValue>.DequeEnumerator<TValue>(IDeque<TValue>,Int32)
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.DequeEnumerator<TValue>(IDeque<TValue>,Int32)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Allocates and initializes a new <xref href="crosoft.VisualC.StlClr.DequeEnumerator%601"></xref> object.
  syntax:
    content: public DequeEnumerator (Microsoft.VisualC.StlClr.IDeque<TValue> _Cont, int _First);
    parameters:
    - id: _Cont
      type: Microsoft.VisualC.StlClr.IDeque`1
      description: The container to iterate over.
    - id: _First
      type: System.Int32
      description: The offset of the current first element in the container.
  overload: Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\Microsoft.VisualC.StlClr\DequeEnumerator`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/Microsoft.VisualC.StlClr/DequeEnumerator`1.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Current
  id: Current
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  langs:
  - csharp
  name: Current
  nameWithType: DequeEnumerator<TValue>.Current
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.Current
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Gets or sets the current element in the collection.
  syntax:
    content: public virtual TValue Current { get; set; }
    return:
      type: TValue
      description: The current element in the collection.
  overload: Microsoft.VisualC.StlClr.DequeEnumerator`1.Current*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\Microsoft.VisualC.StlClr\DequeEnumerator`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/Microsoft.VisualC.StlClr/DequeEnumerator`1.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose
  id: Dispose
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  langs:
  - csharp
  name: Dispose()
  nameWithType: DequeEnumerator<TValue>.Dispose()
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.Dispose()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Frees, releases, or resets unmanaged resources that are used by the <xref href="crosoft.VisualC.StlClr.DequeEnumerator%601"></xref> object.
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\Microsoft.VisualC.StlClr\DequeEnumerator`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/Microsoft.VisualC.StlClr/DequeEnumerator`1.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DequeEnumerator<TValue>.Dispose(Boolean)
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Frees, releases, or resets unmanaged resources that are used by the <xref href="crosoft.VisualC.StlClr.DequeEnumerator%601"></xref> object.
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: ''
      type: System.Boolean
      description: To be added.
  overload: Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\Microsoft.VisualC.StlClr\DequeEnumerator`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/Microsoft.VisualC.StlClr/DequeEnumerator`1.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext
  id: MoveNext
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  langs:
  - csharp
  name: MoveNext()
  nameWithType: DequeEnumerator<TValue>.MoveNext()
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.MoveNext()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Advances the enumerator to the next element in the collection.
  syntax:
    content: public override bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.'
  overload: Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\Microsoft.VisualC.StlClr\DequeEnumerator`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/Microsoft.VisualC.StlClr/DequeEnumerator`1.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset
  id: Reset
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  langs:
  - csharp
  name: Reset()
  nameWithType: DequeEnumerator<TValue>.Reset()
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.Reset()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Sets the enumerator to its initial position, which is before the first element in the collection.
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\Microsoft.VisualC.StlClr\DequeEnumerator`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/Microsoft.VisualC.StlClr/DequeEnumerator`1.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: Microsoft.VisualC.StlClr.DequeEnumeratorBase`1
  isExternal: false
  name: Microsoft.VisualC.StlClr.DequeEnumeratorBase<TValue>
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: DequeEnumerator<TValue>(IDeque<TValue>,Int32)
  nameWithType: DequeEnumerator<TValue>.DequeEnumerator<TValue>(IDeque<TValue>,Int32)
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.DequeEnumerator<TValue>(IDeque<TValue>,Int32)
- uid: Microsoft.VisualC.StlClr.IDeque`1
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: IDeque<TValue>
  nameWithType: IDeque<TValue>
  fullName: Microsoft.VisualC.StlClr.IDeque<TValue>
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Current
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: Current
  nameWithType: DequeEnumerator<TValue>.Current
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.Current
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: Dispose()
  nameWithType: DequeEnumerator<TValue>.Dispose()
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.Dispose()
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DequeEnumerator<TValue>.Dispose(Boolean)
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: MoveNext()
  nameWithType: DequeEnumerator<TValue>.MoveNext()
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.MoveNext()
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: Reset()
  nameWithType: DequeEnumerator<TValue>.Reset()
  fullName: Microsoft.VisualC.StlClr.DequeEnumerator<TValue>.Reset()
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor*
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: DequeEnumerator<TValue>
  nameWithType: DequeEnumerator<TValue>.DequeEnumerator<TValue>
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Current*
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: Current
  nameWithType: DequeEnumerator<TValue>.Current
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose*
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: Dispose
  nameWithType: DequeEnumerator<TValue>.Dispose
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext*
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: MoveNext
  nameWithType: DequeEnumerator<TValue>.MoveNext
- uid: Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset*
  parent: Microsoft.VisualC.StlClr.DequeEnumerator`1
  isExternal: false
  name: Reset
  nameWithType: DequeEnumerator<TValue>.Reset
