### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector
  id: IClientMessageInspector
  children:
  - System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  - System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  langs:
  - csharp
  name: IClientMessageInspector
  nameWithType: IClientMessageInspector
  fullName: System.ServiceModel.Dispatcher.IClientMessageInspector
  type: Interface
  summary: Defines a message inspector object that can be added to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors*> collection to view or modify messages.
  syntax:
    content: public interface IClientMessageInspector
  implements: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  id: AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  langs:
  - csharp
  name: AfterReceiveReply(Message,Object)
  nameWithType: IClientMessageInspector.AfterReceiveReply(Message,Object)
  fullName: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(Message,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.
  syntax:
    content: public void AfterReceiveReply (ref System.ServiceModel.Channels.Message reply, object correlationState);
    parameters:
    - id: reply
      type: System.ServiceModel.Channels.Message
      description: To be added.
    - id: correlationState
      type: System.Object
      description: To be added.
  overload: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  id: BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  langs:
  - csharp
  name: BeforeSendRequest(Message,IClientChannel)
  nameWithType: IClientMessageInspector.BeforeSendRequest(Message,IClientChannel)
  fullName: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(Message,IClientChannel)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: Enables inspection or modification of a message before a request message is sent to a service.
  syntax:
    content: public object BeforeSendRequest (ref System.ServiceModel.Channels.Message request, System.ServiceModel.IClientChannel channel);
    parameters:
    - id: request
      type: System.ServiceModel.Channels.Message
      description: To be added.
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  isExternal: false
  name: AfterReceiveReply(Message,Object)
  nameWithType: IClientMessageInspector.AfterReceiveReply(Message,Object)
  fullName: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(Message,Object)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  isExternal: false
  name: BeforeSendRequest(Message,IClientChannel)
  nameWithType: IClientMessageInspector.BeforeSendRequest(Message,IClientChannel)
  fullName: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(Message,IClientChannel)
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: false
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply*
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  isExternal: false
  name: AfterReceiveReply
  nameWithType: IClientMessageInspector.AfterReceiveReply
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest*
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  isExternal: false
  name: BeforeSendRequest
  nameWithType: IClientMessageInspector.BeforeSendRequest
