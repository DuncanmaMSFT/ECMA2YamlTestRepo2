### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.NetworkInterface
  id: NetworkInterface
  children:
  - System.Net.NetworkInformation.NetworkInterface.#ctor
  - System.Net.NetworkInformation.NetworkInterface.Description
  - System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces
  - System.Net.NetworkInformation.NetworkInterface.GetIPProperties
  - System.Net.NetworkInformation.NetworkInterface.GetIPStatistics
  - System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics
  - System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable
  - System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress
  - System.Net.NetworkInformation.NetworkInterface.Id
  - System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex
  - System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly
  - System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex
  - System.Net.NetworkInformation.NetworkInterface.Name
  - System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType
  - System.Net.NetworkInformation.NetworkInterface.OperationalStatus
  - System.Net.NetworkInformation.NetworkInterface.Speed
  - System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)
  - System.Net.NetworkInformation.NetworkInterface.SupportsMulticast
  langs:
  - csharp
  name: NetworkInterface
  nameWithType: NetworkInterface
  fullName: System.Net.NetworkInformation.NetworkInterface
  type: Class
  summary: Provides configuration and statistical information for a network interface.
  remarks: This class encapsulates data for network interfaces, also known as adapters, on the local computer. You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer.
  example:
  - "The following code example displays information about interfaces.  \n  \n [!code-cpp[NCLNetInfoReport#12](~/add/codesnippet/cpp/t-system.net.networkinfo_20_1.cpp)]\n [!code-cs[NCLNetInfoReport#12](~/add/codesnippet/csharp/t-system.net.networkinfo_20_1.cs)]"
  syntax:
    content: public abstract class NetworkInterface
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: NetworkInterface()
  nameWithType: NetworkInterface.NetworkInterface()
  fullName: System.Net.NetworkInformation.NetworkInterface.NetworkInterface()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.NetworkInterface"></xref> class.
  remarks: This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.NetworkInterface> class.
  syntax:
    content: protected NetworkInterface ();
    parameters: []
  overload: System.Net.NetworkInformation.NetworkInterface.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.Description
  id: Description
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: Description
  nameWithType: NetworkInterface.Description
  fullName: System.Net.NetworkInformation.NetworkInterface.Description
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the description of the interface.
  remarks: The description is human-readable text that typically describes the interface vendor, type (for example, Ethernet), brand, and model.
  example:
  - "The following code example displays a summary for all interfaces on the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#16](~/add/codesnippet/cpp/p-system.net.networkinfo_48_1.cpp)]\n [!code-cs[NCLNetInfoReport#16](~/add/codesnippet/csharp/p-system.net.networkinfo_48_1.cs)]"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that describes this interface.
  overload: System.Net.NetworkInformation.NetworkInterface.Description*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces
  id: GetAllNetworkInterfaces
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: GetAllNetworkInterfaces()
  nameWithType: NetworkInterface.GetAllNetworkInterfaces()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Returns objects that describe the network interfaces on the local computer.
  remarks: The network interfaces on a computer provide network connectivity. Network interfaces are also known as network adapters.
  example:
  - "The following code example displays Domain Name Service (DNS) configuration information for the local computer's network adapters.  \n  \n [!code-cs[NCLNetInfo2#41](~/add/codesnippet/csharp/m-system.net.networkinfo_12_1.cs)]\n [!code-vb[NCLNetInfo2#41](~/add/codesnippet/visualbasic/m-system.net.networkinfo_12_1.vb)]\n [!code-cpp[NCLNetInfo2#41](~/add/codesnippet/cpp/m-system.net.networkinfo_12_1.cpp)]"
  syntax:
    content: public static System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.NetworkInterface[]
      description: A <xref href="System.Net.NetworkInformation.NetworkInterface"></xref> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected.
  overload: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: A Windows system function call failed.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.GetIPProperties
  id: GetIPProperties
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: GetIPProperties()
  nameWithType: NetworkInterface.GetIPProperties()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetIPProperties()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Returns an object that describes the configuration of this network interface.
  remarks: Note that the information in the object returned by this method reflects the interfaces as of the time the array is created. This information is not updated dynamically.
  example:
  - "The following code example displays information for the local computer's network adapters that support IPv4.  \n  \n [!code-cs[NCLNetInfo2#48](~/add/codesnippet/csharp/m-system.net.networkinfo_21_1.cs)]\n [!code-vb[NCLNetInfo2#48](~/add/codesnippet/visualbasic/m-system.net.networkinfo_21_1.vb)]\n [!code-cpp[NCLNetInfo2#48](~/add/codesnippet/cpp/m-system.net.networkinfo_21_1.cpp)]"
  syntax:
    content: public virtual System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPInterfaceProperties
      description: An <xref href="System.Net.NetworkInformation.IPInterfaceProperties"></xref> object that describes this network interface.
  overload: System.Net.NetworkInformation.NetworkInterface.GetIPProperties*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.GetIPStatistics
  id: GetIPStatistics
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: GetIPStatistics()
  nameWithType: NetworkInterface.GetIPStatistics()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetIPStatistics()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the IP statistics for this <xref href="System.Net.NetworkInformation.NetworkInterface"></xref> instance.
  syntax:
    content: public virtual System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPInterfaceStatistics
      description: "Returns <xref href=\"System.Net.NetworkInformation.IPInterfaceStatistics\"></xref>.  \n  \n The IP statistics."
  overload: System.Net.NetworkInformation.NetworkInterface.GetIPStatistics*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics
  id: GetIPv4Statistics
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: GetIPv4Statistics()
  nameWithType: NetworkInterface.GetIPv4Statistics()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the IPv4 statistics for this <xref href="System.Net.NetworkInformation.NetworkInterface"></xref> instance.
  syntax:
    content: public virtual System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPv4InterfaceStatistics
      description: An <xref href="System.Net.NetworkInformation.IPv4InterfaceStatistics"></xref> object.
  overload: System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable
  id: GetIsNetworkAvailable
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: GetIsNetworkAvailable()
  nameWithType: NetworkInterface.GetIsNetworkAvailable()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Indicates whether any network connection is available.
  remarks: A network connection is considered to be available if any network interface is marked "up" and is not a loopback or tunnel interface.
  syntax:
    content: public static bool GetIsNetworkAvailable ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if a network connection is available; otherwise, `false`.'
  overload: System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress
  id: GetPhysicalAddress
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: GetPhysicalAddress()
  nameWithType: NetworkInterface.GetPhysicalAddress()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Returns the Media Access Control (MAC) or physical address for this adapter.
  remarks: The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer. For example, on an Ethernet network, this method returns the Ethernet hardware address.
  example:
  - "The following code example displays the physical addresses of all interfaces on the local computer.  \n  \n [!code-cs[NCLNetInfo2#51](~/add/codesnippet/csharp/m-system.net.networkinfo_22_1.cs)]\n [!code-vb[NCLNetInfo2#51](~/add/codesnippet/visualbasic/m-system.net.networkinfo_22_1.vb)]\n [!code-cpp[NCLNetInfo2#51](~/add/codesnippet/cpp/m-system.net.networkinfo_22_1.cpp)]"
  syntax:
    content: public virtual System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.PhysicalAddress
      description: A <xref href="System.Net.NetworkInformation.PhysicalAddress"></xref> object that contains the physical address.
  overload: System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.Id
  id: Id
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: Id
  nameWithType: NetworkInterface.Id
  fullName: System.Net.NetworkInformation.NetworkInterface.Id
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the identifier of the network adapter.
  syntax:
    content: public virtual string Id { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the identifier.
  overload: System.Net.NetworkInformation.NetworkInterface.Id*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex
  id: IPv6LoopbackInterfaceIndex
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: IPv6LoopbackInterfaceIndex
  nameWithType: NetworkInterface.IPv6LoopbackInterfaceIndex
  fullName: System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the index of the IPv6 loopback interface.
  remarks: A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface. The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.
  syntax:
    content: public static int IPv6LoopbackInterfaceIndex { get; }
    return:
      type: System.Int32
      description: "Returns <xref href=\"System.Int32\"></xref>.  \n  \n The index for the IPv6 loopback interface."
  overload: System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly
  id: IsReceiveOnly
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: IsReceiveOnly
  nameWithType: NetworkInterface.IsReceiveOnly
  fullName: System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that indicates whether the network interface is set to only receive data packets.
  remarks: ''
  example:
  - "The following code example displays a summary for all interfaces on the local computer.  \n  \n [!code-cs[NCLNetInfo2#51](~/add/codesnippet/csharp/p-system.net.networkinfo_71_1.cs)]\n [!code-vb[NCLNetInfo2#51](~/add/codesnippet/visualbasic/p-system.net.networkinfo_71_1.vb)]\n [!code-cpp[NCLNetInfo2#51](~/add/codesnippet/cpp/p-system.net.networkinfo_71_1.cpp)]"
  syntax:
    content: public virtual bool IsReceiveOnly { get; }
    return:
      type: System.Boolean
      description: '`true` if the interface only receives network traffic; otherwise, `false`.'
  overload: System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: This property is not valid on computers running operating systems earlier than Windows XP.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex
  id: LoopbackInterfaceIndex
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: LoopbackInterfaceIndex
  nameWithType: NetworkInterface.LoopbackInterfaceIndex
  fullName: System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the index of the IPv4 loopback interface.
  remarks: "The index of the loopback interface is usually 1, but you cannot rely on this. Use the LoopbackInterfaceIndex property to get the correct value.  \n  \n A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface. The LoopbackInterfaceIndex property only returns the IPv4 loopback interface."
  syntax:
    content: public static int LoopbackInterfaceIndex { get; }
    return:
      type: System.Int32
      description: A <xref href="System.Int32"></xref> that contains the index for the IPv4 loopback interface.
  overload: System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: This property is not valid on computers running only Ipv6.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.Name
  id: Name
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: Name
  nameWithType: NetworkInterface.Name
  fullName: System.Net.NetworkInformation.NetworkInterface.Name
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the name of the network adapter.
  remarks: ''
  example:
  - "The following code example displays a summary for all interfaces on the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#16](~/add/codesnippet/cpp/p-system.net.networkinfo_87_1.cpp)]\n [!code-cs[NCLNetInfoReport#16](~/add/codesnippet/csharp/p-system.net.networkinfo_87_1.cs)]"
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the adapter name.
  overload: System.Net.NetworkInformation.NetworkInterface.Name*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType
  id: NetworkInterfaceType
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: NetworkInterfaceType
  nameWithType: NetworkInterface.NetworkInterfaceType
  fullName: System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the interface type.
  remarks: "The interface types are described in detail in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration documentation.  \n  \n This property only returns a subset of the possible values defined in the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration. The possible values include the following:  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType>  \n  \n-   <xref:System.Net.NetworkInformation.NetworkInterfaceType>"
  example:
  - "The following code example displays type information for all interfaces on the local computer.  \n  \n [!code-cs[NCLNetInfo2#51](~/add/codesnippet/csharp/p-system.net.networkinfo_66_1.cs)]\n [!code-vb[NCLNetInfo2#51](~/add/codesnippet/visualbasic/p-system.net.networkinfo_66_1.vb)]\n [!code-cpp[NCLNetInfo2#51](~/add/codesnippet/cpp/p-system.net.networkinfo_66_1.cpp)]"
  syntax:
    content: public virtual System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType { get; }
    return:
      type: System.Net.NetworkInformation.NetworkInterfaceType
      description: An <xref href="System.Net.NetworkInformation.NetworkInterfaceType"></xref> value that specifies the network interface type.
  overload: System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.OperationalStatus
  id: OperationalStatus
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: OperationalStatus
  nameWithType: NetworkInterface.OperationalStatus
  fullName: System.Net.NetworkInformation.NetworkInterface.OperationalStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the current operational state of the network connection.
  remarks: The operational status values are described in detail in the <xref:System.Net.NetworkInformation.OperationalStatus> enumeration documentation.
  example:
  - "The following code example displays a summary for all interfaces on the local computer.  \n  \n [!code-cpp[NCLNetInfoReport#16](~/add/codesnippet/cpp/p-system.net.networkinfo_127_1.cpp)]\n [!code-cs[NCLNetInfoReport#16](~/add/codesnippet/csharp/p-system.net.networkinfo_127_1.cs)]"
  syntax:
    content: public virtual System.Net.NetworkInformation.OperationalStatus OperationalStatus { get; }
    return:
      type: System.Net.NetworkInformation.OperationalStatus
      description: One of the <xref href="System.Net.NetworkInformation.OperationalStatus"></xref> values.
  overload: System.Net.NetworkInformation.NetworkInterface.OperationalStatus*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.Speed
  id: Speed
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: Speed
  nameWithType: NetworkInterface.Speed
  fullName: System.Net.NetworkInformation.NetworkInterface.Speed
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the speed of the network interface.
  remarks: The value returned by this property is reported by the network interface. It is not computed dynamically.
  example:
  - "The following code example demonstrates displaying the speed of interfaces on the local computer.  \n  \n [!code-cs[NclNetInfo2#13](~/add/codesnippet/csharp/p-system.net.networkinfo_65_1.cs)]\n [!code-vb[NclNetInfo2#13](~/add/codesnippet/visualbasic/p-system.net.networkinfo_65_1.vb)]\n [!code-cpp[NclNetInfo2#13](~/add/codesnippet/cpp/p-system.net.networkinfo_65_1.cpp)]"
  syntax:
    content: public virtual long Speed { get; }
    return:
      type: System.Int64
      description: A <xref href="System.Int64"></xref> value that specifies the speed in bits per second.
  overload: System.Net.NetworkInformation.NetworkInterface.Speed*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)
  id: Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: Supports(NetworkInterfaceComponent)
  nameWithType: NetworkInterface.Supports(NetworkInterfaceComponent)
  fullName: System.Net.NetworkInformation.NetworkInterface.Supports(NetworkInterfaceComponent)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that indicates whether the interface supports the specified protocol.
  remarks: ''
  example:
  - "The following code example displays statistics for IPV4 interfaces on the local computer.  \n  \n [!code-cs[NCLNetInfo2#48](~/add/codesnippet/csharp/064f92ec-de2b-455a-bc7a-_1.cs)]\n [!code-vb[NCLNetInfo2#48](~/add/codesnippet/visualbasic/064f92ec-de2b-455a-bc7a-_1.vb)]\n [!code-cpp[NCLNetInfo2#48](~/add/codesnippet/cpp/064f92ec-de2b-455a-bc7a-_1.cpp)]"
  syntax:
    content: public virtual bool Supports (System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent);
    parameters:
    - id: networkInterfaceComponent
      type: System.Net.NetworkInformation.NetworkInterfaceComponent
      description: A <xref href="System.Net.NetworkInformation.NetworkInterfaceComponent"></xref> value.
    return:
      type: System.Boolean
      description: '`true` if the specified protocol is supported; otherwise, `false`.'
  overload: System.Net.NetworkInformation.NetworkInterface.Supports*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.NetworkInterface.SupportsMulticast
  id: SupportsMulticast
  parent: System.Net.NetworkInformation.NetworkInterface
  langs:
  - csharp
  name: SupportsMulticast
  nameWithType: NetworkInterface.SupportsMulticast
  fullName: System.Net.NetworkInformation.NetworkInterface.SupportsMulticast
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that indicates whether the network interface is enabled to receive multicast packets.
  remarks: Multicasting is the act of sending a data packet to multiple destinations simultaneously.
  example:
  - "The following code example displays a summary for all interfaces on the local computer.  \n  \n [!code-cs[NCLNetInfo2#51](~/add/codesnippet/csharp/p-system.net.networkinfo_7_1.cs)]\n [!code-vb[NCLNetInfo2#51](~/add/codesnippet/visualbasic/p-system.net.networkinfo_7_1.vb)]\n [!code-cpp[NCLNetInfo2#51](~/add/codesnippet/cpp/p-system.net.networkinfo_7_1.cpp)]"
  syntax:
    content: public virtual bool SupportsMulticast { get; }
    return:
      type: System.Boolean
      description: '`true` if the interface receives multicast packets; otherwise, `false`.'
  overload: System.Net.NetworkInformation.NetworkInterface.SupportsMulticast*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: This property is not valid on computers running operating systems earlier than Windows XP.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\NetworkInterface.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/NetworkInterface.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.NetworkInformation.NetworkInformationException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: NetworkInformationException
  nameWithType: NetworkInformationException
  fullName: System.Net.NetworkInformation.NetworkInformationException
- uid: System.PlatformNotSupportedException
  parent: System
  isExternal: false
  name: PlatformNotSupportedException
  nameWithType: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.Net.NetworkInformation.NetworkInterface.#ctor
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: NetworkInterface()
  nameWithType: NetworkInterface.NetworkInterface()
  fullName: System.Net.NetworkInformation.NetworkInterface.NetworkInterface()
- uid: System.Net.NetworkInformation.NetworkInterface.Description
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: Description
  nameWithType: NetworkInterface.Description
  fullName: System.Net.NetworkInformation.NetworkInterface.Description
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetAllNetworkInterfaces()
  nameWithType: NetworkInterface.GetAllNetworkInterfaces()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces()
- uid: System.Net.NetworkInformation.NetworkInterface[]
  parent: System.Net.NetworkInformation
  isExternal: false
  name: NetworkInterface[]
  nameWithType: NetworkInterface[]
  fullName: System.Net.NetworkInformation.NetworkInterface[]
  spec.csharp:
  - uid: System.Net.NetworkInformation.NetworkInterface
    name: NetworkInterface
    nameWithType: NetworkInterface
    fullName: NetworkInterface[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.NetworkInterface.GetIPProperties
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetIPProperties()
  nameWithType: NetworkInterface.GetIPProperties()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetIPProperties()
- uid: System.Net.NetworkInformation.IPInterfaceProperties
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPInterfaceProperties
  nameWithType: IPInterfaceProperties
  fullName: System.Net.NetworkInformation.IPInterfaceProperties
- uid: System.Net.NetworkInformation.NetworkInterface.GetIPStatistics
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetIPStatistics()
  nameWithType: NetworkInterface.GetIPStatistics()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetIPStatistics()
- uid: System.Net.NetworkInformation.IPInterfaceStatistics
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPInterfaceStatistics
  nameWithType: IPInterfaceStatistics
  fullName: System.Net.NetworkInformation.IPInterfaceStatistics
- uid: System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetIPv4Statistics()
  nameWithType: NetworkInterface.GetIPv4Statistics()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics()
- uid: System.Net.NetworkInformation.IPv4InterfaceStatistics
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPv4InterfaceStatistics
  nameWithType: IPv4InterfaceStatistics
  fullName: System.Net.NetworkInformation.IPv4InterfaceStatistics
- uid: System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetIsNetworkAvailable()
  nameWithType: NetworkInterface.GetIsNetworkAvailable()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetPhysicalAddress()
  nameWithType: NetworkInterface.GetPhysicalAddress()
  fullName: System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress()
- uid: System.Net.NetworkInformation.PhysicalAddress
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PhysicalAddress
  nameWithType: PhysicalAddress
  fullName: System.Net.NetworkInformation.PhysicalAddress
- uid: System.Net.NetworkInformation.NetworkInterface.Id
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: Id
  nameWithType: NetworkInterface.Id
  fullName: System.Net.NetworkInformation.NetworkInterface.Id
- uid: System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: IPv6LoopbackInterfaceIndex
  nameWithType: NetworkInterface.IPv6LoopbackInterfaceIndex
  fullName: System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: IsReceiveOnly
  nameWithType: NetworkInterface.IsReceiveOnly
  fullName: System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly
- uid: System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: LoopbackInterfaceIndex
  nameWithType: NetworkInterface.LoopbackInterfaceIndex
  fullName: System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex
- uid: System.Net.NetworkInformation.NetworkInterface.Name
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: Name
  nameWithType: NetworkInterface.Name
  fullName: System.Net.NetworkInformation.NetworkInterface.Name
- uid: System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: NetworkInterfaceType
  nameWithType: NetworkInterface.NetworkInterfaceType
  fullName: System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType
- uid: System.Net.NetworkInformation.NetworkInterfaceType
  parent: System.Net.NetworkInformation
  isExternal: false
  name: NetworkInterfaceType
  nameWithType: NetworkInterfaceType
  fullName: System.Net.NetworkInformation.NetworkInterfaceType
- uid: System.Net.NetworkInformation.NetworkInterface.OperationalStatus
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: OperationalStatus
  nameWithType: NetworkInterface.OperationalStatus
  fullName: System.Net.NetworkInformation.NetworkInterface.OperationalStatus
- uid: System.Net.NetworkInformation.OperationalStatus
  parent: System.Net.NetworkInformation
  isExternal: false
  name: OperationalStatus
  nameWithType: OperationalStatus
  fullName: System.Net.NetworkInformation.OperationalStatus
- uid: System.Net.NetworkInformation.NetworkInterface.Speed
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: Speed
  nameWithType: NetworkInterface.Speed
  fullName: System.Net.NetworkInformation.NetworkInterface.Speed
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: Supports(NetworkInterfaceComponent)
  nameWithType: NetworkInterface.Supports(NetworkInterfaceComponent)
  fullName: System.Net.NetworkInformation.NetworkInterface.Supports(NetworkInterfaceComponent)
- uid: System.Net.NetworkInformation.NetworkInterfaceComponent
  parent: System.Net.NetworkInformation
  isExternal: false
  name: NetworkInterfaceComponent
  nameWithType: NetworkInterfaceComponent
  fullName: System.Net.NetworkInformation.NetworkInterfaceComponent
- uid: System.Net.NetworkInformation.NetworkInterface.SupportsMulticast
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: SupportsMulticast
  nameWithType: NetworkInterface.SupportsMulticast
  fullName: System.Net.NetworkInformation.NetworkInterface.SupportsMulticast
- uid: System.Net.NetworkInformation.NetworkInterface.#ctor*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: NetworkInterface
  nameWithType: NetworkInterface.NetworkInterface
- uid: System.Net.NetworkInformation.NetworkInterface.Description*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: Description
  nameWithType: NetworkInterface.Description
- uid: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetAllNetworkInterfaces
  nameWithType: NetworkInterface.GetAllNetworkInterfaces
- uid: System.Net.NetworkInformation.NetworkInterface.GetIPProperties*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetIPProperties
  nameWithType: NetworkInterface.GetIPProperties
- uid: System.Net.NetworkInformation.NetworkInterface.GetIPStatistics*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetIPStatistics
  nameWithType: NetworkInterface.GetIPStatistics
- uid: System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetIPv4Statistics
  nameWithType: NetworkInterface.GetIPv4Statistics
- uid: System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetIsNetworkAvailable
  nameWithType: NetworkInterface.GetIsNetworkAvailable
- uid: System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: GetPhysicalAddress
  nameWithType: NetworkInterface.GetPhysicalAddress
- uid: System.Net.NetworkInformation.NetworkInterface.Id*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: Id
  nameWithType: NetworkInterface.Id
- uid: System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: IPv6LoopbackInterfaceIndex
  nameWithType: NetworkInterface.IPv6LoopbackInterfaceIndex
- uid: System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: IsReceiveOnly
  nameWithType: NetworkInterface.IsReceiveOnly
- uid: System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: LoopbackInterfaceIndex
  nameWithType: NetworkInterface.LoopbackInterfaceIndex
- uid: System.Net.NetworkInformation.NetworkInterface.Name*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: Name
  nameWithType: NetworkInterface.Name
- uid: System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: NetworkInterfaceType
  nameWithType: NetworkInterface.NetworkInterfaceType
- uid: System.Net.NetworkInformation.NetworkInterface.OperationalStatus*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: OperationalStatus
  nameWithType: NetworkInterface.OperationalStatus
- uid: System.Net.NetworkInformation.NetworkInterface.Speed*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: Speed
  nameWithType: NetworkInterface.Speed
- uid: System.Net.NetworkInformation.NetworkInterface.Supports*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: Supports
  nameWithType: NetworkInterface.Supports
- uid: System.Net.NetworkInformation.NetworkInterface.SupportsMulticast*
  parent: System.Net.NetworkInformation.NetworkInterface
  isExternal: false
  name: SupportsMulticast
  nameWithType: NetworkInterface.SupportsMulticast
