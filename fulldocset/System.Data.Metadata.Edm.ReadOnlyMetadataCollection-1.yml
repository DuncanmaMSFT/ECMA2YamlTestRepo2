### YamlMime:ManagedReference
items:
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  id: ReadOnlyMetadataCollection`1
  children:
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)
  langs:
  - csharp
  name: ReadOnlyMetadataCollection<T>
  nameWithType: ReadOnlyMetadataCollection<T>
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>
  type: Class
  summary: Represents a collection of members in the [!INCLUDE[vstecado](~/add/includes/vstecado-md.md)] metadata hierarchy by providing a read-only collection with advanced lookup capabilities. This class is derived from the <xref href="stem.Collections.ObjectModel.ReadOnlyCollection"></xref> class.
  syntax:
    content: 'public class ReadOnlyMetadataCollection<T> : System.Collections.ObjectModel.ReadOnlyCollection<T> where T : MetadataItem'
    typeParameters:
    - id: T
      description: The type of elements in the collection.
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.ReadOnlyCollection`1
  implements: []
  inheritedMembers:
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Metadata.Edm\ReadOnlyMetadataCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1.xml
  version:
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ReadOnlyMetadataCollection<T>.Contains(String)
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.Contains(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Determines whether the collection contains an item with the specified identity.
  syntax:
    content: public virtual bool Contains (string identity);
    parameters:
    - id: identity
      type: System.String
      description: The identity of the item.
    return:
      type: System.Boolean
      description: '`true` if the collection contains the item to be searched for; otherwise, `false`. The default is false.'
  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Metadata.Edm\ReadOnlyMetadataCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1.xml
  version:
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ReadOnlyMetadataCollection<T>.GetEnumerator()
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns an enumerator that can iterate through this collection.
  syntax:
    content: public System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator
      description: A <xref href="stem.Data.Metadata.Edm.ReadOnlyMetadataCollection%601.Enumerator"></xref> that can be used to iterate through this <xref href="stem.Data.Metadata.Edm.ReadOnlyMetadataCollection"></xref>.
  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Metadata.Edm\ReadOnlyMetadataCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1.xml
  version:
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)
  id: GetValue(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  langs:
  - csharp
  name: GetValue(String,Boolean)
  nameWithType: ReadOnlyMetadataCollection<T>.GetValue(String,Boolean)
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.GetValue(String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Retrieves an item from this collection by using the specified identity.
  syntax:
    content: public virtual T GetValue (string identity, bool ignoreCase);
    parameters:
    - id: identity
      type: System.String
      description: The identity of the item to be searched for.
    - id: ignoreCase
      type: System.Boolean
      description: '`true` to perform the case-insensitive search; otherwise, `false`.'
    return:
      type: T
      description: An item from this collection.
  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Metadata.Edm\ReadOnlyMetadataCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1.xml
  version:
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  langs:
  - csharp
  name: IndexOf(T)
  nameWithType: ReadOnlyMetadataCollection<T>.IndexOf(T)
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.IndexOf(T)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns the index of the specified value in this collection.
  syntax:
    content: public virtual int IndexOf (T value);
    parameters:
    - id: value
      type: T
      description: A value to seek.
    return:
      type: System.Int32
      description: The index of the specified value in this collection.
  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Metadata.Edm\ReadOnlyMetadataCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1.xml
  version:
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly
  id: IsReadOnly
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ReadOnlyMetadataCollection<T>.IsReadOnly
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Gets a value indicating whether this collection is read-only.
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '`true` if this collection is read-only; otherwise, `false`.'
  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Metadata.Edm\ReadOnlyMetadataCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1.xml
  version:
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  langs:
  - csharp
  name: Item(String)
  nameWithType: ReadOnlyMetadataCollection<T>.Item(String)
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.Item(String)
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Gets an item from this collection by using the specified identity.
  syntax:
    content: public virtual T this[string identity] { get; }
    parameters:
    - id: identity
      type: System.String
      description: The identity of the item to be searched for.
    return:
      type: T
      description: An item from this collection.
  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Metadata.Edm\ReadOnlyMetadataCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1.xml
  version:
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)
  id: TryGetValue(System.String,System.Boolean,`0@)
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  langs:
  - csharp
  name: TryGetValue(String,Boolean,T)
  nameWithType: ReadOnlyMetadataCollection<T>.TryGetValue(String,Boolean,T)
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.TryGetValue(String,Boolean,T)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Retrieves an item from this collection by using the specified identity.
  syntax:
    content: public virtual bool TryGetValue (string identity, bool ignoreCase, out T item);
    parameters:
    - id: identity
      type: System.String
      description: The identity of the item to be searched for.
    - id: ignoreCase
      type: System.Boolean
      description: '`true` to perform the case-insensitive search; otherwise, `false`.'
    - id: item
      type: T
      description: When this method returns, this output parameter contains an item from the collection. If there is no matched item, this output parameter contains null.
    return:
      type: System.Boolean
      description: '`true` if there is an item that matches the search criteria; otherwise, `false`.'
  overload: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Metadata.Edm\ReadOnlyMetadataCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Metadata.Edm/ReadOnlyMetadataCollection`1.xml
  version:
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: false
  name: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: Contains(String)
  nameWithType: ReadOnlyMetadataCollection<T>.Contains(String)
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: ReadOnlyMetadataCollection<T>.GetEnumerator()
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.GetEnumerator()
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: ReadOnlyMetadataCollection<T>+Enumerator
  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: GetValue(String,Boolean)
  nameWithType: ReadOnlyMetadataCollection<T>.GetValue(String,Boolean)
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.GetValue(String,Boolean)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: IndexOf(T)
  nameWithType: ReadOnlyMetadataCollection<T>.IndexOf(T)
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.IndexOf(T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: IsReadOnly
  nameWithType: ReadOnlyMetadataCollection<T>.IsReadOnly
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.IsReadOnly
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: Item(String)
  nameWithType: ReadOnlyMetadataCollection<T>.Item(String)
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.Item(String)
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: TryGetValue(String,Boolean,T)
  nameWithType: ReadOnlyMetadataCollection<T>.TryGetValue(String,Boolean,T)
  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>.TryGetValue(String,Boolean,T)
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains*
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: Contains
  nameWithType: ReadOnlyMetadataCollection<T>.Contains
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator*
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: GetEnumerator
  nameWithType: ReadOnlyMetadataCollection<T>.GetEnumerator
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue*
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: GetValue
  nameWithType: ReadOnlyMetadataCollection<T>.GetValue
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf*
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: IndexOf
  nameWithType: ReadOnlyMetadataCollection<T>.IndexOf
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly*
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: IsReadOnly
  nameWithType: ReadOnlyMetadataCollection<T>.IsReadOnly
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item*
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: Item
  nameWithType: ReadOnlyMetadataCollection<T>.Item
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue*
  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: TryGetValue
  nameWithType: ReadOnlyMetadataCollection<T>.TryGetValue
