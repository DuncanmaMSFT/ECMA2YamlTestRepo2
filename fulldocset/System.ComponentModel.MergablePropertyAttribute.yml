### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MergablePropertyAttribute
  id: MergablePropertyAttribute
  children:
  - System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)
  - System.ComponentModel.MergablePropertyAttribute.AllowMerge
  - System.ComponentModel.MergablePropertyAttribute.Default
  - System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)
  - System.ComponentModel.MergablePropertyAttribute.GetHashCode
  - System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute
  - System.ComponentModel.MergablePropertyAttribute.No
  - System.ComponentModel.MergablePropertyAttribute.Yes
  langs:
  - csharp
  name: MergablePropertyAttribute
  nameWithType: MergablePropertyAttribute
  fullName: System.ComponentModel.MergablePropertyAttribute
  type: Class
  summary: Specifies that this property can be combined with properties belonging to other objects in a Properties window.
  remarks: "Properties that are marked with the MergablePropertyAttribute set to `true` can be combined with properties belonging to other objects in a Properties window. Properties that are marked with the MergablePropertyAttribute set to `false` must be displayed separately. The default is `true`.  \n  \n> [!NOTE]\n>  When you mark a property with the MergablePropertyAttribute set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.MergablePropertyAttribute.Yes>. For a property marked with the MergablePropertyAttribute property set to `false`, the value is <xref:System.ComponentModel.MergablePropertyAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.MergablePropertyAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.MergablePropertyAttribute.No?displayProperty=fullName>.  \n  \n For more information, see [Attributes](../Topic/Extending%20Metadata%20Using%20Attributes.md)."
  example:
  - "The following example marks a property as appropriate to merge.  \n  \n [!code-cpp[Classic MergablePropertyAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._161_1.cpp)]\n [!code-cs[Classic MergablePropertyAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._161_1.cs)]\n [!code-vb[Classic MergablePropertyAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._161_1.vb)]  \n  \n The next example shows how to check the value of the MergablePropertyAttribute for `MyProperty`. First the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Then it returns the attributes for this property and saves them in the attributes variable.  \n  \n The example presents two different ways of checking the value of the MergablePropertyAttribute. In the second code fragment, the example calls the <xref:System.ComponentModel.MergablePropertyAttribute.Equals%2A> method with a `static` value. In the last code fragment, the example uses the <xref:System.ComponentModel.MergablePropertyAttribute.AllowMerge%2A> property to check the value.  \n  \n [!code-cpp[Classic MergablePropertyAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._161_2.cpp)]\n [!code-cs[Classic MergablePropertyAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._161_2.cs)]\n [!code-vb[Classic MergablePropertyAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._161_2.vb)]  \n  \n If you marked a class with the MergablePropertyAttribute, use the following code to check the value.  \n  \n [!code-cpp[Classic MergablePropertyAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._161_3.cpp)]\n [!code-cs[Classic MergablePropertyAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._161_3.cs)]\n [!code-vb[Classic MergablePropertyAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._161_3.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class MergablePropertyAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel\MergablePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel/MergablePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: MergablePropertyAttribute(Boolean)
  nameWithType: MergablePropertyAttribute.MergablePropertyAttribute(Boolean)
  fullName: System.ComponentModel.MergablePropertyAttribute.MergablePropertyAttribute(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.MergablePropertyAttribute"></xref> class.
  remarks: ''
  example:
  - "The following example marks a property as appropriate to merge. This code creates a new <xref:System.ComponentModel.MergablePropertyAttribute>, sets its value to <xref:System.ComponentModel.MergablePropertyAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cpp[Classic MergablePropertyAttribute.MergablePropertyAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._36_1.cpp)]\n [!code-cs[Classic MergablePropertyAttribute.MergablePropertyAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._36_1.cs)]\n [!code-vb[Classic MergablePropertyAttribute.MergablePropertyAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._36_1.vb)]"
  syntax:
    content: public MergablePropertyAttribute (bool allowMerge);
    parameters:
    - id: allowMerge
      type: System.Boolean
      description: '`true` if this property can be combined with properties belonging to other objects in a Properties window; otherwise, `false`.'
  overload: System.ComponentModel.MergablePropertyAttribute.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel\MergablePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel/MergablePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ComponentModel.MergablePropertyAttribute.AllowMerge
  id: AllowMerge
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: AllowMerge
  nameWithType: MergablePropertyAttribute.AllowMerge
  fullName: System.ComponentModel.MergablePropertyAttribute.AllowMerge
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets a value indicating whether this property can be combined with properties belonging to other objects in a Properties window.
  remarks: ''
  example:
  - "The following example checks to see whether `MyProperty` is appropriate to merge. First the code gets the attributes for `MyProperty` by:  \n  \n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \n  \n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \n  \n-   Saving the attributes for this property in the attributes variable.  \n  \n Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.MergablePropertyAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is appropriate to merge.  \n  \n [!code-cs[Classic MergablePropertyAttribute.AllowMerge Example#1](~/add/codesnippet/csharp/p-system.componentmodel._10_1.cs)]\n [!code-vb[Classic MergablePropertyAttribute.AllowMerge Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._10_1.vb)]\n [!code-cpp[Classic MergablePropertyAttribute.AllowMerge Example#1](~/add/codesnippet/cpp/p-system.componentmodel._10_1.cpp)]"
  syntax:
    content: public bool AllowMerge { get; }
    return:
      type: System.Boolean
      description: '`true` if this property can be combined with properties belonging to other objects in a Properties window; otherwise, `false`.'
  overload: System.ComponentModel.MergablePropertyAttribute.AllowMerge*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel\MergablePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel/MergablePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ComponentModel.MergablePropertyAttribute.Default
  id: Default
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: Default
  nameWithType: MergablePropertyAttribute.Default
  fullName: System.ComponentModel.MergablePropertyAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Specifies the default value, which is <xref href="System.ComponentModel.MergablePropertyAttribute.Yes"></xref>, that is a property can be combined with properties belonging to other objects in a Properties window. This `static` field is read-only.
  remarks: When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.MergablePropertyAttribute>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.MergablePropertyAttribute?displayProperty=fullName>.
  syntax:
    content: public static readonly System.ComponentModel.MergablePropertyAttribute Default;
    return:
      type: System.ComponentModel.MergablePropertyAttribute
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel\MergablePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel/MergablePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: MergablePropertyAttribute.Equals(Object)
  fullName: System.ComponentModel.MergablePropertyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Indicates whether this instance and a specified object are equal.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: Another object to compare to.
    return:
      type: System.Boolean
      description: '`true` if <code>obj</code> is equal to this instance; otherwise, `false`.'
  overload: System.ComponentModel.MergablePropertyAttribute.Equals*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel\MergablePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel/MergablePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ComponentModel.MergablePropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: MergablePropertyAttribute.GetHashCode()
  fullName: System.ComponentModel.MergablePropertyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for the current <xref href="System.ComponentModel.MergablePropertyAttribute"></xref>.
  overload: System.ComponentModel.MergablePropertyAttribute.GetHashCode*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel\MergablePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel/MergablePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: MergablePropertyAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Determines if this attribute is the default.
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the attribute is the default value for this attribute class; otherwise, `false`.'
  overload: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel\MergablePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel/MergablePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ComponentModel.MergablePropertyAttribute.No
  id: No
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: No
  nameWithType: MergablePropertyAttribute.No
  fullName: System.ComponentModel.MergablePropertyAttribute.No
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Specifies that a property cannot be combined with properties belonging to other objects in a Properties window. This `static` field is read-only.
  remarks: When you mark a property with the <xref:System.ComponentModel.MergablePropertyAttribute> set to `false`, the value of this attribute is set to the constant member No. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as No.
  syntax:
    content: public static readonly System.ComponentModel.MergablePropertyAttribute No;
    return:
      type: System.ComponentModel.MergablePropertyAttribute
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel\MergablePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel/MergablePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ComponentModel.MergablePropertyAttribute.Yes
  id: Yes
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: Yes
  nameWithType: MergablePropertyAttribute.Yes
  fullName: System.ComponentModel.MergablePropertyAttribute.Yes
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Specifies that a property can be combined with properties belonging to other objects in a Properties window. This `static` field is read-only.
  remarks: "This field is the default setting for this attribute.  \n  \n When you mark a property with the <xref:System.ComponentModel.MergablePropertyAttribute> set to `true`, the value of this attribute is set to the constant member Yes. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as Yes."
  syntax:
    content: public static readonly System.ComponentModel.MergablePropertyAttribute Yes;
    return:
      type: System.ComponentModel.MergablePropertyAttribute
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel\MergablePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel/MergablePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: MergablePropertyAttribute(Boolean)
  nameWithType: MergablePropertyAttribute.MergablePropertyAttribute(Boolean)
  fullName: System.ComponentModel.MergablePropertyAttribute.MergablePropertyAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MergablePropertyAttribute.AllowMerge
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: AllowMerge
  nameWithType: MergablePropertyAttribute.AllowMerge
  fullName: System.ComponentModel.MergablePropertyAttribute.AllowMerge
- uid: System.ComponentModel.MergablePropertyAttribute.Default
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: Default
  nameWithType: MergablePropertyAttribute.Default
  fullName: System.ComponentModel.MergablePropertyAttribute.Default
- uid: System.ComponentModel.MergablePropertyAttribute
  parent: System.ComponentModel
  isExternal: false
  name: MergablePropertyAttribute
  nameWithType: MergablePropertyAttribute
  fullName: System.ComponentModel.MergablePropertyAttribute
- uid: System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: MergablePropertyAttribute.Equals(Object)
  fullName: System.ComponentModel.MergablePropertyAttribute.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.MergablePropertyAttribute.GetHashCode
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: MergablePropertyAttribute.GetHashCode()
  fullName: System.ComponentModel.MergablePropertyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: MergablePropertyAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute()
- uid: System.ComponentModel.MergablePropertyAttribute.No
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: No
  nameWithType: MergablePropertyAttribute.No
  fullName: System.ComponentModel.MergablePropertyAttribute.No
- uid: System.ComponentModel.MergablePropertyAttribute.Yes
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: Yes
  nameWithType: MergablePropertyAttribute.Yes
  fullName: System.ComponentModel.MergablePropertyAttribute.Yes
- uid: System.ComponentModel.MergablePropertyAttribute.#ctor*
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: MergablePropertyAttribute
  nameWithType: MergablePropertyAttribute.MergablePropertyAttribute
- uid: System.ComponentModel.MergablePropertyAttribute.AllowMerge*
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: AllowMerge
  nameWithType: MergablePropertyAttribute.AllowMerge
- uid: System.ComponentModel.MergablePropertyAttribute.Equals*
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: Equals
  nameWithType: MergablePropertyAttribute.Equals
- uid: System.ComponentModel.MergablePropertyAttribute.GetHashCode*
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: MergablePropertyAttribute.GetHashCode
- uid: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute*
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: MergablePropertyAttribute.IsDefaultAttribute
