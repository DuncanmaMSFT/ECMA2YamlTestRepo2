### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.Regex
  id: Regex
  children:
  - System.Text.RegularExpressions.Regex.#ctor
  - System.Text.RegularExpressions.Regex.#ctor(System.String)
  - System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.CacheSize
  - System.Text.RegularExpressions.Regex.capnames
  - System.Text.RegularExpressions.Regex.caps
  - System.Text.RegularExpressions.Regex.capsize
  - System.Text.RegularExpressions.Regex.capslist
  - System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)
  - System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])
  - System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)
  - System.Text.RegularExpressions.Regex.Escape(System.String)
  - System.Text.RegularExpressions.Regex.factory
  - System.Text.RegularExpressions.Regex.GetGroupNames
  - System.Text.RegularExpressions.Regex.GetGroupNumbers
  - System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)
  - System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)
  - System.Text.RegularExpressions.Regex.InitializeReferences
  - System.Text.RegularExpressions.Regex.IsMatch(System.String)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)
  - System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Match(System.String)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Matches(System.String)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Options
  - System.Text.RegularExpressions.Regex.pattern
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.RightToLeft
  - System.Text.RegularExpressions.Regex.roptions
  - System.Text.RegularExpressions.Regex.Split(System.String)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.String)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  - System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Text.RegularExpressions.Regex.ToString
  - System.Text.RegularExpressions.Regex.Unescape(System.String)
  - System.Text.RegularExpressions.Regex.UseOptionC
  - System.Text.RegularExpressions.Regex.UseOptionR
  langs:
  - csharp
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
  type: Class
  summary: "Represents an immutable regular expression.  \n  \n To browse the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#System/regex/system/text/regularexpressions/Regex.cs#bbe3b2eb80ae5526)."
  syntax:
    content: 'public class Regex : System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.#ctor
  id: '#ctor'
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Regex()
  nameWithType: Regex.Regex()
  fullName: System.Text.RegularExpressions.Regex.Regex()
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Initializes a new instance of the <xref href="System.Text.RegularExpressions.Regex"></xref> class.
  syntax:
    content: protected Regex ();
    parameters: []
  overload: System.Text.RegularExpressions.Regex.#ctor*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Regex(String)
  nameWithType: Regex.Regex(String)
  fullName: System.Text.RegularExpressions.Regex.Regex(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Initializes a new instance of the <xref href="System.Text.RegularExpressions.Regex"></xref> class for the specified regular expression.
  syntax:
    content: public Regex (string pattern);
    parameters:
    - id: pattern
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.#ctor*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Regex(SerializationInfo,StreamingContext)
  nameWithType: Regex.Regex(SerializationInfo,StreamingContext)
  fullName: System.Text.RegularExpressions.Regex.Regex(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Initializes a new instance of the <xref href="System.Text.RegularExpressions.Regex"></xref> class by using serialized data.
  syntax:
    content: protected Regex (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.#ctor*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions)'
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Regex(String,RegexOptions)
  nameWithType: Regex.Regex(String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Regex(String,RegexOptions)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Initializes a new instance of the <xref href="System.Text.RegularExpressions.Regex"></xref> class for the specified regular expression, with options that modify the pattern.
  syntax:
    content: public Regex (string pattern, System.Text.RegularExpressions.RegexOptions options);
    parameters:
    - id: pattern
      type: System.String
      description: To be added.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.#ctor*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.CacheSize
  id: CacheSize
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: CacheSize
  nameWithType: Regex.CacheSize
  fullName: System.Text.RegularExpressions.Regex.CacheSize
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets or sets the maximum number of entries in the current static cache of compiled regular expressions.
  syntax:
    content: public static int CacheSize { get; set; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.CacheSize*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.capnames
  id: capnames
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: capnames
  nameWithType: Regex.capnames
  fullName: System.Text.RegularExpressions.Regex.capnames
  type: Field
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex"></xref> object generated by the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly*> method.
  syntax:
    content: protected System.Collections.Hashtable capnames;
    return:
      type: System.Collections.Hashtable
      description: To be added.
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.caps
  id: caps
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: caps
  nameWithType: Regex.caps
  fullName: System.Text.RegularExpressions.Regex.caps
  type: Field
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex"></xref> object generated by the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly*> method.
  syntax:
    content: protected System.Collections.Hashtable caps;
    return:
      type: System.Collections.Hashtable
      description: To be added.
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.capsize
  id: capsize
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: capsize
  nameWithType: Regex.capsize
  fullName: System.Text.RegularExpressions.Regex.capsize
  type: Field
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex"></xref> object generated by the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly*> method.
  syntax:
    content: protected int capsize;
    return:
      type: System.Int32
      description: To be added.
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.capslist
  id: capslist
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: capslist
  nameWithType: Regex.capslist
  fullName: System.Text.RegularExpressions.Regex.capslist
  type: Field
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex"></xref> object generated by the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly*> method.
  syntax:
    content: protected string[] capslist;
    return:
      type: System.String[]
      description: To be added.
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)
  id: CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: CompileToAssembly(RegexCompilationInfo[],AssemblyName)
  nameWithType: Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName)
  fullName: System.Text.RegularExpressions.Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Compiles one or more specified <xref href="System.Text.RegularExpressions.Regex"></xref> objects to a named assembly.
  syntax:
    content: public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname);
    parameters:
    - id: regexinfos
      type: System.Text.RegularExpressions.RegexCompilationInfo[]
      description: To be added.
    - id: assemblyname
      type: System.Reflection.AssemblyName
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.CompileToAssembly*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])
  id: CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[])
  nameWithType: Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[])
  fullName: System.Text.RegularExpressions.Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[])
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Compiles one or more specified <xref href="System.Text.RegularExpressions.Regex"></xref> objects to a named assembly with the specified attributes.
  syntax:
    content: public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname, System.Reflection.Emit.CustomAttributeBuilder[] attributes);
    parameters:
    - id: regexinfos
      type: System.Text.RegularExpressions.RegexCompilationInfo[]
      description: To be added.
    - id: assemblyname
      type: System.Reflection.AssemblyName
      description: To be added.
    - id: attributes
      type: System.Reflection.Emit.CustomAttributeBuilder[]
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.CompileToAssembly*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)
  id: CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[],String)
  nameWithType: Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[],String)
  fullName: System.Text.RegularExpressions.Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[],String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Compiles one or more specified <xref href="System.Text.RegularExpressions.Regex"></xref> objects and a specified resource file to a named assembly with the specified attributes.
  syntax:
    content: public static void CompileToAssembly (System.Text.RegularExpressions.RegexCompilationInfo[] regexinfos, System.Reflection.AssemblyName assemblyname, System.Reflection.Emit.CustomAttributeBuilder[] attributes, string resourceFile);
    parameters:
    - id: regexinfos
      type: System.Text.RegularExpressions.RegexCompilationInfo[]
      description: To be added.
    - id: assemblyname
      type: System.Reflection.AssemblyName
      description: To be added.
    - id: attributes
      type: System.Reflection.Emit.CustomAttributeBuilder[]
      description: To be added.
    - id: resourceFile
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.CompileToAssembly*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Escape(System.String)
  id: Escape(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Escape(String)
  nameWithType: Regex.Escape(String)
  fullName: System.Text.RegularExpressions.Regex.Escape(String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: 'Escapes a minimal set of characters (\\, *, +, ?, |, {, [, (,), ^, $,., #, and white space) by replacing them with their escape codes. This instructs the regular expression engine to interpret these characters literally rather than as metacharacters.'
  syntax:
    content: public static string Escape (string str);
    parameters:
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Escape*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.factory
  id: factory
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: factory
  nameWithType: Regex.factory
  fullName: System.Text.RegularExpressions.Regex.factory
  type: Field
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex"></xref> object generated by the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly*> method.
  syntax:
    content: protected System.Text.RegularExpressions.RegexRunnerFactory factory;
    return:
      type: System.Text.RegularExpressions.RegexRunnerFactory
      description: To be added.
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.GetGroupNames
  id: GetGroupNames
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: GetGroupNames()
  nameWithType: Regex.GetGroupNames()
  fullName: System.Text.RegularExpressions.Regex.GetGroupNames()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Returns an array of capturing group names for the regular expression.
  syntax:
    content: public string[] GetGroupNames ();
    parameters: []
    return:
      type: System.String[]
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.GetGroupNames*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.GetGroupNumbers
  id: GetGroupNumbers
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: GetGroupNumbers()
  nameWithType: Regex.GetGroupNumbers()
  fullName: System.Text.RegularExpressions.Regex.GetGroupNumbers()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Returns an array of capturing group numbers that correspond to group names in an array.
  syntax:
    content: public int[] GetGroupNumbers ();
    parameters: []
    return:
      type: System.Int32[]
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.GetGroupNumbers*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)
  id: GroupNameFromNumber(System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: GroupNameFromNumber(Int32)
  nameWithType: Regex.GroupNameFromNumber(Int32)
  fullName: System.Text.RegularExpressions.Regex.GroupNameFromNumber(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets the group name that corresponds to the specified group number.
  syntax:
    content: public string GroupNameFromNumber (int i);
    parameters:
    - id: i
      type: System.Int32
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.GroupNameFromNumber*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)
  id: GroupNumberFromName(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: GroupNumberFromName(String)
  nameWithType: Regex.GroupNumberFromName(String)
  fullName: System.Text.RegularExpressions.Regex.GroupNumberFromName(String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Returns the group number that corresponds to the specified group name.
  syntax:
    content: public int GroupNumberFromName (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.GroupNumberFromName*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.InitializeReferences
  id: InitializeReferences
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: InitializeReferences()
  nameWithType: Regex.InitializeReferences()
  fullName: System.Text.RegularExpressions.Regex.InitializeReferences()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex"></xref> object generated by the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly*> method.
  syntax:
    content: protected void InitializeReferences ();
    parameters: []
  overload: System.Text.RegularExpressions.Regex.InitializeReferences*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String)
  id: IsMatch(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: IsMatch(String)
  nameWithType: Regex.IsMatch(String)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Indicates whether the regular expression specified in the <xref href="System.Text.RegularExpressions.Regex"></xref> constructor finds a match in a specified input string.
  syntax:
    content: public bool IsMatch (string input);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.IsMatch*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)
  id: IsMatch(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: IsMatch(String,Int32)
  nameWithType: Regex.IsMatch(String,Int32)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Indicates whether the regular expression specified in the <xref href="System.Text.RegularExpressions.Regex"></xref> constructor finds a match in the specified input string, beginning at the specified starting position in the string.
  syntax:
    content: public bool IsMatch (string input, int startat);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: startat
      type: System.Int32
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.IsMatch*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)
  id: IsMatch(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: IsMatch(String,String)
  nameWithType: Regex.IsMatch(String,String)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Indicates whether the specified regular expression finds a match in the specified input string.
  syntax:
    content: public static bool IsMatch (string input, string pattern);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.IsMatch*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: IsMatch(String,String,RegexOptions)
  nameWithType: Regex.IsMatch(String,String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Indicates whether the specified regular expression finds a match in the specified input string, using the specified matching options.
  syntax:
    content: public static bool IsMatch (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.IsMatch*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Match(System.String)
  id: Match(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Match(String)
  nameWithType: Regex.Match(String)
  fullName: System.Text.RegularExpressions.Regex.Match(String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for the first occurrence of the regular expression specified in the <xref href="System.Text.RegularExpressions.Regex"></xref> constructor.
  syntax:
    content: public System.Text.RegularExpressions.Match Match (string input);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    return:
      type: System.Text.RegularExpressions.Match
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Match*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)
  id: Match(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Match(String,Int32)
  nameWithType: Regex.Match(String,Int32)
  fullName: System.Text.RegularExpressions.Regex.Match(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position in the string.
  syntax:
    content: public System.Text.RegularExpressions.Match Match (string input, int startat);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: startat
      type: System.Int32
      description: To be added.
    return:
      type: System.Text.RegularExpressions.Match
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Match*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.String)
  id: Match(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Match(String,String)
  nameWithType: Regex.Match(String,String)
  fullName: System.Text.RegularExpressions.Regex.Match(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for the first occurrence of the specified regular expression.
  syntax:
    content: public static System.Text.RegularExpressions.Match Match (string input, string pattern);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    return:
      type: System.Text.RegularExpressions.Match
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Match*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)
  id: Match(System.String,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Match(String,Int32,Int32)
  nameWithType: Regex.Match(String,Int32,Int32)
  fullName: System.Text.RegularExpressions.Regex.Match(String,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Searches the input string for the first occurrence of a regular expression, beginning at the specified starting position and searching only the specified number of characters.
  syntax:
    content: public System.Text.RegularExpressions.Match Match (string input, int beginning, int length);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: beginning
      type: System.Int32
      description: To be added.
    - id: length
      type: System.Int32
      description: To be added.
    return:
      type: System.Text.RegularExpressions.Match
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Match*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Match(String,String,RegexOptions)
  nameWithType: Regex.Match(String,String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Searches the input string for the first occurrence of the specified regular expression, using the specified matching options.
  syntax:
    content: public static System.Text.RegularExpressions.Match Match (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: To be added.
    return:
      type: System.Text.RegularExpressions.Match
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Match*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Matches(System.String)
  id: Matches(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Matches(String)
  nameWithType: Regex.Matches(String)
  fullName: System.Text.RegularExpressions.Regex.Matches(String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for all occurrences of a regular expression.
  syntax:
    content: public System.Text.RegularExpressions.MatchCollection Matches (string input);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    return:
      type: System.Text.RegularExpressions.MatchCollection
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Matches*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)
  id: Matches(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Matches(String,Int32)
  nameWithType: Regex.Matches(String,Int32)
  fullName: System.Text.RegularExpressions.Regex.Matches(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for all occurrences of a regular expression, beginning at the specified starting position in the string.
  syntax:
    content: public System.Text.RegularExpressions.MatchCollection Matches (string input, int startat);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: startat
      type: System.Int32
      description: To be added.
    return:
      type: System.Text.RegularExpressions.MatchCollection
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Matches*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.String)
  id: Matches(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Matches(String,String)
  nameWithType: Regex.Matches(String,String)
  fullName: System.Text.RegularExpressions.Regex.Matches(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for all occurrences of a specified regular expression.
  syntax:
    content: public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    return:
      type: System.Text.RegularExpressions.MatchCollection
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Matches*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Matches(String,String,RegexOptions)
  nameWithType: Regex.Matches(String,String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Matches(String,String,RegexOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Searches the specified input string for all occurrences of a specified regular expression, using the specified matching options.
  syntax:
    content: public static System.Text.RegularExpressions.MatchCollection Matches (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: To be added.
    return:
      type: System.Text.RegularExpressions.MatchCollection
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Matches*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Options
  id: Options
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Options
  nameWithType: Regex.Options
  fullName: System.Text.RegularExpressions.Regex.Options
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets the options that were passed into the <xref href="System.Text.RegularExpressions.Regex"></xref> constructor.
  syntax:
    content: public System.Text.RegularExpressions.RegexOptions Options { get; }
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Options*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.pattern
  id: pattern
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: pattern
  nameWithType: Regex.pattern
  fullName: System.Text.RegularExpressions.Regex.pattern
  type: Field
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex"></xref> object generated by the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly*> method.
  syntax:
    content: protected string pattern;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
  id: Replace(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Replace(String,String)
  nameWithType: Regex.Replace(String,String)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces all strings that match a regular expression pattern with a specified replacement string.
  syntax:
    content: public string Replace (string input, string replacement);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: replacement
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Replace*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
  id: Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Replace(String,MatchEvaluator)
  nameWithType: Regex.Replace(String,MatchEvaluator)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,MatchEvaluator)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator"></xref> delegate.
  syntax:
    content: public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Replace*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)
  id: Replace(System.String,System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Replace(String,String,Int32)
  nameWithType: Regex.Replace(String,String,Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.
  syntax:
    content: public string Replace (string input, string replacement, int count);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: replacement
      type: System.String
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Replace*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)
  id: Replace(System.String,System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Replace(String,String,String)
  nameWithType: Regex.Replace(String,String,String)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.
  syntax:
    content: public static string Replace (string input, string pattern, string replacement);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    - id: replacement
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Replace*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
  id: Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Replace(String,String,MatchEvaluator)
  nameWithType: Regex.Replace(String,String,MatchEvaluator)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,MatchEvaluator)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator"></xref> delegate.
  syntax:
    content: public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Replace*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
  id: Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Replace(String,MatchEvaluator,Int32)
  nameWithType: Regex.Replace(String,MatchEvaluator,Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,MatchEvaluator,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator"></xref> delegate.
  syntax:
    content: public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator, int count);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Replace*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)
  id: Replace(System.String,System.String,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Replace(String,String,Int32,Int32)
  nameWithType: Regex.Replace(String,String,Int32,Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a specified replacement string.
  syntax:
    content: public string Replace (string input, string replacement, int count, int startat);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: replacement
      type: System.String
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    - id: startat
      type: System.Int32
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Replace*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Replace(String,String,String,RegexOptions)
  nameWithType: Regex.Replace(String,String,String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,String,RegexOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.
  syntax:
    content: public static string Replace (string input, string pattern, string replacement, System.Text.RegularExpressions.RegexOptions options);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    - id: replacement
      type: System.String
      description: To be added.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Replace*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
  id: Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Replace(String,String,MatchEvaluator,RegexOptions)
  nameWithType: Regex.Replace(String,String,MatchEvaluator,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,MatchEvaluator,RegexOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: In a specified input string, replaces all strings that match a specified regular expression with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator"></xref> delegate. Specified options modify the matching operation.
  syntax:
    content: public static string Replace (string input, string pattern, System.Text.RegularExpressions.MatchEvaluator evaluator, System.Text.RegularExpressions.RegexOptions options);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: To be added.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Replace*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
  id: Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Replace(String,MatchEvaluator,Int32,Int32)
  nameWithType: Regex.Replace(String,MatchEvaluator,Int32,Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,MatchEvaluator,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: In a specified input substring, replaces a specified maximum number of strings that match a regular expression pattern with a string returned by a <xref href="System.Text.RegularExpressions.MatchEvaluator"></xref> delegate.
  syntax:
    content: public string Replace (string input, System.Text.RegularExpressions.MatchEvaluator evaluator, int count, int startat);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: evaluator
      type: System.Text.RegularExpressions.MatchEvaluator
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    - id: startat
      type: System.Int32
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Replace*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.RightToLeft
  id: RightToLeft
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: RightToLeft
  nameWithType: Regex.RightToLeft
  fullName: System.Text.RegularExpressions.Regex.RightToLeft
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets a value that indicates whether the regular expression searches from right to left.
  syntax:
    content: public bool RightToLeft { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.RightToLeft*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.roptions
  id: roptions
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: roptions
  nameWithType: Regex.roptions
  fullName: System.Text.RegularExpressions.Regex.roptions
  type: Field
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex"></xref> object generated by the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly*> method.
  syntax:
    content: protected System.Text.RegularExpressions.RegexOptions roptions;
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: To be added.
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Split(System.String)
  id: Split(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Split(String)
  nameWithType: Regex.Split(String)
  fullName: System.Text.RegularExpressions.Regex.Split(String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Splits an input string into an array of substrings at the positions defined by a regular expression pattern specified in the <xref href="System.Text.RegularExpressions.Regex"></xref> constructor.
  syntax:
    content: public string[] Split (string input);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    return:
      type: System.String[]
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Split*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)
  id: Split(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Split(String,Int32)
  nameWithType: Regex.Split(String,Int32)
  fullName: System.Text.RegularExpressions.Regex.Split(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the <xref href="System.Text.RegularExpressions.Regex"></xref> constructor.
  syntax:
    content: public string[] Split (string input, int count);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.String[]
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Split*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.String)
  id: Split(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Split(String,String)
  nameWithType: Regex.Split(String,String)
  fullName: System.Text.RegularExpressions.Regex.Split(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Splits an input string into an array of substrings at the positions defined by a regular expression pattern.
  syntax:
    content: public static string[] Split (string input, string pattern);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    return:
      type: System.String[]
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Split*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)
  id: Split(System.String,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Split(String,Int32,Int32)
  nameWithType: Regex.Split(String,Int32,Int32)
  fullName: System.Text.RegularExpressions.Regex.Split(String,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Splits an input string a specified maximum number of times into an array of substrings, at the positions defined by a regular expression specified in the <xref href="System.Text.RegularExpressions.Regex"></xref> constructor. The search for the regular expression pattern starts at a specified character position in the input string.
  syntax:
    content: public string[] Split (string input, int count, int startat);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    - id: startat
      type: System.Int32
      description: To be added.
    return:
      type: System.String[]
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Split*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  id: Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Split(String,String,RegexOptions)
  nameWithType: Regex.Split(String,String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Split(String,String,RegexOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Splits an input string into an array of substrings at the positions defined by a specified regular expression pattern. Specified options modify the matching operation.
  syntax:
    content: public static string[] Split (string input, string pattern, System.Text.RegularExpressions.RegexOptions options);
    parameters:
    - id: input
      type: System.String
      description: To be added.
    - id: pattern
      type: System.String
      description: To be added.
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: To be added.
    return:
      type: System.String[]
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Split*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Regex.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Text.RegularExpressions.Regex.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Populates a <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object with the data necessary to deserialize the current <xref href="System.Text.RegularExpressions.Regex"></xref> object.
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.ToString
  id: ToString
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: ToString()
  nameWithType: Regex.ToString()
  fullName: System.Text.RegularExpressions.Regex.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Returns the regular expression pattern that was passed into the `Regex` constructor.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.ToString*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.Unescape(System.String)
  id: Unescape(System.String)
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: Unescape(String)
  nameWithType: Regex.Unescape(String)
  fullName: System.Text.RegularExpressions.Regex.Unescape(String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Converts any escaped characters in the input string.
  syntax:
    content: public static string Unescape (string str);
    parameters:
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.Unescape*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.UseOptionC
  id: UseOptionC
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: UseOptionC()
  nameWithType: Regex.UseOptionC()
  fullName: System.Text.RegularExpressions.Regex.UseOptionC()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex"></xref> object generated by the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly*> method.
  syntax:
    content: protected bool UseOptionC ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.UseOptionC*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Regex.UseOptionR
  id: UseOptionR
  parent: System.Text.RegularExpressions.Regex
  langs:
  - csharp
  name: UseOptionR()
  nameWithType: Regex.UseOptionR()
  fullName: System.Text.RegularExpressions.Regex.UseOptionR()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Used by a <xref href="System.Text.RegularExpressions.Regex"></xref> object generated by the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly*> method.
  syntax:
    content: protected bool UseOptionR ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Text.RegularExpressions.Regex.UseOptionR*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Text.RegularExpressions.Regex.#ctor
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Regex()
  nameWithType: Regex.Regex()
  fullName: System.Text.RegularExpressions.Regex.Regex()
- uid: System.Text.RegularExpressions.Regex.#ctor(System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Regex(String)
  nameWithType: Regex.Regex(String)
  fullName: System.Text.RegularExpressions.Regex.Regex(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Regex(SerializationInfo,StreamingContext)
  nameWithType: Regex.Regex(SerializationInfo,StreamingContext)
  fullName: System.Text.RegularExpressions.Regex.Regex(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Regex(String,RegexOptions)
  nameWithType: Regex.Regex(String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Regex(String,RegexOptions)
- uid: System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: false
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Text.RegularExpressions.Regex.CacheSize
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: CacheSize
  nameWithType: Regex.CacheSize
  fullName: System.Text.RegularExpressions.Regex.CacheSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.RegularExpressions.Regex.capnames
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: capnames
  nameWithType: Regex.capnames
  fullName: System.Text.RegularExpressions.Regex.capnames
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Text.RegularExpressions.Regex.caps
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: caps
  nameWithType: Regex.caps
  fullName: System.Text.RegularExpressions.Regex.caps
- uid: System.Text.RegularExpressions.Regex.capsize
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: capsize
  nameWithType: Regex.capsize
  fullName: System.Text.RegularExpressions.Regex.capsize
- uid: System.Text.RegularExpressions.Regex.capslist
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: capslist
  nameWithType: Regex.capslist
  fullName: System.Text.RegularExpressions.Regex.capslist
- uid: System.String[]
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: CompileToAssembly(RegexCompilationInfo[],AssemblyName)
  nameWithType: Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName)
  fullName: System.Text.RegularExpressions.Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName)
- uid: System.Text.RegularExpressions.RegexCompilationInfo[]
  parent: System.Text.RegularExpressions
  isExternal: false
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo
  fullName: System.Text.RegularExpressions.RegexCompilationInfo[]
  spec.csharp:
  - uid: System.Text.RegularExpressions.RegexCompilationInfo
    name: RegexCompilationInfo
    nameWithType: RegexCompilationInfo
    fullName: RegexCompilationInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[])
  nameWithType: Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[])
  fullName: System.Text.RegularExpressions.Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[])
- uid: System.Reflection.Emit.CustomAttributeBuilder[]
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder[]
  spec.csharp:
  - uid: System.Reflection.Emit.CustomAttributeBuilder
    name: CustomAttributeBuilder
    nameWithType: CustomAttributeBuilder
    fullName: CustomAttributeBuilder[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[],String)
  nameWithType: Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[],String)
  fullName: System.Text.RegularExpressions.Regex.CompileToAssembly(RegexCompilationInfo[],AssemblyName,CustomAttributeBuilder[],String)
- uid: System.Text.RegularExpressions.Regex.Escape(System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Escape(String)
  nameWithType: Regex.Escape(String)
  fullName: System.Text.RegularExpressions.Regex.Escape(String)
- uid: System.Text.RegularExpressions.Regex.factory
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: factory
  nameWithType: Regex.factory
  fullName: System.Text.RegularExpressions.Regex.factory
- uid: System.Text.RegularExpressions.RegexRunnerFactory
  parent: System.Text.RegularExpressions
  isExternal: false
  name: RegexRunnerFactory
  nameWithType: RegexRunnerFactory
  fullName: System.Text.RegularExpressions.RegexRunnerFactory
- uid: System.Text.RegularExpressions.Regex.GetGroupNames
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: GetGroupNames()
  nameWithType: Regex.GetGroupNames()
  fullName: System.Text.RegularExpressions.Regex.GetGroupNames()
- uid: System.Text.RegularExpressions.Regex.GetGroupNumbers
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: GetGroupNumbers()
  nameWithType: Regex.GetGroupNumbers()
  fullName: System.Text.RegularExpressions.Regex.GetGroupNumbers()
- uid: System.Int32[]
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: GroupNameFromNumber(Int32)
  nameWithType: Regex.GroupNameFromNumber(Int32)
  fullName: System.Text.RegularExpressions.Regex.GroupNameFromNumber(Int32)
- uid: System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: GroupNumberFromName(String)
  nameWithType: Regex.GroupNumberFromName(String)
  fullName: System.Text.RegularExpressions.Regex.GroupNumberFromName(String)
- uid: System.Text.RegularExpressions.Regex.InitializeReferences
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: InitializeReferences()
  nameWithType: Regex.InitializeReferences()
  fullName: System.Text.RegularExpressions.Regex.InitializeReferences()
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: IsMatch(String)
  nameWithType: Regex.IsMatch(String)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: IsMatch(String,Int32)
  nameWithType: Regex.IsMatch(String,Int32)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(String,Int32)
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: IsMatch(String,String)
  nameWithType: Regex.IsMatch(String,String)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(String,String)
- uid: System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: IsMatch(String,String,RegexOptions)
  nameWithType: Regex.IsMatch(String,String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.IsMatch(String,String,RegexOptions)
- uid: System.Text.RegularExpressions.Regex.Match(System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Match(String)
  nameWithType: Regex.Match(String)
  fullName: System.Text.RegularExpressions.Regex.Match(String)
- uid: System.Text.RegularExpressions.Match
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Match
  nameWithType: Match
  fullName: System.Text.RegularExpressions.Match
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Match(String,Int32)
  nameWithType: Regex.Match(String,Int32)
  fullName: System.Text.RegularExpressions.Regex.Match(String,Int32)
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Match(String,String)
  nameWithType: Regex.Match(String,String)
  fullName: System.Text.RegularExpressions.Regex.Match(String,String)
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Match(String,Int32,Int32)
  nameWithType: Regex.Match(String,Int32,Int32)
  fullName: System.Text.RegularExpressions.Regex.Match(String,Int32,Int32)
- uid: System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Match(String,String,RegexOptions)
  nameWithType: Regex.Match(String,String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Match(String,String,RegexOptions)
- uid: System.Text.RegularExpressions.Regex.Matches(System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Matches(String)
  nameWithType: Regex.Matches(String)
  fullName: System.Text.RegularExpressions.Regex.Matches(String)
- uid: System.Text.RegularExpressions.MatchCollection
  parent: System.Text.RegularExpressions
  isExternal: false
  name: MatchCollection
  nameWithType: MatchCollection
  fullName: System.Text.RegularExpressions.MatchCollection
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Matches(String,Int32)
  nameWithType: Regex.Matches(String,Int32)
  fullName: System.Text.RegularExpressions.Regex.Matches(String,Int32)
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Matches(String,String)
  nameWithType: Regex.Matches(String,String)
  fullName: System.Text.RegularExpressions.Regex.Matches(String,String)
- uid: System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Matches(String,String,RegexOptions)
  nameWithType: Regex.Matches(String,String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Matches(String,String,RegexOptions)
- uid: System.Text.RegularExpressions.Regex.Options
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Options
  nameWithType: Regex.Options
  fullName: System.Text.RegularExpressions.Regex.Options
- uid: System.Text.RegularExpressions.Regex.pattern
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: pattern
  nameWithType: Regex.pattern
  fullName: System.Text.RegularExpressions.Regex.pattern
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace(String,String)
  nameWithType: Regex.Replace(String,String)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace(String,MatchEvaluator)
  nameWithType: Regex.Replace(String,MatchEvaluator)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,MatchEvaluator)
- uid: System.Text.RegularExpressions.MatchEvaluator
  parent: System.Text.RegularExpressions
  isExternal: false
  name: MatchEvaluator
  nameWithType: MatchEvaluator
  fullName: System.Text.RegularExpressions.MatchEvaluator
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace(String,String,Int32)
  nameWithType: Regex.Replace(String,String,Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,Int32)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace(String,String,String)
  nameWithType: Regex.Replace(String,String,String)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,String)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace(String,String,MatchEvaluator)
  nameWithType: Regex.Replace(String,String,MatchEvaluator)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,MatchEvaluator)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace(String,MatchEvaluator,Int32)
  nameWithType: Regex.Replace(String,MatchEvaluator,Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,MatchEvaluator,Int32)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace(String,String,Int32,Int32)
  nameWithType: Regex.Replace(String,String,Int32,Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,Int32,Int32)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace(String,String,String,RegexOptions)
  nameWithType: Regex.Replace(String,String,String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,String,RegexOptions)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace(String,String,MatchEvaluator,RegexOptions)
  nameWithType: Regex.Replace(String,String,MatchEvaluator,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,String,MatchEvaluator,RegexOptions)
- uid: System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace(String,MatchEvaluator,Int32,Int32)
  nameWithType: Regex.Replace(String,MatchEvaluator,Int32,Int32)
  fullName: System.Text.RegularExpressions.Regex.Replace(String,MatchEvaluator,Int32,Int32)
- uid: System.Text.RegularExpressions.Regex.RightToLeft
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: RightToLeft
  nameWithType: Regex.RightToLeft
  fullName: System.Text.RegularExpressions.Regex.RightToLeft
- uid: System.Text.RegularExpressions.Regex.roptions
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: roptions
  nameWithType: Regex.roptions
  fullName: System.Text.RegularExpressions.Regex.roptions
- uid: System.Text.RegularExpressions.Regex.Split(System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Split(String)
  nameWithType: Regex.Split(String)
  fullName: System.Text.RegularExpressions.Regex.Split(String)
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Split(String,Int32)
  nameWithType: Regex.Split(String,Int32)
  fullName: System.Text.RegularExpressions.Regex.Split(String,Int32)
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Split(String,String)
  nameWithType: Regex.Split(String,String)
  fullName: System.Text.RegularExpressions.Regex.Split(String,String)
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Split(String,Int32,Int32)
  nameWithType: Regex.Split(String,Int32,Int32)
  fullName: System.Text.RegularExpressions.Regex.Split(String,Int32,Int32)
- uid: System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Split(String,String,RegexOptions)
  nameWithType: Regex.Split(String,String,RegexOptions)
  fullName: System.Text.RegularExpressions.Regex.Split(String,String,RegexOptions)
- uid: System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Regex.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Text.RegularExpressions.Regex.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Text.RegularExpressions.Regex.ToString
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: ToString()
  nameWithType: Regex.ToString()
  fullName: System.Text.RegularExpressions.Regex.ToString()
- uid: System.Text.RegularExpressions.Regex.Unescape(System.String)
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Unescape(String)
  nameWithType: Regex.Unescape(String)
  fullName: System.Text.RegularExpressions.Regex.Unescape(String)
- uid: System.Text.RegularExpressions.Regex.UseOptionC
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: UseOptionC()
  nameWithType: Regex.UseOptionC()
  fullName: System.Text.RegularExpressions.Regex.UseOptionC()
- uid: System.Text.RegularExpressions.Regex.UseOptionR
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: UseOptionR()
  nameWithType: Regex.UseOptionR()
  fullName: System.Text.RegularExpressions.Regex.UseOptionR()
- uid: System.Text.RegularExpressions.Regex.#ctor*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Regex
  nameWithType: Regex.Regex
- uid: System.Text.RegularExpressions.Regex.CacheSize*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: CacheSize
  nameWithType: Regex.CacheSize
- uid: System.Text.RegularExpressions.Regex.CompileToAssembly*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: CompileToAssembly
  nameWithType: Regex.CompileToAssembly
- uid: System.Text.RegularExpressions.Regex.Escape*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Escape
  nameWithType: Regex.Escape
- uid: System.Text.RegularExpressions.Regex.GetGroupNames*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: GetGroupNames
  nameWithType: Regex.GetGroupNames
- uid: System.Text.RegularExpressions.Regex.GetGroupNumbers*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: GetGroupNumbers
  nameWithType: Regex.GetGroupNumbers
- uid: System.Text.RegularExpressions.Regex.GroupNameFromNumber*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: GroupNameFromNumber
  nameWithType: Regex.GroupNameFromNumber
- uid: System.Text.RegularExpressions.Regex.GroupNumberFromName*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: GroupNumberFromName
  nameWithType: Regex.GroupNumberFromName
- uid: System.Text.RegularExpressions.Regex.InitializeReferences*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: InitializeReferences
  nameWithType: Regex.InitializeReferences
- uid: System.Text.RegularExpressions.Regex.IsMatch*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: IsMatch
  nameWithType: Regex.IsMatch
- uid: System.Text.RegularExpressions.Regex.Match*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Match
  nameWithType: Regex.Match
- uid: System.Text.RegularExpressions.Regex.Matches*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Matches
  nameWithType: Regex.Matches
- uid: System.Text.RegularExpressions.Regex.Options*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Options
  nameWithType: Regex.Options
- uid: System.Text.RegularExpressions.Regex.Replace*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Replace
  nameWithType: Regex.Replace
- uid: System.Text.RegularExpressions.Regex.RightToLeft*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: RightToLeft
  nameWithType: Regex.RightToLeft
- uid: System.Text.RegularExpressions.Regex.Split*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Split
  nameWithType: Regex.Split
- uid: System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Regex.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Text.RegularExpressions.Regex.ToString*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: ToString
  nameWithType: Regex.ToString
- uid: System.Text.RegularExpressions.Regex.Unescape*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: Unescape
  nameWithType: Regex.Unescape
- uid: System.Text.RegularExpressions.Regex.UseOptionC*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: UseOptionC
  nameWithType: Regex.UseOptionC
- uid: System.Text.RegularExpressions.Regex.UseOptionR*
  parent: System.Text.RegularExpressions.Regex
  isExternal: false
  name: UseOptionR
  nameWithType: Regex.UseOptionR
