### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.ProjectTargetInstance
  id: ProjectTargetInstance
  children:
  - Microsoft.Build.Execution.ProjectTargetInstance.Children
  - Microsoft.Build.Execution.ProjectTargetInstance.Condition
  - Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets
  - Microsoft.Build.Execution.ProjectTargetInstance.FullPath
  - Microsoft.Build.Execution.ProjectTargetInstance.Inputs
  - Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs
  - Microsoft.Build.Execution.ProjectTargetInstance.Name
  - Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren
  - Microsoft.Build.Execution.ProjectTargetInstance.Outputs
  - Microsoft.Build.Execution.ProjectTargetInstance.Returns
  - Microsoft.Build.Execution.ProjectTargetInstance.Tasks
  langs:
  - csharp
  name: ProjectTargetInstance
  nameWithType: ProjectTargetInstance
  fullName: Microsoft.Build.Execution.ProjectTargetInstance
  type: Class
  summary: Wraps a [Target Element (MSBuild)](~/add/includes/ajax-current-ext-md.md).
  remarks: This is an immutable class.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Name={name} Count={children.Count} Condition={condition} Inputs={inputs} Outputs={outputs} DependsOnTargets={dependsOnTargets}")]

      public sealed class ProjectTargetInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Children
  id: Children
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: Children
  nameWithType: ProjectTargetInstance.Children
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Children
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets a list of the children of this target. The build iterates through this to get each task to execute.
  remarks: This is an ordered collection. This is a read-only list; the ProjectTargetInstance class is immutable. This collection does not contain the OnError target references.
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectTargetInstanceChild> Children { get; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectTargetInstanceChild}
      description: Returns a list of the children of this target.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.Children*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Condition
  id: Condition
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: Condition
  nameWithType: ProjectTargetInstance.Condition
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Condition
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets the unevaluated Condition attribute of this target element.
  syntax:
    content: public string Condition { get; }
    return:
      type: System.String
      description: Returns the Condition attribute value. Returns an empty string if the attribute is not present.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.Condition*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets
  id: DependsOnTargets
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: DependsOnTargets
  nameWithType: ProjectTargetInstance.DependsOnTargets
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets an unevaluated semicolon-delimited list of targets that this target depends on.
  syntax:
    content: public string DependsOnTargets { get; }
    return:
      type: System.String
      description: Returns an unevaluated semicolon-delimited list of targets that this target depends on. Returns an empty string if this target depends on no other targets.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.FullPath
  id: FullPath
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: FullPath
  nameWithType: ProjectTargetInstance.FullPath
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.FullPath
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets the full path to the file from which this target originated.
  syntax:
    content: public string FullPath { get; }
    return:
      type: System.String
      description: Returns the full path to the file from which this target originated. Returns an empty string if this target originated in a project that was not loaded and has never been given a path.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.FullPath*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Inputs
  id: Inputs
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: Inputs
  nameWithType: ProjectTargetInstance.Inputs
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Inputs
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets the unevaluated inputs on this target element.
  syntax:
    content: public string Inputs { get; }
    return:
      type: System.String
      description: Returns the unevaluated inputs on this target element. Returns an empty string if this target has no inputs.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.Inputs*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs
  id: KeepDuplicateOutputs
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: KeepDuplicateOutputs
  nameWithType: ProjectTargetInstance.KeepDuplicateOutputs
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets an unevaluated condition which is used to delete duplicate outputs from this target.
  syntax:
    content: public string KeepDuplicateOutputs { get; }
    return:
      type: System.String
      description: Returns an unevaluated condition which is used to delete duplicate outputs from this target. Returns an empty string if there is no condition.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Name
  id: Name
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: Name
  nameWithType: ProjectTargetInstance.Name
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Name
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets the name of the target.
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: Returns the name of the target.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.Name*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren
  id: OnErrorChildren
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: OnErrorChildren
  nameWithType: ProjectTargetInstance.OnErrorChildren
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets a list of the children of this target that refer to OnError targets.
  remarks: This is an ordered collection. This is a read-only list; the ProjectTargetInstance class is immutable.
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectOnErrorInstance> OnErrorChildren { get; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectOnErrorInstance}
      description: Gets a list of the children of this target that refer to OnError targets.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Outputs
  id: Outputs
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: Outputs
  nameWithType: ProjectTargetInstance.Outputs
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Outputs
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets the unevaluated outputs on this target element May be empty string.
  syntax:
    content: public string Outputs { get; }
    return:
      type: System.String
      description: Returns the unevaluated outputs on this target element Returns an empty string if there are no outputs.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.Outputs*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Returns
  id: Returns
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: Returns
  nameWithType: ProjectTargetInstance.Returns
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Returns
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets the unevaluated return values on the target element as a string.
  syntax:
    content: public string Returns { get; }
    return:
      type: System.String
      description: Returns the unevaluated return values on the target element as a string. Returns an empty string or null, if no return value is specified.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.Returns*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Tasks
  id: Tasks
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  langs:
  - csharp
  name: Tasks
  nameWithType: ProjectTargetInstance.Tasks
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Tasks
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets all the tasks that are immediate children of this target.
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectTaskInstance> Tasks { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectTaskInstance}
      description: Returns all the tasks that are immediate children of this target.
  overload: Microsoft.Build.Execution.ProjectTargetInstance.Tasks*
  exceptions: []
  version:
  - netframework-4.0
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Children
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Children
  nameWithType: ProjectTargetInstance.Children
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Children
- uid: System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectTargetInstanceChild}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<ProjectTargetInstanceChild>
  nameWithType: IList<ProjectTargetInstanceChild>
  fullName: System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectTargetInstanceChild>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Build.Execution.ProjectTargetInstanceChild>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectTargetInstanceChild
    name: ProjectTargetInstanceChild
    nameWithType: ProjectTargetInstanceChild
    fullName: ProjectTargetInstanceChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Condition
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Condition
  nameWithType: ProjectTargetInstance.Condition
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Condition
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: DependsOnTargets
  nameWithType: ProjectTargetInstance.DependsOnTargets
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets
- uid: Microsoft.Build.Execution.ProjectTargetInstance.FullPath
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: FullPath
  nameWithType: ProjectTargetInstance.FullPath
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.FullPath
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Inputs
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Inputs
  nameWithType: ProjectTargetInstance.Inputs
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Inputs
- uid: Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: KeepDuplicateOutputs
  nameWithType: ProjectTargetInstance.KeepDuplicateOutputs
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Name
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Name
  nameWithType: ProjectTargetInstance.Name
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Name
- uid: Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: OnErrorChildren
  nameWithType: ProjectTargetInstance.OnErrorChildren
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren
- uid: System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectOnErrorInstance}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<ProjectOnErrorInstance>
  nameWithType: IList<ProjectOnErrorInstance>
  fullName: System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectOnErrorInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Build.Execution.ProjectOnErrorInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectOnErrorInstance
    name: ProjectOnErrorInstance
    nameWithType: ProjectOnErrorInstance
    fullName: ProjectOnErrorInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Outputs
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Outputs
  nameWithType: ProjectTargetInstance.Outputs
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Outputs
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Returns
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Returns
  nameWithType: ProjectTargetInstance.Returns
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Returns
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Tasks
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Tasks
  nameWithType: ProjectTargetInstance.Tasks
  fullName: Microsoft.Build.Execution.ProjectTargetInstance.Tasks
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectTaskInstance}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<ProjectTaskInstance>
  nameWithType: ICollection<ProjectTaskInstance>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectTaskInstance>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Execution.ProjectTaskInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectTaskInstance
    name: ProjectTaskInstance
    nameWithType: ProjectTaskInstance
    fullName: ProjectTaskInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Children*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Children
  nameWithType: ProjectTargetInstance.Children
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Condition*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Condition
  nameWithType: ProjectTargetInstance.Condition
- uid: Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: DependsOnTargets
  nameWithType: ProjectTargetInstance.DependsOnTargets
- uid: Microsoft.Build.Execution.ProjectTargetInstance.FullPath*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: FullPath
  nameWithType: ProjectTargetInstance.FullPath
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Inputs*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Inputs
  nameWithType: ProjectTargetInstance.Inputs
- uid: Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: KeepDuplicateOutputs
  nameWithType: ProjectTargetInstance.KeepDuplicateOutputs
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Name*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Name
  nameWithType: ProjectTargetInstance.Name
- uid: Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: OnErrorChildren
  nameWithType: ProjectTargetInstance.OnErrorChildren
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Outputs*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Outputs
  nameWithType: ProjectTargetInstance.Outputs
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Returns*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Returns
  nameWithType: ProjectTargetInstance.Returns
- uid: Microsoft.Build.Execution.ProjectTargetInstance.Tasks*
  parent: Microsoft.Build.Execution.ProjectTargetInstance
  isExternal: false
  name: Tasks
  nameWithType: ProjectTargetInstance.Tasks
