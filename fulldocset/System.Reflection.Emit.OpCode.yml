### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.OpCode
  id: OpCode
  children:
  - System.Reflection.Emit.OpCode.Equals(System.Object)
  - System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)
  - System.Reflection.Emit.OpCode.FlowControl
  - System.Reflection.Emit.OpCode.GetHashCode
  - System.Reflection.Emit.OpCode.Name
  - System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)
  - System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)
  - System.Reflection.Emit.OpCode.OpCodeType
  - System.Reflection.Emit.OpCode.OperandType
  - System.Reflection.Emit.OpCode.Size
  - System.Reflection.Emit.OpCode.StackBehaviourPop
  - System.Reflection.Emit.OpCode.StackBehaviourPush
  - System.Reflection.Emit.OpCode.ToString
  - System.Reflection.Emit.OpCode.Value
  langs:
  - csharp
  name: OpCode
  nameWithType: OpCode
  fullName: System.Reflection.Emit.OpCode
  type: Struct
  summary: Describes an intermediate language (IL) instruction.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct OpCode
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: OpCode.Equals(Object)
  fullName: System.Reflection.Emit.OpCode.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Tests whether the given object is equal to this `Opcode`.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare to this object.
    return:
      type: System.Boolean
      description: '`true` if <code>obj</code> is an instance of `Opcode` and is equal to this object; otherwise, `false`.'
  overload: System.Reflection.Emit.OpCode.Equals*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)
  id: Equals(System.Reflection.Emit.OpCode)
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: Equals(OpCode)
  nameWithType: OpCode.Equals(OpCode)
  fullName: System.Reflection.Emit.OpCode.Equals(OpCode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Indicates whether the current instance is equal to the specified <xref href="System.Reflection.Emit.OpCode"></xref>.
  syntax:
    content: public bool Equals (System.Reflection.Emit.OpCode obj);
    parameters:
    - id: obj
      type: System.Reflection.Emit.OpCode
      description: The <xref href="System.Reflection.Emit.OpCode"></xref> to compare to the current instance.
    return:
      type: System.Boolean
      description: '`true` if the value of <code>obj</code> is equal to the value of the current instance; otherwise, `false`.'
  overload: System.Reflection.Emit.OpCode.Equals*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.FlowControl
  id: FlowControl
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: FlowControl
  nameWithType: OpCode.FlowControl
  fullName: System.Reflection.Emit.OpCode.FlowControl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: The flow control characteristics of the intermediate language (IL) instruction.
  syntax:
    content: public System.Reflection.Emit.FlowControl FlowControl { get; }
    return:
      type: System.Reflection.Emit.FlowControl
      description: Read-only. The type of flow control.
  overload: System.Reflection.Emit.OpCode.FlowControl*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: OpCode.GetHashCode()
  fullName: System.Reflection.Emit.OpCode.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the generated hash code for this `Opcode`.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: Returns the hash code for this instance.
  overload: System.Reflection.Emit.OpCode.GetHashCode*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.Name
  id: Name
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: Name
  nameWithType: OpCode.Name
  fullName: System.Reflection.Emit.OpCode.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: The name of the intermediate language (IL) instruction.
  remarks: The <xref:System.Reflection.Emit.OpCode.Value%2A> property returns the numeric value of the IL instruction.
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: Read-only. The name of the IL instruction.
  overload: System.Reflection.Emit.OpCode.Name*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)
  id: op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: op_Equality(OpCode,OpCode)
  nameWithType: OpCode.op_Equality(OpCode,OpCode)
  fullName: System.Reflection.Emit.OpCode.op_Equality(OpCode,OpCode)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Indicates whether two <xref href="System.Reflection.Emit.OpCode"></xref> structures are equal.
  syntax:
    content: public static bool op_Equality (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);
    parameters:
    - id: a
      type: System.Reflection.Emit.OpCode
      description: The <xref href="System.Reflection.Emit.OpCode"></xref> to compare to <code>b</code>.
    - id: b
      type: System.Reflection.Emit.OpCode
      description: The <xref href="System.Reflection.Emit.OpCode"></xref> to compare to <code>a</code>.
    return:
      type: System.Boolean
      description: '`true` if <code>a</code> is equal to <code>b</code>; otherwise, `false`.'
  overload: System.Reflection.Emit.OpCode.op_Equality*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)
  id: op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: op_Inequality(OpCode,OpCode)
  nameWithType: OpCode.op_Inequality(OpCode,OpCode)
  fullName: System.Reflection.Emit.OpCode.op_Inequality(OpCode,OpCode)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Indicates whether two <xref href="System.Reflection.Emit.OpCode"></xref> structures are not equal.
  syntax:
    content: public static bool op_Inequality (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);
    parameters:
    - id: a
      type: System.Reflection.Emit.OpCode
      description: The <xref href="System.Reflection.Emit.OpCode"></xref> to compare to <code>b</code>.
    - id: b
      type: System.Reflection.Emit.OpCode
      description: The <xref href="System.Reflection.Emit.OpCode"></xref> to compare to <code>a</code>.
    return:
      type: System.Boolean
      description: '`true` if <code>a</code> is not equal to <code>b</code>; otherwise, `false`.'
  overload: System.Reflection.Emit.OpCode.op_Inequality*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.OpCodeType
  id: OpCodeType
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: OpCodeType
  nameWithType: OpCode.OpCodeType
  fullName: System.Reflection.Emit.OpCode.OpCodeType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: The type of intermediate language (IL) instruction.
  syntax:
    content: public System.Reflection.Emit.OpCodeType OpCodeType { get; }
    return:
      type: System.Reflection.Emit.OpCodeType
      description: Read-only. The type of intermediate language (IL) instruction.
  overload: System.Reflection.Emit.OpCode.OpCodeType*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.OperandType
  id: OperandType
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: OperandType
  nameWithType: OpCode.OperandType
  fullName: System.Reflection.Emit.OpCode.OperandType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: The operand type of an intermediate language (IL) instruction.
  syntax:
    content: public System.Reflection.Emit.OperandType OperandType { get; }
    return:
      type: System.Reflection.Emit.OperandType
      description: Read-only. The operand type of an IL instruction.
  overload: System.Reflection.Emit.OpCode.OperandType*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.Size
  id: Size
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: Size
  nameWithType: OpCode.Size
  fullName: System.Reflection.Emit.OpCode.Size
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: The size of the intermediate language (IL) instruction.
  syntax:
    content: public int Size { get; }
    return:
      type: System.Int32
      description: Read-only. The size of the IL instruction.
  overload: System.Reflection.Emit.OpCode.Size*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.StackBehaviourPop
  id: StackBehaviourPop
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: StackBehaviourPop
  nameWithType: OpCode.StackBehaviourPop
  fullName: System.Reflection.Emit.OpCode.StackBehaviourPop
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: How the intermediate language (IL) instruction pops the stack.
  syntax:
    content: public System.Reflection.Emit.StackBehaviour StackBehaviourPop { get; }
    return:
      type: System.Reflection.Emit.StackBehaviour
      description: Read-only. The way the IL instruction pops the stack.
  overload: System.Reflection.Emit.OpCode.StackBehaviourPop*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.StackBehaviourPush
  id: StackBehaviourPush
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: StackBehaviourPush
  nameWithType: OpCode.StackBehaviourPush
  fullName: System.Reflection.Emit.OpCode.StackBehaviourPush
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: How the intermediate language (IL) instruction pushes operand onto the stack.
  syntax:
    content: public System.Reflection.Emit.StackBehaviour StackBehaviourPush { get; }
    return:
      type: System.Reflection.Emit.StackBehaviour
      description: Read-only. The way the IL instruction pushes operand onto the stack.
  overload: System.Reflection.Emit.OpCode.StackBehaviourPush*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.ToString
  id: ToString
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: ToString()
  nameWithType: OpCode.ToString()
  fullName: System.Reflection.Emit.OpCode.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns this `Opcode` as a <xref href="System.String"></xref>.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: Returns a <xref href="System.String"></xref> containing the name of this `Opcode`.
  overload: System.Reflection.Emit.OpCode.ToString*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.OpCode.Value
  id: Value
  parent: System.Reflection.Emit.OpCode
  langs:
  - csharp
  name: Value
  nameWithType: OpCode.Value
  fullName: System.Reflection.Emit.OpCode.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Gets the numeric value of the intermediate language (IL) instruction.
  remarks: The <xref:System.Reflection.Emit.OpCode.Name%2A> property returns the string name that corresponds to the instruction's numeric value.
  example:
  - "The following example displays the property values of the <xref:System.Reflection.Emit.OpCodes.Add?displayProperty=fullName> instruction.  \n  \n [!code-cs[System.Reflection.Emit.OpCode.Value#1](~/add/codesnippet/csharp/p-system.reflection.emit_17_1.cs)]\n [!code-vb[System.Reflection.Emit.OpCode.Value#1](~/add/codesnippet/visualbasic/p-system.reflection.emit_17_1.vb)]"
  syntax:
    content: public short Value { get; }
    return:
      type: System.Int16
      description: Read-only. The numeric value of the IL instruction.
  overload: System.Reflection.Emit.OpCode.Value*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\OpCode.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/OpCode.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Reflection.Emit.OpCode.Equals(System.Object)
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: Equals(Object)
  nameWithType: OpCode.Equals(Object)
  fullName: System.Reflection.Emit.OpCode.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: Equals(OpCode)
  nameWithType: OpCode.Equals(OpCode)
  fullName: System.Reflection.Emit.OpCode.Equals(OpCode)
- uid: System.Reflection.Emit.OpCode
  parent: System.Reflection.Emit
  isExternal: false
  name: OpCode
  nameWithType: OpCode
  fullName: System.Reflection.Emit.OpCode
- uid: System.Reflection.Emit.OpCode.FlowControl
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: FlowControl
  nameWithType: OpCode.FlowControl
  fullName: System.Reflection.Emit.OpCode.FlowControl
- uid: System.Reflection.Emit.FlowControl
  parent: System.Reflection.Emit
  isExternal: false
  name: FlowControl
  nameWithType: FlowControl
  fullName: System.Reflection.Emit.FlowControl
- uid: System.Reflection.Emit.OpCode.GetHashCode
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: GetHashCode()
  nameWithType: OpCode.GetHashCode()
  fullName: System.Reflection.Emit.OpCode.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.OpCode.Name
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: Name
  nameWithType: OpCode.Name
  fullName: System.Reflection.Emit.OpCode.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: op_Equality(OpCode,OpCode)
  nameWithType: OpCode.op_Equality(OpCode,OpCode)
  fullName: System.Reflection.Emit.OpCode.op_Equality(OpCode,OpCode)
- uid: System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: op_Inequality(OpCode,OpCode)
  nameWithType: OpCode.op_Inequality(OpCode,OpCode)
  fullName: System.Reflection.Emit.OpCode.op_Inequality(OpCode,OpCode)
- uid: System.Reflection.Emit.OpCode.OpCodeType
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: OpCodeType
  nameWithType: OpCode.OpCodeType
  fullName: System.Reflection.Emit.OpCode.OpCodeType
- uid: System.Reflection.Emit.OpCodeType
  parent: System.Reflection.Emit
  isExternal: false
  name: OpCodeType
  nameWithType: OpCodeType
  fullName: System.Reflection.Emit.OpCodeType
- uid: System.Reflection.Emit.OpCode.OperandType
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: OperandType
  nameWithType: OpCode.OperandType
  fullName: System.Reflection.Emit.OpCode.OperandType
- uid: System.Reflection.Emit.OperandType
  parent: System.Reflection.Emit
  isExternal: false
  name: OperandType
  nameWithType: OperandType
  fullName: System.Reflection.Emit.OperandType
- uid: System.Reflection.Emit.OpCode.Size
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: Size
  nameWithType: OpCode.Size
  fullName: System.Reflection.Emit.OpCode.Size
- uid: System.Reflection.Emit.OpCode.StackBehaviourPop
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: StackBehaviourPop
  nameWithType: OpCode.StackBehaviourPop
  fullName: System.Reflection.Emit.OpCode.StackBehaviourPop
- uid: System.Reflection.Emit.StackBehaviour
  parent: System.Reflection.Emit
  isExternal: false
  name: StackBehaviour
  nameWithType: StackBehaviour
  fullName: System.Reflection.Emit.StackBehaviour
- uid: System.Reflection.Emit.OpCode.StackBehaviourPush
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: StackBehaviourPush
  nameWithType: OpCode.StackBehaviourPush
  fullName: System.Reflection.Emit.OpCode.StackBehaviourPush
- uid: System.Reflection.Emit.OpCode.ToString
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: ToString()
  nameWithType: OpCode.ToString()
  fullName: System.Reflection.Emit.OpCode.ToString()
- uid: System.Reflection.Emit.OpCode.Value
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: Value
  nameWithType: OpCode.Value
  fullName: System.Reflection.Emit.OpCode.Value
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.OpCode.Equals*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: Equals
  nameWithType: OpCode.Equals
- uid: System.Reflection.Emit.OpCode.FlowControl*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: FlowControl
  nameWithType: OpCode.FlowControl
- uid: System.Reflection.Emit.OpCode.GetHashCode*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: GetHashCode
  nameWithType: OpCode.GetHashCode
- uid: System.Reflection.Emit.OpCode.Name*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: Name
  nameWithType: OpCode.Name
- uid: System.Reflection.Emit.OpCode.op_Equality*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: op_Equality
  nameWithType: OpCode.op_Equality
- uid: System.Reflection.Emit.OpCode.op_Inequality*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: op_Inequality
  nameWithType: OpCode.op_Inequality
- uid: System.Reflection.Emit.OpCode.OpCodeType*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: OpCodeType
  nameWithType: OpCode.OpCodeType
- uid: System.Reflection.Emit.OpCode.OperandType*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: OperandType
  nameWithType: OpCode.OperandType
- uid: System.Reflection.Emit.OpCode.Size*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: Size
  nameWithType: OpCode.Size
- uid: System.Reflection.Emit.OpCode.StackBehaviourPop*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: StackBehaviourPop
  nameWithType: OpCode.StackBehaviourPop
- uid: System.Reflection.Emit.OpCode.StackBehaviourPush*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: StackBehaviourPush
  nameWithType: OpCode.StackBehaviourPush
- uid: System.Reflection.Emit.OpCode.ToString*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: ToString
  nameWithType: OpCode.ToString
- uid: System.Reflection.Emit.OpCode.Value*
  parent: System.Reflection.Emit.OpCode
  isExternal: false
  name: Value
  nameWithType: OpCode.Value
