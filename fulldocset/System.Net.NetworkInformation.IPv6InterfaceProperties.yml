### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties
  id: IPv6InterfaceProperties
  children:
  - System.Net.NetworkInformation.IPv6InterfaceProperties.#ctor
  - System.Net.NetworkInformation.IPv6InterfaceProperties.GetScopeId(System.Net.NetworkInformation.ScopeLevel)
  - System.Net.NetworkInformation.IPv6InterfaceProperties.Index
  - System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu
  langs:
  - csharp
  name: IPv6InterfaceProperties
  nameWithType: IPv6InterfaceProperties
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties
  type: Class
  summary: Provides information about network interfaces that support Internet Protocol version 6 (IPv6).
  remarks: "This class provides access to configuration and address information for network interfaces that support IPv6. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method.  \n  \n For IPV4 properties, see <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A>."
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPInterfaceProperties> object and displays its data.  \n  \n [!code-cs[NclNetInfo2#49](~/add/codesnippet/csharp/t-system.net.networkinfo_2_1.cs)]\n [!code-vb[NclNetInfo2#49](~/add/codesnippet/visualbasic/t-system.net.networkinfo_2_1.vb)]\n [!code-cpp[NclNetInfo2#49](~/add/codesnippet/cpp/t-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public abstract class IPv6InterfaceProperties
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPv6InterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPv6InterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  langs:
  - csharp
  name: IPv6InterfaceProperties()
  nameWithType: IPv6InterfaceProperties.IPv6InterfaceProperties()
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties.IPv6InterfaceProperties()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.IPv6InterfaceProperties"></xref> class.
  remarks: This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPv6InterfaceProperties>.
  syntax:
    content: protected IPv6InterfaceProperties ();
    parameters: []
  overload: System.Net.NetworkInformation.IPv6InterfaceProperties.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPv6InterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPv6InterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.GetScopeId(System.Net.NetworkInformation.ScopeLevel)
  id: GetScopeId(System.Net.NetworkInformation.ScopeLevel)
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  langs:
  - csharp
  name: GetScopeId(ScopeLevel)
  nameWithType: IPv6InterfaceProperties.GetScopeId(ScopeLevel)
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties.GetScopeId(ScopeLevel)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the scope ID of the network interface associated with an Internet Protocol version 6 (IPv6) address.
  syntax:
    content: public virtual long GetScopeId (System.Net.NetworkInformation.ScopeLevel scopeLevel);
    parameters:
    - id: scopeLevel
      type: System.Net.NetworkInformation.ScopeLevel
      description: The scope level.
    return:
      type: System.Int64
      description: "Returns <xref href=\"System.Int64\"></xref>.  \n  \n The scope ID of the network interface associated with an IPv6 address."
  overload: System.Net.NetworkInformation.IPv6InterfaceProperties.GetScopeId*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPv6InterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPv6InterfaceProperties.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.Index
  id: Index
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  langs:
  - csharp
  name: Index
  nameWithType: IPv6InterfaceProperties.Index
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties.Index
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the index of the network interface associated with an Internet Protocol version 6 (IPv6) address.
  remarks: If the value of this property is zero, IPv6 is not supported by this interface.
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPv6InterfaceProperties> object and displays its data.  \n  \n [!code-cs[NclNetInfo2#49](~/add/codesnippet/csharp/p-system.net.networkinfo_109_1.cs)]\n [!code-vb[NclNetInfo2#49](~/add/codesnippet/visualbasic/p-system.net.networkinfo_109_1.vb)]\n [!code-cpp[NclNetInfo2#49](~/add/codesnippet/cpp/p-system.net.networkinfo_109_1.cpp)]"
  syntax:
    content: public abstract int Index { get; }
    return:
      type: System.Int32
      description: An <xref href="System.Int32"></xref> value that contains the index of the network interface for IPv6 address.
  overload: System.Net.NetworkInformation.IPv6InterfaceProperties.Index*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPv6InterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPv6InterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu
  id: Mtu
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  langs:
  - csharp
  name: Mtu
  nameWithType: IPv6InterfaceProperties.Mtu
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the maximum transmission unit (MTU) for this network interface.
  remarks: The MTU of a network interface is the largest packet that can be transmitted. It is measured in octets (8-bit bytes).
  example:
  - "The following code example gets an <xref:System.Net.NetworkInformation.IPv6InterfaceProperties> object and displays its data.  \n  \n [!code-cs[NclNetInfo2#49](~/add/codesnippet/csharp/p-system.net.networkinfo_90_1.cs)]\n [!code-vb[NclNetInfo2#49](~/add/codesnippet/visualbasic/p-system.net.networkinfo_90_1.vb)]\n [!code-cpp[NclNetInfo2#49](~/add/codesnippet/cpp/p-system.net.networkinfo_90_1.cpp)]"
  syntax:
    content: public abstract int Mtu { get; }
    return:
      type: System.Int32
      description: An <xref href="System.Int64"></xref> value that specifies the MTU.
  overload: System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPv6InterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPv6InterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.#ctor
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  isExternal: false
  name: IPv6InterfaceProperties()
  nameWithType: IPv6InterfaceProperties.IPv6InterfaceProperties()
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties.IPv6InterfaceProperties()
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.GetScopeId(System.Net.NetworkInformation.ScopeLevel)
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  isExternal: false
  name: GetScopeId(ScopeLevel)
  nameWithType: IPv6InterfaceProperties.GetScopeId(ScopeLevel)
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties.GetScopeId(ScopeLevel)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.NetworkInformation.ScopeLevel
  parent: System.Net.NetworkInformation
  isExternal: false
  name: ScopeLevel
  nameWithType: ScopeLevel
  fullName: System.Net.NetworkInformation.ScopeLevel
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.Index
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  isExternal: false
  name: Index
  nameWithType: IPv6InterfaceProperties.Index
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties.Index
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  isExternal: false
  name: Mtu
  nameWithType: IPv6InterfaceProperties.Mtu
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.#ctor*
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  isExternal: false
  name: IPv6InterfaceProperties
  nameWithType: IPv6InterfaceProperties.IPv6InterfaceProperties
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.GetScopeId*
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  isExternal: false
  name: GetScopeId
  nameWithType: IPv6InterfaceProperties.GetScopeId
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.Index*
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  isExternal: false
  name: Index
  nameWithType: IPv6InterfaceProperties.Index
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu*
  parent: System.Net.NetworkInformation.IPv6InterfaceProperties
  isExternal: false
  name: Mtu
  nameWithType: IPv6InterfaceProperties.Mtu
