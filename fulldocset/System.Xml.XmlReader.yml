### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlReader
  id: XmlReader
  children:
  - System.Xml.XmlReader.#ctor
  - System.Xml.XmlReader.AttributeCount
  - System.Xml.XmlReader.BaseURI
  - System.Xml.XmlReader.CanReadBinaryContent
  - System.Xml.XmlReader.CanReadValueChunk
  - System.Xml.XmlReader.CanResolveEntity
  - System.Xml.XmlReader.Close
  - System.Xml.XmlReader.Create(System.IO.Stream)
  - System.Xml.XmlReader.Create(System.IO.TextReader)
  - System.Xml.XmlReader.Create(System.String)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Depth
  - System.Xml.XmlReader.Dispose(System.Boolean)
  - System.Xml.XmlReader.EOF
  - System.Xml.XmlReader.GetAttribute(System.Int32)
  - System.Xml.XmlReader.GetAttribute(System.String)
  - System.Xml.XmlReader.GetAttribute(System.String,System.String)
  - System.Xml.XmlReader.HasAttributes
  - System.Xml.XmlReader.HasValue
  - System.Xml.XmlReader.IsDefault
  - System.Xml.XmlReader.IsEmptyElement
  - System.Xml.XmlReader.IsName(System.String)
  - System.Xml.XmlReader.IsNameToken(System.String)
  - System.Xml.XmlReader.IsStartElement
  - System.Xml.XmlReader.IsStartElement(System.String)
  - System.Xml.XmlReader.IsStartElement(System.String,System.String)
  - System.Xml.XmlReader.Item(System.Int32)
  - System.Xml.XmlReader.Item(System.String)
  - System.Xml.XmlReader.Item(System.String,System.String)
  - System.Xml.XmlReader.LocalName
  - System.Xml.XmlReader.LookupNamespace(System.String)
  - System.Xml.XmlReader.MoveToAttribute(System.Int32)
  - System.Xml.XmlReader.MoveToAttribute(System.String)
  - System.Xml.XmlReader.MoveToAttribute(System.String,System.String)
  - System.Xml.XmlReader.MoveToContent
  - System.Xml.XmlReader.MoveToElement
  - System.Xml.XmlReader.MoveToFirstAttribute
  - System.Xml.XmlReader.MoveToNextAttribute
  - System.Xml.XmlReader.Name
  - System.Xml.XmlReader.NamespaceURI
  - System.Xml.XmlReader.NameTable
  - System.Xml.XmlReader.NodeType
  - System.Xml.XmlReader.Prefix
  - System.Xml.XmlReader.QuoteChar
  - System.Xml.XmlReader.Read
  - System.Xml.XmlReader.ReadAttributeValue
  - System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBoolean
  - System.Xml.XmlReader.ReadContentAsDateTime
  - System.Xml.XmlReader.ReadContentAsDecimal
  - System.Xml.XmlReader.ReadContentAsDouble
  - System.Xml.XmlReader.ReadContentAsFloat
  - System.Xml.XmlReader.ReadContentAsInt
  - System.Xml.XmlReader.ReadContentAsLong
  - System.Xml.XmlReader.ReadContentAsObject
  - System.Xml.XmlReader.ReadContentAsString
  - System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBoolean
  - System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsDateTime
  - System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsDecimal
  - System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsDouble
  - System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsFloat
  - System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsInt
  - System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsLong
  - System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsObject
  - System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsString
  - System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  - System.Xml.XmlReader.ReadElementString
  - System.Xml.XmlReader.ReadElementString(System.String)
  - System.Xml.XmlReader.ReadElementString(System.String,System.String)
  - System.Xml.XmlReader.ReadEndElement
  - System.Xml.XmlReader.ReadInnerXml
  - System.Xml.XmlReader.ReadOuterXml
  - System.Xml.XmlReader.ReadStartElement
  - System.Xml.XmlReader.ReadStartElement(System.String)
  - System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  - System.Xml.XmlReader.ReadState
  - System.Xml.XmlReader.ReadString
  - System.Xml.XmlReader.ReadSubtree
  - System.Xml.XmlReader.ReadToDescendant(System.String)
  - System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  - System.Xml.XmlReader.ReadToFollowing(System.String)
  - System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  - System.Xml.XmlReader.ReadToNextSibling(System.String)
  - System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  - System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ResolveEntity
  - System.Xml.XmlReader.SchemaInfo
  - System.Xml.XmlReader.Settings
  - System.Xml.XmlReader.Skip
  - System.Xml.XmlReader.System#IDisposable#Dispose
  - System.Xml.XmlReader.Value
  - System.Xml.XmlReader.ValueType
  - System.Xml.XmlReader.XmlLang
  - System.Xml.XmlReader.XmlSpace
  langs:
  - csharp
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
  type: Class
  summary: "Represents a reader that provides fast, noncached, forward-only access to XML data.  \n  \n To browse the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#System.Xml/Xml/System/Xml/Core/XmlReader.cs#086471e5cca0825f)."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")]

      public abstract class XmlReader : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.#ctor
  id: '#ctor'
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: XmlReader()
  nameWithType: XmlReader.XmlReader()
  fullName: System.Xml.XmlReader.XmlReader()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Initializes a new instance of the `XmlReader` class.
  syntax:
    content: protected XmlReader ();
    parameters: []
  overload: System.Xml.XmlReader.#ctor*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.AttributeCount
  id: AttributeCount
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: AttributeCount
  nameWithType: XmlReader.AttributeCount
  fullName: System.Xml.XmlReader.AttributeCount
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the number of attributes on the current node.
  syntax:
    content: public abstract int AttributeCount { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.AttributeCount*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.BaseURI
  id: BaseURI
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: BaseURI
  nameWithType: XmlReader.BaseURI
  fullName: System.Xml.XmlReader.BaseURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the base URI of the current node.
  syntax:
    content: public abstract string BaseURI { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.BaseURI*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.CanReadBinaryContent
  id: CanReadBinaryContent
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: CanReadBinaryContent
  nameWithType: XmlReader.CanReadBinaryContent
  fullName: System.Xml.XmlReader.CanReadBinaryContent
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Gets a value indicating whether the <xref href="System.Xml.XmlReader"></xref> implements the binary content read methods.
  syntax:
    content: public virtual bool CanReadBinaryContent { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.CanReadBinaryContent*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.CanReadValueChunk
  id: CanReadValueChunk
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: CanReadValueChunk
  nameWithType: XmlReader.CanReadValueChunk
  fullName: System.Xml.XmlReader.CanReadValueChunk
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Gets a value indicating whether the <xref href="System.Xml.XmlReader"></xref> implements the <xref:System.Xml.XmlReader.ReadValueChunk*> method.
  syntax:
    content: public virtual bool CanReadValueChunk { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.CanReadValueChunk*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.CanResolveEntity
  id: CanResolveEntity
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: CanResolveEntity
  nameWithType: XmlReader.CanResolveEntity
  fullName: System.Xml.XmlReader.CanResolveEntity
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Gets a value indicating whether this reader can parse and resolve entities.
  syntax:
    content: public virtual bool CanResolveEntity { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.CanResolveEntity*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Close
  id: Close
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Close()
  nameWithType: XmlReader.Close()
  fullName: System.Xml.XmlReader.Close()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, changes the <xref:System.Xml.XmlReader.ReadState*> to <xref href="System.Xml.ReadState"></xref>.
  syntax:
    content: public abstract void Close ();
    parameters: []
  overload: System.Xml.XmlReader.Close*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.IO.Stream)
  id: Create(System.IO.Stream)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(Stream)
  nameWithType: XmlReader.Create(Stream)
  fullName: System.Xml.XmlReader.Create(Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance using the specified stream with default settings.
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.Stream input);
    parameters:
    - id: input
      type: System.IO.Stream
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.IO.TextReader)
  id: Create(System.IO.TextReader)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(TextReader)
  nameWithType: XmlReader.Create(TextReader)
  fullName: System.Xml.XmlReader.Create(TextReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified text reader.
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.TextReader input);
    parameters:
    - id: input
      type: System.IO.TextReader
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.String)
  id: Create(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(String)
  nameWithType: XmlReader.Create(String)
  fullName: System.Xml.XmlReader.Create(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance with specified URI.
  syntax:
    content: public static System.Xml.XmlReader Create (string inputUri);
    parameters:
    - id: inputUri
      type: System.String
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  id: Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(Stream,XmlReaderSettings)
  nameWithType: XmlReader.Create(Stream,XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(Stream,XmlReaderSettings)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance with the specified stream and settings.
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings);
    parameters:
    - id: input
      type: System.IO.Stream
      description: To be added.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  id: Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(TextReader,XmlReaderSettings)
  nameWithType: XmlReader.Create(TextReader,XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(TextReader,XmlReaderSettings)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified text reader and settings.
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings);
    parameters:
    - id: input
      type: System.IO.TextReader
      description: To be added.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  id: Create(System.String,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(String,XmlReaderSettings)
  nameWithType: XmlReader.Create(String,XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(String,XmlReaderSettings)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified URI and settings.
  syntax:
    content: public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings);
    parameters:
    - id: inputUri
      type: System.String
      description: To be added.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  id: Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(XmlReader,XmlReaderSettings)
  nameWithType: XmlReader.Create(XmlReader,XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(XmlReader,XmlReaderSettings)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified XML reader and settings.
  syntax:
    content: public static System.Xml.XmlReader Create (System.Xml.XmlReader reader, System.Xml.XmlReaderSettings settings);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: To be added.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  id: Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(Stream,XmlReaderSettings,String)
  nameWithType: XmlReader.Create(Stream,XmlReaderSettings,String)
  fullName: System.Xml.XmlReader.Create(Stream,XmlReaderSettings,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance using the specified stream, base URI, and settings.
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, string baseUri);
    parameters:
    - id: input
      type: System.IO.Stream
      description: To be added.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: To be added.
    - id: baseUri
      type: System.String
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  id: Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(Stream,XmlReaderSettings,XmlParserContext)
  nameWithType: XmlReader.Create(Stream,XmlReaderSettings,XmlParserContext)
  fullName: System.Xml.XmlReader.Create(Stream,XmlReaderSettings,XmlParserContext)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance using the specified stream, settings, and context information for parsing.
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);
    parameters:
    - id: input
      type: System.IO.Stream
      description: To be added.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: To be added.
    - id: inputContext
      type: System.Xml.XmlParserContext
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  id: Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(TextReader,XmlReaderSettings,String)
  nameWithType: XmlReader.Create(TextReader,XmlReaderSettings,String)
  fullName: System.Xml.XmlReader.Create(TextReader,XmlReaderSettings,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified text reader, settings, and base URI.
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, string baseUri);
    parameters:
    - id: input
      type: System.IO.TextReader
      description: To be added.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: To be added.
    - id: baseUri
      type: System.String
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  id: Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(TextReader,XmlReaderSettings,XmlParserContext)
  nameWithType: XmlReader.Create(TextReader,XmlReaderSettings,XmlParserContext)
  fullName: System.Xml.XmlReader.Create(TextReader,XmlReaderSettings,XmlParserContext)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified text reader, settings, and context information for parsing.
  syntax:
    content: public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);
    parameters:
    - id: input
      type: System.IO.TextReader
      description: To be added.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: To be added.
    - id: inputContext
      type: System.Xml.XmlParserContext
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  id: Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Create(String,XmlReaderSettings,XmlParserContext)
  nameWithType: XmlReader.Create(String,XmlReaderSettings,XmlParserContext)
  fullName: System.Xml.XmlReader.Create(String,XmlReaderSettings,XmlParserContext)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XmlReader"></xref> instance by using the specified URI, settings, and context information for parsing.
  syntax:
    content: public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);
    parameters:
    - id: inputUri
      type: System.String
      description: To be added.
    - id: settings
      type: System.Xml.XmlReaderSettings
      description: To be added.
    - id: inputContext
      type: System.Xml.XmlParserContext
      description: To be added.
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.Create*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Depth
  id: Depth
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Depth
  nameWithType: XmlReader.Depth
  fullName: System.Xml.XmlReader.Depth
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the depth of the current node in the XML document.
  syntax:
    content: public abstract int Depth { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.Depth*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XmlReader.Dispose(Boolean)
  fullName: System.Xml.XmlReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Releases the unmanaged resources used by the <xref href="System.Xml.XmlReader"></xref> and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.Dispose*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.EOF
  id: EOF
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: EOF
  nameWithType: XmlReader.EOF
  fullName: System.Xml.XmlReader.EOF
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.
  syntax:
    content: public abstract bool EOF { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.EOF*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.GetAttribute(System.Int32)
  id: GetAttribute(System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: GetAttribute(Int32)
  nameWithType: XmlReader.GetAttribute(Int32)
  fullName: System.Xml.XmlReader.GetAttribute(Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified index.
  syntax:
    content: public abstract string GetAttribute (int i);
    parameters:
    - id: i
      type: System.Int32
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.GetAttribute*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: XmlReader.GetAttribute(String)
  fullName: System.Xml.XmlReader.GetAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref:System.Xml.XmlReader.Name*>.
  syntax:
    content: public abstract string GetAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.GetAttribute*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.GetAttribute(System.String,System.String)
  id: GetAttribute(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: GetAttribute(String,String)
  nameWithType: XmlReader.GetAttribute(String,String)
  fullName: System.Xml.XmlReader.GetAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref:System.Xml.XmlReader.LocalName*> and <xref:System.Xml.XmlReader.NamespaceURI*>.
  syntax:
    content: public abstract string GetAttribute (string name, string namespaceURI);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.GetAttribute*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.HasAttributes
  id: HasAttributes
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: HasAttributes
  nameWithType: XmlReader.HasAttributes
  fullName: System.Xml.XmlReader.HasAttributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Gets a value indicating whether the current node has any attributes.
  syntax:
    content: public virtual bool HasAttributes { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.HasAttributes*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.HasValue
  id: HasValue
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: HasValue
  nameWithType: XmlReader.HasValue
  fullName: System.Xml.XmlReader.HasValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the current node can have a <xref:System.Xml.XmlReader.Value*>.
  syntax:
    content: public virtual bool HasValue { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.HasValue*
  exceptions: []
  version:
  - netframework-40
- uid: System.Xml.XmlReader.IsDefault
  id: IsDefault
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsDefault
  nameWithType: XmlReader.IsDefault
  fullName: System.Xml.XmlReader.IsDefault
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.
  syntax:
    content: public virtual bool IsDefault { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.IsDefault*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.IsEmptyElement
  id: IsEmptyElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsEmptyElement
  nameWithType: XmlReader.IsEmptyElement
  fullName: System.Xml.XmlReader.IsEmptyElement
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, `<MyElement></MyElement>`).
  syntax:
    content: public abstract bool IsEmptyElement { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.IsEmptyElement*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.IsName(System.String)
  id: IsName(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsName(String)
  nameWithType: XmlReader.IsName(String)
  fullName: System.Xml.XmlReader.IsName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Returns a value indicating whether the string argument is a valid XML name.
  syntax:
    content: public static bool IsName (string str);
    parameters:
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.IsName*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.IsNameToken(System.String)
  id: IsNameToken(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsNameToken(String)
  nameWithType: XmlReader.IsNameToken(String)
  fullName: System.Xml.XmlReader.IsNameToken(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Returns a value indicating whether or not the string argument is a valid XML name token.
  syntax:
    content: public static bool IsNameToken (string str);
    parameters:
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.IsNameToken*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.IsStartElement
  id: IsStartElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsStartElement()
  nameWithType: XmlReader.IsStartElement()
  fullName: System.Xml.XmlReader.IsStartElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Calls <xref:System.Xml.XmlReader.MoveToContent*> and tests if the current content node is a start tag or empty element tag.
  syntax:
    content: public virtual bool IsStartElement ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.IsStartElement*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.IsStartElement(System.String)
  id: IsStartElement(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsStartElement(String)
  nameWithType: XmlReader.IsStartElement(String)
  fullName: System.Xml.XmlReader.IsStartElement(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Calls <xref:System.Xml.XmlReader.MoveToContent*> and tests if the current content node is a start tag or empty element tag and if the <xref:System.Xml.XmlReader.Name*> property of the element found matches the given argument.
  syntax:
    content: public virtual bool IsStartElement (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.IsStartElement*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.IsStartElement(System.String,System.String)
  id: IsStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IsStartElement(String,String)
  nameWithType: XmlReader.IsStartElement(String,String)
  fullName: System.Xml.XmlReader.IsStartElement(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Calls <xref:System.Xml.XmlReader.MoveToContent*> and tests if the current content node is a start tag or empty element tag and if the <xref:System.Xml.XmlReader.LocalName*> and <xref:System.Xml.XmlReader.NamespaceURI*> properties of the element found match the given strings.
  syntax:
    content: public virtual bool IsStartElement (string localname, string ns);
    parameters:
    - id: localname
      type: System.String
      description: To be added.
    - id: ns
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.IsStartElement*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: XmlReader.Item(Int32)
  fullName: System.Xml.XmlReader.Item(Int32)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified index.
  syntax:
    content: public virtual string this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.Item*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Item(System.String)
  id: Item(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: XmlReader.Item(String)
  fullName: System.Xml.XmlReader.Item(String)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref:System.Xml.XmlReader.Name*>.
  syntax:
    content: public virtual string this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.Item*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Item(String,String)
  nameWithType: XmlReader.Item(String,String)
  fullName: System.Xml.XmlReader.Item(String,String)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the value of the attribute with the specified <xref:System.Xml.XmlReader.LocalName*> and <xref:System.Xml.XmlReader.NamespaceURI*>.
  syntax:
    content: public virtual string this[string name, string namespaceURI] { get; }
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.Item*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.LocalName
  id: LocalName
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlReader.LocalName
  fullName: System.Xml.XmlReader.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the local name of the current node.
  syntax:
    content: public abstract string LocalName { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.LocalName*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.LookupNamespace(System.String)
  id: LookupNamespace(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: LookupNamespace(String)
  nameWithType: XmlReader.LookupNamespace(String)
  fullName: System.Xml.XmlReader.LookupNamespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, resolves a namespace prefix in the current element's scope.
  syntax:
    content: public abstract string LookupNamespace (string prefix);
    parameters:
    - id: prefix
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.LookupNamespace*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.MoveToAttribute(System.Int32)
  id: MoveToAttribute(System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToAttribute(Int32)
  nameWithType: XmlReader.MoveToAttribute(Int32)
  fullName: System.Xml.XmlReader.MoveToAttribute(Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the attribute with the specified index.
  syntax:
    content: public virtual void MoveToAttribute (int i);
    parameters:
    - id: i
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.MoveToAttribute*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.MoveToAttribute(System.String)
  id: MoveToAttribute(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToAttribute(String)
  nameWithType: XmlReader.MoveToAttribute(String)
  fullName: System.Xml.XmlReader.MoveToAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the attribute with the specified <xref:System.Xml.XmlReader.Name*>.
  syntax:
    content: public abstract bool MoveToAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.MoveToAttribute*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.MoveToAttribute(System.String,System.String)
  id: MoveToAttribute(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToAttribute(String,String)
  nameWithType: XmlReader.MoveToAttribute(String,String)
  fullName: System.Xml.XmlReader.MoveToAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the attribute with the specified <xref:System.Xml.XmlReader.LocalName*> and <xref:System.Xml.XmlReader.NamespaceURI*>.
  syntax:
    content: public abstract bool MoveToAttribute (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    - id: ns
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.MoveToAttribute*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.MoveToContent
  id: MoveToContent
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToContent()
  nameWithType: XmlReader.MoveToContent()
  fullName: System.Xml.XmlReader.MoveToContent()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: 'Checks whether the current node is a content (non-white space text, `CDATA`, `Element`, `EndElement`, `EntityReference`, or `EndEntity`) node. If the node is not a content node, the reader skips ahead to the next content node or end of file. It skips over nodes of the following type: `ProcessingInstruction`, `DocumentType`, `Comment`, `Whitespace`, or `SignificantWhitespace`.'
  syntax:
    content: public virtual System.Xml.XmlNodeType MoveToContent ();
    parameters: []
    return:
      type: System.Xml.XmlNodeType
      description: To be added.
  overload: System.Xml.XmlReader.MoveToContent*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.MoveToElement
  id: MoveToElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToElement()
  nameWithType: XmlReader.MoveToElement()
  fullName: System.Xml.XmlReader.MoveToElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the element that contains the current attribute node.
  syntax:
    content: public abstract bool MoveToElement ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.MoveToElement*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.MoveToFirstAttribute
  id: MoveToFirstAttribute
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToFirstAttribute()
  nameWithType: XmlReader.MoveToFirstAttribute()
  fullName: System.Xml.XmlReader.MoveToFirstAttribute()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the first attribute.
  syntax:
    content: public abstract bool MoveToFirstAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.MoveToFirstAttribute*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.MoveToNextAttribute
  id: MoveToNextAttribute
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: MoveToNextAttribute()
  nameWithType: XmlReader.MoveToNextAttribute()
  fullName: System.Xml.XmlReader.MoveToNextAttribute()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, moves to the next attribute.
  syntax:
    content: public abstract bool MoveToNextAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.MoveToNextAttribute*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Name
  id: Name
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Name
  nameWithType: XmlReader.Name
  fullName: System.Xml.XmlReader.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the qualified name of the current node.
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.Name*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: NamespaceURI
  nameWithType: XmlReader.NamespaceURI
  fullName: System.Xml.XmlReader.NamespaceURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.
  syntax:
    content: public abstract string NamespaceURI { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.NamespaceURI*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.NameTable
  id: NameTable
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: NameTable
  nameWithType: XmlReader.NameTable
  fullName: System.Xml.XmlReader.NameTable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the <xref href="System.Xml.XmlNameTable"></xref> associated with this implementation.
  syntax:
    content: public abstract System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: To be added.
  overload: System.Xml.XmlReader.NameTable*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.NodeType
  id: NodeType
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlReader.NodeType
  fullName: System.Xml.XmlReader.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the type of the current node.
  syntax:
    content: public abstract System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: To be added.
  overload: System.Xml.XmlReader.NodeType*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Prefix
  id: Prefix
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Prefix
  nameWithType: XmlReader.Prefix
  fullName: System.Xml.XmlReader.Prefix
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the namespace prefix associated with the current node.
  syntax:
    content: public abstract string Prefix { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.Prefix*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.QuoteChar
  id: QuoteChar
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: QuoteChar
  nameWithType: XmlReader.QuoteChar
  fullName: System.Xml.XmlReader.QuoteChar
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.
  syntax:
    content: public virtual char QuoteChar { get; }
    return:
      type: System.Char
      description: To be added.
  overload: System.Xml.XmlReader.QuoteChar*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Read
  id: Read
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Read()
  nameWithType: XmlReader.Read()
  fullName: System.Xml.XmlReader.Read()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, reads the next node from the stream.
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.Read*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadAttributeValue
  id: ReadAttributeValue
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadAttributeValue()
  nameWithType: XmlReader.ReadAttributeValue()
  fullName: System.Xml.XmlReader.ReadAttributeValue()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, parses the attribute value into one or more `Text`, `EntityReference`, or `EndEntity` nodes.
  syntax:
    content: public abstract bool ReadAttributeValue ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.ReadAttributeValue*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAs(Type,IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadContentAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.XmlReader.ReadContentAs(Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the content as an object of the type specified.
  syntax:
    content: public virtual object ReadContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);
    parameters:
    - id: returnType
      type: System.Type
      description: To be added.
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAs*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsBase64(Byte[],Int32,Int32)
  nameWithType: XmlReader.ReadContentAsBase64(Byte[],Int32,Int32)
  fullName: System.Xml.XmlReader.ReadContentAsBase64(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the content and returns the Base64 decoded binary bytes.
  syntax:
    content: public virtual int ReadContentAsBase64 (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsBase64*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsBinHex(Byte[],Int32,Int32)
  nameWithType: XmlReader.ReadContentAsBinHex(Byte[],Int32,Int32)
  fullName: System.Xml.XmlReader.ReadContentAsBinHex(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the content and returns the `BinHex` decoded binary bytes.
  syntax:
    content: public virtual int ReadContentAsBinHex (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsBinHex*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsBoolean
  id: ReadContentAsBoolean
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsBoolean()
  nameWithType: XmlReader.ReadContentAsBoolean()
  fullName: System.Xml.XmlReader.ReadContentAsBoolean()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the text content at the current position as a `Boolean`.
  syntax:
    content: public virtual bool ReadContentAsBoolean ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsBoolean*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsDateTime
  id: ReadContentAsDateTime
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsDateTime()
  nameWithType: XmlReader.ReadContentAsDateTime()
  fullName: System.Xml.XmlReader.ReadContentAsDateTime()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the text content at the current position as a <xref href="System.DateTime"></xref> object.
  syntax:
    content: public virtual DateTime ReadContentAsDateTime ();
    parameters: []
    return:
      type: System.DateTime
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsDateTime*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsDecimal
  id: ReadContentAsDecimal
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsDecimal()
  nameWithType: XmlReader.ReadContentAsDecimal()
  fullName: System.Xml.XmlReader.ReadContentAsDecimal()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the text content at the current position as a <xref href="System.Decimal"></xref> object.
  syntax:
    content: public virtual decimal ReadContentAsDecimal ();
    parameters: []
    return:
      type: System.Decimal
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsDecimal*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsDouble
  id: ReadContentAsDouble
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsDouble()
  nameWithType: XmlReader.ReadContentAsDouble()
  fullName: System.Xml.XmlReader.ReadContentAsDouble()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the text content at the current position as a double-precision floating-point number.
  syntax:
    content: public virtual double ReadContentAsDouble ();
    parameters: []
    return:
      type: System.Double
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsDouble*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsFloat
  id: ReadContentAsFloat
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsFloat()
  nameWithType: XmlReader.ReadContentAsFloat()
  fullName: System.Xml.XmlReader.ReadContentAsFloat()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the text content at the current position as a single-precision floating point number.
  syntax:
    content: public virtual float ReadContentAsFloat ();
    parameters: []
    return:
      type: System.Single
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsFloat*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsInt
  id: ReadContentAsInt
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsInt()
  nameWithType: XmlReader.ReadContentAsInt()
  fullName: System.Xml.XmlReader.ReadContentAsInt()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the text content at the current position as a 32-bit signed integer.
  syntax:
    content: public virtual int ReadContentAsInt ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsInt*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsLong
  id: ReadContentAsLong
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsLong()
  nameWithType: XmlReader.ReadContentAsLong()
  fullName: System.Xml.XmlReader.ReadContentAsLong()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the text content at the current position as a 64-bit signed integer.
  syntax:
    content: public virtual long ReadContentAsLong ();
    parameters: []
    return:
      type: System.Int64
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsLong*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsObject
  id: ReadContentAsObject
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsObject()
  nameWithType: XmlReader.ReadContentAsObject()
  fullName: System.Xml.XmlReader.ReadContentAsObject()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the text content at the current position as an <xref href="System.Object"></xref>.
  syntax:
    content: public virtual object ReadContentAsObject ();
    parameters: []
    return:
      type: System.Object
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsObject*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadContentAsString
  id: ReadContentAsString
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadContentAsString()
  nameWithType: XmlReader.ReadContentAsString()
  fullName: System.Xml.XmlReader.ReadContentAsString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the text content at the current position as a <xref href="System.String"></xref> object.
  syntax:
    content: public virtual string ReadContentAsString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadContentAsString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAs(Type,IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadElementContentAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.XmlReader.ReadElementContentAs(Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the element content as the requested type.
  syntax:
    content: public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);
    parameters:
    - id: returnType
      type: System.Type
      description: To be added.
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAs*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  id: ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAs(Type,IXmlNamespaceResolver,String,String)
  nameWithType: XmlReader.ReadElementContentAs(Type,IXmlNamespaceResolver,String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAs(Type,IXmlNamespaceResolver,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.
  syntax:
    content: public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI);
    parameters:
    - id: returnType
      type: System.Type
      description: To be added.
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: To be added.
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAs*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsBase64(Byte[],Int32,Int32)
  nameWithType: XmlReader.ReadElementContentAsBase64(Byte[],Int32,Int32)
  fullName: System.Xml.XmlReader.ReadElementContentAsBase64(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the element and decodes the `Base64` content.
  syntax:
    content: public virtual int ReadElementContentAsBase64 (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsBase64*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsBinHex(Byte[],Int32,Int32)
  nameWithType: XmlReader.ReadElementContentAsBinHex(Byte[],Int32,Int32)
  fullName: System.Xml.XmlReader.ReadElementContentAsBinHex(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the element and decodes the `BinHex` content.
  syntax:
    content: public virtual int ReadElementContentAsBinHex (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsBinHex*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean
  id: ReadElementContentAsBoolean
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsBoolean()
  nameWithType: XmlReader.ReadElementContentAsBoolean()
  fullName: System.Xml.XmlReader.ReadElementContentAsBoolean()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.Boolean"></xref> object.
  syntax:
    content: public virtual bool ReadElementContentAsBoolean ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsBoolean*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  id: ReadElementContentAsBoolean(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsBoolean(String,String)
  nameWithType: XmlReader.ReadElementContentAsBoolean(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsBoolean(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.Boolean"></xref> object.
  syntax:
    content: public virtual bool ReadElementContentAsBoolean (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsBoolean*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime
  id: ReadElementContentAsDateTime
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDateTime()
  nameWithType: XmlReader.ReadElementContentAsDateTime()
  fullName: System.Xml.XmlReader.ReadElementContentAsDateTime()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.DateTime"></xref> object.
  syntax:
    content: public virtual DateTime ReadElementContentAsDateTime ();
    parameters: []
    return:
      type: System.DateTime
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsDateTime*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)
  id: ReadElementContentAsDateTime(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDateTime(String,String)
  nameWithType: XmlReader.ReadElementContentAsDateTime(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsDateTime(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.DateTime"></xref> object.
  syntax:
    content: public virtual DateTime ReadElementContentAsDateTime (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.DateTime
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsDateTime*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal
  id: ReadElementContentAsDecimal
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDecimal()
  nameWithType: XmlReader.ReadElementContentAsDecimal()
  fullName: System.Xml.XmlReader.ReadElementContentAsDecimal()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.Decimal"></xref> object.
  syntax:
    content: public virtual decimal ReadElementContentAsDecimal ();
    parameters: []
    return:
      type: System.Decimal
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsDecimal*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  id: ReadElementContentAsDecimal(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDecimal(String,String)
  nameWithType: XmlReader.ReadElementContentAsDecimal(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsDecimal(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.Decimal"></xref> object.
  syntax:
    content: public virtual decimal ReadElementContentAsDecimal (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Decimal
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsDecimal*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsDouble
  id: ReadElementContentAsDouble
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDouble()
  nameWithType: XmlReader.ReadElementContentAsDouble()
  fullName: System.Xml.XmlReader.ReadElementContentAsDouble()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a double-precision floating-point number.
  syntax:
    content: public virtual double ReadElementContentAsDouble ();
    parameters: []
    return:
      type: System.Double
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsDouble*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  id: ReadElementContentAsDouble(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsDouble(String,String)
  nameWithType: XmlReader.ReadElementContentAsDouble(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsDouble(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.
  syntax:
    content: public virtual double ReadElementContentAsDouble (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Double
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsDouble*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsFloat
  id: ReadElementContentAsFloat
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsFloat()
  nameWithType: XmlReader.ReadElementContentAsFloat()
  fullName: System.Xml.XmlReader.ReadElementContentAsFloat()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the current element and returns the contents as single-precision floating-point number.
  syntax:
    content: public virtual float ReadElementContentAsFloat ();
    parameters: []
    return:
      type: System.Single
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsFloat*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  id: ReadElementContentAsFloat(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsFloat(String,String)
  nameWithType: XmlReader.ReadElementContentAsFloat(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsFloat(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.
  syntax:
    content: public virtual float ReadElementContentAsFloat (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Single
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsFloat*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsInt
  id: ReadElementContentAsInt
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsInt()
  nameWithType: XmlReader.ReadElementContentAsInt()
  fullName: System.Xml.XmlReader.ReadElementContentAsInt()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a 32-bit signed integer.
  syntax:
    content: public virtual int ReadElementContentAsInt ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsInt*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  id: ReadElementContentAsInt(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsInt(String,String)
  nameWithType: XmlReader.ReadElementContentAsInt(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsInt(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.
  syntax:
    content: public virtual int ReadElementContentAsInt (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsInt*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsLong
  id: ReadElementContentAsLong
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsLong()
  nameWithType: XmlReader.ReadElementContentAsLong()
  fullName: System.Xml.XmlReader.ReadElementContentAsLong()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a 64-bit signed integer.
  syntax:
    content: public virtual long ReadElementContentAsLong ();
    parameters: []
    return:
      type: System.Int64
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsLong*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  id: ReadElementContentAsLong(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsLong(String,String)
  nameWithType: XmlReader.ReadElementContentAsLong(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsLong(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.
  syntax:
    content: public virtual long ReadElementContentAsLong (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Int64
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsLong*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsObject
  id: ReadElementContentAsObject
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsObject()
  nameWithType: XmlReader.ReadElementContentAsObject()
  fullName: System.Xml.XmlReader.ReadElementContentAsObject()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the current element and returns the contents as an <xref href="System.Object"></xref>.
  syntax:
    content: public virtual object ReadElementContentAsObject ();
    parameters: []
    return:
      type: System.Object
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsObject*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  id: ReadElementContentAsObject(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsObject(String,String)
  nameWithType: XmlReader.ReadElementContentAsObject(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsObject(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an <xref href="System.Object"></xref>.
  syntax:
    content: public virtual object ReadElementContentAsObject (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Object
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsObject*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsString
  id: ReadElementContentAsString
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsString()
  nameWithType: XmlReader.ReadElementContentAsString()
  fullName: System.Xml.XmlReader.ReadElementContentAsString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads the current element and returns the contents as a <xref href="System.String"></xref> object.
  syntax:
    content: public virtual string ReadElementContentAsString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  id: ReadElementContentAsString(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementContentAsString(String,String)
  nameWithType: XmlReader.ReadElementContentAsString(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsString(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <xref href="System.String"></xref> object.
  syntax:
    content: public virtual string ReadElementContentAsString (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementContentAsString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementString
  id: ReadElementString
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementString()
  nameWithType: XmlReader.ReadElementString()
  fullName: System.Xml.XmlReader.ReadElementString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads a text-only element. However, we recommend that you use the <xref href="System.Xml.XmlReader.ReadElementContentAsString"></xref> method instead, because it provides a more straightforward way to handle this operation.
  syntax:
    content: public virtual string ReadElementString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementString(System.String)
  id: ReadElementString(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementString(String)
  nameWithType: XmlReader.ReadElementString(String)
  fullName: System.Xml.XmlReader.ReadElementString(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the <xref:System.Xml.XmlReader.Name*> property of the element found matches the given string before reading a text-only element. However, we recommend that you use the <xref href="System.Xml.XmlReader.ReadElementContentAsString"></xref> method instead, because it provides a more straightforward way to handle this operation.
  syntax:
    content: public virtual string ReadElementString (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadElementString(System.String,System.String)
  id: ReadElementString(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadElementString(String,String)
  nameWithType: XmlReader.ReadElementString(String,String)
  fullName: System.Xml.XmlReader.ReadElementString(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the <xref:System.Xml.XmlReader.LocalName*> and <xref:System.Xml.XmlReader.NamespaceURI*> properties of the element found matches the given strings before reading a text-only element. However, we recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)> method instead, because it provides a more straightforward way to handle this operation.
  syntax:
    content: public virtual string ReadElementString (string localname, string ns);
    parameters:
    - id: localname
      type: System.String
      description: To be added.
    - id: ns
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadElementString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadEndElement
  id: ReadEndElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadEndElement()
  nameWithType: XmlReader.ReadEndElement()
  fullName: System.Xml.XmlReader.ReadEndElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the current content node is an end tag and advances the reader to the next node.
  syntax:
    content: public virtual void ReadEndElement ();
    parameters: []
  overload: System.Xml.XmlReader.ReadEndElement*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadInnerXml
  id: ReadInnerXml
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadInnerXml()
  nameWithType: XmlReader.ReadInnerXml()
  fullName: System.Xml.XmlReader.ReadInnerXml()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, reads all the content, including markup, as a string.
  syntax:
    content: public virtual string ReadInnerXml ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadInnerXml*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadOuterXml
  id: ReadOuterXml
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadOuterXml()
  nameWithType: XmlReader.ReadOuterXml()
  fullName: System.Xml.XmlReader.ReadOuterXml()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, reads the content, including markup, representing this node and all its children.
  syntax:
    content: public virtual string ReadOuterXml ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadOuterXml*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadStartElement
  id: ReadStartElement
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadStartElement()
  nameWithType: XmlReader.ReadStartElement()
  fullName: System.Xml.XmlReader.ReadStartElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the current node is an element and advances the reader to the next node.
  syntax:
    content: public virtual void ReadStartElement ();
    parameters: []
  overload: System.Xml.XmlReader.ReadStartElement*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadStartElement(System.String)
  id: ReadStartElement(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadStartElement(String)
  nameWithType: XmlReader.ReadStartElement(String)
  fullName: System.Xml.XmlReader.ReadStartElement(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the current content node is an element with the given <xref:System.Xml.XmlReader.Name*> and advances the reader to the next node.
  syntax:
    content: public virtual void ReadStartElement (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadStartElement*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  id: ReadStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadStartElement(String,String)
  nameWithType: XmlReader.ReadStartElement(String,String)
  fullName: System.Xml.XmlReader.ReadStartElement(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Checks that the current content node is an element with the given <xref:System.Xml.XmlReader.LocalName*> and <xref:System.Xml.XmlReader.NamespaceURI*> and advances the reader to the next node.
  syntax:
    content: public virtual void ReadStartElement (string localname, string ns);
    parameters:
    - id: localname
      type: System.String
      description: To be added.
    - id: ns
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadStartElement*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadState
  id: ReadState
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadState
  nameWithType: XmlReader.ReadState
  fullName: System.Xml.XmlReader.ReadState
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the state of the reader.
  syntax:
    content: public abstract System.Xml.ReadState ReadState { get; }
    return:
      type: System.Xml.ReadState
      description: To be added.
  overload: System.Xml.XmlReader.ReadState*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadString
  id: ReadString
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadString()
  nameWithType: XmlReader.ReadString()
  fullName: System.Xml.XmlReader.ReadString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, reads the contents of an element or text node as a string. However, we recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString*> method instead, because it provides a more straightforward way to handle this operation.
  syntax:
    content: public virtual string ReadString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.ReadString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadSubtree
  id: ReadSubtree
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadSubtree()
  nameWithType: XmlReader.ReadSubtree()
  fullName: System.Xml.XmlReader.ReadSubtree()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Returns a new `XmlReader` instance that can be used to read the current node, and all its descendants.
  syntax:
    content: public virtual System.Xml.XmlReader ReadSubtree ();
    parameters: []
    return:
      type: System.Xml.XmlReader
      description: To be added.
  overload: System.Xml.XmlReader.ReadSubtree*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadToDescendant(System.String)
  id: ReadToDescendant(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToDescendant(String)
  nameWithType: XmlReader.ReadToDescendant(String)
  fullName: System.Xml.XmlReader.ReadToDescendant(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Advances the <xref href="System.Xml.XmlReader"></xref> to the next descendant element with the specified qualified name.
  syntax:
    content: public virtual bool ReadToDescendant (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.ReadToDescendant*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  id: ReadToDescendant(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToDescendant(String,String)
  nameWithType: XmlReader.ReadToDescendant(String,String)
  fullName: System.Xml.XmlReader.ReadToDescendant(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Advances the <xref href="System.Xml.XmlReader"></xref> to the next descendant element with the specified local name and namespace URI.
  syntax:
    content: public virtual bool ReadToDescendant (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.ReadToDescendant*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadToFollowing(System.String)
  id: ReadToFollowing(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToFollowing(String)
  nameWithType: XmlReader.ReadToFollowing(String)
  fullName: System.Xml.XmlReader.ReadToFollowing(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads until an element with the specified qualified name is found.
  syntax:
    content: public virtual bool ReadToFollowing (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.ReadToFollowing*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  id: ReadToFollowing(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToFollowing(String,String)
  nameWithType: XmlReader.ReadToFollowing(String,String)
  fullName: System.Xml.XmlReader.ReadToFollowing(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads until an element with the specified local name and namespace URI is found.
  syntax:
    content: public virtual bool ReadToFollowing (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.ReadToFollowing*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String)
  id: ReadToNextSibling(System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToNextSibling(String)
  nameWithType: XmlReader.ReadToNextSibling(String)
  fullName: System.Xml.XmlReader.ReadToNextSibling(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Advances the `XmlReader` to the next sibling element with the specified qualified name.
  syntax:
    content: public virtual bool ReadToNextSibling (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.ReadToNextSibling*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  id: ReadToNextSibling(System.String,System.String)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadToNextSibling(String,String)
  nameWithType: XmlReader.ReadToNextSibling(String,String)
  fullName: System.Xml.XmlReader.ReadToNextSibling(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Advances the `XmlReader` to the next sibling element with the specified local name and namespace URI.
  syntax:
    content: public virtual bool ReadToNextSibling (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: To be added.
    - id: namespaceURI
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Xml.XmlReader.ReadToNextSibling*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  id: ReadValueChunk(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ReadValueChunk(Char[],Int32,Int32)
  nameWithType: XmlReader.ReadValueChunk(Char[],Int32,Int32)
  fullName: System.Xml.XmlReader.ReadValueChunk(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Reads large streams of text embedded in an XML document.
  syntax:
    content: public virtual int ReadValueChunk (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Xml.XmlReader.ReadValueChunk*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ResolveEntity
  id: ResolveEntity
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ResolveEntity()
  nameWithType: XmlReader.ResolveEntity()
  fullName: System.Xml.XmlReader.ResolveEntity()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, resolves the entity reference for `EntityReference` nodes.
  syntax:
    content: public abstract void ResolveEntity ();
    parameters: []
  overload: System.Xml.XmlReader.ResolveEntity*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.SchemaInfo
  id: SchemaInfo
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: SchemaInfo
  nameWithType: XmlReader.SchemaInfo
  fullName: System.Xml.XmlReader.SchemaInfo
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Gets the schema information that has been assigned to the current node as a result of schema validation.
  syntax:
    content: public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }
    return:
      type: System.Xml.Schema.IXmlSchemaInfo
      description: To be added.
  overload: System.Xml.XmlReader.SchemaInfo*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Settings
  id: Settings
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Settings
  nameWithType: XmlReader.Settings
  fullName: System.Xml.XmlReader.Settings
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Gets the <xref href="System.Xml.XmlReaderSettings"></xref> object used to create this <xref href="System.Xml.XmlReader"></xref> instance.
  syntax:
    content: public virtual System.Xml.XmlReaderSettings Settings { get; }
    return:
      type: System.Xml.XmlReaderSettings
      description: To be added.
  overload: System.Xml.XmlReader.Settings*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Skip
  id: Skip
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Skip()
  nameWithType: XmlReader.Skip()
  fullName: System.Xml.XmlReader.Skip()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Skips the children of the current node.
  syntax:
    content: public virtual void Skip ();
    parameters: []
  overload: System.Xml.XmlReader.Skip*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: IDisposable.Dispose()
  nameWithType: XmlReader.IDisposable.Dispose()
  fullName: System.Xml.XmlReader.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Xml.XmlReader.System#IDisposable#Dispose*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.Value
  id: Value
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: Value
  nameWithType: XmlReader.Value
  fullName: System.Xml.XmlReader.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the text value of the current node.
  syntax:
    content: public abstract string Value { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.Value*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.ValueType
  id: ValueType
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: ValueType
  nameWithType: XmlReader.ValueType
  fullName: System.Xml.XmlReader.ValueType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: Gets The Common Language Runtime (CLR) type for the current node.
  syntax:
    content: public virtual Type ValueType { get; }
    return:
      type: System.Type
      description: To be added.
  overload: System.Xml.XmlReader.ValueType*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.XmlLang
  id: XmlLang
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: XmlLang
  nameWithType: XmlReader.XmlLang
  fullName: System.Xml.XmlReader.XmlLang
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the current `xml:lang` scope.
  syntax:
    content: public virtual string XmlLang { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Xml.XmlReader.XmlLang*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Xml.XmlReader.XmlSpace
  id: XmlSpace
  parent: System.Xml.XmlReader
  langs:
  - csharp
  name: XmlSpace
  nameWithType: XmlReader.XmlSpace
  fullName: System.Xml.XmlReader.XmlSpace
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: When overridden in a derived class, gets the current `xml:space` scope.
  syntax:
    content: public virtual System.Xml.XmlSpace XmlSpace { get; }
    return:
      type: System.Xml.XmlSpace
      description: To be added.
  overload: System.Xml.XmlReader.XmlSpace*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlReader.#ctor
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlReader()
  nameWithType: XmlReader.XmlReader()
  fullName: System.Xml.XmlReader.XmlReader()
- uid: System.Xml.XmlReader.AttributeCount
  parent: System.Xml.XmlReader
  isExternal: false
  name: AttributeCount
  nameWithType: XmlReader.AttributeCount
  fullName: System.Xml.XmlReader.AttributeCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlReader.BaseURI
  parent: System.Xml.XmlReader
  isExternal: false
  name: BaseURI
  nameWithType: XmlReader.BaseURI
  fullName: System.Xml.XmlReader.BaseURI
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlReader.CanReadBinaryContent
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanReadBinaryContent
  nameWithType: XmlReader.CanReadBinaryContent
  fullName: System.Xml.XmlReader.CanReadBinaryContent
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader.CanReadValueChunk
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanReadValueChunk
  nameWithType: XmlReader.CanReadValueChunk
  fullName: System.Xml.XmlReader.CanReadValueChunk
- uid: System.Xml.XmlReader.CanResolveEntity
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanResolveEntity
  nameWithType: XmlReader.CanResolveEntity
  fullName: System.Xml.XmlReader.CanResolveEntity
- uid: System.Xml.XmlReader.Close
  parent: System.Xml.XmlReader
  isExternal: false
  name: Close()
  nameWithType: XmlReader.Close()
  fullName: System.Xml.XmlReader.Close()
- uid: System.Xml.XmlReader.Create(System.IO.Stream)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream)
  nameWithType: XmlReader.Create(Stream)
  fullName: System.Xml.XmlReader.Create(Stream)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.XmlReader.Create(System.IO.TextReader)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader)
  nameWithType: XmlReader.Create(TextReader)
  fullName: System.Xml.XmlReader.Create(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Xml.XmlReader.Create(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(String)
  nameWithType: XmlReader.Create(String)
  fullName: System.Xml.XmlReader.Create(String)
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream,XmlReaderSettings)
  nameWithType: XmlReader.Create(Stream,XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(Stream,XmlReaderSettings)
- uid: System.Xml.XmlReaderSettings
  parent: System.Xml
  isExternal: false
  name: XmlReaderSettings
  nameWithType: XmlReaderSettings
  fullName: System.Xml.XmlReaderSettings
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader,XmlReaderSettings)
  nameWithType: XmlReader.Create(TextReader,XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(TextReader,XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(String,XmlReaderSettings)
  nameWithType: XmlReader.Create(String,XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(String,XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(XmlReader,XmlReaderSettings)
  nameWithType: XmlReader.Create(XmlReader,XmlReaderSettings)
  fullName: System.Xml.XmlReader.Create(XmlReader,XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream,XmlReaderSettings,String)
  nameWithType: XmlReader.Create(Stream,XmlReaderSettings,String)
  fullName: System.Xml.XmlReader.Create(Stream,XmlReaderSettings,String)
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream,XmlReaderSettings,XmlParserContext)
  nameWithType: XmlReader.Create(Stream,XmlReaderSettings,XmlParserContext)
  fullName: System.Xml.XmlReader.Create(Stream,XmlReaderSettings,XmlParserContext)
- uid: System.Xml.XmlParserContext
  parent: System.Xml
  isExternal: false
  name: XmlParserContext
  nameWithType: XmlParserContext
  fullName: System.Xml.XmlParserContext
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader,XmlReaderSettings,String)
  nameWithType: XmlReader.Create(TextReader,XmlReaderSettings,String)
  fullName: System.Xml.XmlReader.Create(TextReader,XmlReaderSettings,String)
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader,XmlReaderSettings,XmlParserContext)
  nameWithType: XmlReader.Create(TextReader,XmlReaderSettings,XmlParserContext)
  fullName: System.Xml.XmlReader.Create(TextReader,XmlReaderSettings,XmlParserContext)
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(String,XmlReaderSettings,XmlParserContext)
  nameWithType: XmlReader.Create(String,XmlReaderSettings,XmlParserContext)
  fullName: System.Xml.XmlReader.Create(String,XmlReaderSettings,XmlParserContext)
- uid: System.Xml.XmlReader.Depth
  parent: System.Xml.XmlReader
  isExternal: false
  name: Depth
  nameWithType: XmlReader.Depth
  fullName: System.Xml.XmlReader.Depth
- uid: System.Xml.XmlReader.Dispose(System.Boolean)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XmlReader.Dispose(Boolean)
  fullName: System.Xml.XmlReader.Dispose(Boolean)
- uid: System.Xml.XmlReader.EOF
  parent: System.Xml.XmlReader
  isExternal: false
  name: EOF
  nameWithType: XmlReader.EOF
  fullName: System.Xml.XmlReader.EOF
- uid: System.Xml.XmlReader.GetAttribute(System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetAttribute(Int32)
  nameWithType: XmlReader.GetAttribute(Int32)
  fullName: System.Xml.XmlReader.GetAttribute(Int32)
- uid: System.Xml.XmlReader.GetAttribute(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetAttribute(String)
  nameWithType: XmlReader.GetAttribute(String)
  fullName: System.Xml.XmlReader.GetAttribute(String)
- uid: System.Xml.XmlReader.GetAttribute(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetAttribute(String,String)
  nameWithType: XmlReader.GetAttribute(String,String)
  fullName: System.Xml.XmlReader.GetAttribute(String,String)
- uid: System.Xml.XmlReader.HasAttributes
  parent: System.Xml.XmlReader
  isExternal: false
  name: HasAttributes
  nameWithType: XmlReader.HasAttributes
  fullName: System.Xml.XmlReader.HasAttributes
- uid: System.Xml.XmlReader.HasValue
  parent: System.Xml.XmlReader
  isExternal: false
  name: HasValue
  nameWithType: XmlReader.HasValue
  fullName: System.Xml.XmlReader.HasValue
- uid: System.Xml.XmlReader.IsDefault
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsDefault
  nameWithType: XmlReader.IsDefault
  fullName: System.Xml.XmlReader.IsDefault
- uid: System.Xml.XmlReader.IsEmptyElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsEmptyElement
  nameWithType: XmlReader.IsEmptyElement
  fullName: System.Xml.XmlReader.IsEmptyElement
- uid: System.Xml.XmlReader.IsName(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsName(String)
  nameWithType: XmlReader.IsName(String)
  fullName: System.Xml.XmlReader.IsName(String)
- uid: System.Xml.XmlReader.IsNameToken(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsNameToken(String)
  nameWithType: XmlReader.IsNameToken(String)
  fullName: System.Xml.XmlReader.IsNameToken(String)
- uid: System.Xml.XmlReader.IsStartElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement()
  nameWithType: XmlReader.IsStartElement()
  fullName: System.Xml.XmlReader.IsStartElement()
- uid: System.Xml.XmlReader.IsStartElement(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement(String)
  nameWithType: XmlReader.IsStartElement(String)
  fullName: System.Xml.XmlReader.IsStartElement(String)
- uid: System.Xml.XmlReader.IsStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement(String,String)
  nameWithType: XmlReader.IsStartElement(String,String)
  fullName: System.Xml.XmlReader.IsStartElement(String,String)
- uid: System.Xml.XmlReader.Item(System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item(Int32)
  nameWithType: XmlReader.Item(Int32)
  fullName: System.Xml.XmlReader.Item(Int32)
- uid: System.Xml.XmlReader.Item(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item(String)
  nameWithType: XmlReader.Item(String)
  fullName: System.Xml.XmlReader.Item(String)
- uid: System.Xml.XmlReader.Item(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item(String,String)
  nameWithType: XmlReader.Item(String,String)
  fullName: System.Xml.XmlReader.Item(String,String)
- uid: System.Xml.XmlReader.LocalName
  parent: System.Xml.XmlReader
  isExternal: false
  name: LocalName
  nameWithType: XmlReader.LocalName
  fullName: System.Xml.XmlReader.LocalName
- uid: System.Xml.XmlReader.LookupNamespace(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: LookupNamespace(String)
  nameWithType: XmlReader.LookupNamespace(String)
  fullName: System.Xml.XmlReader.LookupNamespace(String)
- uid: System.Xml.XmlReader.MoveToAttribute(System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToAttribute(Int32)
  nameWithType: XmlReader.MoveToAttribute(Int32)
  fullName: System.Xml.XmlReader.MoveToAttribute(Int32)
- uid: System.Xml.XmlReader.MoveToAttribute(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToAttribute(String)
  nameWithType: XmlReader.MoveToAttribute(String)
  fullName: System.Xml.XmlReader.MoveToAttribute(String)
- uid: System.Xml.XmlReader.MoveToAttribute(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToAttribute(String,String)
  nameWithType: XmlReader.MoveToAttribute(String,String)
  fullName: System.Xml.XmlReader.MoveToAttribute(String,String)
- uid: System.Xml.XmlReader.MoveToContent
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToContent()
  nameWithType: XmlReader.MoveToContent()
  fullName: System.Xml.XmlReader.MoveToContent()
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlReader.MoveToElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToElement()
  nameWithType: XmlReader.MoveToElement()
  fullName: System.Xml.XmlReader.MoveToElement()
- uid: System.Xml.XmlReader.MoveToFirstAttribute
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToFirstAttribute()
  nameWithType: XmlReader.MoveToFirstAttribute()
  fullName: System.Xml.XmlReader.MoveToFirstAttribute()
- uid: System.Xml.XmlReader.MoveToNextAttribute
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToNextAttribute()
  nameWithType: XmlReader.MoveToNextAttribute()
  fullName: System.Xml.XmlReader.MoveToNextAttribute()
- uid: System.Xml.XmlReader.Name
  parent: System.Xml.XmlReader
  isExternal: false
  name: Name
  nameWithType: XmlReader.Name
  fullName: System.Xml.XmlReader.Name
- uid: System.Xml.XmlReader.NamespaceURI
  parent: System.Xml.XmlReader
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlReader.NamespaceURI
  fullName: System.Xml.XmlReader.NamespaceURI
- uid: System.Xml.XmlReader.NameTable
  parent: System.Xml.XmlReader
  isExternal: false
  name: NameTable
  nameWithType: XmlReader.NameTable
  fullName: System.Xml.XmlReader.NameTable
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: false
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.XmlReader.NodeType
  parent: System.Xml.XmlReader
  isExternal: false
  name: NodeType
  nameWithType: XmlReader.NodeType
  fullName: System.Xml.XmlReader.NodeType
- uid: System.Xml.XmlReader.Prefix
  parent: System.Xml.XmlReader
  isExternal: false
  name: Prefix
  nameWithType: XmlReader.Prefix
  fullName: System.Xml.XmlReader.Prefix
- uid: System.Xml.XmlReader.QuoteChar
  parent: System.Xml.XmlReader
  isExternal: false
  name: QuoteChar
  nameWithType: XmlReader.QuoteChar
  fullName: System.Xml.XmlReader.QuoteChar
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.XmlReader.Read
  parent: System.Xml.XmlReader
  isExternal: false
  name: Read()
  nameWithType: XmlReader.Read()
  fullName: System.Xml.XmlReader.Read()
- uid: System.Xml.XmlReader.ReadAttributeValue
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadAttributeValue()
  nameWithType: XmlReader.ReadAttributeValue()
  fullName: System.Xml.XmlReader.ReadAttributeValue()
- uid: System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAs(Type,IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadContentAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.XmlReader.ReadContentAs(Type,IXmlNamespaceResolver)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: false
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBase64(Byte[],Int32,Int32)
  nameWithType: XmlReader.ReadContentAsBase64(Byte[],Int32,Int32)
  fullName: System.Xml.XmlReader.ReadContentAsBase64(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBinHex(Byte[],Int32,Int32)
  nameWithType: XmlReader.ReadContentAsBinHex(Byte[],Int32,Int32)
  fullName: System.Xml.XmlReader.ReadContentAsBinHex(Byte[],Int32,Int32)
- uid: System.Xml.XmlReader.ReadContentAsBoolean
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBoolean()
  nameWithType: XmlReader.ReadContentAsBoolean()
  fullName: System.Xml.XmlReader.ReadContentAsBoolean()
- uid: System.Xml.XmlReader.ReadContentAsDateTime
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDateTime()
  nameWithType: XmlReader.ReadContentAsDateTime()
  fullName: System.Xml.XmlReader.ReadContentAsDateTime()
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.XmlReader.ReadContentAsDecimal
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDecimal()
  nameWithType: XmlReader.ReadContentAsDecimal()
  fullName: System.Xml.XmlReader.ReadContentAsDecimal()
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Xml.XmlReader.ReadContentAsDouble
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDouble()
  nameWithType: XmlReader.ReadContentAsDouble()
  fullName: System.Xml.XmlReader.ReadContentAsDouble()
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Xml.XmlReader.ReadContentAsFloat
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsFloat()
  nameWithType: XmlReader.ReadContentAsFloat()
  fullName: System.Xml.XmlReader.ReadContentAsFloat()
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Xml.XmlReader.ReadContentAsInt
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsInt()
  nameWithType: XmlReader.ReadContentAsInt()
  fullName: System.Xml.XmlReader.ReadContentAsInt()
- uid: System.Xml.XmlReader.ReadContentAsLong
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsLong()
  nameWithType: XmlReader.ReadContentAsLong()
  fullName: System.Xml.XmlReader.ReadContentAsLong()
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Xml.XmlReader.ReadContentAsObject
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsObject()
  nameWithType: XmlReader.ReadContentAsObject()
  fullName: System.Xml.XmlReader.ReadContentAsObject()
- uid: System.Xml.XmlReader.ReadContentAsString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsString()
  nameWithType: XmlReader.ReadContentAsString()
  fullName: System.Xml.XmlReader.ReadContentAsString()
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAs(Type,IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadElementContentAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.XmlReader.ReadElementContentAs(Type,IXmlNamespaceResolver)
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAs(Type,IXmlNamespaceResolver,String,String)
  nameWithType: XmlReader.ReadElementContentAs(Type,IXmlNamespaceResolver,String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAs(Type,IXmlNamespaceResolver,String,String)
- uid: System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBase64(Byte[],Int32,Int32)
  nameWithType: XmlReader.ReadElementContentAsBase64(Byte[],Int32,Int32)
  fullName: System.Xml.XmlReader.ReadElementContentAsBase64(Byte[],Int32,Int32)
- uid: System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBinHex(Byte[],Int32,Int32)
  nameWithType: XmlReader.ReadElementContentAsBinHex(Byte[],Int32,Int32)
  fullName: System.Xml.XmlReader.ReadElementContentAsBinHex(Byte[],Int32,Int32)
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBoolean()
  nameWithType: XmlReader.ReadElementContentAsBoolean()
  fullName: System.Xml.XmlReader.ReadElementContentAsBoolean()
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBoolean(String,String)
  nameWithType: XmlReader.ReadElementContentAsBoolean(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsBoolean(String,String)
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDateTime()
  nameWithType: XmlReader.ReadElementContentAsDateTime()
  fullName: System.Xml.XmlReader.ReadElementContentAsDateTime()
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDateTime(String,String)
  nameWithType: XmlReader.ReadElementContentAsDateTime(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsDateTime(String,String)
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDecimal()
  nameWithType: XmlReader.ReadElementContentAsDecimal()
  fullName: System.Xml.XmlReader.ReadElementContentAsDecimal()
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDecimal(String,String)
  nameWithType: XmlReader.ReadElementContentAsDecimal(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsDecimal(String,String)
- uid: System.Xml.XmlReader.ReadElementContentAsDouble
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDouble()
  nameWithType: XmlReader.ReadElementContentAsDouble()
  fullName: System.Xml.XmlReader.ReadElementContentAsDouble()
- uid: System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDouble(String,String)
  nameWithType: XmlReader.ReadElementContentAsDouble(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsDouble(String,String)
- uid: System.Xml.XmlReader.ReadElementContentAsFloat
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsFloat()
  nameWithType: XmlReader.ReadElementContentAsFloat()
  fullName: System.Xml.XmlReader.ReadElementContentAsFloat()
- uid: System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsFloat(String,String)
  nameWithType: XmlReader.ReadElementContentAsFloat(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsFloat(String,String)
- uid: System.Xml.XmlReader.ReadElementContentAsInt
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsInt()
  nameWithType: XmlReader.ReadElementContentAsInt()
  fullName: System.Xml.XmlReader.ReadElementContentAsInt()
- uid: System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsInt(String,String)
  nameWithType: XmlReader.ReadElementContentAsInt(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsInt(String,String)
- uid: System.Xml.XmlReader.ReadElementContentAsLong
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsLong()
  nameWithType: XmlReader.ReadElementContentAsLong()
  fullName: System.Xml.XmlReader.ReadElementContentAsLong()
- uid: System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsLong(String,String)
  nameWithType: XmlReader.ReadElementContentAsLong(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsLong(String,String)
- uid: System.Xml.XmlReader.ReadElementContentAsObject
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObject()
  nameWithType: XmlReader.ReadElementContentAsObject()
  fullName: System.Xml.XmlReader.ReadElementContentAsObject()
- uid: System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObject(String,String)
  nameWithType: XmlReader.ReadElementContentAsObject(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsObject(String,String)
- uid: System.Xml.XmlReader.ReadElementContentAsString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsString()
  nameWithType: XmlReader.ReadElementContentAsString()
  fullName: System.Xml.XmlReader.ReadElementContentAsString()
- uid: System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsString(String,String)
  nameWithType: XmlReader.ReadElementContentAsString(String,String)
  fullName: System.Xml.XmlReader.ReadElementContentAsString(String,String)
- uid: System.Xml.XmlReader.ReadElementString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString()
  nameWithType: XmlReader.ReadElementString()
  fullName: System.Xml.XmlReader.ReadElementString()
- uid: System.Xml.XmlReader.ReadElementString(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString(String)
  nameWithType: XmlReader.ReadElementString(String)
  fullName: System.Xml.XmlReader.ReadElementString(String)
- uid: System.Xml.XmlReader.ReadElementString(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString(String,String)
  nameWithType: XmlReader.ReadElementString(String,String)
  fullName: System.Xml.XmlReader.ReadElementString(String,String)
- uid: System.Xml.XmlReader.ReadEndElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadEndElement()
  nameWithType: XmlReader.ReadEndElement()
  fullName: System.Xml.XmlReader.ReadEndElement()
- uid: System.Xml.XmlReader.ReadInnerXml
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadInnerXml()
  nameWithType: XmlReader.ReadInnerXml()
  fullName: System.Xml.XmlReader.ReadInnerXml()
- uid: System.Xml.XmlReader.ReadOuterXml
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadOuterXml()
  nameWithType: XmlReader.ReadOuterXml()
  fullName: System.Xml.XmlReader.ReadOuterXml()
- uid: System.Xml.XmlReader.ReadStartElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement()
  nameWithType: XmlReader.ReadStartElement()
  fullName: System.Xml.XmlReader.ReadStartElement()
- uid: System.Xml.XmlReader.ReadStartElement(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement(String)
  nameWithType: XmlReader.ReadStartElement(String)
  fullName: System.Xml.XmlReader.ReadStartElement(String)
- uid: System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement(String,String)
  nameWithType: XmlReader.ReadStartElement(String,String)
  fullName: System.Xml.XmlReader.ReadStartElement(String,String)
- uid: System.Xml.XmlReader.ReadState
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadState
  nameWithType: XmlReader.ReadState
  fullName: System.Xml.XmlReader.ReadState
- uid: System.Xml.ReadState
  parent: System.Xml
  isExternal: false
  name: ReadState
  nameWithType: ReadState
  fullName: System.Xml.ReadState
- uid: System.Xml.XmlReader.ReadString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadString()
  nameWithType: XmlReader.ReadString()
  fullName: System.Xml.XmlReader.ReadString()
- uid: System.Xml.XmlReader.ReadSubtree
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadSubtree()
  nameWithType: XmlReader.ReadSubtree()
  fullName: System.Xml.XmlReader.ReadSubtree()
- uid: System.Xml.XmlReader.ReadToDescendant(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToDescendant(String)
  nameWithType: XmlReader.ReadToDescendant(String)
  fullName: System.Xml.XmlReader.ReadToDescendant(String)
- uid: System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToDescendant(String,String)
  nameWithType: XmlReader.ReadToDescendant(String,String)
  fullName: System.Xml.XmlReader.ReadToDescendant(String,String)
- uid: System.Xml.XmlReader.ReadToFollowing(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToFollowing(String)
  nameWithType: XmlReader.ReadToFollowing(String)
  fullName: System.Xml.XmlReader.ReadToFollowing(String)
- uid: System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToFollowing(String,String)
  nameWithType: XmlReader.ReadToFollowing(String,String)
  fullName: System.Xml.XmlReader.ReadToFollowing(String,String)
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToNextSibling(String)
  nameWithType: XmlReader.ReadToNextSibling(String)
  fullName: System.Xml.XmlReader.ReadToNextSibling(String)
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToNextSibling(String,String)
  nameWithType: XmlReader.ReadToNextSibling(String,String)
  fullName: System.Xml.XmlReader.ReadToNextSibling(String,String)
- uid: System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadValueChunk(Char[],Int32,Int32)
  nameWithType: XmlReader.ReadValueChunk(Char[],Int32,Int32)
  fullName: System.Xml.XmlReader.ReadValueChunk(Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: false
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.XmlReader.ResolveEntity
  parent: System.Xml.XmlReader
  isExternal: false
  name: ResolveEntity()
  nameWithType: XmlReader.ResolveEntity()
  fullName: System.Xml.XmlReader.ResolveEntity()
- uid: System.Xml.XmlReader.SchemaInfo
  parent: System.Xml.XmlReader
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlReader.SchemaInfo
  fullName: System.Xml.XmlReader.SchemaInfo
- uid: System.Xml.Schema.IXmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: IXmlSchemaInfo
  nameWithType: IXmlSchemaInfo
  fullName: System.Xml.Schema.IXmlSchemaInfo
- uid: System.Xml.XmlReader.Settings
  parent: System.Xml.XmlReader
  isExternal: false
  name: Settings
  nameWithType: XmlReader.Settings
  fullName: System.Xml.XmlReader.Settings
- uid: System.Xml.XmlReader.Skip
  parent: System.Xml.XmlReader
  isExternal: false
  name: Skip()
  nameWithType: XmlReader.Skip()
  fullName: System.Xml.XmlReader.Skip()
- uid: System.Xml.XmlReader.System#IDisposable#Dispose
  parent: System.Xml.XmlReader
  isExternal: false
  name: IDisposable.Dispose()
  nameWithType: XmlReader.IDisposable.Dispose()
  fullName: System.Xml.XmlReader.IDisposable.Dispose()
- uid: System.Xml.XmlReader.Value
  parent: System.Xml.XmlReader
  isExternal: false
  name: Value
  nameWithType: XmlReader.Value
  fullName: System.Xml.XmlReader.Value
- uid: System.Xml.XmlReader.ValueType
  parent: System.Xml.XmlReader
  isExternal: false
  name: ValueType
  nameWithType: XmlReader.ValueType
  fullName: System.Xml.XmlReader.ValueType
- uid: System.Xml.XmlReader.XmlLang
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlLang
  nameWithType: XmlReader.XmlLang
  fullName: System.Xml.XmlReader.XmlLang
- uid: System.Xml.XmlReader.XmlSpace
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlSpace
  nameWithType: XmlReader.XmlSpace
  fullName: System.Xml.XmlReader.XmlSpace
- uid: System.Xml.XmlSpace
  parent: System.Xml
  isExternal: false
  name: XmlSpace
  nameWithType: XmlSpace
  fullName: System.Xml.XmlSpace
- uid: System.Xml.XmlReader.#ctor*
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader.XmlReader
- uid: System.Xml.XmlReader.AttributeCount*
  parent: System.Xml.XmlReader
  isExternal: false
  name: AttributeCount
  nameWithType: XmlReader.AttributeCount
- uid: System.Xml.XmlReader.BaseURI*
  parent: System.Xml.XmlReader
  isExternal: false
  name: BaseURI
  nameWithType: XmlReader.BaseURI
- uid: System.Xml.XmlReader.CanReadBinaryContent*
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanReadBinaryContent
  nameWithType: XmlReader.CanReadBinaryContent
- uid: System.Xml.XmlReader.CanReadValueChunk*
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanReadValueChunk
  nameWithType: XmlReader.CanReadValueChunk
- uid: System.Xml.XmlReader.CanResolveEntity*
  parent: System.Xml.XmlReader
  isExternal: false
  name: CanResolveEntity
  nameWithType: XmlReader.CanResolveEntity
- uid: System.Xml.XmlReader.Close*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Close
  nameWithType: XmlReader.Close
- uid: System.Xml.XmlReader.Create*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create
  nameWithType: XmlReader.Create
- uid: System.Xml.XmlReader.Depth*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Depth
  nameWithType: XmlReader.Depth
- uid: System.Xml.XmlReader.Dispose*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Dispose
  nameWithType: XmlReader.Dispose
- uid: System.Xml.XmlReader.EOF*
  parent: System.Xml.XmlReader
  isExternal: false
  name: EOF
  nameWithType: XmlReader.EOF
- uid: System.Xml.XmlReader.GetAttribute*
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetAttribute
  nameWithType: XmlReader.GetAttribute
- uid: System.Xml.XmlReader.HasAttributes*
  parent: System.Xml.XmlReader
  isExternal: false
  name: HasAttributes
  nameWithType: XmlReader.HasAttributes
- uid: System.Xml.XmlReader.HasValue*
  parent: System.Xml.XmlReader
  isExternal: false
  name: HasValue
  nameWithType: XmlReader.HasValue
- uid: System.Xml.XmlReader.IsDefault*
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsDefault
  nameWithType: XmlReader.IsDefault
- uid: System.Xml.XmlReader.IsEmptyElement*
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsEmptyElement
  nameWithType: XmlReader.IsEmptyElement
- uid: System.Xml.XmlReader.IsName*
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsName
  nameWithType: XmlReader.IsName
- uid: System.Xml.XmlReader.IsNameToken*
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsNameToken
  nameWithType: XmlReader.IsNameToken
- uid: System.Xml.XmlReader.IsStartElement*
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement
  nameWithType: XmlReader.IsStartElement
- uid: System.Xml.XmlReader.Item*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item
  nameWithType: XmlReader.Item
- uid: System.Xml.XmlReader.LocalName*
  parent: System.Xml.XmlReader
  isExternal: false
  name: LocalName
  nameWithType: XmlReader.LocalName
- uid: System.Xml.XmlReader.LookupNamespace*
  parent: System.Xml.XmlReader
  isExternal: false
  name: LookupNamespace
  nameWithType: XmlReader.LookupNamespace
- uid: System.Xml.XmlReader.MoveToAttribute*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToAttribute
  nameWithType: XmlReader.MoveToAttribute
- uid: System.Xml.XmlReader.MoveToContent*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToContent
  nameWithType: XmlReader.MoveToContent
- uid: System.Xml.XmlReader.MoveToElement*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToElement
  nameWithType: XmlReader.MoveToElement
- uid: System.Xml.XmlReader.MoveToFirstAttribute*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToFirstAttribute
  nameWithType: XmlReader.MoveToFirstAttribute
- uid: System.Xml.XmlReader.MoveToNextAttribute*
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToNextAttribute
  nameWithType: XmlReader.MoveToNextAttribute
- uid: System.Xml.XmlReader.Name*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Name
  nameWithType: XmlReader.Name
- uid: System.Xml.XmlReader.NamespaceURI*
  parent: System.Xml.XmlReader
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlReader.NamespaceURI
- uid: System.Xml.XmlReader.NameTable*
  parent: System.Xml.XmlReader
  isExternal: false
  name: NameTable
  nameWithType: XmlReader.NameTable
- uid: System.Xml.XmlReader.NodeType*
  parent: System.Xml.XmlReader
  isExternal: false
  name: NodeType
  nameWithType: XmlReader.NodeType
- uid: System.Xml.XmlReader.Prefix*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Prefix
  nameWithType: XmlReader.Prefix
- uid: System.Xml.XmlReader.QuoteChar*
  parent: System.Xml.XmlReader
  isExternal: false
  name: QuoteChar
  nameWithType: XmlReader.QuoteChar
- uid: System.Xml.XmlReader.Read*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Read
  nameWithType: XmlReader.Read
- uid: System.Xml.XmlReader.ReadAttributeValue*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadAttributeValue
  nameWithType: XmlReader.ReadAttributeValue
- uid: System.Xml.XmlReader.ReadContentAs*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAs
  nameWithType: XmlReader.ReadContentAs
- uid: System.Xml.XmlReader.ReadContentAsBase64*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBase64
  nameWithType: XmlReader.ReadContentAsBase64
- uid: System.Xml.XmlReader.ReadContentAsBinHex*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBinHex
  nameWithType: XmlReader.ReadContentAsBinHex
- uid: System.Xml.XmlReader.ReadContentAsBoolean*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBoolean
  nameWithType: XmlReader.ReadContentAsBoolean
- uid: System.Xml.XmlReader.ReadContentAsDateTime*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDateTime
  nameWithType: XmlReader.ReadContentAsDateTime
- uid: System.Xml.XmlReader.ReadContentAsDecimal*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDecimal
  nameWithType: XmlReader.ReadContentAsDecimal
- uid: System.Xml.XmlReader.ReadContentAsDouble*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDouble
  nameWithType: XmlReader.ReadContentAsDouble
- uid: System.Xml.XmlReader.ReadContentAsFloat*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsFloat
  nameWithType: XmlReader.ReadContentAsFloat
- uid: System.Xml.XmlReader.ReadContentAsInt*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsInt
  nameWithType: XmlReader.ReadContentAsInt
- uid: System.Xml.XmlReader.ReadContentAsLong*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsLong
  nameWithType: XmlReader.ReadContentAsLong
- uid: System.Xml.XmlReader.ReadContentAsObject*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsObject
  nameWithType: XmlReader.ReadContentAsObject
- uid: System.Xml.XmlReader.ReadContentAsString*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsString
  nameWithType: XmlReader.ReadContentAsString
- uid: System.Xml.XmlReader.ReadElementContentAs*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAs
  nameWithType: XmlReader.ReadElementContentAs
- uid: System.Xml.XmlReader.ReadElementContentAsBase64*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBase64
  nameWithType: XmlReader.ReadElementContentAsBase64
- uid: System.Xml.XmlReader.ReadElementContentAsBinHex*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBinHex
  nameWithType: XmlReader.ReadElementContentAsBinHex
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBoolean
  nameWithType: XmlReader.ReadElementContentAsBoolean
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDateTime
  nameWithType: XmlReader.ReadElementContentAsDateTime
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDecimal
  nameWithType: XmlReader.ReadElementContentAsDecimal
- uid: System.Xml.XmlReader.ReadElementContentAsDouble*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDouble
  nameWithType: XmlReader.ReadElementContentAsDouble
- uid: System.Xml.XmlReader.ReadElementContentAsFloat*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsFloat
  nameWithType: XmlReader.ReadElementContentAsFloat
- uid: System.Xml.XmlReader.ReadElementContentAsInt*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsInt
  nameWithType: XmlReader.ReadElementContentAsInt
- uid: System.Xml.XmlReader.ReadElementContentAsLong*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsLong
  nameWithType: XmlReader.ReadElementContentAsLong
- uid: System.Xml.XmlReader.ReadElementContentAsObject*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObject
  nameWithType: XmlReader.ReadElementContentAsObject
- uid: System.Xml.XmlReader.ReadElementContentAsString*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsString
  nameWithType: XmlReader.ReadElementContentAsString
- uid: System.Xml.XmlReader.ReadElementString*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString
  nameWithType: XmlReader.ReadElementString
- uid: System.Xml.XmlReader.ReadEndElement*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadEndElement
  nameWithType: XmlReader.ReadEndElement
- uid: System.Xml.XmlReader.ReadInnerXml*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadInnerXml
  nameWithType: XmlReader.ReadInnerXml
- uid: System.Xml.XmlReader.ReadOuterXml*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadOuterXml
  nameWithType: XmlReader.ReadOuterXml
- uid: System.Xml.XmlReader.ReadStartElement*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement
  nameWithType: XmlReader.ReadStartElement
- uid: System.Xml.XmlReader.ReadState*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadState
  nameWithType: XmlReader.ReadState
- uid: System.Xml.XmlReader.ReadString*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadString
  nameWithType: XmlReader.ReadString
- uid: System.Xml.XmlReader.ReadSubtree*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadSubtree
  nameWithType: XmlReader.ReadSubtree
- uid: System.Xml.XmlReader.ReadToDescendant*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToDescendant
  nameWithType: XmlReader.ReadToDescendant
- uid: System.Xml.XmlReader.ReadToFollowing*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToFollowing
  nameWithType: XmlReader.ReadToFollowing
- uid: System.Xml.XmlReader.ReadToNextSibling*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToNextSibling
  nameWithType: XmlReader.ReadToNextSibling
- uid: System.Xml.XmlReader.ReadValueChunk*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadValueChunk
  nameWithType: XmlReader.ReadValueChunk
- uid: System.Xml.XmlReader.ResolveEntity*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ResolveEntity
  nameWithType: XmlReader.ResolveEntity
- uid: System.Xml.XmlReader.SchemaInfo*
  parent: System.Xml.XmlReader
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlReader.SchemaInfo
- uid: System.Xml.XmlReader.Settings*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Settings
  nameWithType: XmlReader.Settings
- uid: System.Xml.XmlReader.Skip*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Skip
  nameWithType: XmlReader.Skip
- uid: System.Xml.XmlReader.System#IDisposable#Dispose*
  parent: System.Xml.XmlReader
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: XmlReader.System.IDisposable.Dispose
- uid: System.Xml.XmlReader.Value*
  parent: System.Xml.XmlReader
  isExternal: false
  name: Value
  nameWithType: XmlReader.Value
- uid: System.Xml.XmlReader.ValueType*
  parent: System.Xml.XmlReader
  isExternal: false
  name: ValueType
  nameWithType: XmlReader.ValueType
- uid: System.Xml.XmlReader.XmlLang*
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlLang
  nameWithType: XmlReader.XmlLang
- uid: System.Xml.XmlReader.XmlSpace*
  parent: System.Xml.XmlReader
  isExternal: false
  name: XmlSpace
  nameWithType: XmlReader.XmlSpace
