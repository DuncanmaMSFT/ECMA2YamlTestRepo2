### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  id: AssemblyCatalog
  children:
  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)
  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)
  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly
  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts
  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  - System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString
  langs:
  - csharp
  name: AssemblyCatalog
  nameWithType: AssemblyCatalog
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  type: Class
  summary: Discovers attributed parts in a managed code assembly.
  remarks: "An AssemblyCatalog is used to parse all the parts present in a specified assembly. The target assembly can be indicated either by object reference or by path.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n This type is thread safe."
  example:
  - "The following code demonstrates the common scenario of an application creating an AssemblyCatalog to parse its own assembly. This is a straightforward way to load parts contained in a single project into the Managed Extensibility Framework (MEF).  \n  \n [!code-cs[Composition.CompositionContainer#1](~/add/codesnippet/csharp/consoleapplication1/program.cs#1)]\n [!code-vb[Composition.CompositionContainer#1](~/add/codesnippet/visualbasic/compositioncontainerexample/module1.vb#1)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.AssemblyCatalogDebuggerProxy))]

      public class AssemblyCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Primitives.ICompositionElement
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  implements:
  - System.ComponentModel.Composition.Primitives.ICompositionElement
  inheritedMembers:
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netframework-4.0
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)
  id: '#ctor(System.Reflection.Assembly)'
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  langs:
  - csharp
  name: AssemblyCatalog(Assembly)
  nameWithType: AssemblyCatalog.AssemblyCatalog(Assembly)
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(Assembly)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Initializes a new instance of the <xref href="System.ComponentModel.Composition.Hosting.AssemblyCatalog"></xref> class with the specified assembly.
  syntax:
    content: public AssemblyCatalog (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly that contains the attributed <xref href="System.Type"></xref> objects to add to the <xref href="System.ComponentModel.Composition.Hosting.AssemblyCatalog"></xref> object.
  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>assembly</code> is `null`.  \n  \n -or-  \n  \n <code>assembly</code> was loaded in the reflection-only context."
  version:
  - netframework-4.0
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  langs:
  - csharp
  name: AssemblyCatalog(String)
  nameWithType: AssemblyCatalog.AssemblyCatalog(String)
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Initializes a new instance of the <xref href="System.ComponentModel.Composition.Hosting.AssemblyCatalog"></xref> class with the specified code base.
  remarks: The assembly referenced by `codeBase` is loaded into the load context.
  syntax:
    content: public AssemblyCatalog (string codeBase);
    parameters:
    - id: codeBase
      type: System.String
      description: A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <xref href="System.Type"></xref> objects to add to the <xref href="System.ComponentModel.Composition.Hosting.AssemblyCatalog"></xref> object.
  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*
  exceptions:
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>codeBase</code> is not a valid assembly.  \n  \n -or-  \n  \n Version 2.0 or earlier of the common language runtime is currently loaded and <code>codeBase</code> was compiled with a later version."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have path discovery permission.
  - type: System.IO.FileLoadException
    commentId: T:System.IO.FileLoadException
    description: "<code>codeBase</code> could not be loaded.  \n  \n -or-  \n  \n <code>codeBase</code> specified a directory."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>codeBase</code> is `null`.
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: <code>codeBase</code> is not found.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>codeBase</code> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <xref href="System.IO.Path.InvalidPathChars"></xref>.
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: The specified path, file name, or both exceed the system-defined maximum length.
  version:
  - netframework-4.0
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly
  id: Assembly
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  langs:
  - csharp
  name: Assembly
  nameWithType: AssemblyCatalog.Assembly
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Gets the assembly whose attributed types are contained in the assembly catalog.
  syntax:
    content: public System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: The assembly whose attributed <xref href="System.Type"></xref> objects are contained in the <xref href="System.ComponentModel.Composition.Hosting.AssemblyCatalog"></xref>.
  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AssemblyCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Releases the unmanaged resources used by the <xref href="System.ComponentModel.Composition.Hosting.AssemblyCatalog"></xref> and optionally releases the managed resources.
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  langs:
  - csharp
  name: GetExports(ImportDefinition)
  nameWithType: AssemblyCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(ImportDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Gets a collection of exports that match the conditions specified by the import definition.
  syntax:
    content: public override System.Collections.Generic.IEnumerable<Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: Conditions that specify which exports to match.
    return:
      type: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
      description: A collection of exports that match the conditions specified by <code>definition</code>.
  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts
  id: Parts
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  langs:
  - csharp
  name: Parts
  nameWithType: AssemblyCatalog.Parts
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  syntax:
    content: public override System.Linq.IQueryable<System.ComponentModel.Composition.Primitives.ComposablePartDefinition> Parts { get; }
    return:
      type: System.Linq.IQueryable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
      description: To be added.
  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  id: System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  isEii: true
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  langs:
  - csharp
  name: ICompositionElement.DisplayName
  nameWithType: AssemblyCatalog.ICompositionElement.DisplayName
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ICompositionElement.DisplayName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Gets the display name of the <xref href="System.ComponentModel.Composition.Hosting.AssemblyCatalog"></xref> object.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.
  syntax:
    content: string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }
    return:
      type: System.String
      description: A string that represents the type and assembly of this <xref href="System.ComponentModel.Composition.Hosting.AssemblyCatalog"></xref> object.
  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  id: System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  isEii: true
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  langs:
  - csharp
  name: ICompositionElement.Origin
  nameWithType: AssemblyCatalog.ICompositionElement.Origin
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ICompositionElement.Origin
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Gets the composition element that this element originated from.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.
  syntax:
    content: System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }
    return:
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: Always `null`.
  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString
  id: ToString
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  langs:
  - csharp
  name: ToString()
  nameWithType: AssemblyCatalog.ToString()
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Gets a string representation of the assembly catalog.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A representation of the assembly catalog.
  overload: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString*
  exceptions: []
  version:
  - netframework-4.0
references:
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.BadImageFormatException
  parent: System
  isExternal: false
  name: BadImageFormatException
  nameWithType: BadImageFormatException
  fullName: System.BadImageFormatException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.IO.FileLoadException
  parent: System.IO
  isExternal: false
  name: FileLoadException
  nameWithType: FileLoadException
  fullName: System.IO.FileLoadException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.IO.FileNotFoundException
  parent: System.IO
  isExternal: false
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.IO.PathTooLongException
  parent: System.IO
  isExternal: false
  name: PathTooLongException
  nameWithType: PathTooLongException
  fullName: System.IO.PathTooLongException
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: AssemblyCatalog(Assembly)
  nameWithType: AssemblyCatalog.AssemblyCatalog(Assembly)
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: AssemblyCatalog(String)
  nameWithType: AssemblyCatalog.AssemblyCatalog(String)
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.AssemblyCatalog(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: Assembly
  nameWithType: AssemblyCatalog.Assembly
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AssemblyCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: GetExports(ImportDefinition)
  nameWithType: AssemblyCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(ImportDefinition)
- uid: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  nameWithType: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  fullName: System.Collections.Generic.IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: ExportDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: Parts
  nameWithType: AssemblyCatalog.Parts
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts
- uid: System.Linq.IQueryable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  parent: System.Linq
  isExternal: true
  name: IQueryable<ComposablePartDefinition>
  nameWithType: IQueryable<ComposablePartDefinition>
  fullName: System.Linq.IQueryable<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: IQueryable<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: ICompositionElement.DisplayName
  nameWithType: AssemblyCatalog.ICompositionElement.DisplayName
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ICompositionElement.DisplayName
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: ICompositionElement.Origin
  nameWithType: AssemblyCatalog.ICompositionElement.Origin
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ICompositionElement.Origin
- uid: System.ComponentModel.Composition.Primitives.ICompositionElement
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ICompositionElement
  nameWithType: ICompositionElement
  fullName: System.ComponentModel.Composition.Primitives.ICompositionElement
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: ToString()
  nameWithType: AssemblyCatalog.ToString()
  fullName: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString()
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor*
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: AssemblyCatalog
  nameWithType: AssemblyCatalog.AssemblyCatalog
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly*
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: Assembly
  nameWithType: AssemblyCatalog.Assembly
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose*
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: Dispose
  nameWithType: AssemblyCatalog.Dispose
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports*
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: GetExports
  nameWithType: AssemblyCatalog.GetExports
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts*
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: Parts
  nameWithType: AssemblyCatalog.Parts
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName*
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  nameWithType: AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin*
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  nameWithType: AssemblyCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
- uid: System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString*
  parent: System.ComponentModel.Composition.Hosting.AssemblyCatalog
  isExternal: false
  name: ToString
  nameWithType: AssemblyCatalog.ToString
