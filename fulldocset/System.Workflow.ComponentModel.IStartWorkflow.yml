### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.IStartWorkflow
  id: IStartWorkflow
  children:
  - System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  langs:
  - csharp
  name: IStartWorkflow
  nameWithType: IStartWorkflow
  fullName: System.Workflow.ComponentModel.IStartWorkflow
  type: Interface
  summary: Defines a service that can be obtained from an <xref href="System.Workflow.ComponentModel.ActivityExecutionContext"></xref> for the purpose of starting a new workflow instance.
  remarks: >-
    > [!NOTE]

    >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]
  syntax:
    content: public interface IStartWorkflow
  implements: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: StartWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.ComponentModel.IStartWorkflow
  langs:
  - csharp
  name: StartWorkflow(Type,Dictionary<String,Object>)
  nameWithType: IStartWorkflow.StartWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow(Type,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: Starts the workflow of designated <xref href="System.Type"></xref> providing the running instance with a <xref:System.Collections.DictionaryBase.Dictionary*> that contains runtime parameters.
  syntax:
    content: public Guid StartWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowType
      type: System.Type
      description: The <xref href="System.Type"></xref> of the workflow.
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: A <xref:System.Collections.DictionaryBase.Dictionary*> that contains runtime parameters for the workflow.
    return:
      type: System.Guid
      description: The instance ID of the workflow that is started.
  overload: System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
references:
- uid: System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.ComponentModel.IStartWorkflow
  isExternal: false
  name: StartWorkflow(Type,Dictionary<String,Object>)
  nameWithType: IStartWorkflow.StartWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow(Type,Dictionary<String,Object>)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow*
  parent: System.Workflow.ComponentModel.IStartWorkflow
  isExternal: false
  name: StartWorkflow
  nameWithType: IStartWorkflow.StartWorkflow
