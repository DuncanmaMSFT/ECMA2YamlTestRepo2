### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IOutputChannel
  id: IOutputChannel
  children:
  - System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  - System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  - System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  - System.ServiceModel.Channels.IOutputChannel.Via
  langs:
  - csharp
  name: IOutputChannel
  nameWithType: IOutputChannel
  fullName: System.ServiceModel.Channels.IOutputChannel
  type: Interface
  summary: Defines the interface that a channel must implement to send a message.
  remarks: The IOutputChannel interface defines synchronous and asynchronous variants of the <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IOutputChannel%23Send%2A> operation. It provides a <xref:System.ServiceModel.Channels.IOutputChannel.RemoteAddress%2A> for the destination of the messages sent out on the channel.
  syntax:
    content: 'public interface IOutputChannel : System.ServiceModel.Channels.IChannel'
  implements:
  - System.ServiceModel.Channels.IChannel
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IOutputChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IOutputChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  name: BeginSend(Message,AsyncCallback,Object)
  nameWithType: IOutputChannel.BeginSend(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous operation to transmit a message to the destination of the output channel.
  remarks: "The destination for messages sent out on an output channel is specified at channel creation time.  \n  \n The BeginSend method does not guarantee the delivery of message to the remote endpoint. If delivery guarantees are required, use the <xref:System.ServiceModel.Channels.IOutputSessionChannel>.  \n  \n If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown. The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property. The default value is 65536 bytes."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#2](~/add/codesnippet/csharp/46438db6-912c-4b3d-9a19-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The <xref href="System.ServiceModel.Channels.Message"></xref> being sent on the output channel.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous send operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous message transmission.
  overload: System.ServiceModel.Channels.IOutputChannel.BeginSend*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IOutputChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IOutputChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  name: BeginSend(Message,TimeSpan,AsyncCallback,Object)
  nameWithType: IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.
  remarks: "The destination for messages sent out on an output channel is specified at channel creation time.  \n  \n The BeginSend method does not guarantee the delivery of message to the remote endpoint. If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.  \n  \n If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown. The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property. The default value is 65536 bytes."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#3](~/add/codesnippet/csharp/1bab178b-e41f-497d-8790-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The <xref href="System.ServiceModel.Channels.Message"></xref> being sent on the output channel.
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the send operation has to complete before timing out.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the asynchronous operation send completion.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous send operation.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous send operation.
  overload: System.ServiceModel.Channels.IOutputChannel.BeginSend*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IOutputChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IOutputChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  id: EndSend(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  name: EndSend(IAsyncResult)
  nameWithType: IOutputChannel.EndSend(IAsyncResult)
  fullName: System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Completes an asynchronous operation to transmit a message to the destination of the output channel.
  remarks: If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown. The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property. The default value is 65536 bytes.
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#4](~/add/codesnippet/csharp/m-system.servicemodel.ch_17_1.cs)]"
  syntax:
    content: public void EndSend (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to the <xref href="stem.ServiceModel.Channels.IOutputChannel.BeginSend%2A"></xref> method.
  overload: System.ServiceModel.Channels.IOutputChannel.EndSend*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IOutputChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IOutputChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  id: RemoteAddress
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  name: RemoteAddress
  nameWithType: IOutputChannel.RemoteAddress
  fullName: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the destination of the service to which messages are sent out on the output channel.
  remarks: The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is not specified. If the <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.
  example:
  - "The following code illustrates how to implement this property:  \n  \n [!code-cs[S_UE_MessageInterceptor#0](~/add/codesnippet/csharp/p-system.servicemodel.ch_25_1.cs)]"
  syntax:
    content: public System.ServiceModel.EndpointAddress RemoteAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> of the service to which the output channel sends messages.
  overload: System.ServiceModel.Channels.IOutputChannel.RemoteAddress*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IOutputChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IOutputChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  id: Send(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  name: Send(Message)
  nameWithType: IOutputChannel.Send(Message)
  fullName: System.ServiceModel.Channels.IOutputChannel.Send(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Transmits a message to the destination of the output channel.
  remarks: "The destination for messages sent out on an output channel is specified at channel creation time.  \n  \n The Send method does not guarantee the delivery of message to the remote endpoint. An implementation of <xref:System.ServiceModel.Channels.IOutputChannel> can silently drop messages for a variety of reasons. There may be no more buffer room, for example. If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.  \n  \n Passing the message into the output channel causes the message to be consumed. After you call Send, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#5](~/add/codesnippet/csharp/08ee4a38-3c14-4c57-a6ad-_1.cs)]"
  syntax:
    content: public void Send (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The <xref href="System.ServiceModel.Channels.Message"></xref> being sent on the output channel.
  overload: System.ServiceModel.Channels.IOutputChannel.Send*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IOutputChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IOutputChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  id: Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  name: Send(Message,TimeSpan)
  nameWithType: IOutputChannel.Send(Message,TimeSpan)
  fullName: System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Sends a message on the current output channel within a specified interval of time.
  remarks: "The destination for messages sent out on an output channel is specified at channel creation time.  \n  \n The <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> method does not guarantee the delivery of message to the remote endpoint. An implementation of <xref:System.ServiceModel.Channels.IOutputChannel> can silently drop messages for a variety of reasons. There may be no more buffer room, for example. If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.  \n  \n Passing the message into the output channel causes the message to be consumed. After you call <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message."
  example:
  - "The following code illustrates how to implement this method:  \n  \n [!code-cs[S_UE_MessageInterceptor#6](~/add/codesnippet/csharp/64154944-db44-4662-a4fa-_1.cs)]"
  syntax:
    content: public void Send (System.ServiceModel.Channels.Message message, TimeSpan timeout);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The <xref href="System.ServiceModel.Channels.Message"></xref> being sent on the output channel.
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies how long the send operation has to complete before timing out.
  overload: System.ServiceModel.Channels.IOutputChannel.Send*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IOutputChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IOutputChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IOutputChannel.Via
  id: Via
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  name: Via
  nameWithType: IOutputChannel.Via
  fullName: System.ServiceModel.Channels.IOutputChannel.Via
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the URI that contains the transport address to which messages are sent on the output channel.
  remarks: The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a Via is not specified. If the Via is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.
  example:
  - "The following code illustrates how to implement this property:  \n  \n [!code-cs[S_UE_MessageInterceptor#1](~/add/codesnippet/csharp/p-system.servicemodel.ch_39_1.cs)]"
  syntax:
    content: public Uri Via { get; }
    return:
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the transport address to which messages are sent on the output channel.
  overload: System.ServiceModel.Channels.IOutputChannel.Via*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IOutputChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IOutputChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: BeginSend(Message,AsyncCallback,Object)
  nameWithType: IOutputChannel.BeginSend(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: BeginSend(Message,TimeSpan,AsyncCallback,Object)
  nameWithType: IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: EndSend(IAsyncResult)
  nameWithType: IOutputChannel.EndSend(IAsyncResult)
  fullName: System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)
- uid: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: RemoteAddress
  nameWithType: IOutputChannel.RemoteAddress
  fullName: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: Send(Message)
  nameWithType: IOutputChannel.Send(Message)
  fullName: System.ServiceModel.Channels.IOutputChannel.Send(Message)
- uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: Send(Message,TimeSpan)
  nameWithType: IOutputChannel.Send(Message,TimeSpan)
  fullName: System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)
- uid: System.ServiceModel.Channels.IOutputChannel.Via
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: Via
  nameWithType: IOutputChannel.Via
  fullName: System.ServiceModel.Channels.IOutputChannel.Via
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend*
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: BeginSend
  nameWithType: IOutputChannel.BeginSend
- uid: System.ServiceModel.Channels.IOutputChannel.EndSend*
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: EndSend
  nameWithType: IOutputChannel.EndSend
- uid: System.ServiceModel.Channels.IOutputChannel.RemoteAddress*
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: RemoteAddress
  nameWithType: IOutputChannel.RemoteAddress
- uid: System.ServiceModel.Channels.IOutputChannel.Send*
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: Send
  nameWithType: IOutputChannel.Send
- uid: System.ServiceModel.Channels.IOutputChannel.Via*
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: Via
  nameWithType: IOutputChannel.Via
