### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.Match
  id: Match
  children:
  - System.Text.RegularExpressions.Match.Empty
  - System.Text.RegularExpressions.Match.Groups
  - System.Text.RegularExpressions.Match.NextMatch
  - System.Text.RegularExpressions.Match.Result(System.String)
  - System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)
  langs:
  - csharp
  name: Match
  nameWithType: Match
  fullName: System.Text.RegularExpressions.Match
  type: Class
  summary: Represents the results from a single regular expression match.
  syntax:
    content: 'public class Match : System.Text.RegularExpressions.Group'
  inheritance:
  - System.Object
  - System.Text.RegularExpressions.Capture
  - System.Text.RegularExpressions.Group
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Text.RegularExpressions.Capture.Index
  - System.Text.RegularExpressions.Capture.Length
  - System.Text.RegularExpressions.Capture.ToString
  - System.Text.RegularExpressions.Capture.Value
  - System.Text.RegularExpressions.Group.Captures
  - System.Text.RegularExpressions.Group.Success
  - System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Match.Empty
  id: Empty
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  name: Empty
  nameWithType: Match.Empty
  fullName: System.Text.RegularExpressions.Match.Empty
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets the empty group. All failed matches return this empty match.
  syntax:
    content: public static System.Text.RegularExpressions.Match Empty { get; }
    return:
      type: System.Text.RegularExpressions.Match
      description: To be added.
  overload: System.Text.RegularExpressions.Match.Empty*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Match.Groups
  id: Groups
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  name: Groups
  nameWithType: Match.Groups
  fullName: System.Text.RegularExpressions.Match.Groups
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets a collection of groups matched by the regular expression.
  syntax:
    content: public virtual System.Text.RegularExpressions.GroupCollection Groups { get; }
    return:
      type: System.Text.RegularExpressions.GroupCollection
      description: To be added.
  overload: System.Text.RegularExpressions.Match.Groups*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Match.NextMatch
  id: NextMatch
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  name: NextMatch()
  nameWithType: Match.NextMatch()
  fullName: System.Text.RegularExpressions.Match.NextMatch()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Returns a new <xref href="System.Text.RegularExpressions.Match"></xref> object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).
  syntax:
    content: public System.Text.RegularExpressions.Match NextMatch ();
    parameters: []
    return:
      type: System.Text.RegularExpressions.Match
      description: To be added.
  overload: System.Text.RegularExpressions.Match.NextMatch*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Match.Result(System.String)
  id: Result(System.String)
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  name: Result(String)
  nameWithType: Match.Result(String)
  fullName: System.Text.RegularExpressions.Match.Result(String)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Returns the expansion of the specified replacement pattern.
  syntax:
    content: public virtual string Result (string replacement);
    parameters:
    - id: replacement
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Match.Result*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)
  id: Synchronized(System.Text.RegularExpressions.Match)
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  name: Synchronized(Match)
  nameWithType: Match.Synchronized(Match)
  fullName: System.Text.RegularExpressions.Match.Synchronized(Match)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Returns a <xref href="System.Text.RegularExpressions.Match"></xref> instance equivalent to the one supplied that is suitable to share between multiple threads.
  syntax:
    content: public static System.Text.RegularExpressions.Match Synchronized (System.Text.RegularExpressions.Match inner);
    parameters:
    - id: inner
      type: System.Text.RegularExpressions.Match
      description: To be added.
    return:
      type: System.Text.RegularExpressions.Match
      description: To be added.
  overload: System.Text.RegularExpressions.Match.Synchronized*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Text.RegularExpressions.Group
  isExternal: false
  name: System.Text.RegularExpressions.Group
- uid: System.Text.RegularExpressions.Match.Empty
  parent: System.Text.RegularExpressions.Match
  isExternal: false
  name: Empty
  nameWithType: Match.Empty
  fullName: System.Text.RegularExpressions.Match.Empty
- uid: System.Text.RegularExpressions.Match
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Match
  nameWithType: Match
  fullName: System.Text.RegularExpressions.Match
- uid: System.Text.RegularExpressions.Match.Groups
  parent: System.Text.RegularExpressions.Match
  isExternal: false
  name: Groups
  nameWithType: Match.Groups
  fullName: System.Text.RegularExpressions.Match.Groups
- uid: System.Text.RegularExpressions.GroupCollection
  parent: System.Text.RegularExpressions
  isExternal: false
  name: GroupCollection
  nameWithType: GroupCollection
  fullName: System.Text.RegularExpressions.GroupCollection
- uid: System.Text.RegularExpressions.Match.NextMatch
  parent: System.Text.RegularExpressions.Match
  isExternal: false
  name: NextMatch()
  nameWithType: Match.NextMatch()
  fullName: System.Text.RegularExpressions.Match.NextMatch()
- uid: System.Text.RegularExpressions.Match.Result(System.String)
  parent: System.Text.RegularExpressions.Match
  isExternal: false
  name: Result(String)
  nameWithType: Match.Result(String)
  fullName: System.Text.RegularExpressions.Match.Result(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)
  parent: System.Text.RegularExpressions.Match
  isExternal: false
  name: Synchronized(Match)
  nameWithType: Match.Synchronized(Match)
  fullName: System.Text.RegularExpressions.Match.Synchronized(Match)
- uid: System.Text.RegularExpressions.Match.Empty*
  parent: System.Text.RegularExpressions.Match
  isExternal: false
  name: Empty
  nameWithType: Match.Empty
- uid: System.Text.RegularExpressions.Match.Groups*
  parent: System.Text.RegularExpressions.Match
  isExternal: false
  name: Groups
  nameWithType: Match.Groups
- uid: System.Text.RegularExpressions.Match.NextMatch*
  parent: System.Text.RegularExpressions.Match
  isExternal: false
  name: NextMatch
  nameWithType: Match.NextMatch
- uid: System.Text.RegularExpressions.Match.Result*
  parent: System.Text.RegularExpressions.Match
  isExternal: false
  name: Result
  nameWithType: Match.Result
- uid: System.Text.RegularExpressions.Match.Synchronized*
  parent: System.Text.RegularExpressions.Match
  isExternal: false
  name: Synchronized
  nameWithType: Match.Synchronized
