### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.ExtractedClassName
  id: ExtractedClassName
  children:
  - Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock
  - Microsoft.Build.Tasks.ExtractedClassName.Name
  langs:
  - csharp
  name: ExtractedClassName
  nameWithType: ExtractedClassName
  fullName: Microsoft.Build.Tasks.ExtractedClassName
  type: Struct
  summary: Extracts a class name from a language source file.
  syntax:
    content: public struct ExtractedClassName
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock
  id: IsInsideConditionalBlock
  parent: Microsoft.Build.Tasks.ExtractedClassName
  langs:
  - csharp
  name: IsInsideConditionalBlock
  nameWithType: ExtractedClassName.IsInsideConditionalBlock
  fullName: Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock
  type: Property
  assemblies:
  - Microsoft.Build.Tasks
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: Gets or sets a value indicating whether the extracted class name exists inside a block of conditionally compiled code.
  syntax:
    content: public bool IsInsideConditionalBlock { get; set; }
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> to indicate the extracted class name exists inside a block of conditionally compiled code; otherwise, <xref uid="langword_csharp_false" name="false" href=""></xref>.
  overload: Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: Microsoft.Build.Tasks.ExtractedClassName.Name
  id: Name
  parent: Microsoft.Build.Tasks.ExtractedClassName
  langs:
  - csharp
  name: Name
  nameWithType: ExtractedClassName.Name
  fullName: Microsoft.Build.Tasks.ExtractedClassName.Name
  type: Property
  assemblies:
  - Microsoft.Build.Tasks
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: Gets or sets the extracted class name.
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: The extracted class name.
  overload: Microsoft.Build.Tasks.ExtractedClassName.Name*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock
  parent: Microsoft.Build.Tasks.ExtractedClassName
  isExternal: false
  name: IsInsideConditionalBlock
  nameWithType: ExtractedClassName.IsInsideConditionalBlock
  fullName: Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.ExtractedClassName.Name
  parent: Microsoft.Build.Tasks.ExtractedClassName
  isExternal: false
  name: Name
  nameWithType: ExtractedClassName.Name
  fullName: Microsoft.Build.Tasks.ExtractedClassName.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Tasks.ExtractedClassName.IsInsideConditionalBlock*
  parent: Microsoft.Build.Tasks.ExtractedClassName
  isExternal: false
  name: IsInsideConditionalBlock
  nameWithType: ExtractedClassName.IsInsideConditionalBlock
- uid: Microsoft.Build.Tasks.ExtractedClassName.Name*
  parent: Microsoft.Build.Tasks.ExtractedClassName
  isExternal: false
  name: Name
  nameWithType: ExtractedClassName.Name
