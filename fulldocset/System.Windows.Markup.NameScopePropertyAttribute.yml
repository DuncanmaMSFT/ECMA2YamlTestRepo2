### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.NameScopePropertyAttribute
  id: NameScopePropertyAttribute
  children:
  - System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)
  - System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)
  - System.Windows.Markup.NameScopePropertyAttribute.Name
  - System.Windows.Markup.NameScopePropertyAttribute.Type
  langs:
  - csharp
  name: NameScopePropertyAttribute
  nameWithType: NameScopePropertyAttribute
  fullName: System.Windows.Markup.NameScopePropertyAttribute
  type: Class
  summary: Specifies a property of the associated class that provides the XAML namescope value.
  remarks: "In a typical object model / application model combination where XAML is used, the classes that are used as a XAML namescope are the classes that are generally used as root elements, or that support a page metaphor. These classes generally implement <xref:System.Windows.Markup.INameScope> and the XAML namescope is created corresponding to the root by typical XAML processing behavior in context of a framework's programming model and application model.  \n  \n If NameScopePropertyAttribute is used, the XAML namescope property value is expected to be an object that implements <xref:System.Windows.Markup.INameScope> and holds the actual XAML namescope and its behavior.  \n  \n There are two forms for this attribute: property name only, or type and property. The latter form should be used only for cases where the property that holds the XAML name scope is an attachable member. The attached member technique has the advantage that service classes can implement a XAML namescope concept that can support several different object types. Those object types then do not need to be explicitly related in class inheritance.  \n  \n In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], NameScopePropertyAttribute is in the System.Xaml assembly. For more information, see [Types Migrated from WPF to System.Xaml](../Topic/Types%20Migrated%20from%20WPF%20to%20System.Xaml.md).  \n  \n## WPF Usage Notes  \n In WPF, this attribute is applied to only a single type, <xref:System.Windows.DependencyObject>. In this case the attributed property is the service class <xref:System.Windows.NameScope> and its <xref:System.Windows.NameScope.NameScope%2A?displayProperty=fullName>attached property."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)]

      [System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      public sealed class NameScopePropertyAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Markup\NameScopePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Markup/NameScopePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Markup.NameScopePropertyAttribute
  langs:
  - csharp
  name: NameScopePropertyAttribute(String)
  nameWithType: NameScopePropertyAttribute.NameScopePropertyAttribute(String)
  fullName: System.Windows.Markup.NameScopePropertyAttribute.NameScopePropertyAttribute(String)
  type: Constructor
  assemblies:
  - WindowsBase
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Initializes a new instance of the <xref href="System.Windows.Markup.NameScopePropertyAttribute"></xref> class with the specified name.
  syntax:
    content: public NameScopePropertyAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the property on the attributed type that provides the XAML namescope.
  overload: System.Windows.Markup.NameScopePropertyAttribute.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Markup\NameScopePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Markup/NameScopePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.Windows.Markup.NameScopePropertyAttribute
  langs:
  - csharp
  name: NameScopePropertyAttribute(String,Type)
  nameWithType: NameScopePropertyAttribute.NameScopePropertyAttribute(String,Type)
  fullName: System.Windows.Markup.NameScopePropertyAttribute.NameScopePropertyAttribute(String,Type)
  type: Constructor
  assemblies:
  - WindowsBase
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Initializes a new instance of the <xref href="System.Windows.Markup.NameScopePropertyAttribute"></xref> class with the specified name and type.
  syntax:
    content: public NameScopePropertyAttribute (string name, Type type);
    parameters:
    - id: name
      type: System.String
      description: The name of the attachable member that provides the XAML name scope.
    - id: type
      type: System.Type
      description: The owner type of the attachable member that provides the XAML name scope.
  overload: System.Windows.Markup.NameScopePropertyAttribute.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Markup\NameScopePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Markup/NameScopePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Markup.NameScopePropertyAttribute.Name
  id: Name
  parent: System.Windows.Markup.NameScopePropertyAttribute
  langs:
  - csharp
  name: Name
  nameWithType: NameScopePropertyAttribute.Name
  fullName: System.Windows.Markup.NameScopePropertyAttribute.Name
  type: Property
  assemblies:
  - WindowsBase
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Gets the name of the property that provides the XAML namescope.
  remarks: The meaning of Name depends on whether <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> is set. If <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> is null, then Name references a property on the type being attributed. If <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A> contains a value, then Name references a property on the indicated <xref:System.Windows.Markup.NameScopePropertyAttribute.Type%2A>.
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: A string value that is the name of the property that provides the XAML namescope.
  overload: System.Windows.Markup.NameScopePropertyAttribute.Name*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Markup\NameScopePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Markup/NameScopePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Markup.NameScopePropertyAttribute.Type
  id: Type
  parent: System.Windows.Markup.NameScopePropertyAttribute
  langs:
  - csharp
  name: Type
  nameWithType: NameScopePropertyAttribute.Type
  fullName: System.Windows.Markup.NameScopePropertyAttribute.Type
  type: Property
  assemblies:
  - WindowsBase
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Gets the owner type of the attached property that provides the XAML namescope support.
  remarks: This property only is relevant if the XAML namescope implementing property is an attachable member, in which case this is the attachable member's owner type. Otherwise, this value may be null. If you need general reflection-based logic that reports a namescope property's defining type in all cases, then you can substitute the type where the attribute is applied whenever you encounter `null` for this property.
  syntax:
    content: public Type Type { get; }
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> value that is the owner type of the attached property that provides the XAML namescope support, or `null`. See Remarks.
  overload: System.Windows.Markup.NameScopePropertyAttribute.Type*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Markup\NameScopePropertyAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Markup/NameScopePropertyAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)
  parent: System.Windows.Markup.NameScopePropertyAttribute
  isExternal: false
  name: NameScopePropertyAttribute(String)
  nameWithType: NameScopePropertyAttribute.NameScopePropertyAttribute(String)
  fullName: System.Windows.Markup.NameScopePropertyAttribute.NameScopePropertyAttribute(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)
  parent: System.Windows.Markup.NameScopePropertyAttribute
  isExternal: false
  name: NameScopePropertyAttribute(String,Type)
  nameWithType: NameScopePropertyAttribute.NameScopePropertyAttribute(String,Type)
  fullName: System.Windows.Markup.NameScopePropertyAttribute.NameScopePropertyAttribute(String,Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.NameScopePropertyAttribute.Name
  parent: System.Windows.Markup.NameScopePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: NameScopePropertyAttribute.Name
  fullName: System.Windows.Markup.NameScopePropertyAttribute.Name
- uid: System.Windows.Markup.NameScopePropertyAttribute.Type
  parent: System.Windows.Markup.NameScopePropertyAttribute
  isExternal: false
  name: Type
  nameWithType: NameScopePropertyAttribute.Type
  fullName: System.Windows.Markup.NameScopePropertyAttribute.Type
- uid: System.Windows.Markup.NameScopePropertyAttribute.#ctor*
  parent: System.Windows.Markup.NameScopePropertyAttribute
  isExternal: false
  name: NameScopePropertyAttribute
  nameWithType: NameScopePropertyAttribute.NameScopePropertyAttribute
- uid: System.Windows.Markup.NameScopePropertyAttribute.Name*
  parent: System.Windows.Markup.NameScopePropertyAttribute
  isExternal: false
  name: Name
  nameWithType: NameScopePropertyAttribute.Name
- uid: System.Windows.Markup.NameScopePropertyAttribute.Type*
  parent: System.Windows.Markup.NameScopePropertyAttribute
  isExternal: false
  name: Type
  nameWithType: NameScopePropertyAttribute.Type
