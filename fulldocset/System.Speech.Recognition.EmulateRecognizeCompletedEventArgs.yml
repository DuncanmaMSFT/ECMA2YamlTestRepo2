### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs
  id: EmulateRecognizeCompletedEventArgs
  children:
  - System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result
  langs:
  - csharp
  name: EmulateRecognizeCompletedEventArgs
  nameWithType: EmulateRecognizeCompletedEventArgs
  fullName: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs
  type: Class
  summary: Provides data for the `EmulateRecognizeCompleted` event of the <xref href="System.Speech.Recognition.SpeechRecognizer"></xref> and <xref href="System.Speech.Recognition.SpeechRecognitionEngine"></xref> classes.
  remarks: "An instance of EmulateRecognizeCompletedEventArgs is created when the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object raises the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event. To obtain information about the result of recognition, access the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property in the handler for the event.  \n  \n Emulation is the process by which text, instead of audio, is the input to a speech recognition engine. To bypass the audio inputs for a <xref:System.Speech.Recognition.SpeechRecognitionEngine> object during emulation, use the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> method.  \n  \n If the speech recognition engine encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property is set to `null`.  \n  \n EmulateRecognizeCompletedEventArgs derives from <xref:System.ComponentModel.AsyncCompletedEventArgs>."
  example:
  - "The following example adds an event handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> event to a <xref:System.Speech.Recognition.SpeechRecognitionEngine>. The handler gets the recognized text from the <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> property.  \n  \n```c#  \n  \nprivate SpeechRecognitionEngine sre;  \n  \n// Initialize the speech recognition engine.   \nprivate void Initialize()  \n{  \n  sre = new SpeechRecognitionEngine();  \n  \n  // Add a handler for the EmulateRecognizeCompleted event.  \n  sre.EmulateRecognizeCompleted += new EventHandler<EmulateRecognizeCompletedEventArgs>(sre_EmulateRecognizeCompleted);  \n  \n  // Add other initialization code here.  \n}  \n  \n// Handle the EmulateRecognizeCompleted event.   \nvoid sre_EmulateRecognizeCompleted(object sender, EmulateRecognizeCompletedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  string phrase = e.Result.Text;  \n  \n  // Add event handler code here.  \n}  \n  \n```"
  syntax:
    content: 'public class EmulateRecognizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  - System.ComponentModel.AsyncCompletedEventArgs
  implements: []
  inheritedMembers:
  - System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  - System.ComponentModel.AsyncCompletedEventArgs.Error
  - System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  - System.ComponentModel.AsyncCompletedEventArgs.UserState
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result
  id: Result
  parent: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs
  langs:
  - csharp
  name: Result
  nameWithType: EmulateRecognizeCompletedEventArgs.Result
  fullName: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: Gets the results of emulated recognition.
  remarks: "The <xref:System.Speech.Recognition.RecognitionResult> object derives from <xref:System.Speech.Recognition.RecognizedPhrase> and contains full information about a phrase returned by a recognition operation. You can obtain a list off all the recognition candidates from the <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> property.  \n  \n If recognizer encounters an exception during the recognition operation, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is set to the exception and the Result property is set to `null`."
  syntax:
    content: public System.Speech.Recognition.RecognitionResult Result { get; }
    return:
      type: System.Speech.Recognition.RecognitionResult
      description: Detailed information about the results of recognition, or `null` if an error occurred.
  overload: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result
  parent: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs
  isExternal: false
  name: Result
  nameWithType: EmulateRecognizeCompletedEventArgs.Result
  fullName: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result
- uid: System.Speech.Recognition.RecognitionResult
  parent: System.Speech.Recognition
  isExternal: false
  name: RecognitionResult
  nameWithType: RecognitionResult
  fullName: System.Speech.Recognition.RecognitionResult
- uid: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result*
  parent: System.Speech.Recognition.EmulateRecognizeCompletedEventArgs
  isExternal: false
  name: Result
  nameWithType: EmulateRecognizeCompletedEventArgs.Result
