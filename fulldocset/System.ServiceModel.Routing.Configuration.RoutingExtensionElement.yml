### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  id: RoutingExtensionElement
  children:
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly
  - System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled
  langs:
  - csharp
  name: RoutingExtensionElement
  nameWithType: RoutingExtensionElement
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  type: Class
  summary: Represents a configuration element that contains sub-elements that specify the routing behavior.
  syntax:
    content: 'public sealed class RoutingExtensionElement : System.ServiceModel.Configuration.BehaviorExtensionElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BehaviorExtensionElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Routing.Configuration\RoutingExtensionElement.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: RoutingExtensionElement()
  nameWithType: RoutingExtensionElement.RoutingExtensionElement()
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RoutingExtensionElement()
  type: Constructor
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: Initializes a new instance of <xref href="System.ServiceModel.Routing.Configuration.RoutingExtensionElement"></xref> class.
  syntax:
    content: public RoutingExtensionElement ();
    parameters: []
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Routing.Configuration\RoutingExtensionElement.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType
  id: BehaviorType
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: BehaviorType
  nameWithType: RoutingExtensionElement.BehaviorType
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: Gets the type of behavior.
  syntax:
    content: public override Type BehaviorType { get; }
    return:
      type: System.Type
      description: The behavior type.
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Routing.Configuration\RoutingExtensionElement.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior
  id: CreateBehavior
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: CreateBehavior()
  nameWithType: RoutingExtensionElement.CreateBehavior()
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior()
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  syntax:
    content: protected override object CreateBehavior ();
    parameters: []
    return:
      type: System.Object
      description: To be added.
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Routing.Configuration\RoutingExtensionElement.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch
  id: EnsureOrderedDispatch
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: EnsureOrderedDispatch
  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: Gets or sets a value that indicates whether messages are to be dispatched in the order they were sent.
  syntax:
    content: public bool EnsureOrderedDispatch { get; set; }
    return:
      type: System.Boolean
      description: '`true` if messages are to be dispatched in the order they were sent; otherwise, `false`.'
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Routing.Configuration\RoutingExtensionElement.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName
  id: FilterTableName
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: FilterTableName
  nameWithType: RoutingExtensionElement.FilterTableName
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: Gets or sets the name of the filter table used by this routing service for routing messages.
  syntax:
    content: public string FilterTableName { get; set; }
    return:
      type: System.String
      description: The name of the filter table.
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Routing.Configuration\RoutingExtensionElement.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly
  id: RouteOnHeadersOnly
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: RouteOnHeadersOnly
  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: Gets or sets a value that indicates whether the filter is allowed to access only the message headers or the message headers and message body.
  syntax:
    content: public bool RouteOnHeadersOnly { get; set; }
    return:
      type: System.Boolean
      description: '**true** if the filter can only access header values; otherwise, **false**. The default is **true**.'
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Routing.Configuration\RoutingExtensionElement.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled
  id: SoapProcessingEnabled
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  langs:
  - csharp
  name: SoapProcessingEnabled
  nameWithType: RoutingExtensionElement.SoapProcessingEnabled
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled
  type: Property
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing.Configuration
  summary: Gets or sets a value that indicates whether SOAP processing should occur.
  remarks: '[!INCLUDE[crabout](~/add/includes/crabout-md.md)] SOAP processing, see <xref:System.ServiceModel.Routing.SoapProcessingBehavior>.'
  syntax:
    content: public bool SoapProcessingEnabled { get; set; }
    return:
      type: System.Boolean
      description: '**true** if messages should be marshaled; otherwise, **false**. The default is **true**.'
  overload: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Routing.Configuration\RoutingExtensionElement.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Routing.Configuration/RoutingExtensionElement.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ServiceModel.Configuration.BehaviorExtensionElement
  isExternal: false
  name: System.ServiceModel.Configuration.BehaviorExtensionElement
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: RoutingExtensionElement()
  nameWithType: RoutingExtensionElement.RoutingExtensionElement()
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RoutingExtensionElement()
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: BehaviorType
  nameWithType: RoutingExtensionElement.BehaviorType
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: CreateBehavior()
  nameWithType: RoutingExtensionElement.CreateBehavior()
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: FilterTableName
  nameWithType: RoutingExtensionElement.FilterTableName
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: RouteOnHeadersOnly
  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: SoapProcessingEnabled
  nameWithType: RoutingExtensionElement.SoapProcessingEnabled
  fullName: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: RoutingExtensionElement
  nameWithType: RoutingExtensionElement.RoutingExtensionElement
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: BehaviorType
  nameWithType: RoutingExtensionElement.BehaviorType
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.CreateBehavior*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: CreateBehavior
  nameWithType: RoutingExtensionElement.CreateBehavior
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: RoutingExtensionElement.EnsureOrderedDispatch
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: FilterTableName
  nameWithType: RoutingExtensionElement.FilterTableName
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: RouteOnHeadersOnly
  nameWithType: RoutingExtensionElement.RouteOnHeadersOnly
- uid: System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled*
  parent: System.ServiceModel.Routing.Configuration.RoutingExtensionElement
  isExternal: false
  name: SoapProcessingEnabled
  nameWithType: RoutingExtensionElement.SoapProcessingEnabled
