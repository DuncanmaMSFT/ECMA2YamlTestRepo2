### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.SocketAsyncEventArgs
  id: SocketAsyncEventArgs
  children:
  - System.Net.Sockets.SocketAsyncEventArgs.#ctor
  - System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  - System.Net.Sockets.SocketAsyncEventArgs.Buffer
  - System.Net.Sockets.SocketAsyncEventArgs.BufferList
  - System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  - System.Net.Sockets.SocketAsyncEventArgs.Completed
  - System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  - System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  - System.Net.Sockets.SocketAsyncEventArgs.Count
  - System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket
  - System.Net.Sockets.SocketAsyncEventArgs.Dispose
  - System.Net.Sockets.SocketAsyncEventArgs.Finalize
  - System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  - System.Net.Sockets.SocketAsyncEventArgs.Offset
  - System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  - System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  - System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  - System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  - System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags
  - System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  - System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)
  - System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)
  - System.Net.Sockets.SocketAsyncEventArgs.SocketError
  - System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  - System.Net.Sockets.SocketAsyncEventArgs.UserToken
  langs:
  - csharp
  name: SocketAsyncEventArgs
  nameWithType: SocketAsyncEventArgs
  fullName: System.Net.Sockets.SocketAsyncEventArgs
  type: Class
  summary: Represents an asynchronous socket operation.
  syntax:
    content: 'public class SocketAsyncEventArgs : EventArgs, IDisposable'
  inheritance:
  - System.Object
  - System.EventArgs
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.#ctor
  id: '#ctor'
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: SocketAsyncEventArgs()
  nameWithType: SocketAsyncEventArgs.SocketAsyncEventArgs()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketAsyncEventArgs()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Creates an empty <xref href="System.Net.Sockets.SocketAsyncEventArgs"></xref> instance.
  syntax:
    content: public SocketAsyncEventArgs ();
    parameters: []
  overload: System.Net.Sockets.SocketAsyncEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  id: AcceptSocket
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: AcceptSocket
  nameWithType: SocketAsyncEventArgs.AcceptSocket
  fullName: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.
  syntax:
    content: public System.Net.Sockets.Socket AcceptSocket { get; set; }
    return:
      type: System.Net.Sockets.Socket
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.Buffer
  id: Buffer
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: Buffer
  nameWithType: SocketAsyncEventArgs.Buffer
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets the data buffer to use with an asynchronous socket method.
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.Buffer*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.BufferList
  id: BufferList
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: BufferList
  nameWithType: SocketAsyncEventArgs.BufferList
  fullName: System.Net.Sockets.SocketAsyncEventArgs.BufferList
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets or sets an array of data buffers to use with an asynchronous socket method.
  syntax:
    content: public System.Collections.Generic.IList<ArraySegment<byte>> BufferList { get; set; }
    return:
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.BufferList*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  id: BytesTransferred
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: BytesTransferred
  nameWithType: SocketAsyncEventArgs.BytesTransferred
  fullName: System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets the number of bytes transferred in the socket operation.
  syntax:
    content: public int BytesTransferred { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.Completed
  id: Completed
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: Completed
  nameWithType: SocketAsyncEventArgs.Completed
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Completed
  type: Event
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: The event used to complete an asynchronous operation.
  syntax:
    content: public event EventHandler<System.Net.Sockets.SocketAsyncEventArgs> Completed;
    return:
      type: System.EventHandler{System.Net.Sockets.SocketAsyncEventArgs}
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  id: ConnectByNameError
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: ConnectByNameError
  nameWithType: SocketAsyncEventArgs.ConnectByNameError
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets the exception in the case of a connection failure when a <xref href="System.Net.DnsEndPoint"></xref> was used.
  syntax:
    content: public Exception ConnectByNameError { get; }
    return:
      type: System.Exception
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError*
  exceptions: []
  version:
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  id: ConnectSocket
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: ConnectSocket
  nameWithType: SocketAsyncEventArgs.ConnectSocket
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: The created and connected <xref href="System.Net.Sockets.Socket"></xref> object after successful completion of the <xref:System.Net.Sockets.Socket.ConnectAsync*> method.
  syntax:
    content: public System.Net.Sockets.Socket ConnectSocket { get; }
    return:
      type: System.Net.Sockets.Socket
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket*
  exceptions: []
  version:
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.Count
  id: Count
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: Count
  nameWithType: SocketAsyncEventArgs.Count
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Count
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.Count*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket
  id: DisconnectReuseSocket
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: DisconnectReuseSocket
  nameWithType: SocketAsyncEventArgs.DisconnectReuseSocket
  fullName: System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets or sets a value that specifies if socket can be reused after a disconnect operation.
  syntax:
    content: public bool DisconnectReuseSocket { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.Dispose
  id: Dispose
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: Dispose()
  nameWithType: SocketAsyncEventArgs.Dispose()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Sockets.SocketAsyncEventArgs"></xref> instance and optionally disposes of the managed resources.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.SocketAsyncEventArgs.Dispose*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.Finalize
  id: Finalize
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: Finalize()
  nameWithType: SocketAsyncEventArgs.Finalize()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Frees resources used by the <xref href="System.Net.Sockets.SocketAsyncEventArgs"></xref> class.
  syntax:
    content: ~SocketAsyncEventArgs ();
    parameters: []
  overload: System.Net.Sockets.SocketAsyncEventArgs.Finalize*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  id: LastOperation
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: LastOperation
  nameWithType: SocketAsyncEventArgs.LastOperation
  fullName: System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets the type of socket operation most recently performed with this context object.
  syntax:
    content: public System.Net.Sockets.SocketAsyncOperation LastOperation { get; }
    return:
      type: System.Net.Sockets.SocketAsyncOperation
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.LastOperation*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.Offset
  id: Offset
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: Offset
  nameWithType: SocketAsyncEventArgs.Offset
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Offset
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets the offset, in bytes, into the data buffer referenced by the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer*> property.
  syntax:
    content: public int Offset { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.Offset*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  id: OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: OnCompleted(SocketAsyncEventArgs)
  nameWithType: SocketAsyncEventArgs.OnCompleted(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(SocketAsyncEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Represents a method that is called when an asynchronous operation completes.
  syntax:
    content: protected virtual void OnCompleted (System.Net.Sockets.SocketAsyncEventArgs e);
    parameters:
    - id: e
      type: System.Net.Sockets.SocketAsyncEventArgs
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  id: ReceiveMessageFromPacketInfo
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: ReceiveMessageFromPacketInfo
  nameWithType: SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets the IP address and interface of a received packet.
  syntax:
    content: public System.Net.Sockets.IPPacketInformation ReceiveMessageFromPacketInfo { get; }
    return:
      type: System.Net.Sockets.IPPacketInformation
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: RemoteEndPoint
  nameWithType: SocketAsyncEventArgs.RemoteEndPoint
  fullName: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets or sets the remote IP endpoint for an asynchronous operation.
  syntax:
    content: public System.Net.EndPoint RemoteEndPoint { get; set; }
    return:
      type: System.Net.EndPoint
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  id: SendPacketsElements
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: SendPacketsElements
  nameWithType: SocketAsyncEventArgs.SendPacketsElements
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets or sets an array of buffers to be sent for an asynchronous operation used by the <xref:System.Net.Sockets.Socket.SendPacketsAsync*?displayProperty=fullName> method.
  syntax:
    content: public System.Net.Sockets.SendPacketsElement[] SendPacketsElements { get; set; }
    return:
      type: System.Net.Sockets.SendPacketsElement[]
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags
  id: SendPacketsFlags
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: SendPacketsFlags
  nameWithType: SocketAsyncEventArgs.SendPacketsFlags
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets or sets a bitwise combination of <xref href="System.Net.Sockets.TransmitFileOptions"></xref> values for an asynchronous operation used by the <xref:System.Net.Sockets.Socket.SendPacketsAsync*?displayProperty=fullName> method.
  syntax:
    content: public System.Net.Sockets.TransmitFileOptions SendPacketsFlags { get; set; }
    return:
      type: System.Net.Sockets.TransmitFileOptions
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  id: SendPacketsSendSize
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: SendPacketsSendSize
  nameWithType: SocketAsyncEventArgs.SendPacketsSendSize
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets or sets the size, in bytes, of the data block used in the send operation.
  syntax:
    content: public int SendPacketsSendSize { get; set; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)
  id: SetBuffer(System.Int32,System.Int32)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: SetBuffer(Int32,Int32)
  nameWithType: SocketAsyncEventArgs.SetBuffer(Int32,Int32)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Sets the data buffer to use with an asynchronous socket method.
  syntax:
    content: public void SetBuffer (int offset, int count);
    parameters:
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)
  id: SetBuffer(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: SetBuffer(Byte[],Int32,Int32)
  nameWithType: SocketAsyncEventArgs.SetBuffer(Byte[],Int32,Int32)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Sets the data buffer to use with an asynchronous socket method.
  syntax:
    content: public void SetBuffer (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.SocketError
  id: SocketError
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: SocketError
  nameWithType: SocketAsyncEventArgs.SocketError
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketError
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets or sets the result of the asynchronous socket operation.
  syntax:
    content: public System.Net.Sockets.SocketError SocketError { get; set; }
    return:
      type: System.Net.Sockets.SocketError
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.SocketError*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  id: SocketFlags
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: SocketFlags
  nameWithType: SocketAsyncEventArgs.SocketFlags
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.
  syntax:
    content: public System.Net.Sockets.SocketFlags SocketFlags { get; set; }
    return:
      type: System.Net.Sockets.SocketFlags
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.SocketFlags*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.Sockets.SocketAsyncEventArgs.UserToken
  id: UserToken
  parent: System.Net.Sockets.SocketAsyncEventArgs
  langs:
  - csharp
  name: UserToken
  nameWithType: SocketAsyncEventArgs.UserToken
  fullName: System.Net.Sockets.SocketAsyncEventArgs.UserToken
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: Gets or sets a user or application object associated with this asynchronous socket operation.
  syntax:
    content: public object UserToken { get; set; }
    return:
      type: System.Object
      description: To be added.
  overload: System.Net.Sockets.SocketAsyncEventArgs.UserToken*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Net.Sockets.SocketAsyncEventArgs.#ctor
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SocketAsyncEventArgs()
  nameWithType: SocketAsyncEventArgs.SocketAsyncEventArgs()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketAsyncEventArgs()
- uid: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: AcceptSocket
  nameWithType: SocketAsyncEventArgs.AcceptSocket
  fullName: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket
- uid: System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: false
  name: Socket
  nameWithType: Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Net.Sockets.SocketAsyncEventArgs.Buffer
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Buffer
  nameWithType: SocketAsyncEventArgs.Buffer
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Buffer
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.SocketAsyncEventArgs.BufferList
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: BufferList
  nameWithType: SocketAsyncEventArgs.BufferList
  fullName: System.Net.Sockets.SocketAsyncEventArgs.BufferList
- uid: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<ArraySegment<Byte>>
  nameWithType: IList<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IList<System.ArraySegment<System.Byte>>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.ArraySegment<System.Byte>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment<System.Byte>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: BytesTransferred
  nameWithType: SocketAsyncEventArgs.BytesTransferred
  fullName: System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.SocketAsyncEventArgs.Completed
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Completed
  nameWithType: SocketAsyncEventArgs.Completed
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Completed
- uid: System.EventHandler{System.Net.Sockets.SocketAsyncEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<SocketAsyncEventArgs>
  nameWithType: EventHandler<SocketAsyncEventArgs>
  fullName: System.EventHandler<System.Net.Sockets.SocketAsyncEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.Sockets.SocketAsyncEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Sockets.SocketAsyncEventArgs
    name: SocketAsyncEventArgs
    nameWithType: SocketAsyncEventArgs
    fullName: SocketAsyncEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: ConnectByNameError
  nameWithType: SocketAsyncEventArgs.ConnectByNameError
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: ConnectSocket
  nameWithType: SocketAsyncEventArgs.ConnectSocket
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket
- uid: System.Net.Sockets.SocketAsyncEventArgs.Count
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Count
  nameWithType: SocketAsyncEventArgs.Count
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Count
- uid: System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: DisconnectReuseSocket
  nameWithType: SocketAsyncEventArgs.DisconnectReuseSocket
  fullName: System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.SocketAsyncEventArgs.Dispose
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Dispose()
  nameWithType: SocketAsyncEventArgs.Dispose()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Dispose()
- uid: System.Net.Sockets.SocketAsyncEventArgs.Finalize
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Finalize()
  nameWithType: SocketAsyncEventArgs.Finalize()
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Finalize()
- uid: System.Net.Sockets.SocketAsyncEventArgs.LastOperation
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: LastOperation
  nameWithType: SocketAsyncEventArgs.LastOperation
  fullName: System.Net.Sockets.SocketAsyncEventArgs.LastOperation
- uid: System.Net.Sockets.SocketAsyncOperation
  parent: System.Net.Sockets
  isExternal: false
  name: SocketAsyncOperation
  nameWithType: SocketAsyncOperation
  fullName: System.Net.Sockets.SocketAsyncOperation
- uid: System.Net.Sockets.SocketAsyncEventArgs.Offset
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Offset
  nameWithType: SocketAsyncEventArgs.Offset
  fullName: System.Net.Sockets.SocketAsyncEventArgs.Offset
- uid: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: OnCompleted(SocketAsyncEventArgs)
  nameWithType: SocketAsyncEventArgs.OnCompleted(SocketAsyncEventArgs)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(SocketAsyncEventArgs)
- uid: System.Net.Sockets.SocketAsyncEventArgs
  parent: System.Net.Sockets
  isExternal: false
  name: SocketAsyncEventArgs
  nameWithType: SocketAsyncEventArgs
  fullName: System.Net.Sockets.SocketAsyncEventArgs
- uid: System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: ReceiveMessageFromPacketInfo
  nameWithType: SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
  fullName: System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
- uid: System.Net.Sockets.IPPacketInformation
  parent: System.Net.Sockets
  isExternal: false
  name: IPPacketInformation
  nameWithType: IPPacketInformation
  fullName: System.Net.Sockets.IPPacketInformation
- uid: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: RemoteEndPoint
  nameWithType: SocketAsyncEventArgs.RemoteEndPoint
  fullName: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint
- uid: System.Net.EndPoint
  parent: System.Net
  isExternal: false
  name: EndPoint
  nameWithType: EndPoint
  fullName: System.Net.EndPoint
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SendPacketsElements
  nameWithType: SocketAsyncEventArgs.SendPacketsElements
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements
- uid: System.Net.Sockets.SendPacketsElement[]
  parent: System.Net.Sockets
  isExternal: false
  name: SendPacketsElement[]
  nameWithType: SendPacketsElement[]
  fullName: System.Net.Sockets.SendPacketsElement[]
  spec.csharp:
  - uid: System.Net.Sockets.SendPacketsElement
    name: SendPacketsElement
    nameWithType: SendPacketsElement
    fullName: SendPacketsElement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SendPacketsFlags
  nameWithType: SocketAsyncEventArgs.SendPacketsFlags
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags
- uid: System.Net.Sockets.TransmitFileOptions
  parent: System.Net.Sockets
  isExternal: false
  name: TransmitFileOptions
  nameWithType: TransmitFileOptions
  fullName: System.Net.Sockets.TransmitFileOptions
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SendPacketsSendSize
  nameWithType: SocketAsyncEventArgs.SendPacketsSendSize
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize
- uid: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SetBuffer(Int32,Int32)
  nameWithType: SocketAsyncEventArgs.SetBuffer(Int32,Int32)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(Int32,Int32)
- uid: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SetBuffer(Byte[],Int32,Int32)
  nameWithType: SocketAsyncEventArgs.SetBuffer(Byte[],Int32,Int32)
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(Byte[],Int32,Int32)
- uid: System.Net.Sockets.SocketAsyncEventArgs.SocketError
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SocketError
  nameWithType: SocketAsyncEventArgs.SocketError
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketError
- uid: System.Net.Sockets.SocketError
  parent: System.Net.Sockets
  isExternal: false
  name: SocketError
  nameWithType: SocketError
  fullName: System.Net.Sockets.SocketError
- uid: System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SocketFlags
  nameWithType: SocketAsyncEventArgs.SocketFlags
  fullName: System.Net.Sockets.SocketAsyncEventArgs.SocketFlags
- uid: System.Net.Sockets.SocketFlags
  parent: System.Net.Sockets
  isExternal: false
  name: SocketFlags
  nameWithType: SocketFlags
  fullName: System.Net.Sockets.SocketFlags
- uid: System.Net.Sockets.SocketAsyncEventArgs.UserToken
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: UserToken
  nameWithType: SocketAsyncEventArgs.UserToken
  fullName: System.Net.Sockets.SocketAsyncEventArgs.UserToken
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Sockets.SocketAsyncEventArgs.#ctor*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SocketAsyncEventArgs
  nameWithType: SocketAsyncEventArgs.SocketAsyncEventArgs
- uid: System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: AcceptSocket
  nameWithType: SocketAsyncEventArgs.AcceptSocket
- uid: System.Net.Sockets.SocketAsyncEventArgs.Buffer*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Buffer
  nameWithType: SocketAsyncEventArgs.Buffer
- uid: System.Net.Sockets.SocketAsyncEventArgs.BufferList*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: BufferList
  nameWithType: SocketAsyncEventArgs.BufferList
- uid: System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: BytesTransferred
  nameWithType: SocketAsyncEventArgs.BytesTransferred
- uid: System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: ConnectByNameError
  nameWithType: SocketAsyncEventArgs.ConnectByNameError
- uid: System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: ConnectSocket
  nameWithType: SocketAsyncEventArgs.ConnectSocket
- uid: System.Net.Sockets.SocketAsyncEventArgs.Count*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Count
  nameWithType: SocketAsyncEventArgs.Count
- uid: System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: DisconnectReuseSocket
  nameWithType: SocketAsyncEventArgs.DisconnectReuseSocket
- uid: System.Net.Sockets.SocketAsyncEventArgs.Dispose*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Dispose
  nameWithType: SocketAsyncEventArgs.Dispose
- uid: System.Net.Sockets.SocketAsyncEventArgs.Finalize*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Finalize
  nameWithType: SocketAsyncEventArgs.Finalize
- uid: System.Net.Sockets.SocketAsyncEventArgs.LastOperation*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: LastOperation
  nameWithType: SocketAsyncEventArgs.LastOperation
- uid: System.Net.Sockets.SocketAsyncEventArgs.Offset*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: Offset
  nameWithType: SocketAsyncEventArgs.Offset
- uid: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: OnCompleted
  nameWithType: SocketAsyncEventArgs.OnCompleted
- uid: System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: ReceiveMessageFromPacketInfo
  nameWithType: SocketAsyncEventArgs.ReceiveMessageFromPacketInfo
- uid: System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: RemoteEndPoint
  nameWithType: SocketAsyncEventArgs.RemoteEndPoint
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SendPacketsElements
  nameWithType: SocketAsyncEventArgs.SendPacketsElements
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SendPacketsFlags
  nameWithType: SocketAsyncEventArgs.SendPacketsFlags
- uid: System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SendPacketsSendSize
  nameWithType: SocketAsyncEventArgs.SendPacketsSendSize
- uid: System.Net.Sockets.SocketAsyncEventArgs.SetBuffer*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SetBuffer
  nameWithType: SocketAsyncEventArgs.SetBuffer
- uid: System.Net.Sockets.SocketAsyncEventArgs.SocketError*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SocketError
  nameWithType: SocketAsyncEventArgs.SocketError
- uid: System.Net.Sockets.SocketAsyncEventArgs.SocketFlags*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: SocketFlags
  nameWithType: SocketAsyncEventArgs.SocketFlags
- uid: System.Net.Sockets.SocketAsyncEventArgs.UserToken*
  parent: System.Net.Sockets.SocketAsyncEventArgs
  isExternal: false
  name: UserToken
  nameWithType: SocketAsyncEventArgs.UserToken
