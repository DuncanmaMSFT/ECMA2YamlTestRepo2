### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ICommand
  id: ICommand
  children:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  - System.Windows.Input.ICommand.CanExecuteChanged
  - System.Windows.Input.ICommand.Execute(System.Object)
  langs:
  - csharp
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
  type: Interface
  summary: Defines a command.
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      [System.Windows.Markup.ValueSerializer("System.Windows.Input.CommandValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      public interface ICommand
  implements: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  name: CanExecute(Object)
  nameWithType: ICommand.CanExecute(Object)
  fullName: System.Windows.Input.ICommand.CanExecute(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Defines the method that determines whether the command can execute in its current state.
  syntax:
    content: public bool CanExecute (object parameter);
    parameters:
    - id: parameter
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Windows.Input.ICommand.CanExecute*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  id: CanExecuteChanged
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Occurs when changes occur that affect whether or not the command should execute.
  syntax:
    content: public event EventHandler CanExecuteChanged;
    return:
      type: System.EventHandler
      description: To be added.
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  id: Execute(System.Object)
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  name: Execute(Object)
  nameWithType: ICommand.Execute(Object)
  fullName: System.Windows.Input.ICommand.Execute(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Defines the method to be called when the command is invoked.
  syntax:
    content: public void Execute (object parameter);
    parameters:
    - id: parameter
      type: System.Object
      description: To be added.
  overload: System.Windows.Input.ICommand.Execute*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: false
  name: CanExecute(Object)
  nameWithType: ICommand.CanExecute(Object)
  fullName: System.Windows.Input.ICommand.CanExecute(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  parent: System.Windows.Input.ICommand
  isExternal: false
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: false
  name: Execute(Object)
  nameWithType: ICommand.Execute(Object)
  fullName: System.Windows.Input.ICommand.Execute(Object)
- uid: System.Windows.Input.ICommand.CanExecute*
  parent: System.Windows.Input.ICommand
  isExternal: false
  name: CanExecute
  nameWithType: ICommand.CanExecute
- uid: System.Windows.Input.ICommand.Execute*
  parent: System.Windows.Input.ICommand
  isExternal: false
  name: Execute
  nameWithType: ICommand.Execute
