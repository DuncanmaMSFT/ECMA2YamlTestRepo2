### YamlMime:ManagedReference
items:
- uid: System.DateTimeOffset
  id: DateTimeOffset
  children:
  - System.DateTimeOffset.#ctor(System.DateTime)
  - System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)
  - System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)
  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)
  - System.DateTimeOffset.Add(System.TimeSpan)
  - System.DateTimeOffset.AddDays(System.Double)
  - System.DateTimeOffset.AddHours(System.Double)
  - System.DateTimeOffset.AddMilliseconds(System.Double)
  - System.DateTimeOffset.AddMinutes(System.Double)
  - System.DateTimeOffset.AddMonths(System.Int32)
  - System.DateTimeOffset.AddSeconds(System.Double)
  - System.DateTimeOffset.AddTicks(System.Int64)
  - System.DateTimeOffset.AddYears(System.Int32)
  - System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  - System.DateTimeOffset.Date
  - System.DateTimeOffset.DateTime
  - System.DateTimeOffset.Day
  - System.DateTimeOffset.DayOfWeek
  - System.DateTimeOffset.DayOfYear
  - System.DateTimeOffset.Equals(System.DateTimeOffset)
  - System.DateTimeOffset.Equals(System.Object)
  - System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  - System.DateTimeOffset.FromFileTime(System.Int64)
  - System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  - System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  - System.DateTimeOffset.GetHashCode
  - System.DateTimeOffset.Hour
  - System.DateTimeOffset.LocalDateTime
  - System.DateTimeOffset.MaxValue
  - System.DateTimeOffset.Millisecond
  - System.DateTimeOffset.Minute
  - System.DateTimeOffset.MinValue
  - System.DateTimeOffset.Month
  - System.DateTimeOffset.Now
  - System.DateTimeOffset.Offset
  - System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  - System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_Implicit(System.DateTime)
  - System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  - System.DateTimeOffset.Parse(System.String)
  - System.DateTimeOffset.Parse(System.String,System.IFormatProvider)
  - System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  - System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTimeOffset.Second
  - System.DateTimeOffset.Subtract(System.DateTimeOffset)
  - System.DateTimeOffset.Subtract(System.TimeSpan)
  - System.DateTimeOffset.System#IComparable#CompareTo(System.Object)
  - System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.DateTimeOffset.Ticks
  - System.DateTimeOffset.TimeOfDay
  - System.DateTimeOffset.ToFileTime
  - System.DateTimeOffset.ToLocalTime
  - System.DateTimeOffset.ToOffset(System.TimeSpan)
  - System.DateTimeOffset.ToString
  - System.DateTimeOffset.ToString(System.IFormatProvider)
  - System.DateTimeOffset.ToString(System.String)
  - System.DateTimeOffset.ToString(System.String,System.IFormatProvider)
  - System.DateTimeOffset.ToUniversalTime
  - System.DateTimeOffset.ToUnixTimeMilliseconds
  - System.DateTimeOffset.ToUnixTimeSeconds
  - System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  - System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  - System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  - System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  - System.DateTimeOffset.UtcDateTime
  - System.DateTimeOffset.UtcNow
  - System.DateTimeOffset.UtcTicks
  - System.DateTimeOffset.Year
  langs:
  - csharp
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
  type: Struct
  summary: Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).
  remarks: "The DateTimeOffset structure includes a <xref:System.DateTime> value, together with an <xref:System.DateTimeOffset.Offset%2A> property that defines the difference between the current DateTimeOffset instance's date and time and Coordinated Universal Time (UTC). Because it exactly defines a date and time relative to UTC, the DateTimeOffset structure does not include a `Kind` member, as the <xref:System.DateTime> structure does. It represents dates and times with values whose UTC ranges from 12:00:00 midnight, January 1, 0001 Anno Domini (Common Era), to 11:59:59 P.M., December 31, 9999 A.D. (C.E.).  \n  \n The time component of a DateTimeOffset value is measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar. A DateTimeOffset value is always expressed in the context of an explicit or default calendar. Ticks that are attributable to leap seconds are not included in the total number of ticks.  \n  \n> [!NOTE]\n>  If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTimeOffset.Second%2A> component of a DateTimeOffset value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.  \n  \n Although a DateTimeOffset value includes an offset, it is not a fully time zone-aware data structure. While an offset from UTC is one characteristic of a time zone, it does not unambiguously identify a time zone. Not only do multiple time zones share the same offset from UTC, but the offset of a single time zone changes if it observes daylight saving time. This means that, as soon as a DateTimeOffset value is disassociated from its time zone, it can no longer be unambiguously linked back to its original time zone.  \n  \n Because DateTimeOffset is a structure, a DateTimeOffset object that has been declared but not otherwise initialized contains the default values for each of its member fields. This means that its <xref:System.DateTimeOffset.DateTime%2A> property is set to <xref:System.DateTimeOffset.MinValue?displayProperty=fullName> and its <xref:System.DateTimeOffset.Offset%2A> property is set to <xref:System.TimeSpan.Zero?displayProperty=fullName>.  \n  \n You can create a new DateTimeOffset value by calling any of the overloads of its constructor, which are similar to the overloaded constructors for the <xref:System.DateTime> structure. You can also create a new DateTimeOffset value by assigning it a <xref:System.DateTime> value. This is an implicit conversion; it does not require a casting operator (in C#) or call to a conversion method (in Visual Basic). You can also initialize a DateTimeOffset value from the string representation of a date and time by calling a number of static string parsing methods, which include <xref:System.DateTimeOffset.Parse%2A>, <xref:System.DateTimeOffset.ParseExact%2A>, <xref:System.DateTimeOffset.TryParse%2A>, and <xref:System.DateTimeOffset.TryParseExact%2A>.  \n  \n The members of the DateTimeOffset structure provide functionality in the following areas:  \n  \n-   Date and time arithmetic.  \n  \n     You can add or subtract either dates or time intervals from a particular DateTimeOffset value. Arithmetic operations with DateTimeOffset values, unlike those with <xref:System.DateTime> values, adjust for differences in time offsets when returning a result. For example, the following code uses <xref:System.DateTime> variables to subtract the current local time from the current UTC time. The code then uses DateTimeOffset variables to perform the same operation. The subtraction with <xref:System.DateTime> values returns the local time zone's difference from UTC, while the subtraction with DateTimeOffset values returns <xref:System.TimeSpan.Zero?displayProperty=fullName>.  \n  \n     [!code-vb[System.DateTimeOffset.Type#1](~/add/codesnippet/visualbasic/t-system.datetimeoffset_1.vb)]\n     [!code-cs[System.DateTimeOffset.Type#1](~/add/codesnippet/csharp/t-system.datetimeoffset_1.cs)]  \n  \n-   Type conversion operations.  \n  \n     You can convert DateTimeOffset values to <xref:System.DateTimeOffset.DateTime%2A> values and vice versa.  \n  \n-   Time manipulation and extraction operations.  \n  \n     You can extract either the date or the time of a DateTimeOffset value. You can also retrieve the value of a particular DateTimeOffset component, such as its year or its month.  \n  \n-   Date and time conversion.  \n  \n     You can convert any DateTimeOffset value to another DateTimeOffset value that represents the same point in time in another time zone. However, a time zone's adjustment rules are applied only in the case of the <xref:System.DateTimeOffset.ToLocalTime%2A> method, which converts a DateTimeOffset value to the date and time in the local system zone.  \n  \n-   Date and time comparison.  \n  \n     You can determine whether any particular DateTimeOffset value is earlier than, the same as, or later than another DateTimeOffset value. Before the comparison is performed, all values are converted to UTC."
  syntax:
    content: 'public struct DateTimeOffset : IComparable, IComparable<DateTimeOffset>, IEquatable<DateTimeOffset>, IFormattable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IComparable
  - System.IComparable<System.DateTimeOffset>
  - System.IEquatable<System.DateTimeOffset>
  - System.IFormattable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: DateTimeOffset(DateTime)
  nameWithType: DateTimeOffset.DateTimeOffset(DateTime)
  fullName: System.DateTimeOffset.DateTimeOffset(DateTime)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTimeOffset"></xref> structure using the specified <xref href="System.DateTime"></xref> value.
  remarks: "This constructor's behavior depends on the value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the `dateTime` parameter:  \n  \n-   If the value of <xref:System.DateTime.Kind%2A?displayProperty=fullName> is <xref:System.DateTimeKind?displayProperty=fullName>, the <xref:System.DateTimeOffset.DateTime%2A> property of the new instance is set equal to `dateTime`, and the <xref:System.DateTimeOffset.Offset%2A> property is set equal to <xref:System.TimeSpan.Zero>.  \n  \n-   If the value of <xref:System.DateTime.Kind%2A?displayProperty=fullName> is <xref:System.DateTimeKind?displayProperty=fullName> or <xref:System.DateTimeKind?displayProperty=fullName>, the <xref:System.DateTimeOffset.DateTime%2A> property of the new instance is set equal to `dateTime`, and the <xref:System.DateTimeOffset.Offset%2A> property is set equal to the offset of the local system's current time zone."
  example:
  - "The following example illustrates how the value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the `dateTime` parameter affects the date and time value that is returned by this constructor.  \n  \n [!code-vb[System.DateTimeOffset.Constructors#1](~/add/codesnippet/visualbasic/m-system.datetimeoffset._4_1.vb)]\n [!code-cs[System.DateTimeOffset.Constructors#1](~/add/codesnippet/csharp/m-system.datetimeoffset._4_1.cs)]"
  syntax:
    content: public DateTimeOffset (DateTime dateTime);
    parameters:
    - id: dateTime
      type: System.DateTime
      description: A date and time.
  overload: System.DateTimeOffset.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The UTC date and time that results from applying the offset is later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)
  id: '#ctor(System.DateTime,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: DateTimeOffset(DateTime,TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(DateTime,TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(DateTime,TimeSpan)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTimeOffset"></xref> structure using the specified <xref href="System.DateTime"></xref> value and offset.
  remarks: "This constructor's behavior depends in part on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter:  \n  \n-   If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the value of the `offset` parameter must be 0 or an <xref:System.ArgumentException> is thrown.  \n  \n-   If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the value of the `offset` parameter must be equal to the local time zone's offset from Coordinated Universal Time (UTC) for that particular date or an <xref:System.ArgumentException> is thrown.  \n  \n-   If the value of <xref:System.DateTime.Kind%2A> is <xref:System.DateTimeKind?displayProperty=fullName>, the `offset` parameter can have any valid value."
  example:
  - "The following example shows how to initialize a <xref:System.DateTimeOffset> object with a date and time and the offset of the local time zone when that time zone is not known in advance.  \n  \n [!code-vb[System.DateTimeOffset.Constructors#3](~/add/codesnippet/visualbasic/m-system.datetimeoffset._28_1.vb)]\n [!code-cs[System.DateTimeOffset.Constructors#3](~/add/codesnippet/csharp/m-system.datetimeoffset._28_1.cs)]"
  syntax:
    content: public DateTimeOffset (DateTime dateTime, TimeSpan offset);
    parameters:
    - id: dateTime
      type: System.DateTime
      description: A date and time.
    - id: offset
      type: System.TimeSpan
      description: The time's offset from Coordinated Universal Time (UTC).
  overload: System.DateTimeOffset.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dateTime.Kind</code> equals <xref href=\"System.DateTimeKind\"></xref> and <code>offset</code> does not equal zero.  \n  \n -or-  \n  \n <code>dateTime.Kind</code> equals <xref href=\"System.DateTimeKind\"></xref> and <code>offset</code> does not equal the offset of the system's local time zone.  \n  \n -or-  \n  \n <code>offset</code> is not specified in whole minutes."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than -14 hours or greater than 14 hours.  \n  \n -or-  \n  \n <xref href=\"stem.DateTimeOffset.UtcDateTime%2A\"></xref> is less than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or greater than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)
  id: '#ctor(System.Int64,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: DateTimeOffset(Int64,TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int64,TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(Int64,TimeSpan)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTimeOffset"></xref> structure using the specified number of ticks and offset.
  remarks: "Ordinarily, trying to call the <xref:System.DateTimeOffset.%23ctor%2A> constructor to instantiate a <xref:System.DateTimeOffset> value with a local time and an offset other than that of the local time zone throws an <xref:System.ArgumentException>. You can use this overload of the <xref:System.DateTimeOffset> constructor to work around this limitation. The following example uses the local time's number of ticks to instantiate a <xref:System.DateTimeOffset> value whose offset does not necessarily represent that of the local time:  \n  \n [!code-vb[System.DateTimeOffset.Constructors#4](~/add/codesnippet/visualbasic/m-system.datetimeoffset._20_1.vb)]\n [!code-cs[System.DateTimeOffset.Constructors#4](~/add/codesnippet/csharp/m-system.datetimeoffset._20_1.cs)]"
  example:
  - "The following example initializes a <xref:System.DateTimeOffset> object by using the number of ticks in an arbitrary date (in this case, July 16, 2007, at 1:32 PM) with an offset of -5.  \n  \n [!code-vb[System.DateTimeOffset.Constructors#2](~/add/codesnippet/visualbasic/m-system.datetimeoffset._20_2.vb)]\n [!code-cs[System.DateTimeOffset.Constructors#2](~/add/codesnippet/csharp/m-system.datetimeoffset._20_2.cs)]"
  syntax:
    content: public DateTimeOffset (long ticks, TimeSpan offset);
    parameters:
    - id: ticks
      type: System.Int64
      description: A date and time expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001.
    - id: offset
      type: System.TimeSpan
      description: The time's offset from Coordinated Universal Time (UTC).
  overload: System.DateTimeOffset.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>offset</code> is not specified in whole minutes.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <xref href=\"stem.DateTimeOffset.UtcDateTime%2A\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>.  \n  \n -or-  \n  \n <code>ticks</code> is less than `DateTimeOffset.MinValue.Ticks` or greater than `DateTimeOffset.MaxValue.Ticks`.  \n  \n -or-  \n  \n <code>Offset</code> s less than -14 hours or greater than 14 hours."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTimeOffset"></xref> structure using the specified year, month, day, hour, minute, second, and offset.
  remarks: This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor.
  example:
  - "The following example instantiates a <xref:System.DateTimeOffset> object by using the DateTimeOffset constructor overload.  \n  \n [!code-vb[System.DateTimeOffset.Constructors#5](~/add/codesnippet/visualbasic/f3825233-b2e4-46f2-a634-_1.vb)]\n [!code-cs[System.DateTimeOffset.Constructors#5](~/add/codesnippet/csharp/f3825233-b2e4-46f2-a634-_1.cs)]"
  syntax:
    content: public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, TimeSpan offset);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: offset
      type: System.TimeSpan
      description: The time's offset from Coordinated Universal Time (UTC).
  overload: System.DateTimeOffset.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>offset</code> does not represent whole minutes.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is less than one or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than one or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than one or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than zero or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>offset</code> is less than -14 hours or greater than 14 hours.  \n  \n -or-  \n  \n The <xref href=\"stem.DateTimeOffset.UtcDateTime%2A\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTimeOffset"></xref> structure using the specified year, month, day, hour, minute, second, millisecond, and offset.
  remarks: This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTimeOffset> value by using the year, month, and day in another calendar, call the <xref:System.DateTimeOffset.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.TimeSpan%29> constructor.
  example:
  - "The following example instantiates a <xref:System.DateTimeOffset> object by using the DateTimeOffset constructor overload.  \n  \n [!code-vb[System.DateTimeOffset.Constructors#7](~/add/codesnippet/visualbasic/b2fcb9f3-4498-4491-8bff-_1.vb)]\n [!code-cs[System.DateTimeOffset.Constructors#7](~/add/codesnippet/csharp/b2fcb9f3-4498-4491-8bff-_1.cs)]"
  syntax:
    content: public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);
    parameters:
    - id: year
      type: System.Int32
      description: The year (1 through 9999).
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: millisecond
      type: System.Int32
      description: The milliseconds (0 through 999).
    - id: offset
      type: System.TimeSpan
      description: The time's offset from Coordinated Universal Time (UTC).
  overload: System.DateTimeOffset.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>offset</code> does not represent whole minutes.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is less than one or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than one or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than one or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than zero or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999.  \n  \n -or-  \n  \n <code>offset</code> is less than -14 or greater than 14.  \n  \n -or-  \n  \n The <xref href=\"stem.DateTimeOffset.UtcDateTime%2A\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DateTimeOffset"></xref> structure using the specified year, month, day, hour, minute, second, millisecond, and offset of a specified calendar.
  remarks: The `year`, `month`, `day`, `hour`, `minute`, `second`, and `millisecond` parameters all reflect values expressed in the calendar specified by the `calendar` parameter. An exception is thrown if these values form a date and time that cannot be expressed by using this calendar.
  example:
  - "The following example uses instances of both the <xref:System.Globalization.HebrewCalendar> class and the <xref:System.Globalization.HijriCalendar> class to instantiate a <xref:System.DateTimeOffset> value. That date is then displayed to the console using the respective calendars and the Gregorian calendar.  \n  \n [!code-vb[System.DateTimeOffset.Constructors#8](~/add/codesnippet/visualbasic/10ea762c-cbb7-4029-b19a-_1.vb)]\n [!code-cs[System.DateTimeOffset.Constructors#8](~/add/codesnippet/csharp/10ea762c-cbb7-4029-b19a-_1.cs)]"
  syntax:
    content: public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, TimeSpan offset);
    parameters:
    - id: year
      type: System.Int32
      description: The year.
    - id: month
      type: System.Int32
      description: The month (1 through 12).
    - id: day
      type: System.Int32
      description: The day (1 through the number of days in <code>month</code>).
    - id: hour
      type: System.Int32
      description: The hours (0 through 23).
    - id: minute
      type: System.Int32
      description: The minutes (0 through 59).
    - id: second
      type: System.Int32
      description: The seconds (0 through 59).
    - id: millisecond
      type: System.Int32
      description: The milliseconds (0 through 999).
    - id: calendar
      type: System.Globalization.Calendar
      description: The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.
    - id: offset
      type: System.TimeSpan
      description: The time's offset from Coordinated Universal Time (UTC).
  overload: System.DateTimeOffset.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>offset</code> does not represent whole minutes.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>calendar</code> cannot be `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is less than the <code>calendar</code> parameter's `MinSupportedDateTime.Year` or greater than `MaxSupportedDateTime.Year`.  \n  \n -or-  \n  \n <code>month</code> is either less than or greater than the number of months in <code>year</code> in the <code>calendar</code>.  \n  \n -or-  \n  \n <code>day</code> is less than one or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than zero or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999.  \n  \n -or-  \n  \n <code>offset</code> is less than -14 hours or greater than 14 hours.  \n  \n -or-  \n  \n The <code>year</code>, <code>month</code>, and <code>day</code> parameters cannot be represented as a date and time value.  \n  \n -or-  \n  \n The <xref href=\"stem.DateTimeOffset.UtcDateTime%2A\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Add(System.TimeSpan)
  id: Add(System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Add(TimeSpan)
  nameWithType: DateTimeOffset.Add(TimeSpan)
  fullName: System.DateTimeOffset.Add(TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <xref href="System.DateTimeOffset"></xref> object that adds a specified time interval to the value of this instance.
  remarks: "You can use the Add method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to the addition operator. The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) for each time interval.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `timeSpan` to its date and time.  \n  \n The Add method does not affect the value of the current <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the Add method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \n  \n If the `timeSpan` parameter is `null`, this method returns the value of the original <xref:System.DateTimeOffset> object unchanged."
  example:
  - "The following example creates an array of <xref:System.TimeSpan> objects that represent the flight times between destinations. The Add method then adds these times to a <xref:System.DateTimeOffset> object that represents a flight's initial takeoff time. The result reflects the scheduled arrival time at each destination.  \n  \n [!code-vb[System.DateTimeOffset.Methods#1](~/add/codesnippet/visualbasic/m-system.datetimeoffset._14_1.vb)]\n [!code-cs[System.DateTimeOffset.Methods#1](~/add/codesnippet/csharp/m-system.datetimeoffset._14_1.cs)]"
  syntax:
    content: public DateTimeOffset Add (TimeSpan timeSpan);
    parameters:
    - id: timeSpan
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan"></xref> object that represents a positive or a negative time interval.
    return:
      type: System.DateTimeOffset
      description: An object whose value is the sum of the date and time represented by the current <xref href="System.DateTimeOffset"></xref> object and the time interval represented by <code>timeSpan</code>.
  overload: System.DateTimeOffset.Add*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.AddDays(System.Double)
  id: AddDays(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: AddDays(Double)
  nameWithType: DateTimeOffset.AddDays(Double)
  fullName: System.DateTimeOffset.AddDays(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <xref href="System.DateTimeOffset"></xref> object that adds a specified number of whole and fractional days to the value of this instance.
  remarks: "The fractional part of the `days` parameter is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds. The `days` parameter is rounded to the nearest millisecond.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `days` to its date and time.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the AddDays method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \n  \n Converting time intervals of less than a day to a fraction can involve a loss of precision. If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a day."
  example:
  - "The following example uses the AddDays method to list the dates that fall on Monday, the start of the work week, in March 2008.  \n  \n [!code-vb[System.DateTimeOffset.Methods#2](~/add/codesnippet/visualbasic/m-system.datetimeoffset._5_1.vb)]\n [!code-cs[System.DateTimeOffset.Methods#2](~/add/codesnippet/csharp/m-system.datetimeoffset._5_1.cs)]"
  syntax:
    content: public DateTimeOffset AddDays (double days);
    parameters:
    - id: days
      type: System.Double
      description: A number of whole and fractional days. The number can be negative or positive.
    return:
      type: System.DateTimeOffset
      description: An object whose value is the sum of the date and time represented by the current <xref href="System.DateTimeOffset"></xref> object and the number of days represented by <code>days</code>.
  overload: System.DateTimeOffset.AddDays*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.AddHours(System.Double)
  id: AddHours(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: AddHours(Double)
  nameWithType: DateTimeOffset.AddHours(Double)
  fullName: System.DateTimeOffset.AddHours(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <xref href="System.DateTimeOffset"></xref> object that adds a specified number of whole and fractional hours to the value of this instance.
  remarks: "The fractional part of the `hours` parameter is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds. The `hours` parameter is rounded to the nearest millisecond.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `hours` to its date and time.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the AddHours method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \n  \n Converting time intervals of less than an hour to a fraction can involve a loss of precision. (For example, one minute is 0.01666 of an hour.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour."
  example:
  - "The following example uses the AddHours method to list the start times of work shifts for a particular week at an office that has two eight-hour shifts per day.  \n  \n [!code-vb[System.DateTimeOffset.Methods#3](~/add/codesnippet/visualbasic/m-system.datetimeoffset._23_1.vb)]\n [!code-cs[System.DateTimeOffset.Methods#3](~/add/codesnippet/csharp/m-system.datetimeoffset._23_1.cs)]"
  syntax:
    content: public DateTimeOffset AddHours (double hours);
    parameters:
    - id: hours
      type: System.Double
      description: A number of whole and fractional hours. The number can be negative or positive.
    return:
      type: System.DateTimeOffset
      description: An object whose value is the sum of the date and time represented by the current <xref href="System.DateTimeOffset"></xref> object and the number of hours represented by <code>hours</code>.
  overload: System.DateTimeOffset.AddHours*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.AddMilliseconds(System.Double)
  id: AddMilliseconds(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: AddMilliseconds(Double)
  nameWithType: DateTimeOffset.AddMilliseconds(Double)
  fullName: System.DateTimeOffset.AddMilliseconds(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <xref href="System.DateTimeOffset"></xref> object that adds a specified number of milliseconds to the value of this instance.
  remarks: "The fractional part of the `milliseconds` parameter is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond equals 10,000 ticks. However, `milliseconds` is rounded to the nearest millisecond; all values of .5 or greater are rounded up.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `milliseconds` to its date and time.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the AddMilliseconds method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic."
  syntax:
    content: public DateTimeOffset AddMilliseconds (double milliseconds);
    parameters:
    - id: milliseconds
      type: System.Double
      description: A number of whole and fractional milliseconds. The number can be negative or positive.
    return:
      type: System.DateTimeOffset
      description: An object whose value is the sum of the date and time represented by the current <xref href="System.DateTimeOffset"></xref> object and the number of whole milliseconds represented by <code>milliseconds</code>.
  overload: System.DateTimeOffset.AddMilliseconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.AddMinutes(System.Double)
  id: AddMinutes(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: AddMinutes(Double)
  nameWithType: DateTimeOffset.AddMinutes(Double)
  fullName: System.DateTimeOffset.AddMinutes(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <xref href="System.DateTimeOffset"></xref> object that adds a specified number of whole and fractional minutes to the value of this instance.
  remarks: "The fractional part of the `minutes` parameter is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds. The `minutes` parameter is rounded to the nearest millisecond.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the AddMinutes method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic.  \n  \n Converting time intervals of less than a minute to a fraction can involve a loss of precision. (For example, one second is 0.01666 of a minute.) If this is problematic, you can use the <xref:System.DateTimeOffset.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a minute."
  syntax:
    content: public DateTimeOffset AddMinutes (double minutes);
    parameters:
    - id: minutes
      type: System.Double
      description: A number of whole and fractional minutes. The number can be negative or positive.
    return:
      type: System.DateTimeOffset
      description: An object whose value is the sum of the date and time represented by the current <xref href="System.DateTimeOffset"></xref> object and the number of minutes represented by <code>minutes</code>.
  overload: System.DateTimeOffset.AddMinutes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.AddMonths(System.Int32)
  id: AddMonths(System.Int32)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: AddMonths(Int32)
  nameWithType: DateTimeOffset.AddMonths(Int32)
  fullName: System.DateTimeOffset.AddMonths(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <xref href="System.DateTimeOffset"></xref> object that adds a specified number of months to the value of this instance.
  remarks: "Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, AddMonths does not enable you to add fractional parts of a month. To add a time that consists of other time units in addition to months to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `months` to its date and time."
  example:
  - "The following example uses the AddMonths method to display the start date of each quarter of the year 2007.  \n  \n [!code-vb[System.DateTimeOffset.Methods#4](~/add/codesnippet/visualbasic/m-system.datetimeoffset._9_1.vb)]\n [!code-cs[System.DateTimeOffset.Methods#4](~/add/codesnippet/csharp/m-system.datetimeoffset._9_1.cs)]"
  syntax:
    content: public DateTimeOffset AddMonths (int months);
    parameters:
    - id: months
      type: System.Int32
      description: A number of whole months. The number can be negative or positive.
    return:
      type: System.DateTimeOffset
      description: An object whose value is the sum of the date and time represented by the current <xref href="System.DateTimeOffset"></xref> object and the number of months represented by <code>months</code>.
  overload: System.DateTimeOffset.AddMonths*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.AddSeconds(System.Double)
  id: AddSeconds(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: AddSeconds(Double)
  nameWithType: DateTimeOffset.AddSeconds(Double)
  fullName: System.DateTimeOffset.AddSeconds(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <xref href="System.DateTimeOffset"></xref> object that adds a specified number of whole and fractional seconds to the value of this instance.
  remarks: "The fractional part of the `seconds` parameter is the fractional part of a second. The value of fractional parts of a second are shown in the following table.  \n  \n|Second value|Equivalent|  \n|------------------|----------------|  \n|.1 second|100 milliseconds|  \n|.01 second|10 milliseconds|  \n|.001 second|1 millisecond|  \n  \n The `seconds` parameter is rounded to the nearest millisecond.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the AddSeconds method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic."
  syntax:
    content: public DateTimeOffset AddSeconds (double seconds);
    parameters:
    - id: seconds
      type: System.Double
      description: A number of whole and fractional seconds. The number can be negative or positive.
    return:
      type: System.DateTimeOffset
      description: An object whose value is the sum of the date and time represented by the current <xref href="System.DateTimeOffset"></xref> object and the number of seconds represented by <code>seconds</code>.
  overload: System.DateTimeOffset.AddSeconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.AddTicks(System.Int64)
  id: AddTicks(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: AddTicks(Int64)
  nameWithType: DateTimeOffset.AddTicks(Int64)
  fullName: System.DateTimeOffset.AddTicks(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <xref href="System.DateTimeOffset"></xref> object that adds a specified number of ticks to the value of this instance.
  remarks: "A tick represents 100 nanoseconds, or one-ten millionth of a second. Because a tick is a very small and precise time interval, any larger time unit can be expressed as a number of ticks without a loss of precision.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `minutes` to its date and time.  \n  \n The following table lists the number of ticks in a particular time interval.  \n  \n|Time interval|Number of ticks|  \n|-------------------|---------------------|  \n|Second|10,000,000|  \n|Minute|600,000,000|  \n|Hour|36,000,000,000|  \n|Day|864,000,000,000|  \n|Week|6,048,000,000,000|  \n|Month|Depends on number of days in the month.|  \n|Non-leap year|315,360,000,000,000|  \n|Leap year|316,224,000,000,000|  \n  \n Because a <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the AddTicks method does not consider a particular time zone's adjustment rules when it performs date and time arithmetic."
  syntax:
    content: public DateTimeOffset AddTicks (long ticks);
    parameters:
    - id: ticks
      type: System.Int64
      description: A number of 100-nanosecond ticks. The number can be negative or positive.
    return:
      type: System.DateTimeOffset
      description: An object whose value is the sum of the date and time represented by the current <xref href="System.DateTimeOffset"></xref> object and the number of ticks represented by <code>ticks</code>.
  overload: System.DateTimeOffset.AddTicks*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.AddYears(System.Int32)
  id: AddYears(System.Int32)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: AddYears(Int32)
  nameWithType: DateTimeOffset.AddYears(Int32)
  fullName: System.DateTimeOffset.AddYears(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <xref href="System.DateTimeOffset"></xref> object that adds a specified number of years to the value of this instance.
  remarks: "Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, AddYears does not enable you to add fractional parts of a year. To add a time that consists of other time units in addition to years to a <xref:System.DateTimeOffset> object, use the <xref:System.DateTimeOffset.Add%2A> method.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `months` to its date and time."
  example:
  - "In the United States, driver's licenses cannot be issued to persons under 16 years of age. The following example displays the latest possible date on which a person must be born in order to legally be issued a driver's license.  \n  \n [!code-vb[System.DateTimeOffset.Methods#6](~/add/codesnippet/visualbasic/m-system.datetimeoffset._1_1.vb)]\n [!code-cs[System.DateTimeOffset.Methods#6](~/add/codesnippet/csharp/m-system.datetimeoffset._1_1.cs)]"
  syntax:
    content: public DateTimeOffset AddYears (int years);
    parameters:
    - id: years
      type: System.Int32
      description: A number of years. The number can be negative or positive.
    return:
      type: System.DateTimeOffset
      description: An object whose value is the sum of the date and time represented by the current <xref href="System.DateTimeOffset"></xref> object and the number of years represented by <code>years</code>.
  overload: System.DateTimeOffset.AddYears*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)
  id: Compare(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Compare(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.Compare(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.Compare(DateTimeOffset,DateTimeOffset)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares two <xref href="System.DateTimeOffset"></xref> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second.
  remarks: "In performing the comparison, the method converts both the `first` and the `second` parameters to Coordinated Universal Time (UTC) before it performs the comparison. The method is equivalent to the following:  \n  \n [!code-cs[System.DateTimeOffset.Syntax#1](~/add/codesnippet/csharp/m-system.datetimeoffset._6_1.cs)]\n [!code-vb[System.DateTimeOffset.Syntax#1](~/add/codesnippet/visualbasic/m-system.datetimeoffset._6_1.vb)]  \n  \n In other words, the Compare method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets."
  example:
  - "The following example illustrates calls to the Compare method to compare <xref:System.DateTimeOffset> objects.  \n  \n [!code-cs[System.DateTimeOffset.Methods#7](~/add/codesnippet/csharp/m-system.datetimeoffset._6_2.cs)]\n [!code-vb[System.DateTimeOffset.Methods#7](~/add/codesnippet/visualbasic/m-system.datetimeoffset._6_2.vb)]"
  syntax:
    content: public static int Compare (DateTimeOffset first, DateTimeOffset second);
    parameters:
    - id: first
      type: System.DateTimeOffset
      description: The first object to compare.
    - id: second
      type: System.DateTimeOffset
      description: The second object to compare.
    return:
      type: System.Int32
      description: "A signed integer that indicates whether the value of the <code>first</code> parameter is earlier than, later than, or the same time as the value of the <code>second</code> parameter, as the following table shows.  \n  \n <table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>first</code> is earlier than <code>second</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>first</code> is equal to <code>second</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>first</code> is later than <code>second</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.DateTimeOffset.Compare*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  id: CompareTo(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: CompareTo(DateTimeOffset)
  nameWithType: DateTimeOffset.CompareTo(DateTimeOffset)
  fullName: System.DateTimeOffset.CompareTo(DateTimeOffset)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares the current <xref href="System.DateTimeOffset"></xref> object to a specified <xref href="System.DateTimeOffset"></xref> object and indicates whether the current object is earlier than, the same as, or later than the second <xref href="System.DateTimeOffset"></xref> object.
  remarks: This method compares <xref:System.DateTimeOffset> objects by comparing their <xref:System.DateTimeOffset.UtcDateTime%2A> values; that is, it determines whether the two objects represent a single point in time, and indicates whether the current object is earlier than, later than, or the same as the `other` parameter.
  example:
  - "The following example illustrates calls to the CompareTo method to compare <xref:System.DateTimeOffset> objects.  \n  \n [!code-cs[System.DateTimeOffset.Methods#8](~/add/codesnippet/csharp/m-system.datetimeoffset._29_1.cs)]\n [!code-vb[System.DateTimeOffset.Methods#8](~/add/codesnippet/visualbasic/m-system.datetimeoffset._29_1.vb)]"
  syntax:
    content: public int CompareTo (DateTimeOffset other);
    parameters:
    - id: other
      type: System.DateTimeOffset
      description: An object to compare with the current <xref href="System.DateTimeOffset"></xref> object.
    return:
      type: System.Int32
      description: "A signed integer that indicates the relationship between the current <xref href=\"System.DateTimeOffset\"></xref> object and <code>other</code>, as the following table shows.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is earlier than <code>other</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is the same as <code>other</code>.  \n  \n </td></tr><tr><td> Greater than zero.  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is later than <code>other</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.DateTimeOffset.CompareTo*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Date
  id: Date
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Date
  nameWithType: DateTimeOffset.Date
  fullName: System.DateTimeOffset.Date
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a <xref href="System.DateTime"></xref> value that represents the date component of the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "This property removes any significant part of the time component from a <xref:System.DateTimeOffset> object and returns only its significant date component. For example, if the <xref:System.DateTimeOffset> object has a date and time value of \"1/12/07 4:01pm +7:30\", the property returns a <xref:System.DateTime> value of \"1/12/07 12:00:00 AM\". The <xref:System.DateTime> value can then be displayed by using any of the standard or custom format specifiers that display dates only. (See the Example section for an illustration.)  \n  \n The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is always <xref:System.DateTimeKind?displayProperty=fullName>. It is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n To display a date without its time component, you can also use the \"D\" or \"d\" format specifiers; for an illustration, see the Example section."
  example:
  - "The following example retrieves the value of the Date property for a specific date. It then displays that value to the console using some standard and custom date-only format specifiers.  \n  \n [!code-vb[System.DateTimeOffset.Properties#1](~/add/codesnippet/visualbasic/p-system.datetimeoffset._4_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#1](~/add/codesnippet/csharp/p-system.datetimeoffset._4_1.cs)]"
  syntax:
    content: public DateTime Date { get; }
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> value that represents the date component of the current <xref href="System.DateTimeOffset"></xref> object.
  overload: System.DateTimeOffset.Date*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.DateTime
  id: DateTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: DateTime
  nameWithType: DateTimeOffset.DateTime
  fullName: System.DateTimeOffset.DateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a <xref href="System.DateTime"></xref> value that represents the date and time of the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The DateTime property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for performing <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion. For example, if the <xref:System.DateTimeOffset> object has a date and time value of \"1/12/07 4:01pm + 7:30\", the property returns a date of \"1/12/07 4:01pm\".  \n  \n The value of the <xref:System.DateTime.Kind%2A?displayProperty=fullName> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>."
  example:
  - "The following example illustrates the use of the DateTime property to convert the time returned by the <xref:System.DateTimeOffset.Now%2A> and <xref:System.DateTimeOffset.UtcNow%2A> properties to <xref:System.DateTime> values.  \n  \n [!code-vb[System.DateTimeOffset.Properties#2](~/add/codesnippet/visualbasic/p-system.datetimeoffset._6_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#2](~/add/codesnippet/csharp/p-system.datetimeoffset._6_1.cs)]"
  syntax:
    content: public DateTime DateTime { get; }
    return:
      type: System.DateTime
      description: The date and time of the current <xref href="System.DateTimeOffset"></xref> object.
  overload: System.DateTimeOffset.DateTime*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Day
  id: Day
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Day
  nameWithType: DateTimeOffset.Day
  fullName: System.DateTimeOffset.Day
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the day of the month represented by the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The Day property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's day component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"d\" or \"dd\" custom format specifiers."
  example:
  - "The following example displays the day component of a <xref:System.DateTimeOffset> object in three different ways:  \n  \n-   By retrieving the value of the Day property.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"d\" format specifier.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"dd\" format specifier.  \n  \n [!code-vb[System.DateTimeOffset.Properties#10](~/add/codesnippet/visualbasic/p-system.datetimeoffset._0_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#10](~/add/codesnippet/csharp/p-system.datetimeoffset._0_1.cs)]"
  syntax:
    content: public int Day { get; }
    return:
      type: System.Int32
      description: The day component of the current <xref href="System.DateTimeOffset"></xref> object, expressed as a value between 1 and 31.
  overload: System.DateTimeOffset.Day*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.DayOfWeek
  id: DayOfWeek
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: DayOfWeek
  nameWithType: DateTimeOffset.DayOfWeek
  fullName: System.DateTimeOffset.DayOfWeek
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the day of the week represented by the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>. If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>).  \n  \n You can also display the weekday name of a particular date by using the \"D\" format specifier or the \"dddd\" custom format specifier. For example:  \n  \n [!code-vb[System.DateTimeOffset.Properties#4](~/add/codesnippet/visualbasic/p-system.datetimeoffset._7_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#4](~/add/codesnippet/csharp/p-system.datetimeoffset._7_1.cs)]  \n  \n Note that the string returned by calling the `ToString` method of the <xref:System.DayOfWeek> enumeration member that is returned by this property is not localized. To extract a string that contains the weekday name of the current culture or of a specific culture, call the <xref:System.DateTimeOffset.ToString%2A> method with the \"dddd\" custom format specifier. For example, the following code displays the weekday name for a date using the `fr-fr` culture.  \n  \n [!code-vb[System.DateTimeOffset.Properties#5](~/add/codesnippet/visualbasic/p-system.datetimeoffset._7_2.vb)]\n [!code-cs[System.DateTimeOffset.Properties#5](~/add/codesnippet/csharp/p-system.datetimeoffset._7_2.cs)]"
  example:
  - "The following example displays the weekday name of the first day of each month of the year 2008.  \n  \n [!code-vb[System.DateTimeOffset.Properties#3](~/add/codesnippet/visualbasic/p-system.datetimeoffset._7_3.vb)]\n [!code-cs[System.DateTimeOffset.Properties#3](~/add/codesnippet/csharp/p-system.datetimeoffset._7_3.cs)]"
  syntax:
    content: public DayOfWeek DayOfWeek { get; }
    return:
      type: System.DayOfWeek
      description: One of the enumeration values that indicates the day of the week of the current <xref href="System.DateTimeOffset"></xref> object.
  overload: System.DateTimeOffset.DayOfWeek*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.DayOfYear
  id: DayOfYear
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: DayOfYear
  nameWithType: DateTimeOffset.DayOfYear
  fullName: System.DateTimeOffset.DayOfYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the day of the year represented by the current <xref href="System.DateTimeOffset"></xref> object.
  syntax:
    content: public int DayOfYear { get; }
    return:
      type: System.Int32
      description: The day of the year of the current <xref href="System.DateTimeOffset"></xref> object, expressed as a value between 1 and 366.
  overload: System.DateTimeOffset.DayOfYear*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Equals(System.DateTimeOffset)
  id: Equals(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Equals(DateTimeOffset)
  nameWithType: DateTimeOffset.Equals(DateTimeOffset)
  fullName: System.DateTimeOffset.Equals(DateTimeOffset)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether the current <xref href="System.DateTimeOffset"></xref> object represents the same point in time as a specified <xref href="System.DateTimeOffset"></xref> object.
  remarks: "Before it performs the comparison, this method converts the values of both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:  \n  \n [!code-cs[System.DateTimeOffset.Syntax#2](~/add/codesnippet/csharp/m-system.datetimeoffset._15_1.cs)]\n [!code-vb[System.DateTimeOffset.Syntax#2](~/add/codesnippet/visualbasic/m-system.datetimeoffset._15_1.vb)]  \n  \n In other words, the Equals method determines whether two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.  \n  \n A <xref:System.DateTimeOffset> object that is not `null` is considered to be later (or greater) than one that is `null`.  \n  \n This overload of the Equals method implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method. It offers slightly better performance than the <xref:System.DateTimeOffset.Equals%28System.Object%29?displayProperty=fullName> overload because the `other` parameter does not have to be converted from an object."
  example:
  - "The following example illustrates calls to the Equals method to test <xref:System.DateTimeOffset> objects for equality with the current <xref:System.DateTimeOffset> object.  \n  \n [!code-vb[System.DateTimeOffset.Methods#9](~/add/codesnippet/visualbasic/m-system.datetimeoffset._15_2.vb)]\n [!code-cs[System.DateTimeOffset.Methods#9](~/add/codesnippet/csharp/m-system.datetimeoffset._15_2.cs)]"
  syntax:
    content: public bool Equals (DateTimeOffset other);
    parameters:
    - id: other
      type: System.DateTimeOffset
      description: An object to compare to the current <xref href="System.DateTimeOffset"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if both <xref href="System.DateTimeOffset"></xref> objects have the same <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value; otherwise, `false`.'
  overload: System.DateTimeOffset.Equals*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DateTimeOffset.Equals(Object)
  fullName: System.DateTimeOffset.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether a <xref href="System.DateTimeOffset"></xref> object represents the same point in time as a specified object.
  remarks: "Before it performs the comparison, this method converts the values of both the current <xref:System.DateTimeOffset> object and the `obj` parameter to Coordinated Universal Time (UTC). The method is equivalent to the following:  \n  \n [!code-cs[System.DateTimeOffset.Syntax#3](~/add/codesnippet/csharp/m-system.datetimeoffset._19_1.cs)]\n [!code-vb[System.DateTimeOffset.Syntax#3](~/add/codesnippet/visualbasic/m-system.datetimeoffset._19_1.vb)]  \n  \n In other words, the Equals method determines whether the current <xref:System.DateTimeOffset> object and a specified object represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method.  \n  \n If `obj` is `null`, or if the run-time type of `obj` is not <xref:System.DateTimeOffset>, the method returns `false`."
  example:
  - "The following example indicates whether the current <xref:System.DateTimeOffset> object is equal to several other <xref:System.DateTimeOffset> objects, as well as to a null reference and a <xref:System.DateTime> object.  \n  \n [!code-vb[System.DateTimeOffset.Methods#10](~/add/codesnippet/visualbasic/m-system.datetimeoffset._19_2.vb)]\n [!code-cs[System.DateTimeOffset.Methods#10](~/add/codesnippet/csharp/m-system.datetimeoffset._19_2.cs)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare to the current <xref href="System.DateTimeOffset"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the <code>obj</code> parameter is a <xref href="System.DateTimeOffset"></xref> object and represents the same point in time as the current <xref href="System.DateTimeOffset"></xref> object; otherwise, `false`.'
  overload: System.DateTimeOffset.Equals*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)
  id: Equals(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Equals(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.Equals(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.Equals(DateTimeOffset,DateTimeOffset)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether two specified <xref href="System.DateTimeOffset"></xref> objects represent the same point in time.
  remarks: "Before it performs the comparison, this method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:  \n  \n [!code-cs[System.DateTimeOffset.Syntax#4](~/add/codesnippet/csharp/m-system.datetimeoffset._0_1.cs)]\n [!code-vb[System.DateTimeOffset.Syntax#4](~/add/codesnippet/visualbasic/m-system.datetimeoffset._0_1.vb)]  \n  \n In other words, the Equals method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method."
  example:
  - "The following example illustrates calls to the Equals method to test various pairs of <xref:System.DateTimeOffset> objects for equality.  \n  \n [!code-vb[System.DateTimeOffset.Methods#11](~/add/codesnippet/visualbasic/m-system.datetimeoffset._0_2.vb)]\n [!code-cs[System.DateTimeOffset.Methods#11](~/add/codesnippet/csharp/m-system.datetimeoffset._0_2.cs)]"
  syntax:
    content: public static bool Equals (DateTimeOffset first, DateTimeOffset second);
    parameters:
    - id: first
      type: System.DateTimeOffset
      description: The first object to compare.
    - id: second
      type: System.DateTimeOffset
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if the two <xref href="System.DateTimeOffset"></xref> objects have the same <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value; otherwise, `false`.'
  overload: System.DateTimeOffset.Equals*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  id: EqualsExact(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: EqualsExact(DateTimeOffset)
  nameWithType: DateTimeOffset.EqualsExact(DateTimeOffset)
  fullName: System.DateTimeOffset.EqualsExact(DateTimeOffset)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether the current <xref href="System.DateTimeOffset"></xref> object represents the same time and has the same offset as a specified <xref href="System.DateTimeOffset"></xref> object.
  remarks: "Because multiple time zones share a single offset, a return value of `true` does not guarantee that the current and the `other` object represent times in the same time zone.  \n  \n Unlike the EqualsExact method, the overloads of the <xref:System.DateTimeOffset.Equals%2A> method determine only whether two <xref:System.DateTimeOffset> values represent a single point in time. They do not indicate that two values have the same date and time as well as the same offset."
  example:
  - "The following example illustrates the use of the EqualsExact method to compare similar <xref:System.DateTimeOffset> objects.  \n  \n [!code-vb[System.DateTimeOffset.Methods#12](~/add/codesnippet/visualbasic/m-system.datetimeoffset._8_1.vb)]\n [!code-cs[System.DateTimeOffset.Methods#12](~/add/codesnippet/csharp/m-system.datetimeoffset._8_1.cs)]"
  syntax:
    content: public bool EqualsExact (DateTimeOffset other);
    parameters:
    - id: other
      type: System.DateTimeOffset
      description: The object to compare to the current <xref href="System.DateTimeOffset"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the current <xref href="System.DateTimeOffset"></xref> object and <code>other</code> have the same date and time value and the same <xref href="stem.DateTimeOffset.Offset%2A"></xref> value; otherwise, `false`.'
  overload: System.DateTimeOffset.EqualsExact*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.FromFileTime(System.Int64)
  id: FromFileTime(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: FromFileTime(Int64)
  nameWithType: DateTimeOffset.FromFileTime(Int64)
  fullName: System.DateTimeOffset.FromFileTime(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified Windows file time to an equivalent local time.
  remarks: "A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n A Windows file time is directly accessible through the Windows API by calling the `GetFileTime` function, which returns a `FILETIME` structure. The single function parameter is the handle of the file whose file time information is to be retrieved. The file handle is retrieved by calling the `CreateFile` function. The `FILETIME` structure's `dwHighDateTime` member contains the four high-order bytes of the file time, and its `dwLowDateTime` member contains the four low-order bytes. The example that follows illustrates how to retrieve Windows file time values and convert them to <xref:System.DateTimeOffset> values.  \n  \n Windows file time values can also be created from <xref:System.DateTime> values by calling the <xref:System.DateTime.ToFileTime%2A?displayProperty=fullName> and <xref:System.DateTime.ToFileTimeUtc%2A?displayProperty=fullName> methods, and from <xref:System.DateTimeOffset> values by calling the <xref:System.DateTimeOffset.ToFileTime%2A?displayProperty=fullName> method."
  example:
  - "The following example uses the Windows API to retrieve the Windows file times for the WordPad executable.  \n  \n [!code-cs[System.DateTimeOffset.FromFileTime#1](~/add/codesnippet/csharp/m-system.datetimeoffset._11_1.cs)]\n [!code-vb[System.DateTimeOffset.FromFileTime#1](~/add/codesnippet/visualbasic/m-system.datetimeoffset._11_1.vb)]"
  syntax:
    content: public static DateTimeOffset FromFileTime (long fileTime);
    parameters:
    - id: fileTime
      type: System.Int64
      description: A Windows file time, expressed in ticks.
    return:
      type: System.DateTimeOffset
      description: An object that represents the date and time of <code>fileTime</code> with the offset set to the local time offset.
  overload: System.DateTimeOffset.FromFileTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>filetime</code> is less than zero.  \n  \n -or-  \n  \n <code>filetime</code> is greater than `DateTimeOffset.MaxValue.Ticks`."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  id: FromUnixTimeMilliseconds(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: FromUnixTimeMilliseconds(Int64)
  nameWithType: DateTimeOffset.FromUnixTimeMilliseconds(Int64)
  fullName: System.DateTimeOffset.FromUnixTimeMilliseconds(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts a Unix time expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href="System.DateTimeOffset"></xref> value.
  remarks: The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method.
  syntax:
    content: public static DateTimeOffset FromUnixTimeMilliseconds (long milliseconds);
    parameters:
    - id: milliseconds
      type: System.Int64
      description: A Unix time, expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.
    return:
      type: System.DateTimeOffset
      description: A date and time value that represents the same moment in time as the Unix time.
  overload: System.DateTimeOffset.FromUnixTimeMilliseconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>milliseconds</code> is less than  -62,135,596,800,000.  \n  \n -or-  \n  \n <code>milliseconds</code> is greater than 253,402,300,799,999."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  id: FromUnixTimeSeconds(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: FromUnixTimeSeconds(Int64)
  nameWithType: DateTimeOffset.FromUnixTimeSeconds(Int64)
  fullName: System.DateTimeOffset.FromUnixTimeSeconds(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts a Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href="System.DateTimeOffset"></xref> value.
  remarks: The <xref:System.DateTimeOffset.Offset%2A> property value of the returned <xref:System.DateTimeOffset> instance is <xref:System.TimeSpan.Zero?displayProperty=fullName>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method.
  syntax:
    content: public static DateTimeOffset FromUnixTimeSeconds (long seconds);
    parameters:
    - id: seconds
      type: System.Int64
      description: A Unix time, expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.
    return:
      type: System.DateTimeOffset
      description: A date and time value that represents the same moment in time as the Unix time.
  overload: System.DateTimeOffset.FromUnixTimeSeconds*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>seconds</code> is less than  -62,135,596,800.  \n  \n -or-  \n  \n <code>seconds</code> is greater than 253,402,300,799."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.GetHashCode
  id: GetHashCode
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DateTimeOffset.GetHashCode()
  fullName: System.DateTimeOffset.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the hash code for the current <xref href="System.DateTimeOffset"></xref> object.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  overload: System.DateTimeOffset.GetHashCode*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Hour
  id: Hour
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Hour
  nameWithType: DateTimeOffset.Hour
  fullName: System.DateTimeOffset.Hour
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the hour component of the time represented by the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The Hour property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's hour component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"H\", or \"HH\" custom format specifiers."
  example:
  - "The following example displays the hour component of a <xref:System.DateTimeOffset> object in three different ways:  \n  \n-   By retrieving the value of the Hour property.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"H\" format specifier.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"HH\" format specifier.  \n  \n [!code-vb[System.DateTimeOffset.Properties#6](~/add/codesnippet/visualbasic/p-system.datetimeoffset._13_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#6](~/add/codesnippet/csharp/p-system.datetimeoffset._13_1.cs)]"
  syntax:
    content: public int Hour { get; }
    return:
      type: System.Int32
      description: The hour component of the current <xref href="System.DateTimeOffset"></xref> object. This property uses a 24-hour clock; the value ranges from 0 to 23.
  overload: System.DateTimeOffset.Hour*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.LocalDateTime
  id: LocalDateTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: LocalDateTime
  nameWithType: DateTimeOffset.LocalDateTime
  fullName: System.DateTimeOffset.LocalDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a <xref href="System.DateTime"></xref> value that represents the local date and time of the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "If necessary, the LocalDateTime property converts the current <xref:System.DateTimeOffset> object's date and time to the local system's date and time. The conversion is a two-step operation:  \n  \n1.  The property converts the current <xref:System.DateTimeOffset> object's time to Coordinated Universal Time (UTC).  \n  \n2.  The property then converts UTC to local time.  \n  \n There are no invalid times and ambiguous times are mapped to the local zone's standard time. (However, the conversion can create an anomaly: if a <xref:System.DateTimeOffset> value that is derived from the local computer reflects an ambiguous date and time, that value can be converted to UTC and then back to a local time that differs from the original time.)  The property applies any adjustment rules in the local time zone when it performs this conversion.  \n  \n This property returns both the date and the time component of a <xref:System.DateTimeOffset> object, which makes it useful for <xref:System.DateTimeOffset> to <xref:System.DateTime> conversion. In addition to performing any necessary time conversion, this property differs from the <xref:System.DateTimeOffset.DateTime%2A> property by setting the value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object to <xref:System.DateTimeKind?displayProperty=fullName>."
  example:
  - "The following example illustrates several conversions of <xref:System.DateTimeOffset> values to local times in the U.S. Pacific Standard Time zone. Note that the last three times are all ambiguous; the property maps all of them to a single date and time in the Pacific Standard Time zone.  \n  \n [!code-vb[System.DateTimeOffset.Properties#7](~/add/codesnippet/visualbasic/p-system.datetimeoffset._3_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#7](~/add/codesnippet/csharp/p-system.datetimeoffset._3_1.cs)]"
  syntax:
    content: public DateTime LocalDateTime { get; }
    return:
      type: System.DateTime
      description: The local date and time of the current <xref href="System.DateTimeOffset"></xref> object.
  overload: System.DateTimeOffset.LocalDateTime*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.MaxValue
  id: MaxValue
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: MaxValue
  nameWithType: DateTimeOffset.MaxValue
  fullName: System.DateTimeOffset.MaxValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents the greatest possible value of <xref href="System.DateTimeOffset"></xref>. This field is read-only.
  remarks: "The value of this constant is 12/31/9999 11:59:59 PM +00:00.  \n  \n The MaxValue property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or earlier than this maximum range value. If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>. Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method compares it with MaxValue.  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the maximum range, but whose offset is negative, may throw an exception. For example, the value 12/31/9999 11:00 PM -02:00 is out of range because it is one hour later than MaxValue when it is converted to UTC.  \n  \n Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>. In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>. Instead of retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime%2A?displayProperty=fullName> property."
  syntax:
    content: public static readonly DateTimeOffset MaxValue;
    return:
      type: System.DateTimeOffset
      description: To be added.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <xref href="System.DateTime.MaxValue"></xref> is outside the range of the current or specified culture's default calendar.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Millisecond
  id: Millisecond
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Millisecond
  nameWithType: DateTimeOffset.Millisecond
  fullName: System.DateTimeOffset.Millisecond
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the millisecond component of the time represented by the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "You can also create a string representation of a <xref:System.DateTimeOffset> object's millisecond component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"fff\" custom format specifier.  \n  \n If you rely on properties such as <xref:System.DateTimeOffset.Now%2A> or <xref:System.DateTimeOffset.UtcNow%2A> to accurately track the number of elapsed milliseconds, the precision of the time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds."
  example:
  - "The following example displays the number of milliseconds of a <xref:System.DateTimeOffset> object by using a custom format specifier and by directly accessing the Millisecond property.  \n  \n [!code-vb[System.DateTimeOffset.Properties#12](~/add/codesnippet/visualbasic/p-system.datetimeoffset._1_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#12](~/add/codesnippet/csharp/p-system.datetimeoffset._1_1.cs)]"
  syntax:
    content: public int Millisecond { get; }
    return:
      type: System.Int32
      description: The millisecond component of the current <xref href="System.DateTimeOffset"></xref> object, expressed as an integer between 0 and 999.
  overload: System.DateTimeOffset.Millisecond*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Minute
  id: Minute
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Minute
  nameWithType: DateTimeOffset.Minute
  fullName: System.DateTimeOffset.Minute
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the minute component of the time represented by the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The Minute property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's minute component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"m\", or \"mm\" custom format specifiers."
  example:
  - "The following example displays the minute component of a <xref:System.DateTimeOffset> object in three different ways:  \n  \n-   By retrieving the value of the Minute property.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"m\" format specifier.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"mm\" format specifier.  \n  \n [!code-vb[System.DateTimeOffset.Properties#8](~/add/codesnippet/visualbasic/p-system.datetimeoffset._11_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#8](~/add/codesnippet/csharp/p-system.datetimeoffset._11_1.cs)]"
  syntax:
    content: public int Minute { get; }
    return:
      type: System.Int32
      description: The minute component of the current <xref href="System.DateTimeOffset"></xref> object, expressed as an integer between 0 and 59.
  overload: System.DateTimeOffset.Minute*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.MinValue
  id: MinValue
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: MinValue
  nameWithType: DateTimeOffset.MinValue
  fullName: System.DateTimeOffset.MinValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents the earliest possible <xref href="System.DateTimeOffset"></xref> value. This field is read-only.
  remarks: "The value of this constant is 1/1/0001 12:00:00 AM +00:00.  \n  \n The MinValue property is used to determine whether the value of a new <xref:System.DateTimeOffset> object or the <xref:System.DateTimeOffset> value returned by an arithmetic operation is the same as or later than this minimum range value. If it is not, the method throws an <xref:System.ArgumentOutOfRangeException>. Any <xref:System.DateTimeOffset> value is converted to Coordinated Universal Time (UTC) before the method performs the comparison with MinValue.  This means that a <xref:System.DateTimeOffset> value whose date and time are close to the minimum range, but whose offset is positive, may throw an exception. For example, the value 1/1/0001 1:00:00 AM +02:00 is out of range because it is one hour earlier than MinValue when it is converted to UTC."
  syntax:
    content: public static readonly DateTimeOffset MinValue;
    return:
      type: System.DateTimeOffset
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Month
  id: Month
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Month
  nameWithType: DateTimeOffset.Month
  fullName: System.DateTimeOffset.Month
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the month component of the date represented by the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The Month property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's month component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"M\" or \"MM\" custom format specifiers."
  example:
  - "The following example displays the month component of a <xref:System.DateTimeOffset> value in three different ways:  \n  \n-   By retrieving the value of the Month property.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"M\" format specifier.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"MM\" format specifier.  \n  \n [!code-vb[System.DateTimeOffset.Properties#9](~/add/codesnippet/visualbasic/p-system.datetimeoffset._2_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#9](~/add/codesnippet/csharp/p-system.datetimeoffset._2_1.cs)]"
  syntax:
    content: public int Month { get; }
    return:
      type: System.Int32
      description: The month component of the current <xref href="System.DateTimeOffset"></xref> object, expressed as an integer between 1 and 12.
  overload: System.DateTimeOffset.Month*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Now
  id: Now
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Now
  nameWithType: DateTimeOffset.Now
  fullName: System.DateTimeOffset.Now
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a <xref href="System.DateTimeOffset"></xref> object that is set to the current date and time on the current computer, with the offset set to the local time's offset from Coordinated Universal Time (UTC).
  remarks: The precision of the current local time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds.
  example:
  - "The following example uses the Now property to retrieve the current date and time and displays it by using each of the [standard date and time format strings](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md) supported by the <xref:System.DateTimeOffset> type.  \n  \n [!code-cs[System.DateTimeOffset.Now#1](~/add/codesnippet/csharp/p-system.datetimeoffset._15_1.cs)]\n [!code-vb[System.DateTimeOffset.Now#1](~/add/codesnippet/visualbasic/p-system.datetimeoffset._15_1.vb)]  \n  \n The following example uses the Now and <xref:System.DateTimeOffset.Millisecond%2A> properties to determine the resolution of the system clock. It displays the time only when the value of its millisecond component has changed.  \n  \n [!code-vb[System.DateTimeOffset.Properties#11](~/add/codesnippet/visualbasic/p-system.datetimeoffset._15_2.vb)]\n [!code-cs[System.DateTimeOffset.Properties#11](~/add/codesnippet/csharp/p-system.datetimeoffset._15_2.cs)]"
  syntax:
    content: public static DateTimeOffset Now { get; }
    return:
      type: System.DateTimeOffset
      description: A <xref href="System.DateTimeOffset"></xref> object whose date and time is the current local time and whose offset is the local time zone's offset from Coordinated Universal Time (UTC).
  overload: System.DateTimeOffset.Now*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Offset
  id: Offset
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Offset
  nameWithType: DateTimeOffset.Offset
  fullName: System.DateTimeOffset.Offset
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the time's offset from Coordinated Universal Time (UTC).
  remarks: "The value of the <xref:System.TimeSpan.Hours%2A> property of the returned <xref:System.TimeSpan> object can range from -14 hours to 14 hours.  \n  \n The value of the Offset property is precise to the minute."
  example:
  - "The following example uses the Offset property to display the local time's difference from Coordinated Universal Time (UTC).  \n  \n [!code-vb[System.DateTimeOffset.Properties#13](~/add/codesnippet/visualbasic/p-system.datetimeoffset._9_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#13](~/add/codesnippet/csharp/p-system.datetimeoffset._9_1.cs)]"
  syntax:
    content: public TimeSpan Offset { get; }
    return:
      type: System.TimeSpan
      description: The difference between the current <xref href="System.DateTimeOffset"></xref> object's time value and Coordinated Universal Time (UTC).
  overload: System.DateTimeOffset.Offset*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  id: op_Addition(System.DateTimeOffset,System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: op_Addition(DateTimeOffset,TimeSpan)
  nameWithType: DateTimeOffset.op_Addition(DateTimeOffset,TimeSpan)
  fullName: System.DateTimeOffset.op_Addition(DateTimeOffset,TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Adds a specified time interval to a <xref href="System.DateTimeOffset"></xref> object that has a specified date and time, and yields a <xref href="System.DateTimeOffset"></xref> object that has new a date and time.
  remarks: "The Addition method defines the addition operation for <xref:System.DateTimeOffset> values. It enables code such as the following:  \n  \n [!code-cs[System.DateTimeOffset.Operators#1](~/add/codesnippet/csharp/m-system.datetimeoffset._3_1.cs)]\n [!code-vb[System.DateTimeOffset.Operators#1](~/add/codesnippet/visualbasic/m-system.datetimeoffset._3_1.vb)]  \n  \n Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Add%2A> method instead."
  syntax:
    content: public static DateTimeOffset op_Addition (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);
    parameters:
    - id: dateTimeTz
      type: System.DateTimeOffset
      description: To be added.
    - id: timeSpan
      type: System.TimeSpan
      description: The time interval to add.
    return:
      type: System.DateTimeOffset
      description: An object whose value is the sum of the values of <code>dateTimeTz</code> and <code>timeSpan</code>.
  overload: System.DateTimeOffset.op_Addition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  id: op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: op_Equality(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_Equality(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_Equality(DateTimeOffset,DateTimeOffset)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether two specified <xref href="System.DateTimeOffset"></xref> objects represent the same point in time.
  remarks: "The Equality method defines the operation of the equality operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-cs[System.DateTimeOffset.Operators#2](~/add/codesnippet/csharp/m-system.datetimeoffset._22_1.cs)]\n [!code-vb[System.DateTimeOffset.Operators#2](~/add/codesnippet/visualbasic/m-system.datetimeoffset._22_1.vb)]  \n  \n Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-cs[System.DateTimeOffset.Syntax#4](~/add/codesnippet/csharp/m-system.datetimeoffset._22_2.cs)]\n [!code-vb[System.DateTimeOffset.Syntax#4](~/add/codesnippet/visualbasic/m-system.datetimeoffset._22_2.vb)]  \n  \n In other words, the Equality method determines whether the two <xref:System.DateTimeOffset> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <xref:System.DateTimeOffset> objects represent the same time and have the same offset value, use the <xref:System.DateTimeOffset.EqualsExact%2A> method."
  syntax:
    content: public static bool op_Equality (DateTimeOffset left, DateTimeOffset right);
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: The first object to compare.
    - id: right
      type: System.DateTimeOffset
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if both <xref href="System.DateTimeOffset"></xref> objects have the same <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value; otherwise, `false`.'
  overload: System.DateTimeOffset.op_Equality*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  id: op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: op_GreaterThan(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_GreaterThan(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_GreaterThan(DateTimeOffset,DateTimeOffset)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether one specified <xref href="System.DateTimeOffset"></xref> object is greater than (or later than) a second specified <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The GreaterThan method defines the operation of the greater than operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-cs[System.DateTimeOffset.Operators#3](~/add/codesnippet/csharp/0b797724-634e-47fd-9f05-_1.cs)]\n [!code-vb[System.DateTimeOffset.Operators#3](~/add/codesnippet/visualbasic/0b797724-634e-47fd-9f05-_1.vb)]  \n  \n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. They can also call the GreaterThan method directly, as the following example shows.  \n  \n [!code-vb[System.DateTimeOffset.Operators#4](~/add/codesnippet/visualbasic/0b797724-634e-47fd-9f05-_2.vb)]  \n  \n Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-cs[System.DateTimeOffset.Syntax#5](~/add/codesnippet/csharp/0b797724-634e-47fd-9f05-_3.cs)]\n [!code-vb[System.DateTimeOffset.Syntax#5](~/add/codesnippet/visualbasic/0b797724-634e-47fd-9f05-_3.vb)]"
  syntax:
    content: public static bool op_GreaterThan (DateTimeOffset left, DateTimeOffset right);
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: The first object to compare.
    - id: right
      type: System.DateTimeOffset
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value of <code>left</code> is later than the <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value of <code>right</code>; otherwise, `false`.'
  overload: System.DateTimeOffset.op_GreaterThan*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  id: op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether one specified <xref href="System.DateTimeOffset"></xref> object is greater than or equal to a second specified <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The <xref:System.DateTimeOffset.op_GreaterThan%2A> method defines the operation of the greater than or equal to operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-cs[System.DateTimeOffset.Operators#5](~/add/codesnippet/csharp/c44bb85d-5a4b-4661-bf69-_1.cs)]\n [!code-vb[System.DateTimeOffset.Operators#5](~/add/codesnippet/visualbasic/c44bb85d-5a4b-4661-bf69-_1.vb)]  \n  \n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. Some languages can also call the GreaterThanOrEqual method directly, as the following example shows.  \n  \n [!code-vb[System.DateTimeOffset.Operators#6](~/add/codesnippet/visualbasic/c44bb85d-5a4b-4661-bf69-_2.vb)]  \n  \n Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-cs[System.DateTimeOffset.Syntax#6](~/add/codesnippet/csharp/c44bb85d-5a4b-4661-bf69-_3.cs)]\n [!code-vb[System.DateTimeOffset.Syntax#6](~/add/codesnippet/visualbasic/c44bb85d-5a4b-4661-bf69-_3.vb)]"
  syntax:
    content: public static bool op_GreaterThanOrEqual (DateTimeOffset left, DateTimeOffset right);
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: The first object to compare.
    - id: right
      type: System.DateTimeOffset
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value of <code>left</code> is the same as or later than the <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value of <code>right</code>; otherwise, `false`.'
  overload: System.DateTimeOffset.op_GreaterThanOrEqual*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.op_Implicit(System.DateTime)
  id: op_Implicit(System.DateTime)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: op_Implicit(DateTime)
  nameWithType: DateTimeOffset.op_Implicit(DateTime)
  fullName: System.DateTimeOffset.op_Implicit(DateTime)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static DateTimeOffset op_Implicit (DateTime dateTime);
    parameters:
    - id: dateTime
      type: System.DateTime
      description: To be added.
    return:
      type: System.DateTimeOffset
      description: To be added.
  overload: System.DateTimeOffset.op_Implicit*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  id: op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: op_Inequality(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_Inequality(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_Inequality(DateTimeOffset,DateTimeOffset)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether two specified <xref href="System.DateTimeOffset"></xref> objects refer to different points in time.
  remarks: "The Inequality method defines the operation of the inequality operator for <xref:System.DateTimeOffset> objects. It always returns the opposite result from <xref:System.DateTimeOffset.op_Equality%2A>. The Inequality method enables code such as the following:  \n  \n [!code-cs[System.DateTimeOffset.Operators#8](~/add/codesnippet/csharp/2ab124f0-dd60-42ce-8a37-_1.cs)]\n [!code-vb[System.DateTimeOffset.Operators#8](~/add/codesnippet/visualbasic/2ab124f0-dd60-42ce-8a37-_1.vb)]  \n  \n Before evaluating the `left` and `right` operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-cs[System.DateTimeOffset.Syntax#4](~/add/codesnippet/csharp/2ab124f0-dd60-42ce-8a37-_2.cs)]\n [!code-vb[System.DateTimeOffset.Syntax#4](~/add/codesnippet/visualbasic/2ab124f0-dd60-42ce-8a37-_2.vb)]  \n  \n In other words, the Inequality method determines whether the two <xref:System.DateTimeOffset> objects represent different points in time. It directly compares neither dates and times nor offsets.  \n  \n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. In addition, some languages can also call the Inequality method directly, as the following example shows.  \n  \n [!code-vb[System.DateTimeOffset.Operators#9](~/add/codesnippet/visualbasic/2ab124f0-dd60-42ce-8a37-_3.vb)]"
  syntax:
    content: public static bool op_Inequality (DateTimeOffset left, DateTimeOffset right);
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: The first object to compare.
    - id: right
      type: System.DateTimeOffset
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if <code>left</code> and <code>right</code> do not have the same <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value; otherwise, `false`.'
  overload: System.DateTimeOffset.op_Inequality*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  id: op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: op_LessThan(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_LessThan(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_LessThan(DateTimeOffset,DateTimeOffset)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether one specified <xref href="System.DateTimeOffset"></xref> object is less than a second specified <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The LessThan method defines the operation of the less than operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-cs[System.DateTimeOffset.Operators#10](~/add/codesnippet/csharp/m-system.datetimeoffset._17_1.cs)]\n [!code-vb[System.DateTimeOffset.Operators#10](~/add/codesnippet/visualbasic/m-system.datetimeoffset._17_1.vb)]  \n  \n Before evaluating the `left` and `right` operands, the operator converts both operands to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-cs[System.DateTimeOffset.Syntax#8](~/add/codesnippet/csharp/m-system.datetimeoffset._17_2.cs)]\n [!code-vb[System.DateTimeOffset.Syntax#8](~/add/codesnippet/visualbasic/m-system.datetimeoffset._17_2.vb)]  \n  \n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. In addition, some languages can also call the LessThan method directly, as the following example shows.  \n  \n [!code-vb[System.DateTimeOffset.Operators#11](~/add/codesnippet/visualbasic/m-system.datetimeoffset._17_3.vb)]"
  syntax:
    content: public static bool op_LessThan (DateTimeOffset left, DateTimeOffset right);
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: The first object to compare.
    - id: right
      type: System.DateTimeOffset
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value of <code>left</code> is earlier than the <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value of <code>right</code>; otherwise, `false`.'
  overload: System.DateTimeOffset.op_LessThan*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  id: op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether one specified <xref href="System.DateTimeOffset"></xref> object is less than a second specified <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The LessThanOrEqual method defines the operation of the less than or equal to operator for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-cs[System.DateTimeOffset.Operators#12](~/add/codesnippet/csharp/f4a8a78e-adc3-4017-98c4-_1.cs)]\n [!code-vb[System.DateTimeOffset.Operators#12](~/add/codesnippet/visualbasic/f4a8a78e-adc3-4017-98c4-_1.vb)]  \n  \n Languages that do not support custom operators can call the <xref:System.DateTimeOffset.Compare%2A> method instead. Some languages can also call the LessThanOrEqual method directly, as the following example shows.  \n  \n [!code-vb[System.DateTimeOffset.Operators#13](~/add/codesnippet/visualbasic/f4a8a78e-adc3-4017-98c4-_2.vb)]  \n  \n Before evaluating the `left` and `right` operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  \n  \n [!code-cs[System.DateTimeOffset.Syntax#9](~/add/codesnippet/csharp/f4a8a78e-adc3-4017-98c4-_3.cs)]\n [!code-vb[System.DateTimeOffset.Syntax#9](~/add/codesnippet/visualbasic/f4a8a78e-adc3-4017-98c4-_3.vb)]"
  syntax:
    content: public static bool op_LessThanOrEqual (DateTimeOffset left, DateTimeOffset right);
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: The first object to compare.
    - id: right
      type: System.DateTimeOffset
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value of <code>left</code> is earlier than the <xref href="stem.DateTimeOffset.UtcDateTime%2A"></xref> value of <code>right</code>; otherwise, `false`.'
  overload: System.DateTimeOffset.op_LessThanOrEqual*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  id: op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: op_Subtraction(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_Subtraction(DateTimeOffset,DateTimeOffset)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Subtracts one <xref href="System.DateTimeOffset"></xref> object from another and yields a time interval.
  remarks: "The Subtraction method defines the subtraction operation for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-cs[System.DateTimeOffset.Operators#14](~/add/codesnippet/csharp/240ff2ba-327f-4a3d-9fd1-_1.cs)]\n [!code-vb[System.DateTimeOffset.Operators#14](~/add/codesnippet/visualbasic/240ff2ba-327f-4a3d-9fd1-_1.vb)]  \n  \n Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName> method instead."
  syntax:
    content: public static TimeSpan op_Subtraction (DateTimeOffset left, DateTimeOffset right);
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: The minuend.
    - id: right
      type: System.DateTimeOffset
      description: The subtrahend.
    return:
      type: System.TimeSpan
      description: An object that represents the difference between <code>left</code> and <code>right</code>.
  overload: System.DateTimeOffset.op_Subtraction*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  id: op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: op_Subtraction(DateTimeOffset,TimeSpan)
  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset,TimeSpan)
  fullName: System.DateTimeOffset.op_Subtraction(DateTimeOffset,TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Subtracts a specified time interval from a specified date and time, and yields a new date and time.
  remarks: "The Subtraction method defines the subtraction operation for <xref:System.DateTimeOffset> objects. It enables code such as the following:  \n  \n [!code-cs[System.DateTimeOffset.Operators#15](~/add/codesnippet/csharp/m-system.datetimeoffset._10_1.cs)]\n [!code-vb[System.DateTimeOffset.Operators#15](~/add/codesnippet/visualbasic/m-system.datetimeoffset._10_1.vb)]  \n  \n Languages that do not support custom operators and operator overloading can call the <xref:System.DateTimeOffset.Subtract%28System.TimeSpan%29?displayProperty=fullName> method instead."
  syntax:
    content: public static DateTimeOffset op_Subtraction (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);
    parameters:
    - id: dateTimeTz
      type: System.DateTimeOffset
      description: To be added.
    - id: timeSpan
      type: System.TimeSpan
      description: The time interval to subtract.
    return:
      type: System.DateTimeOffset
      description: An object that is equal to the value of <code>dateTimeOffset</code> minus <code>timeSpan</code>.
  overload: System.DateTimeOffset.op_Subtraction*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting <xref href="System.DateTimeOffset"></xref> value is less than <xref href="System.DateTimeOffset"></xref> or greater than <xref href="System.DateTimeOffset"></xref>.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Parse(System.String)
  id: Parse(System.String)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Parse(String)
  nameWithType: DateTimeOffset.Parse(String)
  fullName: System.DateTimeOffset.Parse(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified string representation of a date, time, and offset to its <xref href="System.DateTimeOffset"></xref> equivalent.
  remarks: "Parse parses a string with three elements that can appear in any order and are delimited by white space. These three elements are as shown in the following table.  \n  \n|Element|Example|  \n|-------------|-------------|  \n|\\<Date>|\"2/10/2007\"|  \n|\\<Time>|\"1:02:03 PM\"|  \n|\\<Offset>|\"-7:30\"|  \n  \n Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Offset> is missing, its default value is the offset of the local time zone. \\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol.  \n  \n The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to the formatting of the current culture, use the <xref:System.DateTimeOffset.ParseExact%2A> method and provide a format specifier."
  example:
  - "The following example calls the Parse method to parse several date and time strings. The example includes output from March 22, 2007, on a system whose culture is en-us.  \n  \n [!code-vb[System.DateTimeOffset.Parse#1](~/add/codesnippet/visualbasic/m-system.datetimeoffset._12_1.vb)]\n [!code-cs[System.DateTimeOffset.Parse#1](~/add/codesnippet/csharp/m-system.datetimeoffset._12_1.cs)]"
  syntax:
    content: public static DateTimeOffset Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: A string that contains a date and time to convert.
    return:
      type: System.DateTimeOffset
      description: An object that is equivalent to the date and time that is contained in <code>input</code>.
  overload: System.DateTimeOffset.Parse*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The offset is greater than 14 hours or less than -14 hours.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>input</code> is `null`.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n <code>input</code> contains the string representation of an offset value without a date or time."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Parse(String,IFormatProvider)
  nameWithType: DateTimeOffset.Parse(String,IFormatProvider)
  fullName: System.DateTimeOffset.Parse(String,IFormatProvider)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTimeOffset"></xref> equivalent using the specified culture-specific format information.
  remarks: "This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \n  \n|Element|Example|  \n|-------------|-------------|  \n|\\<Date>|\"2/10/2007\"|  \n|\\<Time>|\"1:02:03 PM\"|  \n|\\<Offset>|\"-7:30\"|  \n  \n Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone. \\<Offset> can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol.  \n  \n The format of these three elements is defined by the `formatProvider` parameter, which can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The positive or negative sign used in \\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object of the `formatProvider` parameter."
  example:
  - "The following example parses date and time strings that are formatted for the fr-fr culture and displays them using the local system's default en-us culture.  \n  \n [!code-vb[System.DateTimeOffset.Parse#2](~/add/codesnippet/visualbasic/m-system.datetimeoffset._21_1.vb)]\n [!code-cs[System.DateTimeOffset.Parse#2](~/add/codesnippet/csharp/m-system.datetimeoffset._21_1.cs)]"
  syntax:
    content: public static DateTimeOffset Parse (string input, IFormatProvider formatProvider);
    parameters:
    - id: input
      type: System.String
      description: A string that contains a date and time to convert.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that provides culture-specific format information about <code>input</code>.
    return:
      type: System.DateTimeOffset
      description: An object that is equivalent to the date and time that is contained in <code>input</code>, as specified by <code>formatProvider</code>.
  overload: System.DateTimeOffset.Parse*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The offset is greater than 14 hours or less than -14 hours.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>input</code> is `null`.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n <code>input</code> contains the string representation of an offset value without a date or time."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Parse(String,IFormatProvider,DateTimeStyles)
  nameWithType: DateTimeOffset.Parse(String,IFormatProvider,DateTimeStyles)
  fullName: System.DateTimeOffset.Parse(String,IFormatProvider,DateTimeStyles)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTimeOffset"></xref> equivalent using the specified culture-specific format information and formatting style.
  remarks: "This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \n  \n|Element|Example|  \n|-------------|-------------|  \n|\\<Date>|\"2/10/2007\"|  \n|\\<Time>|\"1:02:03 PM\"|  \n|\\<Offset>|\"-7:30\"|  \n  \n Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero?displayProperty=fullName> if either the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> or <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is specified in the `styles` parameter. If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol.  \n  \n The format of these three elements is defined by the `formatProvider` parameter, which can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `input` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n Each element can also be enclosed by leading or trailing white space, and the \\<Date> and \\<Time> elements can include inner white space (such as 6:   00:00). Only the \\<Offset> component cannot include inner white space.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The positive or negative sign used in \\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatProvider` parameter.  \n  \n The following table shows the members of the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> enumeration that are supported.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles>|Parses the string represented by `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \n|<xref:System.Globalization.DateTimeStyles>|Although valid, this value is ignored. Inner white space is permitted in the \\<Date> and \\<Time> elements.|  \n|<xref:System.Globalization.DateTimeStyles>|Although valid, this value is ignored. Leading white space is permitted in front of each component in the parsed string.|  \n|<xref:System.Globalization.DateTimeStyles>|Although valid, this value is ignored. Trailing white space is permitted in front of each component in the parsed string.|  \n|<xref:System.Globalization.DateTimeStyles>|This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles>|Indicates that, if the `input` parameter lacks an \\<Offset> element, the offset of the local time zone should be provided. This is the default behavior of the <xref:System.DateTimeOffset.Parse%2A> method.|  \n|<xref:System.Globalization.DateTimeStyles>|Indicates that, if the `input` parameter lacks an \\<Offset> element, the UTC offset (00:00) should be provided.|  \n|<xref:System.Globalization.DateTimeStyles>|Although valid, this value is ignored and has no effect.|  \n|<xref:System.Globalization.DateTimeStyles>|Because the <xref:System.DateTimeOffset> structure does not include a `Kind` property, this value has no effect.|  \n  \n Only the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is not supported. An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter."
  example:
  - "The following example illustrates the effect of passing the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>, <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>, and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> values to the `styles` parameter of the Parse method.  \n  \n [!code-vb[System.DateTimeOffset.Parse#3](~/add/codesnippet/visualbasic/b271c477-2a66-458b-9c1f-_1.vb)]\n [!code-cs[System.DateTimeOffset.Parse#3](~/add/codesnippet/csharp/b271c477-2a66-458b-9c1f-_1.cs)]"
  syntax:
    content: public static DateTimeOffset Parse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);
    parameters:
    - id: input
      type: System.String
      description: A string that contains a date and time to convert.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that provides culture-specific format information about <code>input</code>.
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>. A typical value to specify is <xref href="System.Globalization.DateTimeStyles"></xref>.
    return:
      type: System.DateTimeOffset
      description: An object that is equivalent to the date and time that is contained in <code>input</code> as specified by <code>formatProvider</code> and <code>styles</code>.
  overload: System.DateTimeOffset.Parse*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The offset is greater than 14 hours or less than -14 hours.  \n  \n -or-  \n  \n <code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <code>styles</code> includes an unsupported <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <code>styles</code> includes <xref href=\"System.Globalization.DateTimeStyles\"></xref> values that cannot be used together."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>input</code> is `null`.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n <code>input</code> contains the string representation of an offset value without a date or time."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  id: ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ParseExact(String,String,IFormatProvider)
  nameWithType: DateTimeOffset.ParseExact(String,String,IFormatProvider)
  fullName: System.DateTimeOffset.ParseExact(String,String,IFormatProvider)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTimeOffset"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.
  remarks: "The ParseExact method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time appear in the order specified by `format`. If the `input` string does not match this `format` parameter, the method throws a <xref:System.FormatException>.  In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. <xref:System.DateTimeOffset.Parse%2A> also allows the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time to appear in any order.  \n  \n The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required format of the `input` parameter. For details about valid formatting codes, see [Standard Date and Time Format Strings](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md) and [Custom Date and Time Format Strings](../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.  \n  \n If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the resulting <xref:System.DateTimeOffset> object is assigned the time zone offset of the local system.  \n  \n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter, as is the precise format of `input` if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."
  example:
  - "The following example uses the ParseExact method with standard and custom format specifiers and the invariant culture to parse several date and time strings.  \n  \n [!code-vb[System.DateTimeOffset.ParseExact#1](~/add/codesnippet/visualbasic/fdeb8bf3-6972-4551-8638-_1.vb)]\n [!code-cs[System.DateTimeOffset.ParseExact#1](~/add/codesnippet/csharp/fdeb8bf3-6972-4551-8638-_1.cs)]"
  syntax:
    content: public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider);
    parameters:
    - id: input
      type: System.String
      description: A string that contains a date and time to convert.
    - id: format
      type: System.String
      description: A format specifier that defines the expected format of <code>input</code>.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about <code>input</code>.
    return:
      type: System.DateTimeOffset
      description: An object that is equivalent to the date and time that is contained in <code>input</code> as specified by <code>format</code> and <code>formatProvider</code>.
  overload: System.DateTimeOffset.ParseExact*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The offset is greater than 14 hours or less than -14 hours.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code> is `null`.  \n  \n -or-  \n  \n <code>format</code> is `null`."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n <code>format</code> is an empty string.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>input</code> do not agree."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ParseExact(String,String,IFormatProvider,DateTimeStyles)
  nameWithType: DateTimeOffset.ParseExact(String,String,IFormatProvider,DateTimeStyles)
  fullName: System.DateTimeOffset.ParseExact(String,String,IFormatProvider,DateTimeStyles)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTimeOffset"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.
  remarks: "The ParseExact method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time appear in the order specified by `format`. If the `input` string does not match the pattern of the `format` parameter, with any variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.  In contrast, the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. <xref:System.DateTimeOffset.Parse%2A> also allows the \\<Date>, \\<Time>, and \\<Offset> elements of the string representation of a date and time to appear in any order.  \n  \n The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of the `input` parameter. For details about valid formatting codes, see [Standard Date and Time Format Strings](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md) and [Custom Date and Time Format Strings](../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.  \n  \n If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \n  \n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise format of `input`, if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles>. The following table lists the effect of each supported member.  \n  \n|`DateTimeStyles` member|Behavior|  \n|-----------------------------|--------------|  \n|<xref:System.Globalization.DateTimeStyles>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \n|<xref:System.Globalization.DateTimeStyles>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.|  \n|<xref:System.Globalization.DateTimeStyles>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include inner white space not specified by `format`. Extra white space can appear between date and time components and within individual components, and is ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include leading spaces not specified by `format`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include trailing spaces not specified by `format`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include leading, trailing, and inner spaces not specified by `format`. All extra white-space characters not specified in `format` are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in `format`. This is the default behavior.|  \n|<xref:System.Globalization.DateTimeStyles>|Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|"
  example:
  - "The following example uses the ParseExact method with standard and custom format specifiers, the invariant culture, and various <xref:System.Globalization.DateTimeStyles> values to parse several date and time strings.  \n  \n [!code-vb[System.DateTimeOffset.ParseExact#2](~/add/codesnippet/visualbasic/15b42d94-2be5-4ced-bcf1-_1.vb)]\n [!code-cs[System.DateTimeOffset.ParseExact#2](~/add/codesnippet/csharp/15b42d94-2be5-4ced-bcf1-_1.cs)]"
  syntax:
    content: public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);
    parameters:
    - id: input
      type: System.String
      description: A string that contains a date and time to convert.
    - id: format
      type: System.String
      description: A format specifier that defines the expected format of <code>input</code>.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about <code>input</code>.
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.
    return:
      type: System.DateTimeOffset
      description: An object that is equivalent to the date and time that is contained in the <code>input</code> parameter, as specified by the <code>format</code>, <code>formatProvider</code>, and <code>styles</code> parameters.
  overload: System.DateTimeOffset.ParseExact*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The offset is greater than 14 hours or less than -14 hours.  \n  \n -or-  \n  \n The <code>styles</code> parameter includes an unsupported value.  \n  \n -or-  \n  \n The <code>styles</code> parameter contains <xref href=\"System.Globalization.DateTimeStyles\"></xref> values that cannot be used together."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code> is `null`.  \n  \n -or-  \n  \n <code>format</code> is `null`."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n <code>format</code> is an empty string.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>input</code> do not agree."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ParseExact(String,String[],IFormatProvider,DateTimeStyles)
  nameWithType: DateTimeOffset.ParseExact(String,String[],IFormatProvider,DateTimeStyles)
  fullName: System.DateTimeOffset.ParseExact(String,String[],IFormatProvider,DateTimeStyles)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTimeOffset"></xref> equivalent using the specified formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.
  remarks: "The ParseExact method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. If the `input` string does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>. Aside from comparing `input` to multiple formatting patterns, this overload behaves identically to the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.  \n  \n The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of the `input` parameter. When the method is called, `input` must match one of these patterns. For details about valid formatting codes, see [Standard Date and Time Format Strings](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md) and [Custom Date and Time Format Strings](../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md). If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <xref:System.FormatException>.  \n  \n> [!IMPORTANT]\n>  Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.  \n  \n If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If the matched element in `formats` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \n  \n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise format of `input`, if the matching element of `formats` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles>. The following table lists the effect of each supported member.  \n  \n|`DateTimeStyles` member|Behavior|  \n|-----------------------------|--------------|  \n|<xref:System.Globalization.DateTimeStyles>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \n|<xref:System.Globalization.DateTimeStyles>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.|  \n|<xref:System.Globalization.DateTimeStyles>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include inner white space not specified by `format`. Extra white space can appear between date and time components and within individual components (except the offset), and is ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include leading spaces not specified by `formats`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include trailing spaces not specified by `formats`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include leading, trailing, and inner spaces not specified by `formats`. All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in a particular element of `formats` for a match to occur. This is the default behavior.|  \n|<xref:System.Globalization.DateTimeStyles>|Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|"
  example:
  - "The following example defines multiple input formats for the string representation of a date and time and offset value, and then passes the string that is entered by the user to the ParseExact method.  \n  \n [!code-vb[System.DateTimeOffset.ParseExact#3](~/add/codesnippet/visualbasic/128e130f-8497-45f4-89e2-_1.vb)]\n [!code-cs[System.DateTimeOffset.ParseExact#3](~/add/codesnippet/csharp/128e130f-8497-45f4-89e2-_1.cs)]"
  syntax:
    content: public static DateTimeOffset ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);
    parameters:
    - id: input
      type: System.String
      description: A string that contains a date and time to convert.
    - id: formats
      type: System.String[]
      description: An array of format specifiers that define the expected formats of <code>input</code>.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about <code>input</code>.
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.
    return:
      type: System.DateTimeOffset
      description: An object that is equivalent to the date and time that is contained in the <code>input</code> parameter, as specified by the <code>formats</code>, <code>formatProvider</code>, and <code>styles</code> parameters.
  overload: System.DateTimeOffset.ParseExact*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The offset is greater than 14 hours or less than -14 hours.  \n  \n -or-  \n  \n <code>styles</code> includes an unsupported value.  \n  \n -or-  \n  \n The <code>styles</code> parameter contains <xref href=\"System.Globalization.DateTimeStyles\"></xref> values that cannot be used together."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>input</code> is `null`.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>input</code> does not contain a valid string representation of a date and time.  \n  \n -or-  \n  \n No element of <code>formats</code> contains a valid format specifier.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>input</code> do not agree."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Second
  id: Second
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Second
  nameWithType: DateTimeOffset.Second
  fullName: System.DateTimeOffset.Second
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the second component of the clock time represented by the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The Second property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's second component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"s\", or \"ss\" custom format specifiers."
  example:
  - "The following example displays the second component of a <xref:System.DateTimeOffset> object in three different ways:  \n  \n-   By retrieving the value of the Second property.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"s\" format specifier.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"ss\" format specifier.  \n  \n [!code-vb[System.DateTimeOffset.Properties#14](~/add/codesnippet/visualbasic/p-system.datetimeoffset._16_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#14](~/add/codesnippet/csharp/p-system.datetimeoffset._16_1.cs)]"
  syntax:
    content: public int Second { get; }
    return:
      type: System.Int32
      description: The second component of the <xref href="System.DateTimeOffset"></xref> object, expressed as an integer value between 0 and 59.
  overload: System.DateTimeOffset.Second*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Subtract(System.DateTimeOffset)
  id: Subtract(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Subtract(DateTimeOffset)
  nameWithType: DateTimeOffset.Subtract(DateTimeOffset)
  fullName: System.DateTimeOffset.Subtract(DateTimeOffset)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Subtracts a <xref href="System.DateTimeOffset"></xref> value that represents a specific date and time from the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "This method converts both <xref:System.DateTimeOffset> objects to Coordinated Universal Time (UTC) before calculating the time interval that separates them. This removes any effect that different offsets from UTC may have on the comparison.  \n  \n> [!NOTE]\n>  For languages that support custom operators, you can also perform date and time subtraction by using the subtraction operator. For details, see the <xref:System.DateTimeOffset.op_Subtraction%2A> method.  \n  \n Because neither the current <xref:System.DateTimeOffset> object nor the `value` parameter represent the date and time in a specific time zone, the Subtract method does not consider a particular time zone's adjustment rules when it subtracts dates and times."
  example:
  - "The following example illustrates subtraction that uses the Subtract method.  \n  \n [!code-vb[System.DateTimeOffset.Methods#13](~/add/codesnippet/visualbasic/m-system.datetimeoffset._2_1.vb)]\n [!code-cs[System.DateTimeOffset.Methods#13](~/add/codesnippet/csharp/m-system.datetimeoffset._2_1.cs)]"
  syntax:
    content: public TimeSpan Subtract (DateTimeOffset value);
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: An object that represents the value to subtract.
    return:
      type: System.TimeSpan
      description: An object that specifies the interval between the two <xref href="System.DateTimeOffset"></xref> objects.
  overload: System.DateTimeOffset.Subtract*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Subtract(System.TimeSpan)
  id: Subtract(System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Subtract(TimeSpan)
  nameWithType: DateTimeOffset.Subtract(TimeSpan)
  fullName: System.DateTimeOffset.Subtract(TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Subtracts a specified time interval from the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "You can use the Subtract method to subtract more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. Its behavior is identical to the <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.TimeSpan%29> method, which defines the subtraction operator. The <xref:System.DateTimeOffset> structure also supports specialized addition methods (such as <xref:System.DateTimeOffset.AddDays%2A>, <xref:System.DateTimeOffset.AddHours%2A>, and <xref:System.DateTimeOffset.AddMinutes%2A>) that allow you to perform subtraction by assigning a negative value to the method parameter.  \n  \n> [!NOTE]\n>  This method returns a new <xref:System.DateTimeOffset> object. It does not modify the value of the current object by adding `timeSpan` to its date and time.  \n  \n The Subtract method does not affect the value of the <xref:System.DateTimeOffset> object's <xref:System.DateTimeOffset.Offset%2A> property. The returned <xref:System.DateTimeOffset> object has the same offset as the original object.  \n  \n Because the current <xref:System.DateTimeOffset> object does not represent the date and time in a specific time zone, the Subtract method does not consider a particular time zone's adjustment rules when it performs the subtraction."
  example:
  - "The following example illustrates subtraction that uses the Subtract method.  \n  \n [!code-vb[System.DateTimeOffset.Methods#14](~/add/codesnippet/visualbasic/m-system.datetimeoffset._24_1.vb)]\n [!code-cs[System.DateTimeOffset.Methods#14](~/add/codesnippet/csharp/m-system.datetimeoffset._24_1.cs)]"
  syntax:
    content: public DateTimeOffset Subtract (TimeSpan value);
    parameters:
    - id: value
      type: System.TimeSpan
      description: The time interval to subtract.
    return:
      type: System.DateTimeOffset
      description: An object that is equal to the date and time represented by the current <xref href="System.DateTimeOffset"></xref> object, minus the time interval represented by <code>value</code>.
  overload: System.DateTimeOffset.Subtract*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> value is less than <xref href=\"System.DateTimeOffset\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> value is greater than <xref href=\"System.DateTimeOffset\"></xref>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: IComparable.CompareTo(Object)
  nameWithType: DateTimeOffset.IComparable.CompareTo(Object)
  fullName: System.DateTimeOffset.IComparable.CompareTo(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares the value of the current <xref href="System.DateTimeOffset"></xref> object with another object of the same type.
  syntax:
    content: int IComparable.CompareTo (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current <xref href="System.DateTimeOffset"></xref> object.
    return:
      type: System.Int32
      description: "A 32-bit signed integer that indicates whether the current <xref href=\"System.DateTimeOffset\"></xref> object is less than, equal to, or greater than <code>obj</code>. The return values of the method are interpreted as follows:  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is less than (earlier than) <code>obj</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is equal to (the same point in time as) <code>obj</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> The current <xref href=\"System.DateTimeOffset\"></xref> object is greater than (later than) <code>obj</code>.  \n  \n </td></tr></tbody></table>"
  overload: System.DateTimeOffset.System#IComparable#CompareTo*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  isEii: true
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: IDeserializationCallback.OnDeserialization(Object)
  nameWithType: DateTimeOffset.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.DateTimeOffset.IDeserializationCallback.OnDeserialization(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Runs when the deserialization of an object has been completed.
  syntax:
    content: void IDeserializationCallback.OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: The object that initiated the callback. The functionality for this parameter is not currently implemented.
  overload: System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DateTimeOffset.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.DateTimeOffset.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Populates a <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object with the data required to serialize the current <xref href="System.DateTimeOffset"></xref> object.
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object to populate with data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination for this serialization (see <xref href="System.Runtime.Serialization.StreamingContext"></xref>).
  overload: System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>info</code> parameter is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Ticks
  id: Ticks
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Ticks
  nameWithType: DateTimeOffset.Ticks
  fullName: System.DateTimeOffset.Ticks
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the number of ticks that represents the date and time of the current <xref href="System.DateTimeOffset"></xref> object in clock time.
  remarks: "The Ticks property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n The value of the Ticks property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the Ticks property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`.  \n  \n You can assign the number of ticks to a <xref:System.DateTimeOffset> object by using the <xref:System.DateTimeOffset.%23ctor%28System.Int64%2CSystem.TimeSpan%29> constructor overload."
  example:
  - "The following example initializes a <xref:System.DateTimeOffset> object by approximating the number of ticks in the date July 1, 2008 1:23:07. It then displays the date and the number of ticks represented by that date to the console.  \n  \n [!code-vb[System.DateTimeOffset.Properties#15](~/add/codesnippet/visualbasic/p-system.datetimeoffset._12_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#15](~/add/codesnippet/csharp/p-system.datetimeoffset._12_1.cs)]"
  syntax:
    content: public long Ticks { get; }
    return:
      type: System.Int64
      description: The number of ticks in the <xref href="System.DateTimeOffset"></xref> object's clock time.
  overload: System.DateTimeOffset.Ticks*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.TimeOfDay
  id: TimeOfDay
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: TimeOfDay
  nameWithType: DateTimeOffset.TimeOfDay
  fullName: System.DateTimeOffset.TimeOfDay
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the time of day for the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The TimeOfDay property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n The TimeOfDay property returns the time component of a <xref:System.DateTimeOffset> object in the form of a <xref:System.TimeSpan> object. It is equivalent to the <xref:System.DateTime.TimeOfDay%2A?displayProperty=fullName> property."
  example:
  - "The following example uses the TimeOfDay property to extract the time and display it to the console.  \n  \n [!code-vb[System.DateTimeOffset.Properties#16](~/add/codesnippet/visualbasic/p-system.datetimeoffset._14_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#16](~/add/codesnippet/csharp/p-system.datetimeoffset._14_1.cs)]"
  syntax:
    content: public TimeSpan TimeOfDay { get; }
    return:
      type: System.TimeSpan
      description: The time interval of the current date that has elapsed since midnight.
  overload: System.DateTimeOffset.TimeOfDay*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ToFileTime
  id: ToFileTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ToFileTime()
  nameWithType: DateTimeOffset.ToFileTime()
  fullName: System.DateTimeOffset.ToFileTime()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTimeOffset"></xref> object to a Windows file time.
  remarks: "A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n The ToFileTime method converts the current <xref:System.DateTimeOffset> object's date and time to UTC before it performs the conversion. In other words, calling the ToFileTime method is equivalent to the following method call:  \n  \n [C#]  \n  \n```  \nthis.ToUtcDateTime().ToFileTime();  \n```  \n  \n [Visual Basic]  \n  \n```  \nMe.ToUtcDateTime().ToFileTime()  \n```"
  syntax:
    content: public long ToFileTime ();
    parameters: []
    return:
      type: System.Int64
      description: The value of the current <xref href="System.DateTimeOffset"></xref> object, expressed as a Windows file time.
  overload: System.DateTimeOffset.ToFileTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The resulting file time would represent a date and time before midnight on January 1, 1601 C.E. Coordinated Universal Time (UTC).
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ToLocalTime
  id: ToLocalTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ToLocalTime()
  nameWithType: DateTimeOffset.ToLocalTime()
  fullName: System.DateTimeOffset.ToLocalTime()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current <xref href="System.DateTimeOffset"></xref> object to a <xref href="System.DateTimeOffset"></xref> object that represents the local time.
  remarks: "In performing the conversion to local time, the method first converts the current <xref:System.DateTimeOffset> object's date and time to Coordinated Universal Time (UTC) by subtracting the offset from the time. It then converts the UTC date and time to local time by adding the local time zone offset. In doing this, it takes account of any adjustment rules for the local time zone.  \n  \n Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time. That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method, the method will return `true`.  \n  \n If the conversion causes a time that is out of range of the <xref:System.DateTimeOffset> type, the ToLocalTime method returns a <xref:System.DateTimeOffset> object that has the date and time set to either <xref:System.DateTimeOffset.MaxValue> or <xref:System.DateTimeOffset.MinValue> and the offset set to the local time zone offset."
  example:
  - "The following example uses the ToLocalTime method to convert a <xref:System.DateTimeOffset> value to local time in the Pacific Standard Time zone. It also illustrates the method's support for the local time zone's adjustment rules.  \n  \n [!code-vb[System.DateTimeOffset.Methods#15](~/add/codesnippet/visualbasic/m-system.datetimeoffset._31_1.vb)]\n [!code-cs[System.DateTimeOffset.Methods#15](~/add/codesnippet/csharp/m-system.datetimeoffset._31_1.cs)]"
  syntax:
    content: public DateTimeOffset ToLocalTime ();
    parameters: []
    return:
      type: System.DateTimeOffset
      description: An object that represents the date and time of the current <xref href="System.DateTimeOffset"></xref> object converted to local time.
  overload: System.DateTimeOffset.ToLocalTime*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ToOffset(System.TimeSpan)
  id: ToOffset(System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ToOffset(TimeSpan)
  nameWithType: DateTimeOffset.ToOffset(TimeSpan)
  fullName: System.DateTimeOffset.ToOffset(TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTimeOffset"></xref> object to the date and time specified by an offset value.
  remarks: The ToOffset method is an alternative to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method. It can be useful for performing simple conversions from one time zone to another when the time zones' offsets from Coordinated Universal Time (UTC) are known. However, because neither the original <xref:System.DateTimeOffset> object nor the new <xref:System.DateTimeOffset> object returned by the method call are unambiguously related to a particular time zone, the method does not apply any time zone adjustment rules in the conversion.
  example:
  - "The following example illustrates how to use the ToOffset method to convert a <xref:System.DateTimeOffset> object to a <xref:System.DateTimeOffset> object with a different offset.  \n  \n [!code-vb[System.DateTimeOffset.ToOffset#1](~/add/codesnippet/visualbasic/m-system.datetimeoffset._13_1.vb)]\n [!code-cs[System.DateTimeOffset.ToOffset#1](~/add/codesnippet/csharp/m-system.datetimeoffset._13_1.cs)]"
  syntax:
    content: public DateTimeOffset ToOffset (TimeSpan offset);
    parameters:
    - id: offset
      type: System.TimeSpan
      description: The offset to convert the <xref href="System.DateTimeOffset"></xref> value to.
    return:
      type: System.DateTimeOffset
      description: An object that is equal to the original <xref href="System.DateTimeOffset"></xref> object (that is, their <xref href="stem.DateTimeOffset.ToUniversalTime%2A"></xref> methods return identical points in time) but whose <xref href="stem.DateTimeOffset.Offset%2A"></xref> property is set to <code>offset</code>.
  overload: System.DateTimeOffset.ToOffset*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The resulting <xref href=\"System.DateTimeOffset\"></xref> object has a <xref href=\"stem.DateTimeOffset.DateTime%2A\"></xref> value earlier than <xref href=\"System.DateTimeOffset.MinValue\"></xref>.  \n  \n -or-  \n  \n The resulting <xref href=\"System.DateTimeOffset\"></xref> object has a <xref href=\"stem.DateTimeOffset.DateTime%2A\"></xref> value later than <xref href=\"System.DateTimeOffset.MaxValue\"></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is less than -14 hours.  \n  \n -or-  \n  \n <code>offset</code> is greater than 14 hours."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ToString
  id: ToString
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ToString()
  nameWithType: DateTimeOffset.ToString()
  fullName: System.DateTimeOffset.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTimeOffset"></xref> object to its equivalent string representation.
  remarks: "The return value of this method is identical to that of the <xref:System.DateTime.ToString?displayProperty=fullName> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space. For example, if <xref:System.DateTime.ToString?displayProperty=fullName> returns a value of 1/12/2008 6:15:50 PM, ToString returns a value of 1/12/2008 6:15:50 PM -08:00 for a time that is eight hours behind Coordinated Universal Time (UTC).  \n  \n This method uses formatting information derived from the current culture. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>. Other overloads of the ToString method enable you to specify the culture whose formatting to use, and to define the output pattern of the <xref:System.DateTimeOffset> value."
  example:
  - "The following example illustrates calls to the ToString method and displays its output on a system whose current culture is en-us.  \n  \n [!code-cs[System.DateTimeOffset.ToString#1](~/add/codesnippet/csharp/m-system.datetimeoffset._25_2.cs)]\n [!code-vb[System.DateTimeOffset.ToString#1](~/add/codesnippet/visualbasic/m-system.datetimeoffset._25_2.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string representation of a <xref href="System.DateTimeOffset"></xref> object that includes the offset appended at the end of the string.
  overload: System.DateTimeOffset.ToString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by the current culture.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: DateTimeOffset.ToString(IFormatProvider)
  fullName: System.DateTimeOffset.ToString(IFormatProvider)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTimeOffset"></xref> object to its equivalent string representation using the specified culture-specific formatting information.
  remarks: "The return value of this method is identical to that of its equivalent overload of the <xref:System.DateTime.ToString%2A?displayProperty=fullName> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the `zzz` custom format string, with each element separated from the previous element by a space.  \n  \n The format of these three elements is defined by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are applied to the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used (see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>)."
  example:
  - "The following example displays a <xref:System.DateTimeOffset> object using <xref:System.Globalization.CultureInfo> objects that represent the invariant culture, as well as four other cultures.  \n  \n [!code-cs[System.DateTimeOffset.ToString#2](~/add/codesnippet/csharp/m-system.datetimeoffset._7_2.cs)]\n [!code-vb[System.DateTimeOffset.ToString#2](~/add/codesnippet/visualbasic/m-system.datetimeoffset._7_2.vb)]"
  syntax:
    content: public string ToString (IFormatProvider formatProvider);
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: A string representation of the value of the current <xref href="System.DateTimeOffset"></xref> object, as specified by <code>formatProvider</code>.
  overload: System.DateTimeOffset.ToString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by <code>formatProvider</code>.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ToString(System.String)
  id: ToString(System.String)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ToString(String)
  nameWithType: DateTimeOffset.ToString(String)
  fullName: System.DateTimeOffset.ToString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTimeOffset"></xref> object to its equivalent string representation using the specified format.
  remarks: "The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md)) that defines the format of the returned string. If `format` is a null or empty string (\"\"), the <xref:System.DateTimeOffset> value is output using the default format.  \n  \n The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>.  \n  \n|Existing format specifier|New behavior|  \n|-------------------------------|------------------|  \n|\"K\"|Designed to round-trip a date and time. With <xref:System.DateTimeOffset>, maps to \"zzz\" (the offset is always displayed with hours and minutes). Note that \"K\" is a custom format specifier; it cannot appear as the single character in `format`.|  \n|\"U\"|Not supported.|  \n|\"r\"|Converts the <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC) and outputs it using the custom format string `ddd, dd MMM yyyy HH:mm:ss GMT`.|  \n|\"u\"|Converts the <xref:System.DateTimeOffset> object to UTC and outputs it using the format `yyyy-MM-dd HH:mm:ssZ`.|  \n  \n The remaining standard date and time format specifiers behave the same with the ToString method as they do with the <xref:System.DateTime.ToString%2A> method.  \n  \n This method uses formatting information derived from the current culture. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>."
  example:
  - "The following example displays a <xref:System.DateTimeOffset> object to the console using each of the standard date and time format specifiers. The output is formatted by using the en-us culture.  \n  \n [!code-cs[System.DateTimeOffset.ToString#3](~/add/codesnippet/csharp/m-system.datetimeoffset._30_2.cs)]\n [!code-vb[System.DateTimeOffset.ToString#3](~/add/codesnippet/visualbasic/m-system.datetimeoffset._30_2.vb)]"
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: A format string.
    return:
      type: System.String
      description: A string representation of the value of the current <xref href="System.DateTimeOffset"></xref> object, as specified by <code>format</code>.
  overload: System.DateTimeOffset.ToString*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "The length of <code>format</code> is one, and it is not one of the standard format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>.  \n  \n -or-  \n  \n <code>format</code> does not contain a valid custom format pattern."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by the current culture.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ToString(String,IFormatProvider)
  nameWithType: DateTimeOffset.ToString(String,IFormatProvider)
  fullName: System.DateTimeOffset.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of the current <xref href="System.DateTimeOffset"></xref> object to its equivalent string representation using the specified format and culture-specific format information.
  remarks: "The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md)). If `format` is a null or empty string (\"\"), the <xref:System.DateTimeOffset> object is output using the default format.  \n  \n The following table shows the exact operation of certain format specifiers when used with <xref:System.DateTimeOffset>, which differs from their behavior when used with <xref:System.DateTime>.  \n  \n|Existing format specifier|New behavior|  \n|-------------------------------|------------------|  \n|\"K\"|Designed to round-trip a date and time. With <xref:System.DateTimeOffset>, maps to \"zzz\" (the offset is always displayed with hours and minutes). Note that \"K\" is a custom format specifier; it cannot appear as the single character in `format`.|  \n|\"U\"|Not supported.|  \n|\"r\"|Converts the <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC) and outputs it using the custom format string `ddd, dd MMM yyyy HH:mm:ss GMT`.|  \n|\"u\"|Converts the <xref:System.DateTimeOffset> value to UTC and outputs it using the format `yyyy-MM-dd HH:mm:ssZ`.|  \n  \n The remaining standard date and time format specifiers behave the same with the <xref:System.DateTimeOffset.ToString%28System.String%29> method as they do with the <xref:System.DateTime.ToString%2A> method.  \n  \n The pattern that corresponds to standard format specifiers, as well as the symbols and names of date and time components, is defined by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used (see <xref:System.Globalization.CultureInfo.CurrentCulture%2A>)."
  example:
  - "The following example uses the ToString method to display a <xref:System.DateTimeOffset> object using a custom format string for several different cultures.  \n  \n [!code-cs[System.DateTimeOffset.ToString#4](~/add/codesnippet/csharp/m-system.datetimeoffset._16_2.cs)]\n [!code-vb[System.DateTimeOffset.ToString#4](~/add/codesnippet/visualbasic/m-system.datetimeoffset._16_2.vb)]"
  syntax:
    content: public string ToString (string format, IFormatProvider formatProvider);
    parameters:
    - id: format
      type: System.String
      description: A format string.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: A string representation of the value of the current <xref href="System.DateTimeOffset"></xref> object, as specified by <code>format</code> and <code>provider</code>.
  overload: System.DateTimeOffset.ToString*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "The length of <code>format</code> is one, and it is not one of the standard format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>.  \n  \n -or-  \n  \n <code>format</code> does not contain a valid custom format pattern."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The date and time is outside the range of dates supported by the calendar used by <code>formatProvider</code>.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ToUniversalTime
  id: ToUniversalTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ToUniversalTime()
  nameWithType: DateTimeOffset.ToUniversalTime()
  fullName: System.DateTimeOffset.ToUniversalTime()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the current <xref href="System.DateTimeOffset"></xref> object to a <xref href="System.DateTimeOffset"></xref> value that represents the Coordinated Universal Time (UTC).
  remarks: "This method returns a <xref:System.DateTimeOffset> object whose <xref:System.DateTimeOffset.Offset%2A> property is set to zero.  \n  \n Both the value of the current <xref:System.DateTimeOffset> object and the value of the <xref:System.DateTimeOffset> object returned by the method call represent the same point in time. That is, if both are passed to the <xref:System.DateTimeOffset.Equals%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method, the method will return `true`."
  example:
  - "The following example calls the ToUniversalTime method to convert a local time and several other times to Coordinated Universal Time (UTC).  \n  \n [!code-vb[System.DateTimeOffset.Methods#16](~/add/codesnippet/visualbasic/m-system.datetimeoffset._26_1.vb)]\n [!code-cs[System.DateTimeOffset.Methods#16](~/add/codesnippet/csharp/m-system.datetimeoffset._26_1.cs)]"
  syntax:
    content: public DateTimeOffset ToUniversalTime ();
    parameters: []
    return:
      type: System.DateTimeOffset
      description: An object that represents the date and time of the current <xref href="System.DateTimeOffset"></xref> object converted to Coordinated Universal Time (UTC).
  overload: System.DateTimeOffset.ToUniversalTime*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ToUnixTimeMilliseconds
  id: ToUnixTimeMilliseconds
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ToUnixTimeMilliseconds()
  nameWithType: DateTimeOffset.ToUnixTimeMilliseconds()
  fullName: System.DateTimeOffset.ToUnixTimeMilliseconds()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.
  remarks: "Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account. This method returns the number of milliseconds in Unix time.  \n  \n This method first converts the current instance to UTC before returning the number of milliseconds in its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value."
  syntax:
    content: public long ToUnixTimeMilliseconds ();
    parameters: []
    return:
      type: System.Int64
      description: The number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.
  overload: System.DateTimeOffset.ToUnixTimeMilliseconds*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.ToUnixTimeSeconds
  id: ToUnixTimeSeconds
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: ToUnixTimeSeconds()
  nameWithType: DateTimeOffset.ToUnixTimeSeconds()
  fullName: System.DateTimeOffset.ToUnixTimeSeconds()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z.
  remarks: "Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account.  \n  \n This method first converts the current instance to UTC before returning its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value."
  example:
  - "The following example calls the ToUnixTimeSeconds method to return the Unix time of values that are equal to, shortly before, and shortly after 1970-01-01T00:00:00Z.  \n  \n [!code-vb[System.DateTimeOffset.ToUnixTimeSeconds#1](~/add/codesnippet/visualbasic/m-system.datetimeoffset._27_1.vb)]\n [!code-cs[System.DateTimeOffset.ToUnixTimeSeconds#1](~/add/codesnippet/csharp/m-system.datetimeoffset._27_1.cs)]"
  syntax:
    content: public long ToUnixTimeSeconds ();
    parameters: []
    return:
      type: System.Int64
      description: The number of seconds that have elapsed since 1970-01-01T00:00:00Z.
  overload: System.DateTimeOffset.ToUnixTimeSeconds*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  id: TryParse(System.String,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: TryParse(String,DateTimeOffset)
  nameWithType: DateTimeOffset.TryParse(String,DateTimeOffset)
  fullName: System.DateTimeOffset.TryParse(String,DateTimeOffset)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Tries to converts a specified string representation of a date and time to its <xref href="System.DateTimeOffset"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.
  remarks: "This overload of the TryParse method is like the <xref:System.DateTimeOffset.Parse%28System.String%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails. It parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \n  \n|Element|Example|  \n|-------------|-------------|  \n|\\<Date>|\"2/10/2007\"|  \n|\\<Time>|\"1:02:03 PM\"|  \n|\\<Offset>|\"-7:30\"|  \n  \n Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone. If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol or the method returns `false`.  \n  \n The `input` string is parsed by using the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to that of the current culture, use the <xref:System.DateTimeOffset.TryParseExact%2A> method and provide a format specifier."
  example:
  - "The following example calls the TryParse method to parse several strings with various date and time formats.  \n  \n [!code-vb[System.DateTimeOffset.TryParse#1](~/add/codesnippet/visualbasic/m-system.datetimeoffset._18_1.vb)]\n [!code-cs[System.DateTimeOffset.TryParse#1](~/add/codesnippet/csharp/m-system.datetimeoffset._18_1.cs)]"
  syntax:
    content: public static bool TryParse (string input, out DateTimeOffset result);
    parameters:
    - id: input
      type: System.String
      description: A string that contains a date and time to convert.
    - id: result
      type: System.DateTimeOffset
      description: When the method returns, contains the <xref href="System.DateTimeOffset"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href="System.DateTimeOffset"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null` or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.'
  overload: System.DateTimeOffset.TryParse*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  id: TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)
  nameWithType: DateTimeOffset.TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)
  fullName: System.DateTimeOffset.TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Tries to convert a specified string representation of a date and time to its <xref href="System.DateTimeOffset"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.
  remarks: "This overload of the TryParse method is like the <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails. The method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  \n  \n|Element|Example|  \n|-------------|-------------|  \n|\\<Date>|\"2/10/2007\"|  \n|\\<Time>|\"1:02:03 PM\"|  \n|\\<Offset>|\"-7:30\"|  \n  \n Although each of these elements is optional, \\<Offset> cannot appear by itself. It must be provided together with either \\<Date> or \\<Time>. If \\<Date> is missing, its default value is the current day. If \\<Date> is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. If \\<Time> is missing, its default value is 12:00:00 AM. If \\<Offset> is missing, its default value is the offset of the local time zone, or <xref:System.TimeSpan.Zero> if either the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> or <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is specified in `styles`. If \\<Offset> is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, \\<Offset> must include a sign symbol or the method returns `false`.  \n  \n The `input` string is parsed by using the culture-specific formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object supplied by the `formatProvider` parameter. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in `input`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the format that is used in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n In addition, each element can be delimited by leading or trailing white space, and the \\<Date> and \\<Time> components can include inner white space (such as 6:   00:00). Only the \\<Offset> component cannot include inner white space.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The positive or negative sign used in \\<Offset> must be either + or -. It is not defined by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the `formatprovider` parameter's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.  \n  \n The following members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported:  \n  \n|DateTimeStyles Member|Comments|  \n|---------------------------|--------------|  \n|<xref:System.Globalization.DateTimeStyles>|Parses the string represented by `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the returned object's <xref:System.DateTimeOffset.ToUniversalTime> method.|  \n|<xref:System.Globalization.DateTimeStyles>|Although valid, this value is ignored. Inner white space is allowed in the \\<Date> and \\<Time> components.|  \n|<xref:System.Globalization.DateTimeStyles>|Although valid, this value is ignored. Leading white space is allowed in front of each component in the parsed string.|  \n|<xref:System.Globalization.DateTimeStyles>|Although valid, this value is ignored. Trailing white space is allowed in front of each component in the parsed string.|  \n|<xref:System.Globalization.DateTimeStyles>|This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value, such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles>|Indicates that, if the `input` parameter lacks an \\<Offset> element, the offset of the local time zone should be provided. This is the default behavior of the TryParse method.|  \n|<xref:System.Globalization.DateTimeStyles>|Indicates that, if the `input` parameter lacks an \\<Offset> element, the UTC offset (00:00) should be provided.|  \n|<xref:System.Globalization.DateTimeStyles>|Although valid, this value is ignored and has no effect.|  \n|<xref:System.Globalization.DateTimeStyles>|Because the <xref:System.DateTimeOffset> structure does not include a `Kind` property, this value has no effect.|  \n  \n Only the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value is not supported. An <xref:System.ArgumentException> is thrown if this value is included in the `styles` parameter."
  example:
  - "The following example calls the TryParse method with a variety of <xref:System.Globalization.DateTimeStyles> values to parse some strings with various date and time formats.  \n  \n [!code-vb[System.DateTimeOffset.TryParse#2](~/add/codesnippet/visualbasic/09211b95-6140-4570-96bc-_1.vb)]\n [!code-cs[System.DateTimeOffset.TryParse#2](~/add/codesnippet/csharp/09211b95-6140-4570-96bc-_1.cs)]"
  syntax:
    content: public static bool TryParse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);
    parameters:
    - id: input
      type: System.String
      description: A string that contains a date and time to convert.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information about <code>input</code>.
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.
    - id: result
      type: System.DateTimeOffset
      description: When the method returns, contains the <xref href="System.DateTimeOffset"></xref> value equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href="System.DateTimeOffset"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null` or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.'
  overload: System.DateTimeOffset.TryParse*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>styles</code> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.Globalization.DateTimeStyles\"></xref> is not supported.  \n  \n -or-  \n  \n <code>styles</code> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\"></xref> values."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)
  nameWithType: DateTimeOffset.TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)
  fullName: System.DateTimeOffset.TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTimeOffset"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.
  remarks: "This overload of the TryParseExact method is like the <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that this method does not throw an exception if the conversion fails. It parses the string representation of a date and time that must exactly match the pattern specified by the `format` parameter. If the `input` string does not match this pattern, with some possible variations in white space defined by the `styles` parameter, the parsing operation fails and the method returns `false`.  \n  \n The `format` parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of `input`. For details about valid formatting codes, see [Standard Date and Time Format Strings](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md) and [Custom Date and Time Format Strings](../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md). If `format` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the parsing operation fails and the method returns `false`.  \n  \n If `format` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If `format` requires that `input` contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If `format` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \n  \n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise pattern of `input` if `format` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and standard formats allowed in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles>. The following table lists the effect of each supported member.  \n  \n|`DateTimeStyles` member|Behavior|  \n|-----------------------------|--------------|  \n|<xref:System.Globalization.DateTimeStyles>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \n|<xref:System.Globalization.DateTimeStyles>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default behavior.|  \n|<xref:System.Globalization.DateTimeStyles>|If `format` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include inner white space not specified by format. Extra white space can appear between date and time components and within individual components, other than the offset, and is ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include leading spaces not specified by `format`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include trailing spaces not specified by `format`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include leading, trailing, and inner spaces not specified by `format`. All extra white-space characters not specified in `format` are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in `format`. This is the default behavior.|  \n|<xref:System.Globalization.DateTimeStyles>|Has no effect, because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|"
  example:
  - "The following example uses the TryParseExact method with standard and custom format specifiers, the invariant culture, and various <xref:System.Globalization.DateTimeStyles> values to parse several date and time strings.  \n  \n [!code-vb[System.DateTimeOffset.TryParseExact#1](~/add/codesnippet/visualbasic/f423b102-3042-4971-a34c-_1.vb)]\n [!code-cs[System.DateTimeOffset.TryParseExact#1](~/add/codesnippet/csharp/f423b102-3042-4971-a34c-_1.cs)]"
  syntax:
    content: public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);
    parameters:
    - id: input
      type: System.String
      description: A string that contains a date and time to convert.
    - id: format
      type: System.String
      description: A format specifier that defines the required format of <code>input</code>.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about <code>input</code>.
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is `None`.
    - id: result
      type: System.DateTimeOffset
      description: When the method returns, contains the <xref href="System.DateTimeOffset"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href="System.DateTimeOffset"></xref>, if the conversion failed. The conversion fails if the <code>input</code> parameter is `null`, or does not contain a valid string representation of a date and time in the expected format defined by <code>format</code> and <code>provider</code>. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.'
  overload: System.DateTimeOffset.TryParseExact*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>styles</code> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.Globalization.DateTimeStyles\"></xref> is not supported.  \n  \n -or-  \n  \n <code>styles</code> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\"></xref> values."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)
  nameWithType: DateTimeOffset.TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)
  fullName: System.DateTimeOffset.TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified string representation of a date and time to its <xref href="System.DateTimeOffset"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.
  remarks: "The TryParseExact method parses the string representation of a date that matches any one of the patterns assigned to the `formats` array. If the `input` string does not match any one of these patterns with any variations defined by the `styles` parameter, the parsing operation fails and the method returns `false`. Aside from comparing `input` to multiple strings that contain format specifiers, this overload behaves identically to the [DateTimeOffset.ParseExact(String, String\\<xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.  \n  \n The `formats` parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of `input`. For details about valid formatting codes, see [Standard Date and Time Format Strings](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md) and [Custom Date and Time Format Strings](../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md). If the matched element in `formats` includes the `z`, `zz`, or `zzz` custom format specifiers to indicate that an offset must be present in `input`, that offset must include either a negative sign or a positive sign. If the sign is missing, the parse operation fails and the method returns `false`.  \n  \n> [!IMPORTANT]\n>  Using the `formats` parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.  \n  \n If the matched element in `formats` requires that `input` contain a date but not a time, the resulting <xref:System.DateTimeOffset> object is assigned a time of midnight (0:00:00). If the matched element in `formats` requires that input contain a time but not a date, the resulting <xref:System.DateTimeOffset> object is assigned the current date on the local system. If the matched element in `formats` does not require that `input` contain an offset, the offset of the resulting <xref:System.DateTimeOffset> object depends on the value of the `styles` parameter. If `styles` includes <xref:System.Globalization.DateTimeStyles>, the offset of the local time zone is assigned to the <xref:System.DateTimeOffset> object. If `styles` includes <xref:System.Globalization.DateTimeStyles>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <xref:System.DateTimeOffset> object. If neither value is specified, the offset of the local time zone is used.  \n  \n The particular date and time symbols and strings used in `input` are defined by the `formatProvider` parameter. The same is true for the precise pattern of `input` if the matching element of `formats` is a standard format specifier string. The `formatProvider` parameter can be either of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture based on which `input` is interpreted. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the symbols and formatting in `input`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n If `formatprovider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <xref:System.Globalization.DateTimeStyles> enumeration are supported except <xref:System.Globalization.DateTimeStyles>. The following table lists the effect of each supported member.  \n  \n|`DateTimeStyles` member|Behavior|  \n|-----------------------------|--------------|  \n|<xref:System.Globalization.DateTimeStyles>|Parses `input` and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <xref:System.DateTimeOffset.ToUniversalTime%2A?displayProperty=fullName> method of the returned <xref:System.DateTimeOffset> object.|  \n|<xref:System.Globalization.DateTimeStyles>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the offset of the local time zone. This is the default value.|  \n|<xref:System.Globalization.DateTimeStyles>|If the matched element in `formats` does not require that `input` contain an offset value, the returned <xref:System.DateTimeOffset> object is given the UTC offset (+00:00).|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include inner white space not specified by the elements in `formats`. Extra white space can appear between date and time components and within individual components (except for the offset) and is ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include leading spaces not specified by the elements in `formats`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include trailing spaces not specified by the elements in `formats`. These are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Allows `input` to include leading, trailing, and inner spaces not specified by the elements in `formats`. All extra white-space characters not specified in the matched element in `formats` are ignored when parsing the string.|  \n|<xref:System.Globalization.DateTimeStyles>|Indicates that additional white space is not permitted in `input`. White space must appear exactly as specified in a particular element in `formats` for a successful match to occur. This is the default behavior.|  \n|<xref:System.Globalization.DateTimeStyles>|Has no effect because the <xref:System.DateTimeOffset> structure does not include a `Kind` property.|"
  example:
  - "The following example defines multiple input formats for the string representation of a date and time and offset value, and then passes the string that is entered by the user to the TryParseExact method.  \n  \n [!code-vb[System.DateTimeOffset.TryParseExact#2](~/add/codesnippet/visualbasic/34341620-726e-4494-adbd-_1.vb)]\n [!code-cs[System.DateTimeOffset.TryParseExact#2](~/add/codesnippet/csharp/34341620-726e-4494-adbd-_1.cs)]"
  syntax:
    content: public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);
    parameters:
    - id: input
      type: System.String
      description: A string that contains a date and time to convert.
    - id: formats
      type: System.String[]
      description: An array that defines the expected formats of <code>input</code>.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information about <code>input</code>.
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is `None`.
    - id: result
      type: System.DateTimeOffset
      description: When the method returns, contains the <xref href="System.DateTimeOffset"></xref> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <xref href="System.DateTimeOffset"></xref>, if the conversion failed. The conversion fails if the <code>input</code> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <code>format</code>, or if <code>formats</code> is `null`. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the <code>input</code> parameter is successfully converted; otherwise, `false`.'
  overload: System.DateTimeOffset.TryParseExact*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>styles</code> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.Globalization.DateTimeStyles\"></xref> is not supported.  \n  \n -or-  \n  \n <code>styles</code> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\"></xref> values."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.UtcDateTime
  id: UtcDateTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: UtcDateTime
  nameWithType: DateTimeOffset.UtcDateTime
  fullName: System.DateTimeOffset.UtcDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a <xref href="System.DateTime"></xref> value that represents the Coordinated Universal Time (UTC) date and time of the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The UtcDateTime property performs a dual conversion:  \n  \n-   It converts the date and time of the current <xref:System.DateTimeOffset> object to Coordinated Universal Time (UTC). The conversion is performed by subtracting the value of the <xref:System.DateTimeOffset.Offset%2A> property from the date and time of the current <xref:System.DateTimeOffset> object.  \n  \n-   It converts the <xref:System.DateTimeOffset> value to a <xref:System.DateTime> value.  \n  \n The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTimeOffset.DateTime%2A> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n Retrieving the value of the UtcDateTime property is equivalent to calling the current <xref:System.DateTimeOffset> object's `ToUniversalTime.DateTime` property, except that the <xref:System.DateTime.Kind%2A> property of the latter <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>."
  example:
  - "The following example shows how to use of the UtcDateTime property to display a <xref:System.DateTimeOffset> value and its corresponding UTC time.  \n  \n [!code-vb[System.DateTimeOffset.Properties#17](~/add/codesnippet/visualbasic/p-system.datetimeoffset._5_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#17](~/add/codesnippet/csharp/p-system.datetimeoffset._5_1.cs)]"
  syntax:
    content: public DateTime UtcDateTime { get; }
    return:
      type: System.DateTime
      description: The Coordinated Universal Time (UTC) date and time of the current <xref href="System.DateTimeOffset"></xref> object.
  overload: System.DateTimeOffset.UtcDateTime*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.UtcNow
  id: UtcNow
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: UtcNow
  nameWithType: DateTimeOffset.UtcNow
  fullName: System.DateTimeOffset.UtcNow
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a <xref href="System.DateTimeOffset"></xref> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <xref href="System.TimeSpan.Zero"></xref>.
  remarks: "The UtcNow property computes the current Universal Coordinated Time (UTC) based on the local system's clock time and an offset defined by the local system's time zone.  \n  \n The precision of the current UTC time's millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock's resolution is approximately 10-15 milliseconds."
  example:
  - "The following example illustrates the relationship between Coordinated Universal Time (UTC) and local time.  \n  \n [!code-vb[System.DateTimeOffset.Properties#18](~/add/codesnippet/visualbasic/p-system.datetimeoffset._8_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#18](~/add/codesnippet/csharp/p-system.datetimeoffset._8_1.cs)]"
  syntax:
    content: public static DateTimeOffset UtcNow { get; }
    return:
      type: System.DateTimeOffset
      description: An object whose date and time is the current Coordinated Universal Time (UTC) and whose offset is <xref href="System.TimeSpan.Zero"></xref>.
  overload: System.DateTimeOffset.UtcNow*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.UtcTicks
  id: UtcTicks
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: UtcTicks
  nameWithType: DateTimeOffset.UtcTicks
  fullName: System.DateTimeOffset.UtcTicks
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the number of ticks that represents the date and time of the current <xref href="System.DateTimeOffset"></xref> object in Coordinated Universal Time (UTC).
  remarks: The value of the UtcTicks property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <xref:System.DateTimeOffset.MinValue>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the UtcTicks property ranges from `DateTimeOffset.MinValue.Ticks` to `DateTimeOffset.MaxValue.Ticks`.
  syntax:
    content: public long UtcTicks { get; }
    return:
      type: System.Int64
      description: The number of ticks in the <xref href="System.DateTimeOffset"></xref> object's Coordinated Universal Time (UTC).
  overload: System.DateTimeOffset.UtcTicks*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.DateTimeOffset.Year
  id: Year
  parent: System.DateTimeOffset
  langs:
  - csharp
  name: Year
  nameWithType: DateTimeOffset.Year
  fullName: System.DateTimeOffset.Year
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the year component of the date represented by the current <xref href="System.DateTimeOffset"></xref> object.
  remarks: "The Year property is not affected by the value of the <xref:System.DateTimeOffset.Offset%2A> property.  \n  \n You can also create a string representation of a <xref:System.DateTimeOffset> object's year component by calling the <xref:System.DateTimeOffset.ToString%2A> method with the \"y\", \"yy\", or \"yyyy\" custom format specifiers."
  example:
  - "The following example displays the year component of a <xref:System.DateTimeOffset> value in four different ways:  \n  \n-   By retrieving the value of the Year property.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"y\" format specifier.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"yy\" format specifier.  \n  \n-   By calling the <xref:System.DateTimeOffset.ToString%28System.String%29> method with the \"yyyy\" format specifier.  \n  \n [!code-vb[System.DateTimeOffset.Properties#19](~/add/codesnippet/visualbasic/p-system.datetimeoffset._10_1.vb)]\n [!code-cs[System.DateTimeOffset.Properties#19](~/add/codesnippet/csharp/p-system.datetimeoffset._10_1.cs)]"
  syntax:
    content: public int Year { get; }
    return:
      type: System.Int32
      description: The year component of the current <xref href="System.DateTimeOffset"></xref> object, expressed as an integer value between 0 and 9999.
  overload: System.DateTimeOffset.Year*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\DateTimeOffset.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/DateTimeOffset.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.DateTimeOffset.#ctor(System.DateTime)
  parent: System.DateTimeOffset
  isExternal: false
  name: DateTimeOffset(DateTime)
  nameWithType: DateTimeOffset.DateTimeOffset(DateTime)
  fullName: System.DateTimeOffset.DateTimeOffset(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)
  parent: System.DateTimeOffset
  isExternal: false
  name: DateTimeOffset(DateTime,TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(DateTime,TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(DateTime,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)
  parent: System.DateTimeOffset
  isExternal: false
  name: DateTimeOffset(Int64,TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int64,TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(Int64,TimeSpan)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  parent: System.DateTimeOffset
  isExternal: false
  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  parent: System.DateTimeOffset
  isExternal: false
  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)
  parent: System.DateTimeOffset
  isExternal: false
  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)
  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)
- uid: System.Globalization.Calendar
  parent: System.Globalization
  isExternal: false
  name: Calendar
  nameWithType: Calendar
  fullName: System.Globalization.Calendar
- uid: System.DateTimeOffset.Add(System.TimeSpan)
  parent: System.DateTimeOffset
  isExternal: false
  name: Add(TimeSpan)
  nameWithType: DateTimeOffset.Add(TimeSpan)
  fullName: System.DateTimeOffset.Add(TimeSpan)
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.DateTimeOffset.AddDays(System.Double)
  parent: System.DateTimeOffset
  isExternal: false
  name: AddDays(Double)
  nameWithType: DateTimeOffset.AddDays(Double)
  fullName: System.DateTimeOffset.AddDays(Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.DateTimeOffset.AddHours(System.Double)
  parent: System.DateTimeOffset
  isExternal: false
  name: AddHours(Double)
  nameWithType: DateTimeOffset.AddHours(Double)
  fullName: System.DateTimeOffset.AddHours(Double)
- uid: System.DateTimeOffset.AddMilliseconds(System.Double)
  parent: System.DateTimeOffset
  isExternal: false
  name: AddMilliseconds(Double)
  nameWithType: DateTimeOffset.AddMilliseconds(Double)
  fullName: System.DateTimeOffset.AddMilliseconds(Double)
- uid: System.DateTimeOffset.AddMinutes(System.Double)
  parent: System.DateTimeOffset
  isExternal: false
  name: AddMinutes(Double)
  nameWithType: DateTimeOffset.AddMinutes(Double)
  fullName: System.DateTimeOffset.AddMinutes(Double)
- uid: System.DateTimeOffset.AddMonths(System.Int32)
  parent: System.DateTimeOffset
  isExternal: false
  name: AddMonths(Int32)
  nameWithType: DateTimeOffset.AddMonths(Int32)
  fullName: System.DateTimeOffset.AddMonths(Int32)
- uid: System.DateTimeOffset.AddSeconds(System.Double)
  parent: System.DateTimeOffset
  isExternal: false
  name: AddSeconds(Double)
  nameWithType: DateTimeOffset.AddSeconds(Double)
  fullName: System.DateTimeOffset.AddSeconds(Double)
- uid: System.DateTimeOffset.AddTicks(System.Int64)
  parent: System.DateTimeOffset
  isExternal: false
  name: AddTicks(Int64)
  nameWithType: DateTimeOffset.AddTicks(Int64)
  fullName: System.DateTimeOffset.AddTicks(Int64)
- uid: System.DateTimeOffset.AddYears(System.Int32)
  parent: System.DateTimeOffset
  isExternal: false
  name: AddYears(Int32)
  nameWithType: DateTimeOffset.AddYears(Int32)
  fullName: System.DateTimeOffset.AddYears(Int32)
- uid: System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: Compare(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.Compare(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.Compare(DateTimeOffset,DateTimeOffset)
- uid: System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: CompareTo(DateTimeOffset)
  nameWithType: DateTimeOffset.CompareTo(DateTimeOffset)
  fullName: System.DateTimeOffset.CompareTo(DateTimeOffset)
- uid: System.DateTimeOffset.Date
  parent: System.DateTimeOffset
  isExternal: false
  name: Date
  nameWithType: DateTimeOffset.Date
  fullName: System.DateTimeOffset.Date
- uid: System.DateTimeOffset.DateTime
  parent: System.DateTimeOffset
  isExternal: false
  name: DateTime
  nameWithType: DateTimeOffset.DateTime
  fullName: System.DateTimeOffset.DateTime
- uid: System.DateTimeOffset.Day
  parent: System.DateTimeOffset
  isExternal: false
  name: Day
  nameWithType: DateTimeOffset.Day
  fullName: System.DateTimeOffset.Day
- uid: System.DateTimeOffset.DayOfWeek
  parent: System.DateTimeOffset
  isExternal: false
  name: DayOfWeek
  nameWithType: DateTimeOffset.DayOfWeek
  fullName: System.DateTimeOffset.DayOfWeek
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.DateTimeOffset.DayOfYear
  parent: System.DateTimeOffset
  isExternal: false
  name: DayOfYear
  nameWithType: DateTimeOffset.DayOfYear
  fullName: System.DateTimeOffset.DayOfYear
- uid: System.DateTimeOffset.Equals(System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: Equals(DateTimeOffset)
  nameWithType: DateTimeOffset.Equals(DateTimeOffset)
  fullName: System.DateTimeOffset.Equals(DateTimeOffset)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DateTimeOffset.Equals(System.Object)
  parent: System.DateTimeOffset
  isExternal: false
  name: Equals(Object)
  nameWithType: DateTimeOffset.Equals(Object)
  fullName: System.DateTimeOffset.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: Equals(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.Equals(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.Equals(DateTimeOffset,DateTimeOffset)
- uid: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: EqualsExact(DateTimeOffset)
  nameWithType: DateTimeOffset.EqualsExact(DateTimeOffset)
  fullName: System.DateTimeOffset.EqualsExact(DateTimeOffset)
- uid: System.DateTimeOffset.FromFileTime(System.Int64)
  parent: System.DateTimeOffset
  isExternal: false
  name: FromFileTime(Int64)
  nameWithType: DateTimeOffset.FromFileTime(Int64)
  fullName: System.DateTimeOffset.FromFileTime(Int64)
- uid: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  parent: System.DateTimeOffset
  isExternal: false
  name: FromUnixTimeMilliseconds(Int64)
  nameWithType: DateTimeOffset.FromUnixTimeMilliseconds(Int64)
  fullName: System.DateTimeOffset.FromUnixTimeMilliseconds(Int64)
- uid: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  parent: System.DateTimeOffset
  isExternal: false
  name: FromUnixTimeSeconds(Int64)
  nameWithType: DateTimeOffset.FromUnixTimeSeconds(Int64)
  fullName: System.DateTimeOffset.FromUnixTimeSeconds(Int64)
- uid: System.DateTimeOffset.GetHashCode
  parent: System.DateTimeOffset
  isExternal: false
  name: GetHashCode()
  nameWithType: DateTimeOffset.GetHashCode()
  fullName: System.DateTimeOffset.GetHashCode()
- uid: System.DateTimeOffset.Hour
  parent: System.DateTimeOffset
  isExternal: false
  name: Hour
  nameWithType: DateTimeOffset.Hour
  fullName: System.DateTimeOffset.Hour
- uid: System.DateTimeOffset.LocalDateTime
  parent: System.DateTimeOffset
  isExternal: false
  name: LocalDateTime
  nameWithType: DateTimeOffset.LocalDateTime
  fullName: System.DateTimeOffset.LocalDateTime
- uid: System.DateTimeOffset.MaxValue
  parent: System.DateTimeOffset
  isExternal: false
  name: MaxValue
  nameWithType: DateTimeOffset.MaxValue
  fullName: System.DateTimeOffset.MaxValue
- uid: System.DateTimeOffset.Millisecond
  parent: System.DateTimeOffset
  isExternal: false
  name: Millisecond
  nameWithType: DateTimeOffset.Millisecond
  fullName: System.DateTimeOffset.Millisecond
- uid: System.DateTimeOffset.Minute
  parent: System.DateTimeOffset
  isExternal: false
  name: Minute
  nameWithType: DateTimeOffset.Minute
  fullName: System.DateTimeOffset.Minute
- uid: System.DateTimeOffset.MinValue
  parent: System.DateTimeOffset
  isExternal: false
  name: MinValue
  nameWithType: DateTimeOffset.MinValue
  fullName: System.DateTimeOffset.MinValue
- uid: System.DateTimeOffset.Month
  parent: System.DateTimeOffset
  isExternal: false
  name: Month
  nameWithType: DateTimeOffset.Month
  fullName: System.DateTimeOffset.Month
- uid: System.DateTimeOffset.Now
  parent: System.DateTimeOffset
  isExternal: false
  name: Now
  nameWithType: DateTimeOffset.Now
  fullName: System.DateTimeOffset.Now
- uid: System.DateTimeOffset.Offset
  parent: System.DateTimeOffset
  isExternal: false
  name: Offset
  nameWithType: DateTimeOffset.Offset
  fullName: System.DateTimeOffset.Offset
- uid: System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Addition(DateTimeOffset,TimeSpan)
  nameWithType: DateTimeOffset.op_Addition(DateTimeOffset,TimeSpan)
  fullName: System.DateTimeOffset.op_Addition(DateTimeOffset,TimeSpan)
- uid: System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Equality(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_Equality(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_Equality(DateTimeOffset,DateTimeOffset)
- uid: System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: op_GreaterThan(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_GreaterThan(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_GreaterThan(DateTimeOffset,DateTimeOffset)
- uid: System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)
- uid: System.DateTimeOffset.op_Implicit(System.DateTime)
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Implicit(DateTime)
  nameWithType: DateTimeOffset.op_Implicit(DateTime)
  fullName: System.DateTimeOffset.op_Implicit(DateTime)
- uid: System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Inequality(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_Inequality(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_Inequality(DateTimeOffset,DateTimeOffset)
- uid: System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: op_LessThan(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_LessThan(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_LessThan(DateTimeOffset,DateTimeOffset)
- uid: System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)
- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Subtraction(DateTimeOffset,DateTimeOffset)
  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset,DateTimeOffset)
  fullName: System.DateTimeOffset.op_Subtraction(DateTimeOffset,DateTimeOffset)
- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Subtraction(DateTimeOffset,TimeSpan)
  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset,TimeSpan)
  fullName: System.DateTimeOffset.op_Subtraction(DateTimeOffset,TimeSpan)
- uid: System.DateTimeOffset.Parse(System.String)
  parent: System.DateTimeOffset
  isExternal: false
  name: Parse(String)
  nameWithType: DateTimeOffset.Parse(String)
  fullName: System.DateTimeOffset.Parse(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  isExternal: false
  name: Parse(String,IFormatProvider)
  nameWithType: DateTimeOffset.Parse(String,IFormatProvider)
  fullName: System.DateTimeOffset.Parse(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  isExternal: false
  name: Parse(String,IFormatProvider,DateTimeStyles)
  nameWithType: DateTimeOffset.Parse(String,IFormatProvider,DateTimeStyles)
  fullName: System.DateTimeOffset.Parse(String,IFormatProvider,DateTimeStyles)
- uid: System.Globalization.DateTimeStyles
  parent: System.Globalization
  isExternal: false
  name: DateTimeStyles
  nameWithType: DateTimeStyles
  fullName: System.Globalization.DateTimeStyles
- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  isExternal: false
  name: ParseExact(String,String,IFormatProvider)
  nameWithType: DateTimeOffset.ParseExact(String,String,IFormatProvider)
  fullName: System.DateTimeOffset.ParseExact(String,String,IFormatProvider)
- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  isExternal: false
  name: ParseExact(String,String,IFormatProvider,DateTimeStyles)
  nameWithType: DateTimeOffset.ParseExact(String,String,IFormatProvider,DateTimeStyles)
  fullName: System.DateTimeOffset.ParseExact(String,String,IFormatProvider,DateTimeStyles)
- uid: System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  isExternal: false
  name: ParseExact(String,String[],IFormatProvider,DateTimeStyles)
  nameWithType: DateTimeOffset.ParseExact(String,String[],IFormatProvider,DateTimeStyles)
  fullName: System.DateTimeOffset.ParseExact(String,String[],IFormatProvider,DateTimeStyles)
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DateTimeOffset.Second
  parent: System.DateTimeOffset
  isExternal: false
  name: Second
  nameWithType: DateTimeOffset.Second
  fullName: System.DateTimeOffset.Second
- uid: System.DateTimeOffset.Subtract(System.DateTimeOffset)
  parent: System.DateTimeOffset
  isExternal: false
  name: Subtract(DateTimeOffset)
  nameWithType: DateTimeOffset.Subtract(DateTimeOffset)
  fullName: System.DateTimeOffset.Subtract(DateTimeOffset)
- uid: System.DateTimeOffset.Subtract(System.TimeSpan)
  parent: System.DateTimeOffset
  isExternal: false
  name: Subtract(TimeSpan)
  nameWithType: DateTimeOffset.Subtract(TimeSpan)
  fullName: System.DateTimeOffset.Subtract(TimeSpan)
- uid: System.DateTimeOffset.System#IComparable#CompareTo(System.Object)
  parent: System.DateTimeOffset
  isExternal: false
  name: IComparable.CompareTo(Object)
  nameWithType: DateTimeOffset.IComparable.CompareTo(Object)
  fullName: System.DateTimeOffset.IComparable.CompareTo(Object)
- uid: System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  parent: System.DateTimeOffset
  isExternal: false
  name: IDeserializationCallback.OnDeserialization(Object)
  nameWithType: DateTimeOffset.IDeserializationCallback.OnDeserialization(Object)
  fullName: System.DateTimeOffset.IDeserializationCallback.OnDeserialization(Object)
- uid: System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.DateTimeOffset
  isExternal: false
  name: ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DateTimeOffset.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.DateTimeOffset.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.DateTimeOffset.Ticks
  parent: System.DateTimeOffset
  isExternal: false
  name: Ticks
  nameWithType: DateTimeOffset.Ticks
  fullName: System.DateTimeOffset.Ticks
- uid: System.DateTimeOffset.TimeOfDay
  parent: System.DateTimeOffset
  isExternal: false
  name: TimeOfDay
  nameWithType: DateTimeOffset.TimeOfDay
  fullName: System.DateTimeOffset.TimeOfDay
- uid: System.DateTimeOffset.ToFileTime
  parent: System.DateTimeOffset
  isExternal: false
  name: ToFileTime()
  nameWithType: DateTimeOffset.ToFileTime()
  fullName: System.DateTimeOffset.ToFileTime()
- uid: System.DateTimeOffset.ToLocalTime
  parent: System.DateTimeOffset
  isExternal: false
  name: ToLocalTime()
  nameWithType: DateTimeOffset.ToLocalTime()
  fullName: System.DateTimeOffset.ToLocalTime()
- uid: System.DateTimeOffset.ToOffset(System.TimeSpan)
  parent: System.DateTimeOffset
  isExternal: false
  name: ToOffset(TimeSpan)
  nameWithType: DateTimeOffset.ToOffset(TimeSpan)
  fullName: System.DateTimeOffset.ToOffset(TimeSpan)
- uid: System.DateTimeOffset.ToString
  parent: System.DateTimeOffset
  isExternal: false
  name: ToString()
  nameWithType: DateTimeOffset.ToString()
  fullName: System.DateTimeOffset.ToString()
- uid: System.DateTimeOffset.ToString(System.IFormatProvider)
  parent: System.DateTimeOffset
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: DateTimeOffset.ToString(IFormatProvider)
  fullName: System.DateTimeOffset.ToString(IFormatProvider)
- uid: System.DateTimeOffset.ToString(System.String)
  parent: System.DateTimeOffset
  isExternal: false
  name: ToString(String)
  nameWithType: DateTimeOffset.ToString(String)
  fullName: System.DateTimeOffset.ToString(String)
- uid: System.DateTimeOffset.ToString(System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  isExternal: false
  name: ToString(String,IFormatProvider)
  nameWithType: DateTimeOffset.ToString(String,IFormatProvider)
  fullName: System.DateTimeOffset.ToString(String,IFormatProvider)
- uid: System.DateTimeOffset.ToUniversalTime
  parent: System.DateTimeOffset
  isExternal: false
  name: ToUniversalTime()
  nameWithType: DateTimeOffset.ToUniversalTime()
  fullName: System.DateTimeOffset.ToUniversalTime()
- uid: System.DateTimeOffset.ToUnixTimeMilliseconds
  parent: System.DateTimeOffset
  isExternal: false
  name: ToUnixTimeMilliseconds()
  nameWithType: DateTimeOffset.ToUnixTimeMilliseconds()
  fullName: System.DateTimeOffset.ToUnixTimeMilliseconds()
- uid: System.DateTimeOffset.ToUnixTimeSeconds
  parent: System.DateTimeOffset
  isExternal: false
  name: ToUnixTimeSeconds()
  nameWithType: DateTimeOffset.ToUnixTimeSeconds()
  fullName: System.DateTimeOffset.ToUnixTimeSeconds()
- uid: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  isExternal: false
  name: TryParse(String,DateTimeOffset)
  nameWithType: DateTimeOffset.TryParse(String,DateTimeOffset)
  fullName: System.DateTimeOffset.TryParse(String,DateTimeOffset)
- uid: System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  isExternal: false
  name: TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)
  nameWithType: DateTimeOffset.TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)
  fullName: System.DateTimeOffset.TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)
- uid: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  isExternal: false
  name: TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)
  nameWithType: DateTimeOffset.TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)
  fullName: System.DateTimeOffset.TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)
- uid: System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  isExternal: false
  name: TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)
  nameWithType: DateTimeOffset.TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)
  fullName: System.DateTimeOffset.TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)
- uid: System.DateTimeOffset.UtcDateTime
  parent: System.DateTimeOffset
  isExternal: false
  name: UtcDateTime
  nameWithType: DateTimeOffset.UtcDateTime
  fullName: System.DateTimeOffset.UtcDateTime
- uid: System.DateTimeOffset.UtcNow
  parent: System.DateTimeOffset
  isExternal: false
  name: UtcNow
  nameWithType: DateTimeOffset.UtcNow
  fullName: System.DateTimeOffset.UtcNow
- uid: System.DateTimeOffset.UtcTicks
  parent: System.DateTimeOffset
  isExternal: false
  name: UtcTicks
  nameWithType: DateTimeOffset.UtcTicks
  fullName: System.DateTimeOffset.UtcTicks
- uid: System.DateTimeOffset.Year
  parent: System.DateTimeOffset
  isExternal: false
  name: Year
  nameWithType: DateTimeOffset.Year
  fullName: System.DateTimeOffset.Year
- uid: System.DateTimeOffset.#ctor*
  parent: System.DateTimeOffset
  isExternal: false
  name: DateTimeOffset
  nameWithType: DateTimeOffset.DateTimeOffset
- uid: System.DateTimeOffset.Add*
  parent: System.DateTimeOffset
  isExternal: false
  name: Add
  nameWithType: DateTimeOffset.Add
- uid: System.DateTimeOffset.AddDays*
  parent: System.DateTimeOffset
  isExternal: false
  name: AddDays
  nameWithType: DateTimeOffset.AddDays
- uid: System.DateTimeOffset.AddHours*
  parent: System.DateTimeOffset
  isExternal: false
  name: AddHours
  nameWithType: DateTimeOffset.AddHours
- uid: System.DateTimeOffset.AddMilliseconds*
  parent: System.DateTimeOffset
  isExternal: false
  name: AddMilliseconds
  nameWithType: DateTimeOffset.AddMilliseconds
- uid: System.DateTimeOffset.AddMinutes*
  parent: System.DateTimeOffset
  isExternal: false
  name: AddMinutes
  nameWithType: DateTimeOffset.AddMinutes
- uid: System.DateTimeOffset.AddMonths*
  parent: System.DateTimeOffset
  isExternal: false
  name: AddMonths
  nameWithType: DateTimeOffset.AddMonths
- uid: System.DateTimeOffset.AddSeconds*
  parent: System.DateTimeOffset
  isExternal: false
  name: AddSeconds
  nameWithType: DateTimeOffset.AddSeconds
- uid: System.DateTimeOffset.AddTicks*
  parent: System.DateTimeOffset
  isExternal: false
  name: AddTicks
  nameWithType: DateTimeOffset.AddTicks
- uid: System.DateTimeOffset.AddYears*
  parent: System.DateTimeOffset
  isExternal: false
  name: AddYears
  nameWithType: DateTimeOffset.AddYears
- uid: System.DateTimeOffset.Compare*
  parent: System.DateTimeOffset
  isExternal: false
  name: Compare
  nameWithType: DateTimeOffset.Compare
- uid: System.DateTimeOffset.CompareTo*
  parent: System.DateTimeOffset
  isExternal: false
  name: CompareTo
  nameWithType: DateTimeOffset.CompareTo
- uid: System.DateTimeOffset.Date*
  parent: System.DateTimeOffset
  isExternal: false
  name: Date
  nameWithType: DateTimeOffset.Date
- uid: System.DateTimeOffset.DateTime*
  parent: System.DateTimeOffset
  isExternal: false
  name: DateTime
  nameWithType: DateTimeOffset.DateTime
- uid: System.DateTimeOffset.Day*
  parent: System.DateTimeOffset
  isExternal: false
  name: Day
  nameWithType: DateTimeOffset.Day
- uid: System.DateTimeOffset.DayOfWeek*
  parent: System.DateTimeOffset
  isExternal: false
  name: DayOfWeek
  nameWithType: DateTimeOffset.DayOfWeek
- uid: System.DateTimeOffset.DayOfYear*
  parent: System.DateTimeOffset
  isExternal: false
  name: DayOfYear
  nameWithType: DateTimeOffset.DayOfYear
- uid: System.DateTimeOffset.Equals*
  parent: System.DateTimeOffset
  isExternal: false
  name: Equals
  nameWithType: DateTimeOffset.Equals
- uid: System.DateTimeOffset.EqualsExact*
  parent: System.DateTimeOffset
  isExternal: false
  name: EqualsExact
  nameWithType: DateTimeOffset.EqualsExact
- uid: System.DateTimeOffset.FromFileTime*
  parent: System.DateTimeOffset
  isExternal: false
  name: FromFileTime
  nameWithType: DateTimeOffset.FromFileTime
- uid: System.DateTimeOffset.FromUnixTimeMilliseconds*
  parent: System.DateTimeOffset
  isExternal: false
  name: FromUnixTimeMilliseconds
  nameWithType: DateTimeOffset.FromUnixTimeMilliseconds
- uid: System.DateTimeOffset.FromUnixTimeSeconds*
  parent: System.DateTimeOffset
  isExternal: false
  name: FromUnixTimeSeconds
  nameWithType: DateTimeOffset.FromUnixTimeSeconds
- uid: System.DateTimeOffset.GetHashCode*
  parent: System.DateTimeOffset
  isExternal: false
  name: GetHashCode
  nameWithType: DateTimeOffset.GetHashCode
- uid: System.DateTimeOffset.Hour*
  parent: System.DateTimeOffset
  isExternal: false
  name: Hour
  nameWithType: DateTimeOffset.Hour
- uid: System.DateTimeOffset.LocalDateTime*
  parent: System.DateTimeOffset
  isExternal: false
  name: LocalDateTime
  nameWithType: DateTimeOffset.LocalDateTime
- uid: System.DateTimeOffset.Millisecond*
  parent: System.DateTimeOffset
  isExternal: false
  name: Millisecond
  nameWithType: DateTimeOffset.Millisecond
- uid: System.DateTimeOffset.Minute*
  parent: System.DateTimeOffset
  isExternal: false
  name: Minute
  nameWithType: DateTimeOffset.Minute
- uid: System.DateTimeOffset.Month*
  parent: System.DateTimeOffset
  isExternal: false
  name: Month
  nameWithType: DateTimeOffset.Month
- uid: System.DateTimeOffset.Now*
  parent: System.DateTimeOffset
  isExternal: false
  name: Now
  nameWithType: DateTimeOffset.Now
- uid: System.DateTimeOffset.Offset*
  parent: System.DateTimeOffset
  isExternal: false
  name: Offset
  nameWithType: DateTimeOffset.Offset
- uid: System.DateTimeOffset.op_Addition*
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Addition
  nameWithType: DateTimeOffset.op_Addition
- uid: System.DateTimeOffset.op_Equality*
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Equality
  nameWithType: DateTimeOffset.op_Equality
- uid: System.DateTimeOffset.op_GreaterThan*
  parent: System.DateTimeOffset
  isExternal: false
  name: op_GreaterThan
  nameWithType: DateTimeOffset.op_GreaterThan
- uid: System.DateTimeOffset.op_GreaterThanOrEqual*
  parent: System.DateTimeOffset
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: DateTimeOffset.op_GreaterThanOrEqual
- uid: System.DateTimeOffset.op_Implicit*
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Implicit
  nameWithType: DateTimeOffset.op_Implicit
- uid: System.DateTimeOffset.op_Inequality*
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Inequality
  nameWithType: DateTimeOffset.op_Inequality
- uid: System.DateTimeOffset.op_LessThan*
  parent: System.DateTimeOffset
  isExternal: false
  name: op_LessThan
  nameWithType: DateTimeOffset.op_LessThan
- uid: System.DateTimeOffset.op_LessThanOrEqual*
  parent: System.DateTimeOffset
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: DateTimeOffset.op_LessThanOrEqual
- uid: System.DateTimeOffset.op_Subtraction*
  parent: System.DateTimeOffset
  isExternal: false
  name: op_Subtraction
  nameWithType: DateTimeOffset.op_Subtraction
- uid: System.DateTimeOffset.Parse*
  parent: System.DateTimeOffset
  isExternal: false
  name: Parse
  nameWithType: DateTimeOffset.Parse
- uid: System.DateTimeOffset.ParseExact*
  parent: System.DateTimeOffset
  isExternal: false
  name: ParseExact
  nameWithType: DateTimeOffset.ParseExact
- uid: System.DateTimeOffset.Second*
  parent: System.DateTimeOffset
  isExternal: false
  name: Second
  nameWithType: DateTimeOffset.Second
- uid: System.DateTimeOffset.Subtract*
  parent: System.DateTimeOffset
  isExternal: false
  name: Subtract
  nameWithType: DateTimeOffset.Subtract
- uid: System.DateTimeOffset.System#IComparable#CompareTo*
  parent: System.DateTimeOffset
  isExternal: false
  name: System.IComparable.CompareTo
  nameWithType: DateTimeOffset.System.IComparable.CompareTo
- uid: System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*
  parent: System.DateTimeOffset
  isExternal: false
  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
  nameWithType: DateTimeOffset.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
- uid: System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.DateTimeOffset
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: DateTimeOffset.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.DateTimeOffset.Ticks*
  parent: System.DateTimeOffset
  isExternal: false
  name: Ticks
  nameWithType: DateTimeOffset.Ticks
- uid: System.DateTimeOffset.TimeOfDay*
  parent: System.DateTimeOffset
  isExternal: false
  name: TimeOfDay
  nameWithType: DateTimeOffset.TimeOfDay
- uid: System.DateTimeOffset.ToFileTime*
  parent: System.DateTimeOffset
  isExternal: false
  name: ToFileTime
  nameWithType: DateTimeOffset.ToFileTime
- uid: System.DateTimeOffset.ToLocalTime*
  parent: System.DateTimeOffset
  isExternal: false
  name: ToLocalTime
  nameWithType: DateTimeOffset.ToLocalTime
- uid: System.DateTimeOffset.ToOffset*
  parent: System.DateTimeOffset
  isExternal: false
  name: ToOffset
  nameWithType: DateTimeOffset.ToOffset
- uid: System.DateTimeOffset.ToString*
  parent: System.DateTimeOffset
  isExternal: false
  name: ToString
  nameWithType: DateTimeOffset.ToString
- uid: System.DateTimeOffset.ToUniversalTime*
  parent: System.DateTimeOffset
  isExternal: false
  name: ToUniversalTime
  nameWithType: DateTimeOffset.ToUniversalTime
- uid: System.DateTimeOffset.ToUnixTimeMilliseconds*
  parent: System.DateTimeOffset
  isExternal: false
  name: ToUnixTimeMilliseconds
  nameWithType: DateTimeOffset.ToUnixTimeMilliseconds
- uid: System.DateTimeOffset.ToUnixTimeSeconds*
  parent: System.DateTimeOffset
  isExternal: false
  name: ToUnixTimeSeconds
  nameWithType: DateTimeOffset.ToUnixTimeSeconds
- uid: System.DateTimeOffset.TryParse*
  parent: System.DateTimeOffset
  isExternal: false
  name: TryParse
  nameWithType: DateTimeOffset.TryParse
- uid: System.DateTimeOffset.TryParseExact*
  parent: System.DateTimeOffset
  isExternal: false
  name: TryParseExact
  nameWithType: DateTimeOffset.TryParseExact
- uid: System.DateTimeOffset.UtcDateTime*
  parent: System.DateTimeOffset
  isExternal: false
  name: UtcDateTime
  nameWithType: DateTimeOffset.UtcDateTime
- uid: System.DateTimeOffset.UtcNow*
  parent: System.DateTimeOffset
  isExternal: false
  name: UtcNow
  nameWithType: DateTimeOffset.UtcNow
- uid: System.DateTimeOffset.UtcTicks*
  parent: System.DateTimeOffset
  isExternal: false
  name: UtcTicks
  nameWithType: DateTimeOffset.UtcTicks
- uid: System.DateTimeOffset.Year*
  parent: System.DateTimeOffset
  isExternal: false
  name: Year
  nameWithType: DateTimeOffset.Year
