### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.Capture
  id: Capture
  children:
  - System.Text.RegularExpressions.Capture.Index
  - System.Text.RegularExpressions.Capture.Length
  - System.Text.RegularExpressions.Capture.ToString
  - System.Text.RegularExpressions.Capture.Value
  langs:
  - csharp
  name: Capture
  nameWithType: Capture
  fullName: System.Text.RegularExpressions.Capture
  type: Class
  summary: Represents the results from a single successful subexpression capture.
  syntax:
    content: public class Capture
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Capture.Index
  id: Index
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  name: Index
  nameWithType: Capture.Index
  fullName: System.Text.RegularExpressions.Capture.Index
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: The position in the original string where the first character of the captured substring is found.
  syntax:
    content: public int Index { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Text.RegularExpressions.Capture.Index*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Capture.Length
  id: Length
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  name: Length
  nameWithType: Capture.Length
  fullName: System.Text.RegularExpressions.Capture.Length
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets the length of the captured substring.
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Text.RegularExpressions.Capture.Length*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Capture.ToString
  id: ToString
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  name: ToString()
  nameWithType: Capture.ToString()
  fullName: System.Text.RegularExpressions.Capture.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Retrieves the captured substring from the input string by calling the <xref:System.Text.RegularExpressions.Capture.Value*> property.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Capture.ToString*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Text.RegularExpressions.Capture.Value
  id: Value
  parent: System.Text.RegularExpressions.Capture
  langs:
  - csharp
  name: Value
  nameWithType: Capture.Value
  fullName: System.Text.RegularExpressions.Capture.Value
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets the captured substring from the input string.
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Text.RegularExpressions.Capture.Value*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Text.RegularExpressions.Capture.Index
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Index
  nameWithType: Capture.Index
  fullName: System.Text.RegularExpressions.Capture.Index
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.RegularExpressions.Capture.Length
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Length
  nameWithType: Capture.Length
  fullName: System.Text.RegularExpressions.Capture.Length
- uid: System.Text.RegularExpressions.Capture.ToString
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: ToString()
  nameWithType: Capture.ToString()
  fullName: System.Text.RegularExpressions.Capture.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.Capture.Value
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Value
  nameWithType: Capture.Value
  fullName: System.Text.RegularExpressions.Capture.Value
- uid: System.Text.RegularExpressions.Capture.Index*
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Index
  nameWithType: Capture.Index
- uid: System.Text.RegularExpressions.Capture.Length*
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Length
  nameWithType: Capture.Length
- uid: System.Text.RegularExpressions.Capture.ToString*
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: ToString
  nameWithType: Capture.ToString
- uid: System.Text.RegularExpressions.Capture.Value*
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Value
  nameWithType: Capture.Value
