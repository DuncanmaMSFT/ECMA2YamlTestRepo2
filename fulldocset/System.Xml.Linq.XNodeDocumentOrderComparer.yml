### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.XNodeDocumentOrderComparer
  id: XNodeDocumentOrderComparer
  children:
  - System.Xml.Linq.XNodeDocumentOrderComparer.#ctor
  - System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)
  langs:
  - csharp
  name: XNodeDocumentOrderComparer
  nameWithType: XNodeDocumentOrderComparer
  fullName: System.Xml.Linq.XNodeDocumentOrderComparer
  type: Class
  summary: Contains functionality to compare nodes for their document order. This class cannot be inherited.
  remarks: "This class implements `IComparer` and `IComparer<XNode>`.  \n  \n We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method. This class is used internally by that method."
  syntax:
    content: 'public sealed class XNodeDocumentOrderComparer : System.Collections.Generic.IComparer<System.Xml.Linq.XNode>, System.Collections.IComparer'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer<System.Xml.Linq.XNode>
  - System.Collections.IComparer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Linq\XNodeDocumentOrderComparer.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Linq/XNodeDocumentOrderComparer.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Linq.XNodeDocumentOrderComparer.#ctor
  id: '#ctor'
  parent: System.Xml.Linq.XNodeDocumentOrderComparer
  langs:
  - csharp
  name: XNodeDocumentOrderComparer()
  nameWithType: XNodeDocumentOrderComparer.XNodeDocumentOrderComparer()
  fullName: System.Xml.Linq.XNodeDocumentOrderComparer.XNodeDocumentOrderComparer()
  type: Constructor
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Initializes a new instance of the <xref href="System.Xml.Linq.XNodeDocumentOrderComparer"></xref> class.
  remarks: We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method. This class is used internally by that method.
  example:
  - "The following example uses of this class to compare the document order for two nodes.  \n  \n```c#  \n  \n                XElement xmlTree = new XElement(\"Root\",  \n    new XText(\"Text content.\"),  \n    new XElement(\"Child1\", \"child1 content\"),  \n    new XElement(\"Child2\", \"child2 content\"),  \n    new XElement(\"Child3\", \"child3 content\"),  \n    new XText(\"More text content.\"),  \n    new XElement(\"Child4\", \"child4 content\"),  \n    new XElement(\"Child5\", \"child5 content\")  \n);  \nXElement child3 = xmlTree.Element(\"Child3\");  \nXElement child5 = xmlTree.Element(\"Child5\");  \nXNodeDocumentOrderComparer documentOrderComparer = new XNodeDocumentOrderComparer();  \nint val = documentOrderComparer.Compare(child3, child5);  \nif (val == 0)  \n    Console.WriteLine(\"Child3 is same as Child5\");  \nelse if (val < 0)  \n    Console.WriteLine(\"Child3 is before Child5\");  \nelse  \n    Console.WriteLine(\"Child3 is after Child5\");  \n```  \n  \n This example produces the following output:  \n  \n```  \nChild3 is before Child5  \n```"
  syntax:
    content: public XNodeDocumentOrderComparer ();
    parameters: []
  overload: System.Xml.Linq.XNodeDocumentOrderComparer.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Linq\XNodeDocumentOrderComparer.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Linq/XNodeDocumentOrderComparer.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  id: Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNodeDocumentOrderComparer
  langs:
  - csharp
  name: Compare(XNode,XNode)
  nameWithType: XNodeDocumentOrderComparer.Compare(XNode,XNode)
  fullName: System.Xml.Linq.XNodeDocumentOrderComparer.Compare(XNode,XNode)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Compares two nodes to determine their relative document order.
  remarks: We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method. This class is used internally by that method.
  example:
  - "The following example uses this class to compare document order for two nodes.  \n  \n```c#  \n  \n                XElement xmlTree = new XElement(\"Root\",  \n    new XText(\"Text content.\"),  \n    new XElement(\"Child1\", \"child1 content\"),  \n    new XElement(\"Child2\", \"child2 content\"),  \n    new XElement(\"Child3\", \"child3 content\"),  \n    new XText(\"More text content.\"),  \n    new XElement(\"Child4\", \"child4 content\"),  \n    new XElement(\"Child5\", \"child5 content\")  \n);  \nXElement child3 = xmlTree.Element(\"Child3\");  \nXElement child5 = xmlTree.Element(\"Child5\");  \nXNodeDocumentOrderComparer documentOrderComparer = new XNodeDocumentOrderComparer();  \nint val = documentOrderComparer.Compare(child3, child5);  \nif (val == 0)  \n    Console.WriteLine(\"Child3 is same as Child5\");  \nelse if (val < 0)  \n    Console.WriteLine(\"Child3 is before Child5\");  \nelse  \n    Console.WriteLine(\"Child3 is after Child5\");  \n```  \n  \n This example produces the following output:  \n  \n```  \nChild3 is before Child5  \n```"
  syntax:
    content: public int Compare (System.Xml.Linq.XNode x, System.Xml.Linq.XNode y);
    parameters:
    - id: x
      type: System.Xml.Linq.XNode
      description: The first <xref href="System.Xml.Linq.XNode"></xref> to compare.
    - id: y
      type: System.Xml.Linq.XNode
      description: The second <xref href="System.Xml.Linq.XNode"></xref> to compare.
    return:
      type: System.Int32
      description: An <xref href="System.Int32"></xref> that contains 0 if the nodes are equal; -1 if <code>x</code> is before <code>y</code>; 1 if <code>x</code> is after <code>y</code>.
  overload: System.Xml.Linq.XNodeDocumentOrderComparer.Compare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The two nodes do not share a common ancestor.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Linq\XNodeDocumentOrderComparer.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Linq/XNodeDocumentOrderComparer.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)
  id: System#Collections#IComparer#Compare(System.Object,System.Object)
  isEii: true
  parent: System.Xml.Linq.XNodeDocumentOrderComparer
  langs:
  - csharp
  name: IComparer.Compare(Object,Object)
  nameWithType: XNodeDocumentOrderComparer.IComparer.Compare(Object,Object)
  fullName: System.Xml.Linq.XNodeDocumentOrderComparer.IComparer.Compare(Object,Object)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Compares two nodes to determine their relative document order.
  remarks: We recommend that instead of using this class directly, you use the <xref:System.Xml.Linq.Extensions.InDocumentOrder%2A> method. This class is used internally by that method.
  syntax:
    content: int IComparer.Compare (object x, object y);
    parameters:
    - id: x
      type: System.Object
      description: The first <xref href="System.Xml.Linq.XNode"></xref> to compare.
    - id: y
      type: System.Object
      description: The second <xref href="System.Xml.Linq.XNode"></xref> to compare.
    return:
      type: System.Int32
      description: An <xref href="System.Int32"></xref> that contains 0 if the nodes are equal; -1 if <code>x</code> is before <code>y</code>; 1 if <code>x</code> is after <code>y</code>.
  overload: System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The two nodes do not share a common ancestor.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The two nodes are not derived from <xref href="System.Xml.Linq.XNode"></xref>.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Linq\XNodeDocumentOrderComparer.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Linq/XNodeDocumentOrderComparer.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Xml.Linq.XNodeDocumentOrderComparer.#ctor
  parent: System.Xml.Linq.XNodeDocumentOrderComparer
  isExternal: false
  name: XNodeDocumentOrderComparer()
  nameWithType: XNodeDocumentOrderComparer.XNodeDocumentOrderComparer()
  fullName: System.Xml.Linq.XNodeDocumentOrderComparer.XNodeDocumentOrderComparer()
- uid: System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  parent: System.Xml.Linq.XNodeDocumentOrderComparer
  isExternal: false
  name: Compare(XNode,XNode)
  nameWithType: XNodeDocumentOrderComparer.Compare(XNode,XNode)
  fullName: System.Xml.Linq.XNodeDocumentOrderComparer.Compare(XNode,XNode)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Linq.XNode
  parent: System.Xml.Linq
  isExternal: false
  name: XNode
  nameWithType: XNode
  fullName: System.Xml.Linq.XNode
- uid: System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)
  parent: System.Xml.Linq.XNodeDocumentOrderComparer
  isExternal: false
  name: IComparer.Compare(Object,Object)
  nameWithType: XNodeDocumentOrderComparer.IComparer.Compare(Object,Object)
  fullName: System.Xml.Linq.XNodeDocumentOrderComparer.IComparer.Compare(Object,Object)
- uid: System.Xml.Linq.XNodeDocumentOrderComparer.#ctor*
  parent: System.Xml.Linq.XNodeDocumentOrderComparer
  isExternal: false
  name: XNodeDocumentOrderComparer
  nameWithType: XNodeDocumentOrderComparer.XNodeDocumentOrderComparer
- uid: System.Xml.Linq.XNodeDocumentOrderComparer.Compare*
  parent: System.Xml.Linq.XNodeDocumentOrderComparer
  isExternal: false
  name: Compare
  nameWithType: XNodeDocumentOrderComparer.Compare
- uid: System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare*
  parent: System.Xml.Linq.XNodeDocumentOrderComparer
  isExternal: false
  name: System.Collections.IComparer.Compare
  nameWithType: XNodeDocumentOrderComparer.System.Collections.IComparer.Compare
