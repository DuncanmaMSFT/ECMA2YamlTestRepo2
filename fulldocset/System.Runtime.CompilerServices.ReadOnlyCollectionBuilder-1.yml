### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  id: ReadOnlyCollectionBuilder`1
  children:
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Int32)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Add(`0)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Capacity
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Clear
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Contains(`0)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.CopyTo(`0[],System.Int32)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Count
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.GetEnumerator
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.IndexOf(`0)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Insert(System.Int32,`0)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Item(System.Int32)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Remove(`0)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.RemoveAt(System.Int32)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse(System.Int32,System.Int32)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#IsSynchronized
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#SyncRoot
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IEnumerable#GetEnumerator
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Add(System.Object)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Contains(System.Object)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IndexOf(System.Object)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsFixedSize
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsReadOnly
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Item(System.Int32)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Remove(System.Object)
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToArray
  - System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToReadOnlyCollection
  langs:
  - csharp
  name: ReadOnlyCollectionBuilder<T>
  nameWithType: ReadOnlyCollectionBuilder<T>
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>
  type: Class
  summary: The builder for read only collection.
  syntax:
    content: 'public sealed class ReadOnlyCollectionBuilder<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.IList'
    typeParameters:
    - id: T
      description: The type of the collection element.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<T>
  - System.Collections.Generic.IEnumerable<T>
  - System.Collections.Generic.IList<T>
  - System.Collections.IList
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor
  id: '#ctor'
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: ReadOnlyCollectionBuilder<T>()
  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Constructs a <code>ReadOnlyCollectionBuilder</code>.
  syntax:
    content: public ReadOnlyCollectionBuilder ();
    parameters: []
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: ReadOnlyCollectionBuilder<T>(IEnumerable<T>)
  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>(IEnumerable<T>)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>(IEnumerable<T>)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Constructs a <code>ReadOnlyCollectionBuilder</code>, copying contents of the given collection.
  syntax:
    content: public ReadOnlyCollectionBuilder (System.Collections.Generic.IEnumerable<T> collection);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable`1
      description: Collection to copy elements from.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: ReadOnlyCollectionBuilder<T>(Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>(Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Constructs a <code>ReadOnlyCollectionBuilder</code> with a given initial capacity. The contents are empty but builder will have reserved room for the given number of elements before any reallocations are required.
  syntax:
    content: public ReadOnlyCollectionBuilder (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: Initial capacity.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Add(`0)
  id: Add(`0)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: Add(T)
  nameWithType: ReadOnlyCollectionBuilder<T>.Add(T)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Add(T)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Adds an item to the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
  syntax:
    content: public void Add (T item);
    parameters:
    - id: item
      type: T
      description: The object to add to the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Add*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Capacity
  id: Capacity
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: Capacity
  nameWithType: ReadOnlyCollectionBuilder<T>.Capacity
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Capacity
  type: Property
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Gets and sets the capacity of this <code>ReadOnlyCollectionBuilder</code>.
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: The capacity of this <code>ReadOnlyCollectionBuilder.</code>
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Capacity*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Clear
  id: Clear
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: Clear()
  nameWithType: ReadOnlyCollectionBuilder<T>.Clear()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Clear()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Removes all items from the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Clear*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Contains(`0)
  id: Contains(`0)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: Contains(T)
  nameWithType: ReadOnlyCollectionBuilder<T>.Contains(T)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Contains(T)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Determines whether the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref> contains a specific value
  syntax:
    content: public bool Contains (T item);
    parameters:
    - id: item
      type: T
      description: the object to locate in the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
    return:
      type: System.Boolean
      description: true if item is found in the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>; otherwise, false.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Contains*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: CopyTo(T[],Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.CopyTo(T[],Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.CopyTo(T[],Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Copies the elements of the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref> to an <xref href="System.Array"></xref>, starting at particular <xref href="System.Array"></xref> index.
  syntax:
    content: public void CopyTo (T[] array, int arrayIndex);
    parameters:
    - id: array
      type: T[]
      description: The one-dimensional <xref href="System.Array"></xref> that is the destination of the elements copied from <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in array at which copying begins.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.CopyTo*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Count
  id: Count
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: Count
  nameWithType: ReadOnlyCollectionBuilder<T>.Count
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Count
  type: Property
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Returns number of elements in the <code>ReadOnlyCollectionBuilder</code>.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: The number of elements in the <code>ReadOnlyCollectionBuilder</code>.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Count*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ReadOnlyCollectionBuilder<T>.GetEnumerator()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.GetEnumerator()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Returns an enumerator that iterates through the collection.
  syntax:
    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator`1
      description: A <xref href="stem.Collections.Generic.IEnumerator%601"></xref> that can be used to iterate through the collection.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: IndexOf(T)
  nameWithType: ReadOnlyCollectionBuilder<T>.IndexOf(T)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IndexOf(T)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Returns the index of the first occurrence of a given value in the builder.
  syntax:
    content: public int IndexOf (T item);
    parameters:
    - id: item
      type: T
      description: An item to search for.
    return:
      type: System.Int32
      description: The index of the first occurrence of an item.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.IndexOf*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: Insert(Int32,T)
  nameWithType: ReadOnlyCollectionBuilder<T>.Insert(Int32,T)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Insert(Int32,T)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Inserts an item to the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref> at the specified index.
  syntax:
    content: public void Insert (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which item should be inserted.
    - id: item
      type: T
      description: The object to insert into the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Insert*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.Item(Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Item(Int32)
  type: Property
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Gets or sets the element at the specified index.
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: T
      description: The element at the specified index.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Item*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Remove(`0)
  id: Remove(`0)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: Remove(T)
  nameWithType: ReadOnlyCollectionBuilder<T>.Remove(T)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Remove(T)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Removes the first occurrence of a specific object from the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
  syntax:
    content: public bool Remove (T item);
    parameters:
    - id: item
      type: T
      description: The object to remove from the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
    return:
      type: System.Boolean
      description: true if item was successfully removed from the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>; otherwise, false. This method also returns false if item is not found in the original <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Remove*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.RemoveAt(Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Removes the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref> item at the specified index.
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.RemoveAt*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse
  id: Reverse
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: Reverse()
  nameWithType: ReadOnlyCollectionBuilder<T>.Reverse()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Reverse()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Reverses the order of the elements in the entire <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
  syntax:
    content: public void Reverse ();
    parameters: []
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse(System.Int32,System.Int32)
  id: Reverse(System.Int32,System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: Reverse(Int32,Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.Reverse(Int32,Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Reverse(Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Reverses the order of the elements in the specified range.
  syntax:
    content: public void Reverse (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based starting index of the range to reverse.
    - id: count
      type: System.Int32
      description: The number of elements in the range to reverse.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  id: System#Collections#Generic#ICollection{T}#IsReadOnly
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: ICollection<T>.IsReadOnly
  nameWithType: ReadOnlyCollectionBuilder<T>.ICollection<T>.IsReadOnly
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ICollection<T>.IsReadOnly
  type: Property
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Gets a value indicating whether the <xref href="stem.Collections.Generic.ICollection%601"></xref> is read-only.
  remarks: A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.
  syntax:
    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="stem.Collections.Generic.ICollection%601"></xref> is read-only; otherwise, `false`.'
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#Generic#ICollection<T>#IsReadOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: ICollection.CopyTo(Array,Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.ICollection.CopyTo(Array,Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Copies the elements of the <xref href="stem.Collections.Generic.ICollection%601"></xref> to an array, starting at the specified array index.
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: The one-dimensional array that is the destination of the elements copied from <xref href="stem.Collections.Generic.ICollection%601"></xref>. The array must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in <code>array</code> at which copying begins.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#CopyTo*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBuilder<T>.ICollection.IsSynchronized
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Gets a value indicating whether access to the <xref href="System.Collections.ICollection"></xref> is synchronized (thread safe).
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: '`true` if access to the <xref href="System.Collections.ICollection"></xref> is synchronized (thread safe); otherwise, `false`.'
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBuilder<T>.ICollection.SyncRoot
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Gets an object that can be used to synchronize access to the <xref href="System.Collections.ICollection"></xref>.
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the <xref href="System.Collections.ICollection"></xref>.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#SyncRoot*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyCollectionBuilder<T>.IEnumerable.GetEnumerator()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Returns an enumerator that iterates through the collection.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator"></xref> that can be used to iterate through the collection.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: IList.Add(Object)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.Add(Object)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.Add(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Adds an item to the <xref href="System.Collections.IList"></xref>.
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to add to the <xref href="System.Collections.IList"></xref>.
    return:
      type: System.Int32
      description: The position into which the new element was inserted.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Add*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: IList.Contains(Object)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.Contains(Object)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Determines whether the <xref href="System.Collections.IList"></xref> contains a specific value.
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <xref href="System.Object"></xref> to locate in the <xref href="System.Collections.IList"></xref>.
    return:
      type: System.Boolean
      description: '`true` if <code>item</code> is found in the <xref href="System.Collections.IList"></xref>; otherwise, `false`.'
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Contains*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: IList.IndexOf(Object)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.IndexOf(Object)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Determines the index of a specific item in the <xref href="System.Collections.IList"></xref>.
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to locate in the <xref href="System.Collections.IList"></xref>.
    return:
      type: System.Int32
      description: The index of <code>item</code> if found in the list; otherwise, –1.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IndexOf*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: IList.Insert(Int32,Object)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.Insert(Int32,Object)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Inserts an item to the <xref href="System.Collections.IList"></xref> at the specified index.
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which <code>item</code> should be inserted.
    - id: value
      type: System.Object
      description: The object to insert into the <xref href="System.Collections.IList"></xref>.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Insert*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: IList.IsFixedSize
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.IsFixedSize
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Gets a value indicating whether the <xref href="System.Collections.IList"></xref> has a fixed size.
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Collections.IList"></xref> has a fixed size; otherwise, `false`.'
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsFixedSize*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: IList.IsReadOnly
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.IsReadOnly
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Gets a value indicating whether the <xref href="System.Collections.IList"></xref> is read-only.
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Collections.IList"></xref> is read-only; otherwise, `false`.'
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsReadOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: IList.Item(Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.Item(Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Gets or sets the element at the specified index.
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: System.Object
      description: The element at the specified index.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Item*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: IList.Remove(Object)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.Remove(Object)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Removes the first occurrence of a specific object from the <xref href="System.Collections.IList"></xref>.
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to remove from the <xref href="System.Collections.IList"></xref>.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Remove*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToArray
  id: ToArray
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: ToArray()
  nameWithType: ReadOnlyCollectionBuilder<T>.ToArray()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ToArray()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Copies the elements of the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref> to a new array.
  syntax:
    content: public T[] ToArray ();
    parameters: []
    return:
      type: T[]
      description: An array containing copies of the elements of the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToArray*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToReadOnlyCollection
  id: ToReadOnlyCollection
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  langs:
  - csharp
  name: ToReadOnlyCollection()
  nameWithType: ReadOnlyCollectionBuilder<T>.ToReadOnlyCollection()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ToReadOnlyCollection()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Runtime.CompilerServices
  summary: Creates a <xref href="stem.Collections.ObjectModel.ReadOnlyCollection%601"></xref> containing all of the elements of the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref>, avoiding copying the elements to the new array if possible. Resets the <xref href="stem.Runtime.CompilerServices.ReadOnlyCollectionBuilder%601"></xref> after the <xref href="stem.Collections.ObjectModel.ReadOnlyCollection%601"></xref> has been created.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<T> ToReadOnlyCollection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection`1
      description: A new instance of <xref href="stem.Collections.ObjectModel.ReadOnlyCollection%601"></xref>.
  overload: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToReadOnlyCollection*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ReadOnlyCollectionBuilder`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ReadOnlyCollectionBuilder`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ReadOnlyCollectionBuilder<T>()
  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>()
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ReadOnlyCollectionBuilder<T>(IEnumerable<T>)
  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>(IEnumerable<T>)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor(System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ReadOnlyCollectionBuilder<T>(Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>(Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Add(`0)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Add(T)
  nameWithType: ReadOnlyCollectionBuilder<T>.Add(T)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Add(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Capacity
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Capacity
  nameWithType: ReadOnlyCollectionBuilder<T>.Capacity
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Capacity
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Clear
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Clear()
  nameWithType: ReadOnlyCollectionBuilder<T>.Clear()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Clear()
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Contains(`0)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Contains(T)
  nameWithType: ReadOnlyCollectionBuilder<T>.Contains(T)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Contains(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.CopyTo(`0[],System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: CopyTo(T[],Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.CopyTo(T[],Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.CopyTo(T[],Int32)
- uid: T[]
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  spec.csharp:
  - uid: T
    name: T
    nameWithType: T
    fullName: T[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Count
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Count
  nameWithType: ReadOnlyCollectionBuilder<T>.Count
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Count
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.GetEnumerator
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: ReadOnlyCollectionBuilder<T>.GetEnumerator()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.IndexOf(`0)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IndexOf(T)
  nameWithType: ReadOnlyCollectionBuilder<T>.IndexOf(T)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IndexOf(T)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Insert(System.Int32,`0)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Insert(Int32,T)
  nameWithType: ReadOnlyCollectionBuilder<T>.Insert(Int32,T)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Insert(Int32,T)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Item(System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Item(Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.Item(Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Item(Int32)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Remove(`0)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Remove(T)
  nameWithType: ReadOnlyCollectionBuilder<T>.Remove(T)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Remove(T)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.RemoveAt(System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.RemoveAt(Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.RemoveAt(Int32)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Reverse()
  nameWithType: ReadOnlyCollectionBuilder<T>.Reverse()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Reverse()
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse(System.Int32,System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Reverse(Int32,Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.Reverse(Int32,Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.Reverse(Int32,Int32)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ICollection<T>.IsReadOnly
  nameWithType: ReadOnlyCollectionBuilder<T>.ICollection<T>.IsReadOnly
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ICollection<T>.IsReadOnly
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ICollection.CopyTo(Array,Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.ICollection.CopyTo(Array,Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#IsSynchronized
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBuilder<T>.ICollection.IsSynchronized
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ICollection.IsSynchronized
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#SyncRoot
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBuilder<T>.ICollection.SyncRoot
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ICollection.SyncRoot
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyCollectionBuilder<T>.IEnumerable.GetEnumerator()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Add(System.Object)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IList.Add(Object)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.Add(Object)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.Add(Object)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Contains(System.Object)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IList.Contains(Object)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.Contains(Object)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.Contains(Object)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IndexOf(System.Object)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IList.IndexOf(Object)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.IndexOf(Object)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.IndexOf(Object)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IList.Insert(Int32,Object)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.Insert(Int32,Object)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.Insert(Int32,Object)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsFixedSize
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IList.IsFixedSize
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.IsFixedSize
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.IsFixedSize
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsReadOnly
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IList.IsReadOnly
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.IsReadOnly
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.IsReadOnly
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Item(System.Int32)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IList.Item(Int32)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.Item(Int32)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.Item(Int32)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Remove(System.Object)
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IList.Remove(Object)
  nameWithType: ReadOnlyCollectionBuilder<T>.IList.Remove(Object)
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.IList.Remove(Object)
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToArray
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ToArray()
  nameWithType: ReadOnlyCollectionBuilder<T>.ToArray()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ToArray()
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToReadOnlyCollection
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ToReadOnlyCollection()
  nameWithType: ReadOnlyCollectionBuilder<T>.ToReadOnlyCollection()
  fullName: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder<T>.ToReadOnlyCollection()
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.#ctor*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ReadOnlyCollectionBuilder<T>
  nameWithType: ReadOnlyCollectionBuilder<T>.ReadOnlyCollectionBuilder<T>
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Add*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Add
  nameWithType: ReadOnlyCollectionBuilder<T>.Add
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Capacity*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Capacity
  nameWithType: ReadOnlyCollectionBuilder<T>.Capacity
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Clear*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Clear
  nameWithType: ReadOnlyCollectionBuilder<T>.Clear
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Contains*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Contains
  nameWithType: ReadOnlyCollectionBuilder<T>.Contains
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.CopyTo*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: CopyTo
  nameWithType: ReadOnlyCollectionBuilder<T>.CopyTo
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Count*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Count
  nameWithType: ReadOnlyCollectionBuilder<T>.Count
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.GetEnumerator*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: GetEnumerator
  nameWithType: ReadOnlyCollectionBuilder<T>.GetEnumerator
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.IndexOf*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: IndexOf
  nameWithType: ReadOnlyCollectionBuilder<T>.IndexOf
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Insert*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Insert
  nameWithType: ReadOnlyCollectionBuilder<T>.Insert
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Item*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Item
  nameWithType: ReadOnlyCollectionBuilder<T>.Item
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Remove*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Remove
  nameWithType: ReadOnlyCollectionBuilder<T>.Remove
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.RemoveAt*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: RemoveAt
  nameWithType: ReadOnlyCollectionBuilder<T>.RemoveAt
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.Reverse*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: Reverse
  nameWithType: ReadOnlyCollectionBuilder<T>.Reverse
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#Generic#ICollection<T>#IsReadOnly*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#CopyTo*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.CopyTo
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#IsSynchronized*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.IsSynchronized
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#ICollection#SyncRoot*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.ICollection.SyncRoot
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Add*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Add
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Contains*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Contains
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IndexOf*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.IndexOf
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Insert*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Insert
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsFixedSize*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.IsFixedSize
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#IsReadOnly*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.IsReadOnly
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Item*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Item
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.System#Collections#IList#Remove*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: ReadOnlyCollectionBuilder<T>.System.Collections.IList.Remove
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToArray*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ToArray
  nameWithType: ReadOnlyCollectionBuilder<T>.ToArray
- uid: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1.ToReadOnlyCollection*
  parent: System.Runtime.CompilerServices.ReadOnlyCollectionBuilder`1
  isExternal: false
  name: ToReadOnlyCollection
  nameWithType: ReadOnlyCollectionBuilder<T>.ToReadOnlyCollection
