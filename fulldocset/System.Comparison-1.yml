### YamlMime:ManagedReference
items:
- uid: System.Comparison`1
  id: Comparison`1
  langs:
  - csharp
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  type: Delegate
  summary: Represents the method that compares two objects of the same type.
  remarks: This delegate is used by the [Sort<T\>(T\<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29> method overload of the <xref:System.Array> class and the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload of the <xref:System.Collections.Generic.List%601> class to sort the elements of an array or list.
  example:
  - "The following code example demonstrates the use of the Comparison(T) delegate with the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.  \n  \n The code example defines an alternative comparison method for strings, named `CompareDinosByLength`. This method works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null. Second, the string lengths are compared, and the longer string is deemed to be greater. Third, if the lengths are equal, ordinary string comparison is used.  \n  \n A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order. The list also includes an empty string and a null reference. The list is displayed, sorted using a Comparison(T) generic delegate representing the `CompareDinosByLength` method, and displayed again.  \n  \n [!code-cpp[List`1_SortComparison#1](~/add/codesnippet/cpp/t-system.comparison`1_1.cpp)]\n [!code-vb[List`1_SortComparison#1](~/add/codesnippet/visualbasic/t-system.comparison`1_1.vb)]\n [!code-cs[List`1_SortComparison#1](~/add/codesnippet/csharp/t-system.comparison`1_1.cs)]  \n  \n The following example uses the Comparison(T) delegate to sort the elements of a collection of `CityInfo` objects. `CityInfo` is an application-defined class that contains information about a city and its population. The example defines three methods, `CompareByName`, `CompareByPopulation`, and `CompareByNames`, that offer three different ways of ordering the `CityInfo` objects. Each method is assigned to the `comparison` argument of the [Array.Sort<T\\>(T\\<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Comparison%7B%60%600%7D%29?displayProperty=fullName> method.  \n  \n [!code-cs[System.Comparison`1#1](~/add/codesnippet/csharp/t-system.comparison`1_2.cs)]\n [!code-vb[System.Comparison`1#1](~/add/codesnippet/visualbasic/t-system.comparison`1_2.vb)]"
  syntax:
    content: public delegate int Comparison<in T>(T x, T y);
    typeParameters:
    - id: T
      description: The type of the objects to compare.
  inheritance:
  - System.Object
  - System.Delegate
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Comparison`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Comparison`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
