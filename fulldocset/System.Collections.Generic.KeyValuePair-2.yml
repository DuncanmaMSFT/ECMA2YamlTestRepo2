### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.KeyValuePair`2
  id: KeyValuePair`2
  children:
  - System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)
  - System.Collections.Generic.KeyValuePair`2.Key
  - System.Collections.Generic.KeyValuePair`2.ToString
  - System.Collections.Generic.KeyValuePair`2.Value
  langs:
  - csharp
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
  type: Struct
  summary: Defines a key/value pair that can be set or retrieved.
  remarks: "The <xref:System.Collections.Generic.Dictionary%602.Enumerator.Current%2A?displayProperty=fullName> property returns an instance of this type.  \n  \n The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection. Since each element of a collection based on <xref:System.Collections.Generic.IDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is KeyValuePair(TKey,. For example:  \n  \n [!code-cpp[Generic.Dictionary#11](~/add/codesnippet/cpp/t-system.collections.gen_4_1.cpp)]\n [!code-vb[Generic.Dictionary#11](~/add/codesnippet/visualbasic/t-system.collections.gen_4_1.vb)]\n [!code-cs[Generic.Dictionary#11](~/add/codesnippet/csharp/t-system.collections.gen_4_1.cs)]  \n  \n The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection."
  example:
  - "The following code example shows how to enumerate the keys and values in a dictionary, using the KeyValuePair(TKey, structure.  \n  \n This code is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class.  \n  \n [!code-cpp[Generic.Dictionary#7](~/add/codesnippet/cpp/t-system.collections.gen_4_2.cpp)]\n [!code-cs[Generic.Dictionary#7](~/add/codesnippet/csharp/t-system.collections.gen_4_2.cs)]\n [!code-vb[Generic.Dictionary#7](~/add/codesnippet/visualbasic/t-system.collections.gen_4_2.vb)]"
  syntax:
    content: public struct KeyValuePair<TKey,TValue>
    typeParameters:
    - id: TKey
      description: The type of the key.
    - id: TValue
      description: The type of the value.
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\KeyValuePair`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/KeyValuePair`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)
  id: '#ctor(`0,`1)'
  parent: System.Collections.Generic.KeyValuePair`2
  langs:
  - csharp
  name: KeyValuePair<TKey,TValue>(TKey,TValue)
  nameWithType: KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>(TKey,TValue)
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>(TKey,TValue)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="stem.Collections.Generic.KeyValuePair%602"></xref> structure with the specified key and value.
  syntax:
    content: public KeyValuePair (TKey key, TValue value);
    parameters:
    - id: key
      type: TKey
      description: The object defined in each key/value pair.
    - id: value
      type: TValue
      description: The definition associated with <code>key</code>.
  overload: System.Collections.Generic.KeyValuePair`2.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\KeyValuePair`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/KeyValuePair`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.KeyValuePair`2.Key
  id: Key
  parent: System.Collections.Generic.KeyValuePair`2
  langs:
  - csharp
  name: Key
  nameWithType: KeyValuePair<TKey,TValue>.Key
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: Gets the key in the key/value pair.
  remarks: This property is read/only.
  example:
  - "The following code example shows how to enumerate the keys and values in a dictionary, using the <xref:System.Collections.Generic.KeyValuePair%602> structure.  \n  \n This code is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class.  \n  \n [!code-cpp[Generic.Dictionary#7](~/add/codesnippet/cpp/p-system.collections.gen_2_1.cpp)]\n [!code-cs[Generic.Dictionary#7](~/add/codesnippet/csharp/p-system.collections.gen_2_1.cs)]\n [!code-vb[Generic.Dictionary#7](~/add/codesnippet/visualbasic/p-system.collections.gen_2_1.vb)]"
  syntax:
    content: public TKey Key { get; }
    return:
      type: TKey
      description: A <code>TKey</code> that is the key of the <xref href="stem.Collections.Generic.KeyValuePair%602"></xref>.
  overload: System.Collections.Generic.KeyValuePair`2.Key*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\KeyValuePair`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/KeyValuePair`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.KeyValuePair`2.ToString
  id: ToString
  parent: System.Collections.Generic.KeyValuePair`2
  langs:
  - csharp
  name: ToString()
  nameWithType: KeyValuePair<TKey,TValue>.ToString()
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: Returns a string representation of the <xref href="stem.Collections.Generic.KeyValuePair%602"></xref>, using the string representations of the key and value.
  remarks: "The string representation consists of the string representations of the key and value, separated by a comma and a space, and enclosed in square brackets. For example, the ToString method for a <xref:System.Collections.Generic.KeyValuePair%602> structure with the string <xref:System.Collections.Generic.KeyValuePair%602.Key%2A> \"Test\" and the integer <xref:System.Collections.Generic.KeyValuePair%602.Value%2A> 14 returns the string \"[Test, 14]\".  \n  \n> [!NOTE]\n>  This method uses the `ToString` methods provided by the key and value types. Some types do not return useful or informative values for their `ToString` methods."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string representation of the <xref href="stem.Collections.Generic.KeyValuePair%602"></xref>, which includes the string representations of the key and value.
  overload: System.Collections.Generic.KeyValuePair`2.ToString*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\KeyValuePair`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/KeyValuePair`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.KeyValuePair`2.Value
  id: Value
  parent: System.Collections.Generic.KeyValuePair`2
  langs:
  - csharp
  name: Value
  nameWithType: KeyValuePair<TKey,TValue>.Value
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: Gets the value in the key/value pair.
  remarks: This property is read/only.
  example:
  - "The following code example shows how to enumerate the keys and values in a dictionary, using the <xref:System.Collections.Generic.KeyValuePair%602> structure.  \n  \n This code is part of a larger example provided for the <xref:System.Collections.Generic.Dictionary%602> class.  \n  \n [!code-cpp[Generic.Dictionary#7](~/add/codesnippet/cpp/p-system.collections.gen_5_1.cpp)]\n [!code-cs[Generic.Dictionary#7](~/add/codesnippet/csharp/p-system.collections.gen_5_1.cs)]\n [!code-vb[Generic.Dictionary#7](~/add/codesnippet/visualbasic/p-system.collections.gen_5_1.vb)]"
  syntax:
    content: public TValue Value { get; }
    return:
      type: TValue
      description: A <code>TValue</code> that is the value of the <xref href="stem.Collections.Generic.KeyValuePair%602"></xref>.
  overload: System.Collections.Generic.KeyValuePair`2.Value*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\KeyValuePair`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/KeyValuePair`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)
  parent: System.Collections.Generic.KeyValuePair`2
  isExternal: false
  name: KeyValuePair<TKey,TValue>(TKey,TValue)
  nameWithType: KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>(TKey,TValue)
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>(TKey,TValue)
- uid: TKey
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  isExternal: true
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Collections.Generic.KeyValuePair`2.Key
  parent: System.Collections.Generic.KeyValuePair`2
  isExternal: false
  name: Key
  nameWithType: KeyValuePair<TKey,TValue>.Key
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>.Key
- uid: System.Collections.Generic.KeyValuePair`2.ToString
  parent: System.Collections.Generic.KeyValuePair`2
  isExternal: false
  name: ToString()
  nameWithType: KeyValuePair<TKey,TValue>.ToString()
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.KeyValuePair`2.Value
  parent: System.Collections.Generic.KeyValuePair`2
  isExternal: false
  name: Value
  nameWithType: KeyValuePair<TKey,TValue>.Value
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>.Value
- uid: System.Collections.Generic.KeyValuePair`2.#ctor*
  parent: System.Collections.Generic.KeyValuePair`2
  isExternal: false
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>.KeyValuePair<TKey,TValue>
- uid: System.Collections.Generic.KeyValuePair`2.Key*
  parent: System.Collections.Generic.KeyValuePair`2
  isExternal: false
  name: Key
  nameWithType: KeyValuePair<TKey,TValue>.Key
- uid: System.Collections.Generic.KeyValuePair`2.ToString*
  parent: System.Collections.Generic.KeyValuePair`2
  isExternal: false
  name: ToString
  nameWithType: KeyValuePair<TKey,TValue>.ToString
- uid: System.Collections.Generic.KeyValuePair`2.Value*
  parent: System.Collections.Generic.KeyValuePair`2
  isExternal: false
  name: Value
  nameWithType: KeyValuePair<TKey,TValue>.Value
