### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.EntitySet`1
  id: EntitySet`1
  children:
  - System.Data.Linq.EntitySet`1.#ctor
  - System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})
  - System.Data.Linq.EntitySet`1.Add(`0)
  - System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Linq.EntitySet`1.Clear
  - System.Data.Linq.EntitySet`1.Contains(`0)
  - System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)
  - System.Data.Linq.EntitySet`1.Count
  - System.Data.Linq.EntitySet`1.GetEnumerator
  - System.Data.Linq.EntitySet`1.GetNewBindingList
  - System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues
  - System.Data.Linq.EntitySet`1.IndexOf(`0)
  - System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)
  - System.Data.Linq.EntitySet`1.IsDeferred
  - System.Data.Linq.EntitySet`1.Item(System.Int32)
  - System.Data.Linq.EntitySet`1.ListChanged
  - System.Data.Linq.EntitySet`1.Load
  - System.Data.Linq.EntitySet`1.Remove(`0)
  - System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)
  - System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized
  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot
  - System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize
  - System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)
  - System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList
  langs:
  - csharp
  name: EntitySet<TEntity>
  nameWithType: EntitySet<TEntity>
  fullName: System.Data.Linq.EntitySet<TEntity>
  type: Class
  summary: Provides for deferred loading and relationship maintenance for the collection side of one-to-many and one-to-one relationships in a [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] applications.
  remarks: This class is used in combination with <xref:System.Data.Linq.EntityRef%601>.
  syntax:
    content: 'public sealed class EntitySet<TEntity> : System.Collections.Generic.ICollection<TEntity>, System.Collections.Generic.IEnumerable<TEntity>, System.Collections.Generic.IList<TEntity>, System.Collections.IList, System.ComponentModel.IListSource where TEntity : class'
    typeParameters:
    - id: TEntity
      description: The data type of the target entity.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<TEntity>
  - System.Collections.Generic.IEnumerable<TEntity>
  - System.Collections.Generic.IList<TEntity>
  - System.Collections.IList
  - System.ComponentModel.IListSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.#ctor
  id: '#ctor'
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: EntitySet<TEntity>()
  nameWithType: EntitySet<TEntity>.EntitySet<TEntity>()
  fullName: System.Data.Linq.EntitySet<TEntity>.EntitySet<TEntity>()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Initializes a new instance of the <xref href="stem.Data.Linq.EntitySet%601"></xref> class.
  syntax:
    content: public EntitySet ();
    parameters: []
  overload: System.Data.Linq.EntitySet`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})
  id: '#ctor(System.Action{`0},System.Action{`0})'
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: EntitySet<TEntity>(Action<TEntity>,Action<TEntity>)
  nameWithType: EntitySet<TEntity>.EntitySet<TEntity>(Action<TEntity>,Action<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.EntitySet<TEntity>(Action<TEntity>,Action<TEntity>)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Initializes a new instance of the <xref href="stem.Data.Linq.EntitySet%601"></xref> class while supplying handlers for add and remove operations.
  syntax:
    content: public EntitySet (Action<TEntity> onAdd, Action<TEntity> onRemove);
    parameters:
    - id: onAdd
      type: System.Action{TEntity}
      description: Delegate for <xref href="stem.Data.Linq.EntitySet%601.Add%2A"></xref>.
    - id: onRemove
      type: System.Action{TEntity}
      description: Delegate for <xref href="stem.Data.Linq.EntitySet%601.Remove%2A"></xref>.
  overload: System.Data.Linq.EntitySet`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.Add(`0)
  id: Add(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Add(TEntity)
  nameWithType: EntitySet<TEntity>.Add(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Add(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Adds an entity.
  syntax:
    content: public void Add (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The entity to add.
  overload: System.Data.Linq.EntitySet`1.Add*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: AddRange(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Adds a collection of entities.
  syntax:
    content: public void AddRange (System.Collections.Generic.IEnumerable<TEntity> collection);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{TEntity}
      description: The collection to be added.
  overload: System.Data.Linq.EntitySet`1.AddRange*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})
  id: Assign(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Assign(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.Assign(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.Assign(IEnumerable<TEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Assigns an <xref href="stem.Data.Linq.EntitySet%601"></xref> collection to another <xref href="stem.Data.Linq.EntitySet%601"></xref> collection.
  syntax:
    content: public void Assign (System.Collections.Generic.IEnumerable<TEntity> entitySource);
    parameters:
    - id: entitySource
      type: System.Collections.Generic.IEnumerable{TEntity}
      description: The collection to assign.
  overload: System.Data.Linq.EntitySet`1.Assign*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.Clear
  id: Clear
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Clear()
  nameWithType: EntitySet<TEntity>.Clear()
  fullName: System.Data.Linq.EntitySet<TEntity>.Clear()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Removes all items.
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.Linq.EntitySet`1.Clear*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.Contains(`0)
  id: Contains(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Contains(TEntity)
  nameWithType: EntitySet<TEntity>.Contains(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Contains(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Specifies whether the <xref href="stem.Data.Linq.EntitySet%601"></xref> contains a specific entity.
  syntax:
    content: public bool Contains (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The entity.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="stem.Data.Linq.EntitySet%601"></xref> contains the entity; otherwise, `false`.'
  overload: System.Data.Linq.EntitySet`1.Contains*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: CopyTo(TEntity[],Int32)
  nameWithType: EntitySet<TEntity>.CopyTo(TEntity[],Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.CopyTo(TEntity[],Int32)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Copies the <xref href="stem.Data.Linq.EntitySet%601"></xref> to an array.
  remarks: "The following C# sample shows one use of this method:  \n  \n```  \nvar customer = (from c in db.Customers  \n   where c.CustomerID == \"ALFKI\"  \n   select c).Single();  \n  \nOrder[] orderArray = new Order[customer.Orders.Count];  \n```  \n  \n customer.Orders.CopyTo(orderArray,0);In Visual Basic:  \n  \n```  \nDim customer = (From c In db.Customers _   \n   Where c.CustomerID = \"ALFKI\" _   \n   Select c).[Single]()  \n  \nDim orderArray As Order() = New Order(customer.Orders.Count - 1) {}  \ncustomer.Orders.CopyTo(orderArray, 0)  \n```"
  syntax:
    content: public void CopyTo (TEntity[] array, int arrayIndex);
    parameters:
    - id: array
      type: TEntity[]
      description: The array to copy to.
    - id: arrayIndex
      type: System.Int32
      description: The starting index in the array.
  overload: System.Data.Linq.EntitySet`1.CopyTo*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.Count
  id: Count
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Count
  nameWithType: EntitySet<TEntity>.Count
  fullName: System.Data.Linq.EntitySet<TEntity>.Count
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets the number of entities in the <xref href="stem.Data.Linq.EntitySet%601"></xref> collection.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: An integer representing the number of entities.
  overload: System.Data.Linq.EntitySet`1.Count*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: EntitySet<TEntity>.GetEnumerator()
  fullName: System.Data.Linq.EntitySet<TEntity>.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Returns an enumerator that iterates through a collection.
  syntax:
    content: public System.Collections.Generic.IEnumerator<TEntity> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{TEntity}
      description: An <xref href="stem.Collections.Generic.IEnumerator%601"></xref>.
  overload: System.Data.Linq.EntitySet`1.GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.GetNewBindingList
  id: GetNewBindingList
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: GetNewBindingList()
  nameWithType: EntitySet<TEntity>.GetNewBindingList()
  fullName: System.Data.Linq.EntitySet<TEntity>.GetNewBindingList()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Creates a new list for binding to a data source.
  syntax:
    content: public System.ComponentModel.IBindingList GetNewBindingList ();
    parameters: []
    return:
      type: System.ComponentModel.IBindingList
      description: A new <xref href="System.ComponentModel.IBindingList"></xref> for binding to a data source.
  overload: System.Data.Linq.EntitySet`1.GetNewBindingList*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues
  id: HasLoadedOrAssignedValues
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: HasLoadedOrAssignedValues
  nameWithType: EntitySet<TEntity>.HasLoadedOrAssignedValues
  fullName: System.Data.Linq.EntitySet<TEntity>.HasLoadedOrAssignedValues
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Specifies whether the <xref href="stem.Data.Linq.EntitySet%601"></xref> has loaded or assigned a value.
  remarks: "\"Loaded\" means that the data was loaded during materialization or at deferred loading. \"Assigned\" means that you have manually given the data a value."
  syntax:
    content: public bool HasLoadedOrAssignedValues { get; }
    return:
      type: System.Boolean
      description: Returns true if the <xref href="stem.Data.Linq.EntitySet%601"></xref> has either loaded or assigned a value.
  overload: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IndexOf(TEntity)
  nameWithType: EntitySet<TEntity>.IndexOf(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.IndexOf(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Returns the index of the entity.
  syntax:
    content: public int IndexOf (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The entity whose index is to be returned.
    return:
      type: System.Int32
      description: An integer representing the index.
  overload: System.Data.Linq.EntitySet`1.IndexOf*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Insert(Int32,TEntity)
  nameWithType: EntitySet<TEntity>.Insert(Int32,TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Insert(Int32,TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Inserts an entity at an index position.
  syntax:
    content: public void Insert (int index, TEntity entity);
    parameters:
    - id: index
      type: System.Int32
      description: The index representing the position at which to insert the entity.
    - id: entity
      type: TEntity
      description: The entity to be inserted.
  overload: System.Data.Linq.EntitySet`1.Insert*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.IsDeferred
  id: IsDeferred
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IsDeferred
  nameWithType: EntitySet<TEntity>.IsDeferred
  fullName: System.Data.Linq.EntitySet<TEntity>.IsDeferred
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Specifies whether this <xref href="stem.Data.Linq.EntitySet%601"></xref> has a deferred query that has not yet executed.
  syntax:
    content: public bool IsDeferred { get; }
    return:
      type: System.Boolean
      description: '`true` if a deferred query has not yet been executed; otherwise `false`.'
  overload: System.Data.Linq.EntitySet`1.IsDeferred*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: EntitySet<TEntity>.Item(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.Item(Int32)
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets or sets the element at the specified index.
  syntax:
    content: public TEntity this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the element.
    return:
      type: TEntity
      description: An <xref href="stem.Data.Linq.EntitySet%601"></xref> representing the item.
  overload: System.Data.Linq.EntitySet`1.Item*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.ListChanged
  id: ListChanged
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: ListChanged
  nameWithType: EntitySet<TEntity>.ListChanged
  fullName: System.Data.Linq.EntitySet<TEntity>.ListChanged
  type: Event
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Occurs when the contents of a list are changed.
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.Load
  id: Load
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Load()
  nameWithType: EntitySet<TEntity>.Load()
  fullName: System.Data.Linq.EntitySet<TEntity>.Load()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Loads the <xref href="stem.Data.Linq.EntitySet%601"></xref>.
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Data.Linq.EntitySet`1.Load*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.Remove(`0)
  id: Remove(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: Remove(TEntity)
  nameWithType: EntitySet<TEntity>.Remove(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Remove(TEntity)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Removes an entity.
  syntax:
    content: public bool Remove (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The entity to be removed.
    return:
      type: System.Boolean
      description: '`true` if the entity is successfully removed; otherwise, `false`.'
  overload: System.Data.Linq.EntitySet`1.Remove*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: EntitySet<TEntity>.RemoveAt(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Removes an entity at a specified index.
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The index of the entity to be removed.
  overload: System.Data.Linq.EntitySet`1.RemoveAt*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})
  id: SetSource(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: SetSource(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Sets the source of the <xref href="stem.Data.Linq.EntitySet%601"></xref>.
  syntax:
    content: public void SetSource (System.Collections.Generic.IEnumerable<TEntity> entitySource);
    parameters:
    - id: entitySource
      type: System.Collections.Generic.IEnumerable{TEntity}
      description: The source of the <xref href="stem.Data.Linq.EntitySet%601"></xref>.
  overload: System.Data.Linq.EntitySet`1.SetSource*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  id: System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: ICollection<TEntity>.IsReadOnly
  nameWithType: EntitySet<TEntity>.ICollection<TEntity>.IsReadOnly
  fullName: System.Data.Linq.EntitySet<TEntity>.ICollection<TEntity>.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.Generic.ICollection%601.IsReadOnly%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.
  syntax:
    content: bool System.Collections.Generic.ICollection<TEntity>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '`true` if the collection is read-only; otherwise, `false`.'
  overload: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection<TEntity>#IsReadOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: ICollection.CopyTo(Array,Int32)
  nameWithType: EntitySet<TEntity>.ICollection.CopyTo(Array,Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.ICollection.CopyTo%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: The array to which elements of the collection are copied.
    - id: index
      type: System.Int32
      description: The array index at which copying begins.
  overload: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: ICollection.IsSynchronized
  nameWithType: EntitySet<TEntity>.ICollection.IsSynchronized
  fullName: System.Data.Linq.EntitySet<TEntity>.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.ICollection.IsSynchronized%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: '`true` if access to the collection is synchronized (thread-safe); otherwise, `false`.'
  overload: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: ICollection.SyncRoot
  nameWithType: EntitySet<TEntity>.ICollection.SyncRoot
  fullName: System.Data.Linq.EntitySet<TEntity>.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.ICollection.SyncRoot%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the collection.
  overload: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IEnumerable.GetEnumerator()
  nameWithType: EntitySet<TEntity>.IEnumerable.GetEnumerator()
  fullName: System.Data.Linq.EntitySet<TEntity>.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.IEnumerable.GetEnumerator%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IEnumerable?displayProperty=fullName> interface.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator"></xref> object that can be used to iterate through a collection.
  overload: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IList.Add(Object)
  nameWithType: EntitySet<TEntity>.IList.Add(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.Add(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.IList.Add%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to add to the list.
    return:
      type: System.Int32
      description: The position into which the new element was inserted.
  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Add*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IList.Contains(Object)
  nameWithType: EntitySet<TEntity>.IList.Contains(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.IList.Contains%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to locate in the list.
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Object"></xref> is found in the <xref href="System.Collections.IList"></xref>; otherwise, `false`.'
  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IList.IndexOf(Object)
  nameWithType: EntitySet<TEntity>.IList.IndexOf(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.IList.IndexOf%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=fullName> interface.
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to locate in the list.
    return:
      type: System.Int32
      description: The index of <code>value</code> if found in the list; otherwise, -1.
  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IList.Insert(Int32,Object)
  nameWithType: EntitySet<TEntity>.IList.Insert(Int32,Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.IList.Insert%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: The index of the object in the list.
    - id: value
      type: System.Object
      description: The object to insert into the list.
  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IList.IsFixedSize
  nameWithType: EntitySet<TEntity>.IList.IsFixedSize
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.IList.IsFixedSize%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: '`true` if the collection has a fixed size; otherwise `false`.'
  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IList.IsReadOnly
  nameWithType: EntitySet<TEntity>.IList.IsReadOnly
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.IList.IsReadOnly%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '`true` if the collection is read-only; otherwise, `false`.'
  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IList.Item(Int32)
  nameWithType: EntitySet<TEntity>.IList.Item(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.IList.Item%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index at which to set or get the element.
    return:
      type: System.Object
      description: The element at the specified index.
  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Item*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IList.Remove(Object)
  nameWithType: EntitySet<TEntity>.IList.Remove(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.Collections.IList.Remove%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to remove from the list.
  overload: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IListSource.ContainsListCollection
  nameWithType: EntitySet<TEntity>.IListSource.ContainsListCollection
  fullName: System.Data.Linq.EntitySet<TEntity>.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.ComponentModel.IListSource.ContainsListCollection%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: '`true` if the collection is a collection of <xref href="System.Collections.IList"></xref> objects; otherwise `false`;'
  overload: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  name: IListSource.GetList()
  nameWithType: EntitySet<TEntity>.IListSource.GetList()
  fullName: System.Data.Linq.EntitySet<TEntity>.IListSource.GetList()
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: For a description of this member, see <xref href="stem.ComponentModel.IListSource.GetList%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource?displayProperty=fullName> interface.
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: An <xref href="System.Collections.IList"></xref> that can be bound to a data source from the object.
  overload: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\EntitySet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/EntitySet`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.EntitySet`1.#ctor
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: EntitySet<TEntity>()
  nameWithType: EntitySet<TEntity>.EntitySet<TEntity>()
  fullName: System.Data.Linq.EntitySet<TEntity>.EntitySet<TEntity>()
- uid: System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: EntitySet<TEntity>(Action<TEntity>,Action<TEntity>)
  nameWithType: EntitySet<TEntity>.EntitySet<TEntity>(Action<TEntity>,Action<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.EntitySet<TEntity>(Action<TEntity>,Action<TEntity>)
- uid: System.Action{TEntity}
  parent: System
  isExternal: false
  name: Action<TEntity>
  nameWithType: Action<TEntity>
  fullName: System.Action<TEntity>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<TEntity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.EntitySet`1.Add(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Add(TEntity)
  nameWithType: EntitySet<TEntity>.Add(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Add(TEntity)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: AddRange(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.AddRange(IEnumerable<TEntity>)
- uid: System.Collections.Generic.IEnumerable{TEntity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<TEntity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Assign(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.Assign(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.Assign(IEnumerable<TEntity>)
- uid: System.Data.Linq.EntitySet`1.Clear
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Clear()
  nameWithType: EntitySet<TEntity>.Clear()
  fullName: System.Data.Linq.EntitySet<TEntity>.Clear()
- uid: System.Data.Linq.EntitySet`1.Contains(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Contains(TEntity)
  nameWithType: EntitySet<TEntity>.Contains(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Contains(TEntity)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: CopyTo(TEntity[],Int32)
  nameWithType: EntitySet<TEntity>.CopyTo(TEntity[],Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.CopyTo(TEntity[],Int32)
- uid: TEntity[]
  isExternal: true
  name: TEntity[]
  nameWithType: TEntity[]
  fullName: TEntity[]
  spec.csharp:
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.Count
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Count
  nameWithType: EntitySet<TEntity>.Count
  fullName: System.Data.Linq.EntitySet<TEntity>.Count
- uid: System.Data.Linq.EntitySet`1.GetEnumerator
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: EntitySet<TEntity>.GetEnumerator()
  fullName: System.Data.Linq.EntitySet<TEntity>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{TEntity}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<TEntity>
  nameWithType: IEnumerator<TEntity>
  fullName: System.Collections.Generic.IEnumerator<TEntity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<TEntity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Linq.EntitySet`1.GetNewBindingList
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: GetNewBindingList()
  nameWithType: EntitySet<TEntity>.GetNewBindingList()
  fullName: System.Data.Linq.EntitySet<TEntity>.GetNewBindingList()
- uid: System.ComponentModel.IBindingList
  parent: System.ComponentModel
  isExternal: false
  name: IBindingList
  nameWithType: IBindingList
  fullName: System.ComponentModel.IBindingList
- uid: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: HasLoadedOrAssignedValues
  nameWithType: EntitySet<TEntity>.HasLoadedOrAssignedValues
  fullName: System.Data.Linq.EntitySet<TEntity>.HasLoadedOrAssignedValues
- uid: System.Data.Linq.EntitySet`1.IndexOf(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IndexOf(TEntity)
  nameWithType: EntitySet<TEntity>.IndexOf(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.IndexOf(TEntity)
- uid: System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Insert(Int32,TEntity)
  nameWithType: EntitySet<TEntity>.Insert(Int32,TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Insert(Int32,TEntity)
- uid: System.Data.Linq.EntitySet`1.IsDeferred
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IsDeferred
  nameWithType: EntitySet<TEntity>.IsDeferred
  fullName: System.Data.Linq.EntitySet<TEntity>.IsDeferred
- uid: System.Data.Linq.EntitySet`1.Item(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Item(Int32)
  nameWithType: EntitySet<TEntity>.Item(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.Item(Int32)
- uid: System.Data.Linq.EntitySet`1.ListChanged
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: ListChanged
  nameWithType: EntitySet<TEntity>.ListChanged
  fullName: System.Data.Linq.EntitySet<TEntity>.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.Data.Linq.EntitySet`1.Load
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Load()
  nameWithType: EntitySet<TEntity>.Load()
  fullName: System.Data.Linq.EntitySet<TEntity>.Load()
- uid: System.Data.Linq.EntitySet`1.Remove(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Remove(TEntity)
  nameWithType: EntitySet<TEntity>.Remove(TEntity)
  fullName: System.Data.Linq.EntitySet<TEntity>.Remove(TEntity)
- uid: System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: EntitySet<TEntity>.RemoveAt(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.RemoveAt(Int32)
- uid: System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: SetSource(IEnumerable<TEntity>)
  nameWithType: EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)
  fullName: System.Data.Linq.EntitySet<TEntity>.SetSource(IEnumerable<TEntity>)
- uid: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: ICollection<TEntity>.IsReadOnly
  nameWithType: EntitySet<TEntity>.ICollection<TEntity>.IsReadOnly
  fullName: System.Data.Linq.EntitySet<TEntity>.ICollection<TEntity>.IsReadOnly
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: ICollection.CopyTo(Array,Int32)
  nameWithType: EntitySet<TEntity>.ICollection.CopyTo(Array,Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: ICollection.IsSynchronized
  nameWithType: EntitySet<TEntity>.ICollection.IsSynchronized
  fullName: System.Data.Linq.EntitySet<TEntity>.ICollection.IsSynchronized
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: ICollection.SyncRoot
  nameWithType: EntitySet<TEntity>.ICollection.SyncRoot
  fullName: System.Data.Linq.EntitySet<TEntity>.ICollection.SyncRoot
- uid: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: EntitySet<TEntity>.IEnumerable.GetEnumerator()
  fullName: System.Data.Linq.EntitySet<TEntity>.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IList.Add(Object)
  nameWithType: EntitySet<TEntity>.IList.Add(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.Add(Object)
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IList.Contains(Object)
  nameWithType: EntitySet<TEntity>.IList.Contains(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.Contains(Object)
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IList.IndexOf(Object)
  nameWithType: EntitySet<TEntity>.IList.IndexOf(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.IndexOf(Object)
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IList.Insert(Int32,Object)
  nameWithType: EntitySet<TEntity>.IList.Insert(Int32,Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.Insert(Int32,Object)
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IList.IsFixedSize
  nameWithType: EntitySet<TEntity>.IList.IsFixedSize
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.IsFixedSize
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IList.IsReadOnly
  nameWithType: EntitySet<TEntity>.IList.IsReadOnly
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.IsReadOnly
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IList.Item(Int32)
  nameWithType: EntitySet<TEntity>.IList.Item(Int32)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.Item(Int32)
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IList.Remove(Object)
  nameWithType: EntitySet<TEntity>.IList.Remove(Object)
  fullName: System.Data.Linq.EntitySet<TEntity>.IList.Remove(Object)
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IListSource.ContainsListCollection
  nameWithType: EntitySet<TEntity>.IListSource.ContainsListCollection
  fullName: System.Data.Linq.EntitySet<TEntity>.IListSource.ContainsListCollection
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IListSource.GetList()
  nameWithType: EntitySet<TEntity>.IListSource.GetList()
  fullName: System.Data.Linq.EntitySet<TEntity>.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Data.Linq.EntitySet`1.#ctor*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: EntitySet<TEntity>
  nameWithType: EntitySet<TEntity>.EntitySet<TEntity>
- uid: System.Data.Linq.EntitySet`1.Add*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Add
  nameWithType: EntitySet<TEntity>.Add
- uid: System.Data.Linq.EntitySet`1.AddRange*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: AddRange
  nameWithType: EntitySet<TEntity>.AddRange
- uid: System.Data.Linq.EntitySet`1.Assign*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Assign
  nameWithType: EntitySet<TEntity>.Assign
- uid: System.Data.Linq.EntitySet`1.Clear*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Clear
  nameWithType: EntitySet<TEntity>.Clear
- uid: System.Data.Linq.EntitySet`1.Contains*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Contains
  nameWithType: EntitySet<TEntity>.Contains
- uid: System.Data.Linq.EntitySet`1.CopyTo*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: CopyTo
  nameWithType: EntitySet<TEntity>.CopyTo
- uid: System.Data.Linq.EntitySet`1.Count*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Count
  nameWithType: EntitySet<TEntity>.Count
- uid: System.Data.Linq.EntitySet`1.GetEnumerator*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: GetEnumerator
  nameWithType: EntitySet<TEntity>.GetEnumerator
- uid: System.Data.Linq.EntitySet`1.GetNewBindingList*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: GetNewBindingList
  nameWithType: EntitySet<TEntity>.GetNewBindingList
- uid: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: HasLoadedOrAssignedValues
  nameWithType: EntitySet<TEntity>.HasLoadedOrAssignedValues
- uid: System.Data.Linq.EntitySet`1.IndexOf*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IndexOf
  nameWithType: EntitySet<TEntity>.IndexOf
- uid: System.Data.Linq.EntitySet`1.Insert*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Insert
  nameWithType: EntitySet<TEntity>.Insert
- uid: System.Data.Linq.EntitySet`1.IsDeferred*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IsDeferred
  nameWithType: EntitySet<TEntity>.IsDeferred
- uid: System.Data.Linq.EntitySet`1.Item*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Item
  nameWithType: EntitySet<TEntity>.Item
- uid: System.Data.Linq.EntitySet`1.Load*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Load
  nameWithType: EntitySet<TEntity>.Load
- uid: System.Data.Linq.EntitySet`1.Remove*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Remove
  nameWithType: EntitySet<TEntity>.Remove
- uid: System.Data.Linq.EntitySet`1.RemoveAt*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: RemoveAt
  nameWithType: EntitySet<TEntity>.RemoveAt
- uid: System.Data.Linq.EntitySet`1.SetSource*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: SetSource
  nameWithType: EntitySet<TEntity>.SetSource
- uid: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection<TEntity>#IsReadOnly*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.Generic.ICollection<TEntity>.IsReadOnly
  nameWithType: EntitySet<TEntity>.System.Collections.Generic.ICollection<TEntity>.IsReadOnly
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.CopyTo
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.SyncRoot
- uid: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Add*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Add
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Contains
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IndexOf
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Insert
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsFixedSize
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsReadOnly
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Item*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Item
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Remove
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList*
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.GetList
