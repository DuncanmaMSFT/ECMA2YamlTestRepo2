### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IInputChannel
  id: IInputChannel
  children:
  - System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)
  - System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)
  - System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)
  - System.ServiceModel.Channels.IInputChannel.LocalAddress
  - System.ServiceModel.Channels.IInputChannel.Receive
  - System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)
  - System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)
  - System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)
  langs:
  - csharp
  name: IInputChannel
  nameWithType: IInputChannel
  fullName: System.ServiceModel.Channels.IInputChannel
  type: Interface
  summary: Defines the interface that a channel must implement to receive a message.
  syntax:
    content: 'public interface IInputChannel : System.ServiceModel.Channels.IChannel'
  implements:
  - System.ServiceModel.Channels.IChannel
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)
  id: BeginReceive(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: BeginReceive(AsyncCallback,Object)
  nameWithType: IInputChannel.BeginReceive(AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginReceive(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous operation to receive a message that has a state object associated with it.
  syntax:
    content: public IAsyncResult BeginReceive (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.BeginReceive*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: BeginReceive(TimeSpan,AsyncCallback,Object)
  nameWithType: IInputChannel.BeginReceive(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginReceive(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.
  syntax:
    content: public IAsyncResult BeginReceive (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: callback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.BeginReceive*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: BeginTryReceive(TimeSpan,AsyncCallback,Object)
  nameWithType: IInputChannel.BeginTryReceive(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginTryReceive(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.
  syntax:
    content: public IAsyncResult BeginTryReceive (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: callback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.BeginTryReceive*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: BeginWaitForMessage(TimeSpan,AsyncCallback,Object)
  nameWithType: IInputChannel.BeginWaitForMessage(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous wait-for-a-message-to-arrive operation that has a specified time out and state object associated with it.
  syntax:
    content: public IAsyncResult BeginWaitForMessage (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: callback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)
  id: EndReceive(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: EndReceive(IAsyncResult)
  nameWithType: IInputChannel.EndReceive(IAsyncResult)
  fullName: System.ServiceModel.Channels.IInputChannel.EndReceive(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Completes an asynchronous operation to receive a message.
  syntax:
    content: public System.ServiceModel.Channels.Message EndReceive (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: To be added.
    return:
      type: System.ServiceModel.Channels.Message
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.EndReceive*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)
  id: EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: EndTryReceive(IAsyncResult,Message)
  nameWithType: IInputChannel.EndTryReceive(IAsyncResult,Message)
  fullName: System.ServiceModel.Channels.IInputChannel.EndTryReceive(IAsyncResult,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Completes the specified asynchronous operation to receive a message.
  syntax:
    content: public bool EndTryReceive (IAsyncResult result, out System.ServiceModel.Channels.Message message);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: To be added.
    - id: message
      type: System.ServiceModel.Channels.Message
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.EndTryReceive*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)
  id: EndWaitForMessage(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: EndWaitForMessage(IAsyncResult)
  nameWithType: IInputChannel.EndWaitForMessage(IAsyncResult)
  fullName: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Completes the specified asynchronous wait-for-a-message operation.
  syntax:
    content: public bool EndWaitForMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.LocalAddress
  id: LocalAddress
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: LocalAddress
  nameWithType: IInputChannel.LocalAddress
  fullName: System.ServiceModel.Channels.IInputChannel.LocalAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the address on which the input channel receives messages.
  syntax:
    content: public System.ServiceModel.EndpointAddress LocalAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.LocalAddress*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.Receive
  id: Receive
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: Receive()
  nameWithType: IInputChannel.Receive()
  fullName: System.ServiceModel.Channels.IInputChannel.Receive()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns the message received, if one is available. If a message is not available, blocks for a default interval of time.
  syntax:
    content: public System.ServiceModel.Channels.Message Receive ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.Message
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.Receive*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)
  id: Receive(System.TimeSpan)
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: Receive(TimeSpan)
  nameWithType: IInputChannel.Receive(TimeSpan)
  fullName: System.ServiceModel.Channels.IInputChannel.Receive(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns the message received, if one is available. If a message is not available, blocks for a specified interval of time.
  syntax:
    content: public System.ServiceModel.Channels.Message Receive (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    return:
      type: System.ServiceModel.Channels.Message
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.Receive*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)
  id: TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: TryReceive(TimeSpan,Message)
  nameWithType: IInputChannel.TryReceive(TimeSpan,Message)
  fullName: System.ServiceModel.Channels.IInputChannel.TryReceive(TimeSpan,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Tries to receive a message within a specified interval of time.
  syntax:
    content: public bool TryReceive (TimeSpan timeout, out System.ServiceModel.Channels.Message message);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: message
      type: System.ServiceModel.Channels.Message
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.TryReceive*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)
  id: WaitForMessage(System.TimeSpan)
  parent: System.ServiceModel.Channels.IInputChannel
  langs:
  - csharp
  name: WaitForMessage(TimeSpan)
  nameWithType: IInputChannel.WaitForMessage(TimeSpan)
  fullName: System.ServiceModel.Channels.IInputChannel.WaitForMessage(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Returns a value that indicates whether a message has arrived within a specified interval of time.
  syntax:
    content: public bool WaitForMessage (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.ServiceModel.Channels.IInputChannel.WaitForMessage*
  exceptions: []
  platform:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
references:
- uid: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: BeginReceive(AsyncCallback,Object)
  nameWithType: IInputChannel.BeginReceive(AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginReceive(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: BeginReceive(TimeSpan,AsyncCallback,Object)
  nameWithType: IInputChannel.BeginReceive(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginReceive(TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: BeginTryReceive(TimeSpan,AsyncCallback,Object)
  nameWithType: IInputChannel.BeginTryReceive(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginTryReceive(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: BeginWaitForMessage(TimeSpan,AsyncCallback,Object)
  nameWithType: IInputChannel.BeginWaitForMessage(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: EndReceive(IAsyncResult)
  nameWithType: IInputChannel.EndReceive(IAsyncResult)
  fullName: System.ServiceModel.Channels.IInputChannel.EndReceive(IAsyncResult)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: EndTryReceive(IAsyncResult,Message)
  nameWithType: IInputChannel.EndTryReceive(IAsyncResult,Message)
  fullName: System.ServiceModel.Channels.IInputChannel.EndTryReceive(IAsyncResult,Message)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: EndWaitForMessage(IAsyncResult)
  nameWithType: IInputChannel.EndWaitForMessage(IAsyncResult)
  fullName: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(IAsyncResult)
- uid: System.ServiceModel.Channels.IInputChannel.LocalAddress
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: LocalAddress
  nameWithType: IInputChannel.LocalAddress
  fullName: System.ServiceModel.Channels.IInputChannel.LocalAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.IInputChannel.Receive
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: Receive()
  nameWithType: IInputChannel.Receive()
  fullName: System.ServiceModel.Channels.IInputChannel.Receive()
- uid: System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: Receive(TimeSpan)
  nameWithType: IInputChannel.Receive(TimeSpan)
  fullName: System.ServiceModel.Channels.IInputChannel.Receive(TimeSpan)
- uid: System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: TryReceive(TimeSpan,Message)
  nameWithType: IInputChannel.TryReceive(TimeSpan,Message)
  fullName: System.ServiceModel.Channels.IInputChannel.TryReceive(TimeSpan,Message)
- uid: System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: WaitForMessage(TimeSpan)
  nameWithType: IInputChannel.WaitForMessage(TimeSpan)
  fullName: System.ServiceModel.Channels.IInputChannel.WaitForMessage(TimeSpan)
- uid: System.ServiceModel.Channels.IInputChannel.BeginReceive*
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: BeginReceive
  nameWithType: IInputChannel.BeginReceive
- uid: System.ServiceModel.Channels.IInputChannel.BeginTryReceive*
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: BeginTryReceive
  nameWithType: IInputChannel.BeginTryReceive
- uid: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage*
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: BeginWaitForMessage
  nameWithType: IInputChannel.BeginWaitForMessage
- uid: System.ServiceModel.Channels.IInputChannel.EndReceive*
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: EndReceive
  nameWithType: IInputChannel.EndReceive
- uid: System.ServiceModel.Channels.IInputChannel.EndTryReceive*
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: EndTryReceive
  nameWithType: IInputChannel.EndTryReceive
- uid: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage*
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: EndWaitForMessage
  nameWithType: IInputChannel.EndWaitForMessage
- uid: System.ServiceModel.Channels.IInputChannel.LocalAddress*
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: LocalAddress
  nameWithType: IInputChannel.LocalAddress
- uid: System.ServiceModel.Channels.IInputChannel.Receive*
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: Receive
  nameWithType: IInputChannel.Receive
- uid: System.ServiceModel.Channels.IInputChannel.TryReceive*
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: TryReceive
  nameWithType: IInputChannel.TryReceive
- uid: System.ServiceModel.Channels.IInputChannel.WaitForMessage*
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: WaitForMessage
  nameWithType: IInputChannel.WaitForMessage
