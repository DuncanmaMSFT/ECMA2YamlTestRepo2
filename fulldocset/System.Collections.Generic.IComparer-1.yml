### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.IComparer`1
  id: IComparer`1
  children:
  - System.Collections.Generic.IComparer`1.Compare(`0,`0)
  langs:
  - csharp
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  type: Interface
  syntax:
    content: public interface IComparer<in T>
    typeParameters:
    - id: T
      description: To be added.
  implements: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  id: Compare(`0,`0)
  parent: System.Collections.Generic.IComparer`1
  langs:
  - csharp
  name: Compare(T,T)
  nameWithType: IComparer<T>.Compare(T,T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T,T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int Compare (T x, T y);
    parameters:
    - id: x
      type: T
      description: To be added.
    - id: y
      type: T
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Collections.Generic.IComparer`1.Compare*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  parent: System.Collections.Generic.IComparer`1
  isExternal: false
  name: Compare(T,T)
  nameWithType: IComparer<T>.Compare(T,T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T,T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IComparer`1.Compare*
  parent: System.Collections.Generic.IComparer`1
  isExternal: false
  name: Compare
  nameWithType: IComparer<T>.Compare
