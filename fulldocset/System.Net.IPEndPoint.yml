### YamlMime:ManagedReference
items:
- uid: System.Net.IPEndPoint
  id: IPEndPoint
  children:
  - System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)
  - System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)
  - System.Net.IPEndPoint.Address
  - System.Net.IPEndPoint.AddressFamily
  - System.Net.IPEndPoint.Create(System.Net.SocketAddress)
  - System.Net.IPEndPoint.Equals(System.Object)
  - System.Net.IPEndPoint.GetHashCode
  - System.Net.IPEndPoint.MaxPort
  - System.Net.IPEndPoint.MinPort
  - System.Net.IPEndPoint.Port
  - System.Net.IPEndPoint.Serialize
  - System.Net.IPEndPoint.ToString
  langs:
  - csharp
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
  type: Class
  summary: Represents a network endpoint as an IP address and a port number.
  syntax:
    content: 'public class IPEndPoint : System.Net.EndPoint'
  inheritance:
  - System.Object
  - System.Net.EndPoint
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)
  id: '#ctor(System.Int64,System.Int32)'
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: IPEndPoint(Int64,Int32)
  nameWithType: IPEndPoint.IPEndPoint(Int64,Int32)
  fullName: System.Net.IPEndPoint.IPEndPoint(Int64,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: Initializes a new instance of the <xref href="System.Net.IPEndPoint"></xref> class with the specified address and port number.
  syntax:
    content: public IPEndPoint (long address, int port);
    parameters:
    - id: address
      type: System.Int64
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
  overload: System.Net.IPEndPoint.#ctor*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Int32)'
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: IPEndPoint(IPAddress,Int32)
  nameWithType: IPEndPoint.IPEndPoint(IPAddress,Int32)
  fullName: System.Net.IPEndPoint.IPEndPoint(IPAddress,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: Initializes a new instance of the <xref href="System.Net.IPEndPoint"></xref> class with the specified address and port number.
  syntax:
    content: public IPEndPoint (System.Net.IPAddress address, int port);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: To be added.
    - id: port
      type: System.Int32
      description: To be added.
  overload: System.Net.IPEndPoint.#ctor*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.Address
  id: Address
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: Address
  nameWithType: IPEndPoint.Address
  fullName: System.Net.IPEndPoint.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: Gets or sets the IP address of the endpoint.
  syntax:
    content: public System.Net.IPAddress Address { get; set; }
    return:
      type: System.Net.IPAddress
      description: To be added.
  overload: System.Net.IPEndPoint.Address*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.AddressFamily
  id: AddressFamily
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: AddressFamily
  nameWithType: IPEndPoint.AddressFamily
  fullName: System.Net.IPEndPoint.AddressFamily
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: Gets the Internet Protocol (IP) address family.
  syntax:
    content: public override System.Net.Sockets.AddressFamily AddressFamily { get; }
    return:
      type: System.Net.Sockets.AddressFamily
      description: To be added.
  overload: System.Net.IPEndPoint.AddressFamily*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.Create(System.Net.SocketAddress)
  id: Create(System.Net.SocketAddress)
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: Create(SocketAddress)
  nameWithType: IPEndPoint.Create(SocketAddress)
  fullName: System.Net.IPEndPoint.Create(SocketAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: Creates an endpoint from a socket address.
  syntax:
    content: public override System.Net.EndPoint Create (System.Net.SocketAddress socketAddress);
    parameters:
    - id: socketAddress
      type: System.Net.SocketAddress
      description: To be added.
    return:
      type: System.Net.EndPoint
      description: To be added.
  overload: System.Net.IPEndPoint.Create*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: IPEndPoint.Equals(Object)
  fullName: System.Net.IPEndPoint.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: Determines whether the specified <xref href="System.Object"></xref> is equal to the current <xref href="System.Object"></xref>.
  syntax:
    content: public override bool Equals (object comparand);
    parameters:
    - id: comparand
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Net.IPEndPoint.Equals*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.GetHashCode
  id: GetHashCode
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: IPEndPoint.GetHashCode()
  fullName: System.Net.IPEndPoint.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: Returns a hash value for a <xref href="System.Net.IPEndPoint"></xref> instance.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Net.IPEndPoint.GetHashCode*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.MaxPort
  id: MaxPort
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: MaxPort
  nameWithType: IPEndPoint.MaxPort
  fullName: System.Net.IPEndPoint.MaxPort
  type: Field
  assemblies:
  - System
  namespace: System.Net
  summary: Specifies the maximum value that can be assigned to the <xref:System.Net.IPEndPoint.Port*> property. The MaxPort value is set to 0x0000FFFF. This field is read-only.
  syntax:
    content: public const int MaxPort = 65535;
    return:
      type: System.Int32
      description: To be added.
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.MinPort
  id: MinPort
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: MinPort
  nameWithType: IPEndPoint.MinPort
  fullName: System.Net.IPEndPoint.MinPort
  type: Field
  assemblies:
  - System
  namespace: System.Net
  summary: Specifies the minimum value that can be assigned to the <xref:System.Net.IPEndPoint.Port*> property. This field is read-only.
  syntax:
    content: public const int MinPort = 0;
    return:
      type: System.Int32
      description: To be added.
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.Port
  id: Port
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: Port
  nameWithType: IPEndPoint.Port
  fullName: System.Net.IPEndPoint.Port
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: Gets or sets the port number of the endpoint.
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Net.IPEndPoint.Port*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.Serialize
  id: Serialize
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: Serialize()
  nameWithType: IPEndPoint.Serialize()
  fullName: System.Net.IPEndPoint.Serialize()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: Serializes endpoint information into a <xref href="System.Net.SocketAddress"></xref> instance.
  syntax:
    content: public override System.Net.SocketAddress Serialize ();
    parameters: []
    return:
      type: System.Net.SocketAddress
      description: To be added.
  overload: System.Net.IPEndPoint.Serialize*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IPEndPoint.ToString
  id: ToString
  parent: System.Net.IPEndPoint
  langs:
  - csharp
  name: ToString()
  nameWithType: IPEndPoint.ToString()
  fullName: System.Net.IPEndPoint.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: Returns the IP address and port number of the specified endpoint.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Net.IPEndPoint.ToString*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Net.EndPoint
  isExternal: false
  name: System.Net.EndPoint
- uid: System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)
  parent: System.Net.IPEndPoint
  isExternal: false
  name: IPEndPoint(Int64,Int32)
  nameWithType: IPEndPoint.IPEndPoint(Int64,Int32)
  fullName: System.Net.IPEndPoint.IPEndPoint(Int64,Int32)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)
  parent: System.Net.IPEndPoint
  isExternal: false
  name: IPEndPoint(IPAddress,Int32)
  nameWithType: IPEndPoint.IPEndPoint(IPAddress,Int32)
  fullName: System.Net.IPEndPoint.IPEndPoint(IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.IPEndPoint.Address
  parent: System.Net.IPEndPoint
  isExternal: false
  name: Address
  nameWithType: IPEndPoint.Address
  fullName: System.Net.IPEndPoint.Address
- uid: System.Net.IPEndPoint.AddressFamily
  parent: System.Net.IPEndPoint
  isExternal: false
  name: AddressFamily
  nameWithType: IPEndPoint.AddressFamily
  fullName: System.Net.IPEndPoint.AddressFamily
- uid: System.Net.Sockets.AddressFamily
  parent: System.Net.Sockets
  isExternal: false
  name: AddressFamily
  nameWithType: AddressFamily
  fullName: System.Net.Sockets.AddressFamily
- uid: System.Net.IPEndPoint.Create(System.Net.SocketAddress)
  parent: System.Net.IPEndPoint
  isExternal: false
  name: Create(SocketAddress)
  nameWithType: IPEndPoint.Create(SocketAddress)
  fullName: System.Net.IPEndPoint.Create(SocketAddress)
- uid: System.Net.SocketAddress
  parent: System.Net
  isExternal: false
  name: SocketAddress
  nameWithType: SocketAddress
  fullName: System.Net.SocketAddress
- uid: System.Net.IPEndPoint.Equals(System.Object)
  parent: System.Net.IPEndPoint
  isExternal: false
  name: Equals(Object)
  nameWithType: IPEndPoint.Equals(Object)
  fullName: System.Net.IPEndPoint.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.IPEndPoint.GetHashCode
  parent: System.Net.IPEndPoint
  isExternal: false
  name: GetHashCode()
  nameWithType: IPEndPoint.GetHashCode()
  fullName: System.Net.IPEndPoint.GetHashCode()
- uid: System.Net.IPEndPoint.MaxPort
  parent: System.Net.IPEndPoint
  isExternal: false
  name: MaxPort
  nameWithType: IPEndPoint.MaxPort
  fullName: System.Net.IPEndPoint.MaxPort
- uid: System.Net.IPEndPoint.MinPort
  parent: System.Net.IPEndPoint
  isExternal: false
  name: MinPort
  nameWithType: IPEndPoint.MinPort
  fullName: System.Net.IPEndPoint.MinPort
- uid: System.Net.IPEndPoint.Port
  parent: System.Net.IPEndPoint
  isExternal: false
  name: Port
  nameWithType: IPEndPoint.Port
  fullName: System.Net.IPEndPoint.Port
- uid: System.Net.IPEndPoint.Serialize
  parent: System.Net.IPEndPoint
  isExternal: false
  name: Serialize()
  nameWithType: IPEndPoint.Serialize()
  fullName: System.Net.IPEndPoint.Serialize()
- uid: System.Net.IPEndPoint.ToString
  parent: System.Net.IPEndPoint
  isExternal: false
  name: ToString()
  nameWithType: IPEndPoint.ToString()
  fullName: System.Net.IPEndPoint.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.IPEndPoint.#ctor*
  parent: System.Net.IPEndPoint
  isExternal: false
  name: IPEndPoint
  nameWithType: IPEndPoint.IPEndPoint
- uid: System.Net.IPEndPoint.Address*
  parent: System.Net.IPEndPoint
  isExternal: false
  name: Address
  nameWithType: IPEndPoint.Address
- uid: System.Net.IPEndPoint.AddressFamily*
  parent: System.Net.IPEndPoint
  isExternal: false
  name: AddressFamily
  nameWithType: IPEndPoint.AddressFamily
- uid: System.Net.IPEndPoint.Create*
  parent: System.Net.IPEndPoint
  isExternal: false
  name: Create
  nameWithType: IPEndPoint.Create
- uid: System.Net.IPEndPoint.Equals*
  parent: System.Net.IPEndPoint
  isExternal: false
  name: Equals
  nameWithType: IPEndPoint.Equals
- uid: System.Net.IPEndPoint.GetHashCode*
  parent: System.Net.IPEndPoint
  isExternal: false
  name: GetHashCode
  nameWithType: IPEndPoint.GetHashCode
- uid: System.Net.IPEndPoint.Port*
  parent: System.Net.IPEndPoint
  isExternal: false
  name: Port
  nameWithType: IPEndPoint.Port
- uid: System.Net.IPEndPoint.Serialize*
  parent: System.Net.IPEndPoint
  isExternal: false
  name: Serialize
  nameWithType: IPEndPoint.Serialize
- uid: System.Net.IPEndPoint.ToString*
  parent: System.Net.IPEndPoint
  isExternal: false
  name: ToString
  nameWithType: IPEndPoint.ToString
