### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  id: VisualStyleElement.ToolBar.Button
  children:
  - System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Checked
  - System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Disabled
  - System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Hot
  - System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.HotChecked
  - System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Normal
  - System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Pressed
  langs:
  - csharp
  name: VisualStyleElement+ToolBar+Button
  nameWithType: VisualStyleElement+ToolBar+Button
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button
  type: Class
  summary: Provides <xref href="System.Windows.Forms.VisualStyles.VisualStyleElement"></xref> objects for each state of a toolbar button. This class cannot be inherited.
  remarks: Each property of the VisualStyleElement.ToolBar.Button class returns a <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> for a different state of a toolbar button.
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Normal%2A> property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementToolBarButton1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#246](~/add/codesnippet/csharp/t-system.windows.forms.v_29_1.cs)]\n [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#246](~/add/codesnippet/visualbasic/t-system.windows.forms.v_29_1.vb)]"
  syntax:
    content: public static class VisualStyleElement.ToolBar.Button
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Forms.VisualStyles\VisualStyleElement+ToolBar+Button.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Forms.VisualStyles/VisualStyleElement+ToolBar+Button.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Checked
  id: Checked
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  langs:
  - csharp
  name: Checked
  nameWithType: VisualStyleElement+ToolBar+Button.Checked
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.Checked
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.VisualStyles
  summary: Gets a visual style element that represents a toolbar button in the checked state.
  remarks: You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Checked property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Checked property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementToolBarButton5` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#250](~/add/codesnippet/csharp/p-system.windows.forms.v_110_1.cs)]\n [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#250](~/add/codesnippet/visualbasic/p-system.windows.forms.v_110_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.VisualStyles.VisualStyleElement Checked { get; }
    return:
      type: System.Windows.Forms.VisualStyles.VisualStyleElement
      description: A <xref href="System.Windows.Forms.VisualStyles.VisualStyleElement"></xref> that represents a toolbar button in the checked state.
  overload: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Checked*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Forms.VisualStyles\VisualStyleElement+ToolBar+Button.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Forms.VisualStyles/VisualStyleElement+ToolBar+Button.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Disabled
  id: Disabled
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  langs:
  - csharp
  name: Disabled
  nameWithType: VisualStyleElement+ToolBar+Button.Disabled
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.Disabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.VisualStyles
  summary: Gets a visual style element that represents a toolbar button in the disabled state.
  remarks: You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Disabled property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Disabled property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementToolBarButton4` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#249](~/add/codesnippet/csharp/p-system.windows.forms.v_87_1.cs)]\n [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#249](~/add/codesnippet/visualbasic/p-system.windows.forms.v_87_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.VisualStyles.VisualStyleElement Disabled { get; }
    return:
      type: System.Windows.Forms.VisualStyles.VisualStyleElement
      description: A <xref href="System.Windows.Forms.VisualStyles.VisualStyleElement"></xref> that represents a toolbar button in the disabled state.
  overload: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Disabled*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Forms.VisualStyles\VisualStyleElement+ToolBar+Button.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Forms.VisualStyles/VisualStyleElement+ToolBar+Button.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Hot
  id: Hot
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  langs:
  - csharp
  name: Hot
  nameWithType: VisualStyleElement+ToolBar+Button.Hot
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.Hot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.VisualStyles
  summary: Gets a visual style element that represents a toolbar button in the hot state.
  remarks: You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Hot property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Hot property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementToolBarButton2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#247](~/add/codesnippet/csharp/p-system.windows.forms.v_132_1.cs)]\n [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#247](~/add/codesnippet/visualbasic/p-system.windows.forms.v_132_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.VisualStyles.VisualStyleElement Hot { get; }
    return:
      type: System.Windows.Forms.VisualStyles.VisualStyleElement
      description: A <xref href="System.Windows.Forms.VisualStyles.VisualStyleElement"></xref> that represents a toolbar button in the hot state.
  overload: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Hot*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Forms.VisualStyles\VisualStyleElement+ToolBar+Button.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Forms.VisualStyles/VisualStyleElement+ToolBar+Button.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.HotChecked
  id: HotChecked
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  langs:
  - csharp
  name: HotChecked
  nameWithType: VisualStyleElement+ToolBar+Button.HotChecked
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.HotChecked
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.VisualStyles
  summary: Gets a visual style element that represents a toolbar button in the hot and checked states.
  remarks: You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the HotChecked property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the HotChecked property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementToolBarButton6` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#251](~/add/codesnippet/csharp/4b7d1195-41b6-4a83-88f1-_1.cs)]\n [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#251](~/add/codesnippet/visualbasic/4b7d1195-41b6-4a83-88f1-_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.VisualStyles.VisualStyleElement HotChecked { get; }
    return:
      type: System.Windows.Forms.VisualStyles.VisualStyleElement
      description: A <xref href="System.Windows.Forms.VisualStyles.VisualStyleElement"></xref> that represents a toolbar button in the hot and checked states.
  overload: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.HotChecked*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Forms.VisualStyles\VisualStyleElement+ToolBar+Button.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Forms.VisualStyles/VisualStyleElement+ToolBar+Button.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Normal
  id: Normal
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  langs:
  - csharp
  name: Normal
  nameWithType: VisualStyleElement+ToolBar+Button.Normal
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.Normal
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.VisualStyles
  summary: Gets a visual style element that represents a toolbar button in the normal state.
  remarks: You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Normal property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Normal property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementToolBarButton1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#246](~/add/codesnippet/csharp/p-system.windows.forms.v_68_1.cs)]\n [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#246](~/add/codesnippet/visualbasic/p-system.windows.forms.v_68_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.VisualStyles.VisualStyleElement Normal { get; }
    return:
      type: System.Windows.Forms.VisualStyles.VisualStyleElement
      description: A <xref href="System.Windows.Forms.VisualStyles.VisualStyleElement"></xref> that represents a toolbar button in the normal state.
  overload: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Normal*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Forms.VisualStyles\VisualStyleElement+ToolBar+Button.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Forms.VisualStyles/VisualStyleElement+ToolBar+Button.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Pressed
  id: Pressed
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  langs:
  - csharp
  name: Pressed
  nameWithType: VisualStyleElement+ToolBar+Button.Pressed
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.Pressed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.VisualStyles
  summary: Gets a visual style element that represents a toolbar button in the pressed state.
  remarks: You can use the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Pressed property to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer>.
  example:
  - "The following code example demonstrates how to create a <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer> with the <xref:System.Windows.Forms.VisualStyles.VisualStyleElement> returned by the Pressed property. To run this example, paste it into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawVisualStyleElementToolBarButton3` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Windows.Forms.VisualStyleElementsExamples#248](~/add/codesnippet/csharp/p-system.windows.forms.v_111_1.cs)]\n [!code-vb[System.Windows.Forms.VisualStyleElementsExamples#248](~/add/codesnippet/visualbasic/p-system.windows.forms.v_111_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.VisualStyles.VisualStyleElement Pressed { get; }
    return:
      type: System.Windows.Forms.VisualStyles.VisualStyleElement
      description: A <xref href="System.Windows.Forms.VisualStyles.VisualStyleElement"></xref> that represents a toolbar button in the pressed state.
  overload: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Pressed*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Forms.VisualStyles\VisualStyleElement+ToolBar+Button.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Forms.VisualStyles/VisualStyleElement+ToolBar+Button.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Checked
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: Checked
  nameWithType: VisualStyleElement+ToolBar+Button.Checked
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.Checked
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement
  parent: System.Windows.Forms.VisualStyles
  isExternal: false
  name: VisualStyleElement
  nameWithType: VisualStyleElement
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Disabled
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: Disabled
  nameWithType: VisualStyleElement+ToolBar+Button.Disabled
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.Disabled
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Hot
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: Hot
  nameWithType: VisualStyleElement+ToolBar+Button.Hot
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.Hot
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.HotChecked
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: HotChecked
  nameWithType: VisualStyleElement+ToolBar+Button.HotChecked
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.HotChecked
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Normal
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: Normal
  nameWithType: VisualStyleElement+ToolBar+Button.Normal
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.Normal
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Pressed
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: Pressed
  nameWithType: VisualStyleElement+ToolBar+Button.Pressed
  fullName: System.Windows.Forms.VisualStyles.VisualStyleElement+ToolBar+Button.Pressed
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Checked*
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: Checked
  nameWithType: VisualStyleElement+ToolBar+Button.Checked
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Disabled*
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: Disabled
  nameWithType: VisualStyleElement+ToolBar+Button.Disabled
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Hot*
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: Hot
  nameWithType: VisualStyleElement+ToolBar+Button.Hot
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.HotChecked*
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: HotChecked
  nameWithType: VisualStyleElement+ToolBar+Button.HotChecked
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Normal*
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: Normal
  nameWithType: VisualStyleElement+ToolBar+Button.Normal
- uid: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Pressed*
  parent: System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button
  isExternal: false
  name: Pressed
  nameWithType: VisualStyleElement+ToolBar+Button.Pressed
