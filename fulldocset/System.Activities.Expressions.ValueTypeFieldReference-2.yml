### YamlMime:ManagedReference
items:
- uid: System.Activities.Expressions.ValueTypeFieldReference`2
  id: ValueTypeFieldReference`2
  children:
  - System.Activities.Expressions.ValueTypeFieldReference`2.#ctor
  - System.Activities.Expressions.ValueTypeFieldReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)
  - System.Activities.Expressions.ValueTypeFieldReference`2.Execute(System.Activities.CodeActivityContext)
  - System.Activities.Expressions.ValueTypeFieldReference`2.FieldName
  - System.Activities.Expressions.ValueTypeFieldReference`2.OperandLocation
  langs:
  - csharp
  name: ValueTypeFieldReference<TOperand,TResult>
  nameWithType: ValueTypeFieldReference<TOperand,TResult>
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>
  type: Class
  summary: Represents a field on a value type that can be used as an l-value in an expression.
  remarks: ''
  example:
  - "The following code example uses ValueTypeFieldReference(TOperand, in an `Assign` activity to assign an integer value to a field and prints the field value to the console. The `Assign` activity is equivalent to the following statement when using the `struct` defined in the following example. `myStructVariable.AField = 1;`.  \n  \n> [!NOTE]\n>  Instead of instantiating the ValueTypeFieldReference(TOperand, l-value expression activity directly, it is strongly recommended that you call <xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A>, which provides a higher level of abstraction and enables you to implement your workflow more intuitively.  \n  \n```  \n  \n// Define a struct with a field named AField.  \nstruct StructWithField  \n{  \n    public int AField;  \n}  \n  \npublic static void ValueTypeFieldReferenceSample()  \n{  \n    // Create a variable of type StructWithField to store the property.  \n    var swfvar = new Variable<StructWithField>(\"swfvar\", new StructWithField());  \n  \n    Activity myActivity = new Sequence  \n    {  \n        Variables = { swfvar },  \n        Activities =   \n        {                      \n            // Create an Assign activity to assign a value to the AField field.  \n            new Assign<int>  \n            {  \n                To = new ValueTypeFieldReference<StructWithField, int>()  \n                {  \n                    OperandLocation = swfvar,  \n                    FieldName = \"AField\",  \n                },  \n                // Assign an integer value to AField.  \n                Value = 1,  \n            },  \n            // Print the new field value to the console.  \n            new WriteLine()  \n            {  \n                Text = ExpressionServices.Convert<string>(ctx => swfvar.Get(ctx).AField.ToString()),  \n            }  \n        }  \n    };  \n  \n    // Invoke the Sequence activity.  \n    WorkflowInvoker.Invoke(myActivity);  \n}  \n  \n```"
  syntax:
    content: 'public sealed class ValueTypeFieldReference<TOperand,TResult> : System.Activities.CodeActivity<System.Activities.Location<TResult>>'
    typeParameters:
    - id: TOperand
      description: The value type.
    - id: TResult
      description: The field type.
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.ActivityWithResult
  - System.Activities.Activity`1
  - System.Activities.CodeActivity`1
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.Activity`1.FromValue(`0)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})
  - System.Activities.Activity`1.op_Implicit(`0)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})
  - System.Activities.Activity`1.Result
  - System.Activities.ActivityWithResult.ResultType
  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.CodeActivity`1.Implementation
  - System.Activities.CodeActivity`1.ImplementationVersion
  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\ValueTypeFieldReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/ValueTypeFieldReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.#ctor
  id: '#ctor'
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  langs:
  - csharp
  name: ValueTypeFieldReference<TOperand,TResult>()
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.ValueTypeFieldReference<TOperand,TResult>()
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>.ValueTypeFieldReference<TOperand,TResult>()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  summary: Initializes a new instance of the <xref href="stem.Activities.Expressions.ValueTypeFieldReference%602"></xref> class.
  syntax:
    content: public ValueTypeFieldReference ();
    parameters: []
  overload: System.Activities.Expressions.ValueTypeFieldReference`2.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\ValueTypeFieldReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/ValueTypeFieldReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: To be added.
  overload: System.Activities.Expressions.ValueTypeFieldReference`2.CacheMetadata*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\ValueTypeFieldReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/ValueTypeFieldReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.Execute(System.Activities.CodeActivityContext)
  id: Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  langs:
  - csharp
  name: Execute(CodeActivityContext)
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.Execute(CodeActivityContext)
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>.Execute(CodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override System.Activities.Location<TResult> Execute (System.Activities.CodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.CodeActivityContext
      description: To be added.
    return:
      type: System.Activities.Location{TResult}
      description: To be added.
  overload: System.Activities.Expressions.ValueTypeFieldReference`2.Execute*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\ValueTypeFieldReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/ValueTypeFieldReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.FieldName
  id: FieldName
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  langs:
  - csharp
  name: FieldName
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.FieldName
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>.FieldName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  summary: Gets or sets the name of the field.
  syntax:
    content: public string FieldName { get; set; }
    return:
      type: System.String
      description: The name of the field.
  overload: System.Activities.Expressions.ValueTypeFieldReference`2.FieldName*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\ValueTypeFieldReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/ValueTypeFieldReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.OperandLocation
  id: OperandLocation
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  langs:
  - csharp
  name: OperandLocation
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.OperandLocation
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>.OperandLocation
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  summary: Gets or sets the instance of the value type that contains the field.
  syntax:
    content: public System.Activities.InOutArgument<TOperand> OperandLocation { get; set; }
    return:
      type: System.Activities.InOutArgument{TOperand}
      description: The instance of the value type that contains the field.
  overload: System.Activities.Expressions.ValueTypeFieldReference`2.OperandLocation*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\ValueTypeFieldReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/ValueTypeFieldReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Activities.CodeActivity`1
  isExternal: false
  name: System.Activities.CodeActivity<System.Activities.Location<TResult>>
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.#ctor
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  isExternal: false
  name: ValueTypeFieldReference<TOperand,TResult>()
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.ValueTypeFieldReference<TOperand,TResult>()
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>.ValueTypeFieldReference<TOperand,TResult>()
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  isExternal: false
  name: Execute(CodeActivityContext)
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.Execute(CodeActivityContext)
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>.Execute(CodeActivityContext)
- uid: System.Activities.Location{TResult}
  parent: System.Activities
  isExternal: false
  name: Location<TResult>
  nameWithType: Location<TResult>
  fullName: System.Activities.Location<TResult>
  spec.csharp:
  - uid: System.Activities.Location`1
    name: Location
    nameWithType: Location
    fullName: Location<TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.FieldName
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  isExternal: false
  name: FieldName
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.FieldName
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>.FieldName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.OperandLocation
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  isExternal: false
  name: OperandLocation
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.OperandLocation
  fullName: System.Activities.Expressions.ValueTypeFieldReference<TOperand,TResult>.OperandLocation
- uid: System.Activities.InOutArgument{TOperand}
  parent: System.Activities
  isExternal: false
  name: InOutArgument<TOperand>
  nameWithType: InOutArgument<TOperand>
  fullName: System.Activities.InOutArgument<TOperand>
  spec.csharp:
  - uid: System.Activities.InOutArgument`1
    name: InOutArgument
    nameWithType: InOutArgument
    fullName: InOutArgument<TOperand>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOperand
    name: TOperand
    nameWithType: TOperand
    fullName: TOperand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.#ctor*
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  isExternal: false
  name: ValueTypeFieldReference<TOperand,TResult>
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.ValueTypeFieldReference<TOperand,TResult>
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.CacheMetadata*
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  isExternal: false
  name: CacheMetadata
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.CacheMetadata
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.Execute*
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  isExternal: false
  name: Execute
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.Execute
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.FieldName*
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  isExternal: false
  name: FieldName
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.FieldName
- uid: System.Activities.Expressions.ValueTypeFieldReference`2.OperandLocation*
  parent: System.Activities.Expressions.ValueTypeFieldReference`2
  isExternal: false
  name: OperandLocation
  nameWithType: ValueTypeFieldReference<TOperand,TResult>.OperandLocation
