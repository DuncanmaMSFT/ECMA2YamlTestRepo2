### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.IPInterfaceProperties
  id: IPInterfaceProperties
  children:
  - System.Net.NetworkInformation.IPInterfaceProperties.#ctor
  - System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix
  - System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties
  - System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties
  - System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled
  - System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled
  - System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses
  - System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses
  langs:
  - csharp
  name: IPInterfaceProperties
  nameWithType: IPInterfaceProperties
  fullName: System.Net.NetworkInformation.IPInterfaceProperties
  type: Class
  summary: Provides information about network interfaces that support Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6).
  remarks: "This class provides access to configuration and address information for network interfaces that support IPv4 or IPv6. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.NetworkInterface.GetIPProperties%2A> method.  \n  \n To access IPv4-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method. To access IPv6-specific properties, use the object returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A> method."
  example:
  - "The following code example displays address information.  \n  \n [!code-cpp[NclNetInfoReport#8](~/add/codesnippet/cpp/t-system.net.networkinfo_26_1.cpp)]\n [!code-cs[NclNetInfoReport#8](~/add/codesnippet/csharp/t-system.net.networkinfo_26_1.cs)]"
  syntax:
    content: public abstract class IPInterfaceProperties
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: IPInterfaceProperties()
  nameWithType: IPInterfaceProperties.IPInterfaceProperties()
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.IPInterfaceProperties()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.IPInterfaceProperties"></xref> class.
  remarks: This constructor can be called only from classes that derive from <xref:System.Net.NetworkInformation.IPInterfaceProperties>.
  syntax:
    content: protected IPInterfaceProperties ();
    parameters: []
  overload: System.Net.NetworkInformation.IPInterfaceProperties.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses
  id: AnycastAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: AnycastAddresses
  nameWithType: IPInterfaceProperties.AnycastAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the anycast IP addresses assigned to this interface.
  remarks: An anycast address identifies multiple computers. Packets sent to an anycast address are sent to one of the computers identified by the address. Anycast addressing is an IPv6 feature used to update router tables for a group of hosts.
  example:
  - "The following code example displays the anycast addresses for the network interfaces on the local computer.  \n  \n [!code-cs[NclNetInfo2#43](~/add/codesnippet/csharp/p-system.net.networkinfo_47_1.cs)]\n [!code-vb[NclNetInfo2#43](~/add/codesnippet/visualbasic/p-system.net.networkinfo_47_1.vb)]\n [!code-cpp[NclNetInfo2#43](~/add/codesnippet/cpp/p-system.net.networkinfo_47_1.cpp)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.IPAddressInformationCollection AnycastAddresses { get; }
    return:
      type: System.Net.NetworkInformation.IPAddressInformationCollection
      description: An <xref href="System.Net.NetworkInformation.IPAddressInformationCollection"></xref> that contains the anycast addresses for this interface.
  overload: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses
  id: DhcpServerAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: DhcpServerAddresses
  nameWithType: IPInterfaceProperties.DhcpServerAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the addresses of Dynamic Host Configuration Protocol (DHCP) servers for this interface.
  remarks: Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address. A DHCP server does not permanently assign addresses; instead, it temporarily uses one of a number of available addresses to the computer.
  example:
  - "The following code example displays the DHCP address information for the network interfaces on the local computer.  \n  \n [!code-cs[NclNetInfo2#46](~/add/codesnippet/csharp/p-system.net.networkinfo_9_1.cs)]\n [!code-vb[NclNetInfo2#46](~/add/codesnippet/visualbasic/p-system.net.networkinfo_9_1.vb)]\n [!code-cpp[NclNetInfo2#46](~/add/codesnippet/cpp/p-system.net.networkinfo_9_1.cpp)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.IPAddressCollection DhcpServerAddresses { get; }
    return:
      type: System.Net.NetworkInformation.IPAddressCollection
      description: An <xref href="System.Net.NetworkInformation.IPAddressCollection"></xref> that contains the address information for DHCP servers, or an empty array if no servers are found.
  overload: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses
  id: DnsAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: DnsAddresses
  nameWithType: IPInterfaceProperties.DnsAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the addresses of Domain Name System (DNS) servers for this interface.
  remarks: DNS is a hierarchical naming system used to map host names to IP addresses.
  example:
  - "The following code example displays the DNS addresses for the network interfaces on the local computer.  \n  \n [!code-cs[NclNetInfo2#42](~/add/codesnippet/csharp/p-system.net.networkinfo_44_1.cs)]\n [!code-vb[NclNetInfo2#42](~/add/codesnippet/visualbasic/p-system.net.networkinfo_44_1.vb)]\n [!code-cpp[NclNetInfo2#42](~/add/codesnippet/cpp/p-system.net.networkinfo_44_1.cpp)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.IPAddressCollection DnsAddresses { get; }
    return:
      type: System.Net.NetworkInformation.IPAddressCollection
      description: A <xref href="System.Net.NetworkInformation.IPAddressCollection"></xref> that contains the DNS server addresses.
  overload: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix
  id: DnsSuffix
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: DnsSuffix
  nameWithType: IPInterfaceProperties.DnsSuffix
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the Domain Name System (DNS) suffix associated with this interface.
  remarks: The DNS suffix identifies the domain name (for example, "contoso.com") that is appended to an unqualified host name to obtain a fully qualified domain name (FQDN) suitable for a DNS name query. For example, if the local machine has "contoso.com" as its DnsSuffix, and must resolve the unqualified host name "www", the FQDN to query is "www.contoso.com".
  example:
  - "The following code example displays the DNS suffix.  \n  \n [!code-cs[NclNetInfo2#41](~/add/codesnippet/csharp/p-system.net.networkinfo_3_1.cs)]\n [!code-vb[NclNetInfo2#41](~/add/codesnippet/visualbasic/p-system.net.networkinfo_3_1.vb)]\n [!code-cpp[NclNetInfo2#41](~/add/codesnippet/cpp/p-system.net.networkinfo_3_1.cpp)]"
  syntax:
    content: public abstract string DnsSuffix { get; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the DNS suffix for this interface, or <xref href="System.String"></xref> if there is no DNS suffix for the interface.
  overload: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: This property is not valid on computers running operating systems earlier than Windows 2000.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses
  id: GatewayAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: GatewayAddresses
  nameWithType: IPInterfaceProperties.GatewayAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the IPv4 network gateway addresses for this interface.
  remarks: Gateways that implement the Internet Protocol Version 4 (IPv4) to forward packets between networks are returned by this property.
  example:
  - "The following code example displays the gateway addresses for the network interfaces on the local computer.  \n  \n [!code-cs[NclNetInfo2#47](~/add/codesnippet/csharp/p-system.net.networkinfo_112_1.cs)]\n [!code-vb[NclNetInfo2#47](~/add/codesnippet/visualbasic/p-system.net.networkinfo_112_1.vb)]\n [!code-cpp[NclNetInfo2#47](~/add/codesnippet/cpp/p-system.net.networkinfo_112_1.cpp)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.GatewayIPAddressInformationCollection GatewayAddresses { get; }
    return:
      type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
      description: An <xref href="System.Net.NetworkInformation.GatewayIPAddressInformationCollection"></xref> that contains the address information for network gateways, or an empty array if no gateways are found.
  overload: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties
  id: GetIPv4Properties
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: GetIPv4Properties()
  nameWithType: IPInterfaceProperties.GetIPv4Properties()
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Provides Internet Protocol version 4 (IPv4) configuration data for this network interface.
  remarks: "This property returns `null` for <xref:System.Net.NetworkInformation.NetworkInterfaceType> interfaces.  \n  \n For a detailed description of the information available for an interface that supports IPv4, see the <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> class documentation. Note that the object returned by the GetIPv4Properties method reflects the configuration as of the time the object is created. This information is not updated dynamically."
  syntax:
    content: public abstract System.Net.NetworkInformation.IPv4InterfaceProperties GetIPv4Properties ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPv4InterfaceProperties
      description: An <xref href="System.Net.NetworkInformation.IPv4InterfaceProperties"></xref> object that contains IPv4 configuration data, or `null` if no data is available for the interface.
  overload: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The interface does not support the IPv4 protocol.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties
  id: GetIPv6Properties
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: GetIPv6Properties()
  nameWithType: IPInterfaceProperties.GetIPv6Properties()
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Provides Internet Protocol version 6 (IPv6) configuration data for this network interface.
  remarks: For a detailed description of the information available for an interface that supports IPv6, see the <xref:System.Net.NetworkInformation.IPv6InterfaceProperties> documentation. Note that the object returned by the GetIPv6Properties method reflects the configuration as of the time the object is created. This information is not updated dynamically.
  syntax:
    content: public abstract System.Net.NetworkInformation.IPv6InterfaceProperties GetIPv6Properties ();
    parameters: []
    return:
      type: System.Net.NetworkInformation.IPv6InterfaceProperties
      description: An <xref href="System.Net.NetworkInformation.IPv6InterfaceProperties"></xref> object that contains IPv6 configuration data.
  overload: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties*
  exceptions:
  - type: System.Net.NetworkInformation.NetworkInformationException
    commentId: T:System.Net.NetworkInformation.NetworkInformationException
    description: The interface does not support the IPv6 protocol.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled
  id: IsDnsEnabled
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: IsDnsEnabled
  nameWithType: IPInterfaceProperties.IsDnsEnabled
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that indicates whether NetBt is configured to use DNS name resolution on this interface.
  remarks: DNS is a hierarchical naming system used to map host names to IP addresses.
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cs[NclNetInfo2#41](~/add/codesnippet/csharp/p-system.net.networkinfo_55_1.cs)]\n [!code-vb[NclNetInfo2#41](~/add/codesnippet/visualbasic/p-system.net.networkinfo_55_1.vb)]\n [!code-cpp[NclNetInfo2#41](~/add/codesnippet/cpp/p-system.net.networkinfo_55_1.cpp)]"
  syntax:
    content: public abstract bool IsDnsEnabled { get; }
    return:
      type: System.Boolean
      description: '`true` if NetBt is configured to use DNS name resolution on this interface; otherwise, `false`.'
  overload: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled
  id: IsDynamicDnsEnabled
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: IsDynamicDnsEnabled
  nameWithType: IPInterfaceProperties.IsDynamicDnsEnabled
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets a <xref href="System.Boolean"></xref> value that indicates whether this interface is configured to automatically register its IP address information with the Domain Name System (DNS).
  remarks: Dynamic DNS enables a client to inform the DNS servers that its dynamic IP address is mapped to its static host name.
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cs[NclNetInfo2#41](~/add/codesnippet/csharp/p-system.net.networkinfo_122_1.cs)]\n [!code-vb[NclNetInfo2#41](~/add/codesnippet/visualbasic/p-system.net.networkinfo_122_1.vb)]\n [!code-cpp[NclNetInfo2#41](~/add/codesnippet/cpp/p-system.net.networkinfo_122_1.cpp)]"
  syntax:
    content: public abstract bool IsDynamicDnsEnabled { get; }
    return:
      type: System.Boolean
      description: '`true` if this interface is configured to automatically register a mapping between its dynamic IP address and static domain names; otherwise, `false`.'
  overload: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses
  id: MulticastAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: MulticastAddresses
  nameWithType: IPInterfaceProperties.MulticastAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the multicast addresses assigned to this interface.
  remarks: A multicast address identifies multiple computers. Packets sent to a multicast address are sent to all computers identified by the address.
  example:
  - "The following code example displays the multicast addresses for the network interfaces on the local computer.  \n  \n [!code-cs[NclNetInfo2#44](~/add/codesnippet/csharp/p-system.net.networkinfo_10_1.cs)]\n [!code-vb[NclNetInfo2#44](~/add/codesnippet/visualbasic/p-system.net.networkinfo_10_1.vb)]\n [!code-cpp[NclNetInfo2#44](~/add/codesnippet/cpp/p-system.net.networkinfo_10_1.cpp)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.MulticastIPAddressInformationCollection MulticastAddresses { get; }
    return:
      type: System.Net.NetworkInformation.MulticastIPAddressInformationCollection
      description: An <xref href="System.Net.NetworkInformation.MulticastIPAddressInformationCollection"></xref> that contains the multicast addresses for this interface.
  overload: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses
  id: UnicastAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: UnicastAddresses
  nameWithType: IPInterfaceProperties.UnicastAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the unicast addresses assigned to this interface.
  remarks: A unicast address identifies a single computer. Packets sent to a unicast address are sent to the computer identified by the address.
  example:
  - "The following code example displays the unicast addresses for the network interfaces on the local computer.  \n  \n [!code-cs[NclNetInfo2#45](~/add/codesnippet/csharp/p-system.net.networkinfo_32_1.cs)]\n [!code-vb[NclNetInfo2#45](~/add/codesnippet/visualbasic/p-system.net.networkinfo_32_1.vb)]\n [!code-cpp[NclNetInfo2#45](~/add/codesnippet/cpp/p-system.net.networkinfo_32_1.cpp)]"
  syntax:
    content: public abstract System.Net.NetworkInformation.UnicastIPAddressInformationCollection UnicastAddresses { get; }
    return:
      type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
      description: An <xref href="System.Net.NetworkInformation.UnicastIPAddressInformationCollection"></xref> that contains the unicast addresses for this interface.
  overload: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses
  id: WinsServersAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  langs:
  - csharp
  name: WinsServersAddresses
  nameWithType: IPInterfaceProperties.WinsServersAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets the addresses of Windows Internet Name Service (WINS) servers.
  remarks: WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.
  syntax:
    content: public abstract System.Net.NetworkInformation.IPAddressCollection WinsServersAddresses { get; }
    return:
      type: System.Net.NetworkInformation.IPAddressCollection
      description: An <xref href="System.Net.NetworkInformation.IPAddressCollection"></xref> that contains the address information for WINS servers, or an empty array if no servers are found.
  overload: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Net.NetworkInformation\IPInterfaceProperties.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Net.NetworkInformation/IPInterfaceProperties.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  parent: System
  isExternal: false
  name: PlatformNotSupportedException
  nameWithType: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.Net.NetworkInformation.NetworkInformationException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: NetworkInformationException
  nameWithType: NetworkInformationException
  fullName: System.Net.NetworkInformation.NetworkInformationException
- uid: System.Net.NetworkInformation.IPInterfaceProperties.#ctor
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: IPInterfaceProperties()
  nameWithType: IPInterfaceProperties.IPInterfaceProperties()
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.IPInterfaceProperties()
- uid: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: AnycastAddresses
  nameWithType: IPInterfaceProperties.AnycastAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses
- uid: System.Net.NetworkInformation.IPAddressInformationCollection
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPAddressInformationCollection
  nameWithType: IPAddressInformationCollection
  fullName: System.Net.NetworkInformation.IPAddressInformationCollection
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: DhcpServerAddresses
  nameWithType: IPInterfaceProperties.DhcpServerAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses
- uid: System.Net.NetworkInformation.IPAddressCollection
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPAddressCollection
  nameWithType: IPAddressCollection
  fullName: System.Net.NetworkInformation.IPAddressCollection
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: DnsAddresses
  nameWithType: IPInterfaceProperties.DnsAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: DnsSuffix
  nameWithType: IPInterfaceProperties.DnsSuffix
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: GatewayAddresses
  nameWithType: IPInterfaceProperties.GatewayAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  parent: System.Net.NetworkInformation
  isExternal: false
  name: GatewayIPAddressInformationCollection
  nameWithType: GatewayIPAddressInformationCollection
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: GetIPv4Properties()
  nameWithType: IPInterfaceProperties.GetIPv4Properties()
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties()
- uid: System.Net.NetworkInformation.IPv4InterfaceProperties
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPv4InterfaceProperties
  nameWithType: IPv4InterfaceProperties
  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: GetIPv6Properties()
  nameWithType: IPInterfaceProperties.GetIPv6Properties()
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties()
- uid: System.Net.NetworkInformation.IPv6InterfaceProperties
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPv6InterfaceProperties
  nameWithType: IPv6InterfaceProperties
  fullName: System.Net.NetworkInformation.IPv6InterfaceProperties
- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: IsDnsEnabled
  nameWithType: IPInterfaceProperties.IsDnsEnabled
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: IsDynamicDnsEnabled
  nameWithType: IPInterfaceProperties.IsDynamicDnsEnabled
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled
- uid: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: MulticastAddresses
  nameWithType: IPInterfaceProperties.MulticastAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses
- uid: System.Net.NetworkInformation.MulticastIPAddressInformationCollection
  parent: System.Net.NetworkInformation
  isExternal: false
  name: MulticastIPAddressInformationCollection
  nameWithType: MulticastIPAddressInformationCollection
  fullName: System.Net.NetworkInformation.MulticastIPAddressInformationCollection
- uid: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: UnicastAddresses
  nameWithType: IPInterfaceProperties.UnicastAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses
- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
  parent: System.Net.NetworkInformation
  isExternal: false
  name: UnicastIPAddressInformationCollection
  nameWithType: UnicastIPAddressInformationCollection
  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
- uid: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: WinsServersAddresses
  nameWithType: IPInterfaceProperties.WinsServersAddresses
  fullName: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses
- uid: System.Net.NetworkInformation.IPInterfaceProperties.#ctor*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: IPInterfaceProperties
  nameWithType: IPInterfaceProperties.IPInterfaceProperties
- uid: System.Net.NetworkInformation.IPInterfaceProperties.AnycastAddresses*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: AnycastAddresses
  nameWithType: IPInterfaceProperties.AnycastAddresses
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DhcpServerAddresses*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: DhcpServerAddresses
  nameWithType: IPInterfaceProperties.DhcpServerAddresses
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsAddresses*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: DnsAddresses
  nameWithType: IPInterfaceProperties.DnsAddresses
- uid: System.Net.NetworkInformation.IPInterfaceProperties.DnsSuffix*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: DnsSuffix
  nameWithType: IPInterfaceProperties.DnsSuffix
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GatewayAddresses*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: GatewayAddresses
  nameWithType: IPInterfaceProperties.GatewayAddresses
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: GetIPv4Properties
  nameWithType: IPInterfaceProperties.GetIPv4Properties
- uid: System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: GetIPv6Properties
  nameWithType: IPInterfaceProperties.GetIPv6Properties
- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDnsEnabled*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: IsDnsEnabled
  nameWithType: IPInterfaceProperties.IsDnsEnabled
- uid: System.Net.NetworkInformation.IPInterfaceProperties.IsDynamicDnsEnabled*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: IsDynamicDnsEnabled
  nameWithType: IPInterfaceProperties.IsDynamicDnsEnabled
- uid: System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: MulticastAddresses
  nameWithType: IPInterfaceProperties.MulticastAddresses
- uid: System.Net.NetworkInformation.IPInterfaceProperties.UnicastAddresses*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: UnicastAddresses
  nameWithType: IPInterfaceProperties.UnicastAddresses
- uid: System.Net.NetworkInformation.IPInterfaceProperties.WinsServersAddresses*
  parent: System.Net.NetworkInformation.IPInterfaceProperties
  isExternal: false
  name: WinsServersAddresses
  nameWithType: IPInterfaceProperties.WinsServersAddresses
