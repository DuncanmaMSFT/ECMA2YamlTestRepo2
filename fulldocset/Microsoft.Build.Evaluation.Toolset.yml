### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.Toolset
  id: Toolset
  children:
  - Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)
  - Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)
  - Microsoft.Build.Evaluation.Toolset.Properties
  - Microsoft.Build.Evaluation.Toolset.ToolsPath
  - Microsoft.Build.Evaluation.Toolset.ToolsVersion
  langs:
  - csharp
  name: Toolset
  nameWithType: Toolset
  fullName: Microsoft.Build.Evaluation.Toolset
  type: Class
  summary: Represent an aggregation of a tools version (eg. "2.0"), tools path, and optional set of associated properties.
  remarks: 'UNDONE: (danmose) Review immutability. If this is not immutable, add a mechanism to notify the project collection/s owning it to increment their toolsetVersion.'
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("ToolsVersion={ToolsVersion} ToolsPath={ToolsPath} #Properties={properties.Count}")]

      public class Toolset
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.0
- uid: Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)
  id: '#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)'
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: Toolset(String,String,ProjectCollection,String)
  nameWithType: Toolset.Toolset(String,String,ProjectCollection,String)
  fullName: Microsoft.Build.Evaluation.Toolset.Toolset(String,String,ProjectCollection,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Creates a toolset with the given tools version and tools path. Global, reserved, and environment properties are taken from the given project collection.
  syntax:
    content: public Toolset (string toolsVersion, string toolsPath, Microsoft.Build.Evaluation.ProjectCollection projectCollection, string msbuildOverrideTasksPath);
    parameters:
    - id: toolsVersion
      type: System.String
      description: Name of the toolset
    - id: toolsPath
      type: System.String
      description: Path to this toolset's tasks and targets
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: The project collection from which to obtain the properties.
    - id: msbuildOverrideTasksPath
      type: System.String
      description: The path to search for msbuild overridetasks files.
  overload: Microsoft.Build.Evaluation.Toolset.#ctor*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)'
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
  nameWithType: Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
  fullName: Microsoft.Build.Evaluation.Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Creates a toolset with the given tools version, tools path, and build properties. Global, reserved, and environment properties are taken from the given project collection.
  syntax:
    content: public Toolset (string toolsVersion, string toolsPath, System.Collections.Generic.IDictionary<string,string> buildProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection, string msbuildOverrideTasksPath);
    parameters:
    - id: toolsVersion
      type: System.String
      description: Name of the toolset
    - id: toolsPath
      type: System.String
      description: Path to this toolset's tasks and targets
    - id: buildProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Properties that should be associated with the Toolset.  \n  \n May be null, in which case an empty property group will be used."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: The project collection from which to obtain the properties.
    - id: msbuildOverrideTasksPath
      type: System.String
      description: The path to search for msbuild overridetasks files.
  overload: Microsoft.Build.Evaluation.Toolset.#ctor*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Evaluation.Toolset.Properties
  id: Properties
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: Properties
  nameWithType: Toolset.Properties
  fullName: Microsoft.Build.Evaluation.Toolset.Properties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Gets the optional properties associated with the toolset.
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectPropertyInstance> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectPropertyInstance}
      description: Returns the optional properties associated with the toolset.
  overload: Microsoft.Build.Evaluation.Toolset.Properties*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Evaluation.Toolset.ToolsPath
  id: ToolsPath
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: ToolsPath
  nameWithType: Toolset.ToolsPath
  fullName: Microsoft.Build.Evaluation.Toolset.ToolsPath
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Gets a path to the tasks and targets of this toolset.
  remarks: Corresponds to $(MSBuildToolsPath) in a project or targets file.
  syntax:
    content: public string ToolsPath { get; }
    return:
      type: System.String
      description: Returns a path to the tasks and targets of this toolset.
  overload: Microsoft.Build.Evaluation.Toolset.ToolsPath*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Evaluation.Toolset.ToolsVersion
  id: ToolsVersion
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: ToolsVersion
  nameWithType: Toolset.ToolsVersion
  fullName: Microsoft.Build.Evaluation.Toolset.ToolsVersion
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Gets the name of this toolset.
  syntax:
    content: public string ToolsVersion { get; }
    return:
      type: System.String
      description: Returns the name of this toolset.
  overload: Microsoft.Build.Evaluation.Toolset.ToolsVersion*
  exceptions: []
  version:
  - netframework-4.0
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: Toolset(String,String,ProjectCollection,String)
  nameWithType: Toolset.Toolset(String,String,ProjectCollection,String)
  fullName: Microsoft.Build.Evaluation.Toolset.Toolset(String,String,ProjectCollection,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.ProjectCollection
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectCollection
  nameWithType: ProjectCollection
  fullName: Microsoft.Build.Evaluation.ProjectCollection
- uid: Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
  nameWithType: Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
  fullName: Microsoft.Build.Evaluation.Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Toolset.Properties
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: Properties
  nameWithType: Toolset.Properties
  fullName: Microsoft.Build.Evaluation.Toolset.Properties
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectPropertyInstance}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,ProjectPropertyInstance>
  nameWithType: IDictionary<String,ProjectPropertyInstance>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectPropertyInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.ProjectPropertyInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.ProjectPropertyInstance
    name: ProjectPropertyInstance
    nameWithType: ProjectPropertyInstance
    fullName: ProjectPropertyInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.Toolset.ToolsPath
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: ToolsPath
  nameWithType: Toolset.ToolsPath
  fullName: Microsoft.Build.Evaluation.Toolset.ToolsPath
- uid: Microsoft.Build.Evaluation.Toolset.ToolsVersion
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: ToolsVersion
  nameWithType: Toolset.ToolsVersion
  fullName: Microsoft.Build.Evaluation.Toolset.ToolsVersion
- uid: Microsoft.Build.Evaluation.Toolset.#ctor*
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: Toolset
  nameWithType: Toolset.Toolset
- uid: Microsoft.Build.Evaluation.Toolset.Properties*
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: Properties
  nameWithType: Toolset.Properties
- uid: Microsoft.Build.Evaluation.Toolset.ToolsPath*
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: ToolsPath
  nameWithType: Toolset.ToolsPath
- uid: Microsoft.Build.Evaluation.Toolset.ToolsVersion*
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: ToolsVersion
  nameWithType: Toolset.ToolsVersion
