### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlArrayItemAttribute
  id: XmlArrayItemAttribute
  children:
  - System.Xml.Serialization.XmlArrayItemAttribute.#ctor
  - System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)
  - System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)
  - System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)
  - System.Xml.Serialization.XmlArrayItemAttribute.DataType
  - System.Xml.Serialization.XmlArrayItemAttribute.ElementName
  - System.Xml.Serialization.XmlArrayItemAttribute.Form
  - System.Xml.Serialization.XmlArrayItemAttribute.IsNullable
  - System.Xml.Serialization.XmlArrayItemAttribute.Namespace
  - System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel
  - System.Xml.Serialization.XmlArrayItemAttribute.Type
  langs:
  - csharp
  name: XmlArrayItemAttribute
  nameWithType: XmlArrayItemAttribute
  fullName: System.Xml.Serialization.XmlArrayItemAttribute
  type: Class
  summary: Represents an attribute that specifies the derived types that the <xref href="System.Xml.Serialization.XmlSerializer"></xref> can place in a serialized array.
  remarks: "The XmlArrayItemAttribute belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object. For a complete list of similar attributes, see [Attributes That Control XML Serialization](../Topic/Attributes%20That%20Control%20XML%20Serialization.md).  \n  \n You can apply the XmlArrayItemAttribute to any public read/write member that returns an array, or provides access to one. For example, a field that returns an array of objects, a collection, an <xref:System.Collections.ArrayList>, or any class that implements the <xref:System.Collections.IEnumerable> interface.  \n  \n The XmlArrayItemAttribute supports polymorphism--in other words, it allows the <xref:System.Xml.Serialization.XmlSerializer> to add derived objects to an array. For example, suppose a class named `Mammal` is derived from a base class named `Animal`. Further suppose that a class named `MyAnimals` contains a field that returns an array of `Animal` objects. To allow the <xref:System.Xml.Serialization.XmlSerializer> to serialize both the `Animal` and `Mammal` type, apply the XmlArrayItemAttribute to the field twice, each time specifying one of the two acceptable types.  \n  \n> [!NOTE]\n>  You can apply multiple instances of the XmlArrayItemAttribute or <xref:System.Xml.Serialization.XmlElementAttribute> to specify types of objects that can be inserted into the array.  \n  \n> [!NOTE]\n>  The serialization of a field or property that returns an interface or array of interfaces is not supported.  \n  \n For more information about using attributes, see [Attributes](../Topic/Extending%20Metadata%20Using%20Attributes.md).  \n  \n> [!NOTE]\n>  You can use the word `XmlArrayItem` in your code instead of the longer XmlArrayItemAttribute."
  example:
  - "The following example serializes a class named `Group` that contains a field named `Employees` that returns an array of `Employee` objects. The example applies the XmlArrayItemAttribute to the field, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> that it can insert objects of both the base class (`Employee`) type and derived class type (`Manager`) into the serialized array.  \n  \n [!code-vb[Classic XmlArrayItemAttribute Example#1](~/add/codesnippet/visualbasic/t-system.xml.serializati_27_1.vb)]\n [!code-cpp[Classic XmlArrayItemAttribute Example#1](~/add/codesnippet/cpp/t-system.xml.serializati_27_1.cpp)]\n [!code-cs[Classic XmlArrayItemAttribute Example#1](~/add/codesnippet/csharp/t-system.xml.serializati_27_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)]

      public class XmlArrayItemAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: XmlArrayItemAttribute()
  nameWithType: XmlArrayItemAttribute.XmlArrayItemAttribute()
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Initializes a new instance of the <xref href="System.Xml.Serialization.XmlArrayItemAttribute"></xref> class.
  remarks: ''
  example:
  - "The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects. The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.  \n  \n [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.serializati_23_1.cpp)]\n [!code-cs[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.serializati_23_1.cs)]\n [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_23_1.vb)]"
  syntax:
    content: public XmlArrayItemAttribute ();
    parameters: []
  overload: System.Xml.Serialization.XmlArrayItemAttribute.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: XmlArrayItemAttribute(String)
  nameWithType: XmlArrayItemAttribute.XmlArrayItemAttribute(String)
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute(String)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Initializes a new instance of the <xref href="System.Xml.Serialization.XmlArrayItemAttribute"></xref> class and specifies the name of the XML element generated in the XML document.
  remarks: "This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.  \n  \n Use this overload if you want the name of the generated XML element to differ from the member's identifier.  \n  \n An XML document that includes namespaces can contain more than one version of an element name. For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property."
  example:
  - "The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects. The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array. While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter.  \n  \n [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/add/codesnippet/cpp/m-system.xml.serializati_20_1.cpp)]\n [!code-cs[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/add/codesnippet/csharp/m-system.xml.serializati_20_1.cs)]\n [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_20_1.vb)]"
  syntax:
    content: public XmlArrayItemAttribute (string elementName);
    parameters:
    - id: elementName
      type: System.String
      description: The name of the XML element.
  overload: System.Xml.Serialization.XmlArrayItemAttribute.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: XmlArrayItemAttribute(Type)
  nameWithType: XmlArrayItemAttribute.XmlArrayItemAttribute(Type)
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute(Type)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Initializes a new instance of the <xref href="System.Xml.Serialization.XmlArrayItemAttribute"></xref> class and specifies the <xref href="System.Type"></xref> that can be inserted into the serialized array.
  remarks: ''
  example:
  - "The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects. The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array. While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.  \n  \n [!code-cs[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/add/codesnippet/csharp/m-system.xml.serializati_13_1.cs)]\n [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/add/codesnippet/visualbasic/m-system.xml.serializati_13_1.vb)]\n [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/add/codesnippet/cpp/m-system.xml.serializati_13_1.cpp)]"
  syntax:
    content: public XmlArrayItemAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> of the object to serialize.
  overload: System.Xml.Serialization.XmlArrayItemAttribute.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: XmlArrayItemAttribute(String,Type)
  nameWithType: XmlArrayItemAttribute.XmlArrayItemAttribute(String,Type)
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Initializes a new instance of the <xref href="System.Xml.Serialization.XmlArrayItemAttribute"></xref> class and specifies the name of the XML element generated in the XML document and the <xref href="System.Type"></xref> that can be inserted into the generated XML document.
  remarks: "This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> properties.  \n  \n Use this overload if you want the name of the generated XML element to differ from the member's identifier.  \n  \n An XML document that includes namespaces can contain more than one version of an element name. For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property."
  example:
  - "The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects. The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array. While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.  \n  \n [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/add/codesnippet/cpp/8fa1380c-3f51-48aa-b8af-_1.cpp)]\n [!code-cs[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/add/codesnippet/csharp/8fa1380c-3f51-48aa-b8af-_1.cs)]\n [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/add/codesnippet/visualbasic/8fa1380c-3f51-48aa-b8af-_1.vb)]"
  syntax:
    content: public XmlArrayItemAttribute (string elementName, Type type);
    parameters:
    - id: elementName
      type: System.String
      description: The name of the XML element.
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> of the object to serialize.
  overload: System.Xml.Serialization.XmlArrayItemAttribute.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.DataType
  id: DataType
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: DataType
  nameWithType: XmlArrayItemAttribute.DataType
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.DataType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Gets or sets the XML data type of the generated XML element.
  remarks: "The following table lists the XML Schema simple data types with their .NET equivalents.  \n  \n For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> objects, and apply an <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the DataType property set to \"base64Binary\" or \"hexBinary\", as appropriate. For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the DataType set to \"date\" or \"time\".  \n  \n For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with its DataType property set to the XML Schema type. However, this does not change the serialization format, only the schema for the member.  \n  \n> [!NOTE]\n>  The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.  \n  \n> [!NOTE]\n>  Passing binary data as an XML element is more efficient then passing it as an XML attribute.  \n  \n For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document \"XML Schema Part 2: Datatypes.\"  \n  \n|XSD data type|.NET data type|  \n|-------------------|--------------------|  \n|anyURI|<xref:System.String>|  \n|base64Binary|Array of <xref:System.Byte> objects|  \n|boolean|<xref:System.Boolean>|  \n|byte|<xref:System.SByte>|  \n|date|<xref:System.DateTime>|  \n|dateTime|<xref:System.DateTime>|  \n|decimal|<xref:System.Decimal>|  \n|double|<xref:System.Double>|  \n|ENTITY|<xref:System.String>|  \n|ENTITIES|<xref:System.String>|  \n|float|<xref:System.Single>|  \n|gDay|<xref:System.String>|  \n|gMonth|<xref:System.String>|  \n|gMonthDay|<xref:System.String>|  \n|gYear|<xref:System.String>|  \n|gYearMonth|<xref:System.String>|  \n|hexBinary|Array of <xref:System.Byte> objects|  \n|ID|<xref:System.String>|  \n|IDREF|<xref:System.String>|  \n|IDREFS|<xref:System.String>|  \n|int|<xref:System.Int32>|  \n|integer|<xref:System.String>|  \n|language|<xref:System.String>|  \n|long|<xref:System.Int64>|  \n|Name|<xref:System.String>|  \n|NCName|<xref:System.String>|  \n|negativeInteger|<xref:System.String>|  \n|NMTOKEN|<xref:System.String>|  \n|NMTOKENS|<xref:System.String>|  \n|normalizedString|<xref:System.String>|  \n|nonNegativeInteger|<xref:System.String>|  \n|nonPositiveInteger|<xref:System.String>|  \n|NOTATION|<xref:System.String>|  \n|positiveInteger|<xref:System.String>|  \n|QName|<xref:System.Xml.XmlQualifiedName>|  \n|duration|<xref:System.String>|  \n|string|<xref:System.String>|  \n|short|<xref:System.Int16>|  \n|time|<xref:System.DateTime>|  \n|token|<xref:System.String>|  \n|unsignedByte|<xref:System.Byte>|  \n|unsignedInt|<xref:System.UInt32>|  \n|unsignedLong|<xref:System.UInt64>|  \n|unsignedShort|<xref:System.UInt16>|"
  example:
  - "The following example serializes a class named `PurchaseOrder`. Several instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> class are applied to three members, and the DataType property for each instance is set to a type allowed in the array.  \n  \n [!code-cs[XmlArrayItemAttribute Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_37_1.cs)]\n [!code-cpp[XmlArrayItemAttribute Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_37_1.cpp)]\n [!code-vb[XmlArrayItemAttribute Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_37_1.vb)]"
  syntax:
    content: public string DataType { get; set; }
    return:
      type: System.String
      description: 'An XML schema definition (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: DataTypes".'
  overload: System.Xml.Serialization.XmlArrayItemAttribute.DataType*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.ElementName
  id: ElementName
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: ElementName
  nameWithType: XmlArrayItemAttribute.ElementName
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.ElementName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Gets or sets the name of the generated XML element.
  remarks: "Specify an ElementName if you want the name of the generated XML element to differ from the member's identifier.  \n  \n You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between identically named members. For details about how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class."
  example:
  - "The following example sets the ElementName property for the `Vehicle` and `Car` class--thereby changing the names of XML elements that the <xref:System.Xml.Serialization.XmlSerializer> generates for those classes.  \n  \n [!code-cs[Classic XmlArrayItemAttribute.ElementName Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_6_1.cs)]\n [!code-cpp[Classic XmlArrayItemAttribute.ElementName Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_6_1.cpp)]\n [!code-vb[Classic XmlArrayItemAttribute.ElementName Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_6_1.vb)]"
  syntax:
    content: public string ElementName { get; set; }
    return:
      type: System.String
      description: The name of the generated XML element. The default is the member identifier.
  overload: System.Xml.Serialization.XmlArrayItemAttribute.ElementName*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Form
  id: Form
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: Form
  nameWithType: XmlArrayItemAttribute.Form
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.Form
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Gets or sets a value that indicates whether the name of the generated XML element is qualified.
  remarks: "The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element name is qualified, based on the World Wide Web Consortium (www.w3.org) specification \"Namespaces in XML.\"  \n  \n If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.  \n  \n The default value, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified. For elements, the <xref:System.Xml.Serialization.XmlSerializer> checks the value of the schema-element attribute `elementFormDefault`. For attributes, it checks the value of the schema-element attribute `attributeFormDefault`. For example, the following XML Schema indicates that the `Name` element is qualified, while the `Number` element is unqualified.  \n  \n```  \n<schema elementFormDefault=\"qualified\"   \nattributeFormDefault=\"unqualified\">  \n   <element name=\"Name\"/>  \n   <attribute name=\"Number\"/>  \n</schema>  \n```"
  example:
  - "The following example sets the Form property for the `Vehicle` class to `XmlSchemaForm.Unqualified`, and the Form property for the `Car` class to `XmlSchemaForm.Qualified`.  \n  \n [!code-vb[Classic XmlArrayItemAttribute.Form Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_54_1.vb)]\n [!code-cpp[Classic XmlArrayItemAttribute.Form Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_54_1.cpp)]\n [!code-cs[Classic XmlArrayItemAttribute.Form Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_54_1.cs)]"
  syntax:
    content: public System.Xml.Schema.XmlSchemaForm Form { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaForm
      description: One of the <xref href="System.Xml.Schema.XmlSchemaForm"></xref> values. The default is `XmlSchemaForm.None`.
  overload: System.Xml.Serialization.XmlArrayItemAttribute.Form*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: The Form property is set to `XmlSchemaForm.Unqualified` and a <xref href="stem.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A"></xref> value is specified.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.IsNullable
  id: IsNullable
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: IsNullable
  nameWithType: XmlArrayItemAttribute.IsNullable
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.IsNullable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Gets or sets a value that indicates whether the <xref href="System.Xml.Serialization.XmlSerializer"></xref> must serialize a member as an empty XML tag with the `xsi:nil` attribute set to `true`.
  remarks: "The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing. Such an element contains the attribute `xsi:nil` set to `true`. For more information, see the World Wide Web Consortium (www.w3.org) specification titled \"XML Schema Part 1: Structures.\"  \n  \n If the IsNullable property is `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`. For example, if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.  \n  \n```  \n<MyStringArray xsi:nil = \"true\" />  \n```  \n  \n If the IsNullable property is `false`, no XML element is generated.  \n  \n> [!NOTE]\n>  You cannot apply the IsNullable property to a member typed as a value type because a value type cannot contain `null`."
  example:
  - "The following example serializes a class named `Group`, which contains a field named `Employees` that returns an array of `Employee` objects. A second class named `Manager` derives from `Employee`. An <xref:System.Xml.Serialization.XmlArrayItemAttribute> specifies that the <xref:System.Xml.Serialization.XmlSerializer> can insert both `Employee` and `Manager` objects into the array. The example sets the IsNullable property, thereby telling the <xref:System.Xml.Serialization.XmlSerializer> not to generate the `xsi:nil` attribute objects in the array set to `null`.  \n  \n [!code-cpp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_1_1.cpp)]\n [!code-cs[Classic XmlArrayItemAttribute.IsNullable Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_1_1.cs)]\n [!code-vb[Classic XmlArrayItemAttribute.IsNullable Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_1_1.vb)]"
  syntax:
    content: public bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Xml.Serialization.XmlSerializer"></xref> generates the `xsi:nil` attribute; otherwise, `false`, and no instance is generated. The default is `true`.'
  overload: System.Xml.Serialization.XmlArrayItemAttribute.IsNullable*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Namespace
  id: Namespace
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: XmlArrayItemAttribute.Namespace
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.Namespace
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Gets or sets the namespace of the generated XML element.
  remarks: "The Namespace property conforms to the World Wide Web Consortium (www.w3.org) specification \"Namespaces in XML.\"  \n  \n To create namespaces to use in the XML document and associated prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains all the prefix and namespace pairs. The namespace you set for each <xref:System.Xml.Serialization.XmlArrayAttribute> must be contained in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>. When the <xref:System.Xml.Serialization.XmlSerializer> generates the document, it correctly prefixes the element name for each array item."
  example:
  - "The following example applies an <xref:System.Xml.Serialization.XmlArrayItemAttribute> and sets the Namespace property.  \n  \n [!code-cpp[Classic XmlArrayItemAttribute.Namespace Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_27_1.cpp)]\n [!code-vb[Classic XmlArrayItemAttribute.Namespace Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_27_1.vb)]\n [!code-cs[Classic XmlArrayItemAttribute.Namespace Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_27_1.cs)]"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: The namespace of the generated XML element.
  overload: System.Xml.Serialization.XmlArrayItemAttribute.Namespace*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel
  id: NestingLevel
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: NestingLevel
  nameWithType: XmlArrayItemAttribute.NestingLevel
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Gets or sets the level in a hierarchy of XML elements that the <xref href="System.Xml.Serialization.XmlArrayItemAttribute"></xref> affects.
  remarks: "An XML document can contain hierarchies of XML elements. To represent such a hierarchy, an array of arrays is used. In such an array, each index represents a level in the hierarchy. Therefore, the NestingLevel property is only used when applying an <xref:System.Xml.Serialization.XmlArrayItemAttribute> to a field that returns an array of arrays.  \n  \n When applying the attribute, specify which hierarchy level the attribute affects by setting the NestingLevel. The first index always has the value of 0; therefore it is optional to set its NestingLevel --an <xref:System.Xml.Serialization.XmlArrayItemAttribute> without a NestingLevel value is applied to the first array index. Only the subsequent <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects require NestingLevel values specified (as 1, 2, 3, and so forth)."
  example:
  - "The following example applies three <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to an array of arrays. To specify which of the arrays each attribute applies to, the NestingLevel property is set to the index of the arrays.  \n  \n [!code-cpp[NestingLevel#1](~/add/codesnippet/cpp/p-system.xml.serializati_60_1.cpp)]\n [!code-cs[NestingLevel#1](~/add/codesnippet/csharp/p-system.xml.serializati_60_1.cs)]"
  syntax:
    content: public int NestingLevel { get; set; }
    return:
      type: System.Int32
      description: The zero-based index of a set of indexes in an array of arrays.
  overload: System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Type
  id: Type
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  langs:
  - csharp
  name: Type
  nameWithType: XmlArrayItemAttribute.Type
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.Type
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: Gets or sets the type allowed in an array.
  remarks: "Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify an overridden type for a public field or public read/write property value.  \n  \n If a field or property returns an array of type <xref:System.Object>, apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field or property. For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.  \n  \n If an array contains only primitive types, you do not need to apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute>. By default, the <xref:System.Xml.Serialization.XmlSerializer> generates a series of elements, each with the same element name, for each value, but the type of each element is set to the XML Schema data type. For example, the following code:  \n  \n```  \n' Visual Basic code  \nPublic Class Arrays  \n   Public XSDTypes ()As Object= New Object(){\"one\", 2, 3.0}  \nEnd Class  \n// C# code  \npublic class MyArray{  \n   // No XmlArrayItemAttribute is applied.  \n   public object[] XSDTypes= new object[]{\"one\", 2, 3.2};  \n}  \n```  \n  \n results in this XML:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<Arrays xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">  \n  <XSDTypes>  \n    <Object xsi:type=\"xsd:string\">one</Object>  \n    <Object xsi:type=\"xsd:int\">2</Object>  \n    <Object xsi:type=\"xsd:double\">3</Object>  \n  </XSDTypes>  \n</Arrays>  \n```  \n  \n However, if you specify the Type property for each primitive type, the element name for each value is generated using the .NET type name. For example this code:  \n  \n```  \n' Visual Basic code  \nPublic Class Arrays  \n   <XmlArrayItem(GetType(String)), _  \n   XmlArrayItem(GetType(Integer)), _  \n   XmlArrayItem(GetType(Double))> _  \n   Public PrimitiveTypes () As Object = New Object(){\"one\", 2, 3.0}  \nEnd Class  \n// C# code  \npublic class Arrays{  \n   [XmlArrayItem(typeof(string))]  \n   [XmlArrayItem(typeof(int))]  \n   [XmlArrayItem(typeof(double))]  \n   public object [] PrimitiveTypes = new object[]{\"one\", 2, 3.0};  \n}  \n```  \n  \n results in this XML:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<Arrays xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">  \n  <PrimitiveTypes>  \n    <string>one</string>  \n    <int>2</int>  \n    <double>3</double>  \n  </PrimitiveTypes>  \n</Arrays>  \n```"
  example:
  - "The following example serializes an array of objects. The field that returns the array is attributed with two <xref:System.Xml.Serialization.XmlArrayItemAttribute> instances. Each instance instructs the <xref:System.Xml.Serialization.XmlSerializer> to accept the specified Type in the array.  \n  \n [!code-cpp[Classic XmlArrayItemAttribute.Type Example#1](~/add/codesnippet/cpp/p-system.xml.serializati_3_1.cpp)]\n [!code-vb[Classic XmlArrayItemAttribute.Type Example#1](~/add/codesnippet/visualbasic/p-system.xml.serializati_3_1.vb)]\n [!code-cs[Classic XmlArrayItemAttribute.Type Example#1](~/add/codesnippet/csharp/p-system.xml.serializati_3_1.cs)]"
  syntax:
    content: public Type Type { get; set; }
    return:
      type: System.Type
      description: A <xref href="System.Type"></xref> that is allowed in the array.
  overload: System.Xml.Serialization.XmlArrayItemAttribute.Type*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Serialization\XmlArrayItemAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: XmlArrayItemAttribute()
  nameWithType: XmlArrayItemAttribute.XmlArrayItemAttribute()
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute()
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: XmlArrayItemAttribute(String)
  nameWithType: XmlArrayItemAttribute.XmlArrayItemAttribute(String)
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: XmlArrayItemAttribute(Type)
  nameWithType: XmlArrayItemAttribute.XmlArrayItemAttribute(Type)
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: XmlArrayItemAttribute(String,Type)
  nameWithType: XmlArrayItemAttribute.XmlArrayItemAttribute(String,Type)
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.XmlArrayItemAttribute(String,Type)
- uid: System.Xml.Serialization.XmlArrayItemAttribute.DataType
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: DataType
  nameWithType: XmlArrayItemAttribute.DataType
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.DataType
- uid: System.Xml.Serialization.XmlArrayItemAttribute.ElementName
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: ElementName
  nameWithType: XmlArrayItemAttribute.ElementName
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.ElementName
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Form
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: Form
  nameWithType: XmlArrayItemAttribute.Form
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.Form
- uid: System.Xml.Schema.XmlSchemaForm
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaForm
  nameWithType: XmlSchemaForm
  fullName: System.Xml.Schema.XmlSchemaForm
- uid: System.Xml.Serialization.XmlArrayItemAttribute.IsNullable
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: IsNullable
  nameWithType: XmlArrayItemAttribute.IsNullable
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.IsNullable
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Namespace
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: Namespace
  nameWithType: XmlArrayItemAttribute.Namespace
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.Namespace
- uid: System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: NestingLevel
  nameWithType: XmlArrayItemAttribute.NestingLevel
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Type
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: Type
  nameWithType: XmlArrayItemAttribute.Type
  fullName: System.Xml.Serialization.XmlArrayItemAttribute.Type
- uid: System.Xml.Serialization.XmlArrayItemAttribute.#ctor*
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: XmlArrayItemAttribute
  nameWithType: XmlArrayItemAttribute.XmlArrayItemAttribute
- uid: System.Xml.Serialization.XmlArrayItemAttribute.DataType*
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: DataType
  nameWithType: XmlArrayItemAttribute.DataType
- uid: System.Xml.Serialization.XmlArrayItemAttribute.ElementName*
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: ElementName
  nameWithType: XmlArrayItemAttribute.ElementName
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Form*
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: Form
  nameWithType: XmlArrayItemAttribute.Form
- uid: System.Xml.Serialization.XmlArrayItemAttribute.IsNullable*
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: IsNullable
  nameWithType: XmlArrayItemAttribute.IsNullable
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Namespace*
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: Namespace
  nameWithType: XmlArrayItemAttribute.Namespace
- uid: System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel*
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: NestingLevel
  nameWithType: XmlArrayItemAttribute.NestingLevel
- uid: System.Xml.Serialization.XmlArrayItemAttribute.Type*
  parent: System.Xml.Serialization.XmlArrayItemAttribute
  isExternal: false
  name: Type
  nameWithType: XmlArrayItemAttribute.Type
