### YamlMime:ManagedReference
items:
- uid: System.Collections.IEqualityComparer
  id: IEqualityComparer
  children:
  - System.Collections.IEqualityComparer.Equals(System.Object,System.Object)
  - System.Collections.IEqualityComparer.GetHashCode(System.Object)
  langs:
  - csharp
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
  type: Interface
  summary: Defines methods to support the comparison of objects for equality.
  remarks: "This interface allows the implementation of customized equality comparison for collections. That is, you can create your own definition of equality, and specify that this definition be used with a collection type that accepts the IEqualityComparer interface. In the .NET Framework, constructors of the <xref:System.Collections.Hashtable>, <xref:System.Collections.Specialized.NameValueCollection>, and <xref:System.Collections.Specialized.OrderedDictionary> collection types accept this interface.  \n  \n This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.IComparer> interface.  \n  \n For the generic version of this interface, see <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=fullName>."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IEqualityComparer
  implements: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.IEqualityComparer.Equals(System.Object,System.Object)
  id: Equals(System.Object,System.Object)
  parent: System.Collections.IEqualityComparer
  langs:
  - csharp
  name: Equals(Object,Object)
  nameWithType: IEqualityComparer.Equals(Object,Object)
  fullName: System.Collections.IEqualityComparer.Equals(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: Determines whether the specified objects are equal.
  remarks: Implement this method to provide a customized equality comparison for objects.
  example:
  - "The following code example demonstrates the implementation of a case-insensitive <xref:System.Collections.IEqualityComparer>. In this example, the <xref:System.Collections.CaseInsensitiveComparer.Compare%2A?displayProperty=fullName> method is used to determine whether two objects are equal, based on the provided <xref:System.Globalization.CultureInfo>.  \n  \n [!code-cpp[System.Collections.Hashtable_ctor#2](~/add/codesnippet/cpp/m-system.collections.ieq_1_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctor#2](~/add/codesnippet/csharp/m-system.collections.ieq_1_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctor#2](~/add/codesnippet/visualbasic/m-system.collections.ieq_1_1.vb)]"
  syntax:
    content: public bool Equals (object x, object y);
    parameters:
    - id: x
      type: System.Object
      description: The first object to compare.
    - id: y
      type: System.Object
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if the specified objects are equal; otherwise, `false`.'
  overload: System.Collections.IEqualityComparer.Equals*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>x</code> and <code>y</code> are of different types and neither one can handle comparisons with the other.
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Collections.IEqualityComparer.GetHashCode(System.Object)
  id: GetHashCode(System.Object)
  parent: System.Collections.IEqualityComparer
  langs:
  - csharp
  name: GetHashCode(Object)
  nameWithType: IEqualityComparer.GetHashCode(Object)
  fullName: System.Collections.IEqualityComparer.GetHashCode(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: Returns a hash code for the specified object.
  remarks: Implement this method to provide customized hash codes for objects,corresponding to the customized equality comparison provided by the <xref:System.Collections.IEqualityComparer.Equals%2A> method.
  example:
  - "The following code example demonstrates the implementation of a case-insensitive <xref:System.Collections.IEqualityComparer>. In this example, the GetHashCode method returns the hash code provided by the <xref:System.Object> type.  \n  \n [!code-cpp[System.Collections.Hashtable_ctor#2](~/add/codesnippet/cpp/m-system.collections.ieq_0_1.cpp)]\n [!code-cs[System.Collections.Hashtable_ctor#2](~/add/codesnippet/csharp/m-system.collections.ieq_0_1.cs)]\n [!code-vb[System.Collections.Hashtable_ctor#2](~/add/codesnippet/visualbasic/m-system.collections.ieq_0_1.vb)]"
  syntax:
    content: public int GetHashCode (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Object"></xref> for which a hash code is to be returned.
    return:
      type: System.Int32
      description: A hash code for the specified object.
  overload: System.Collections.IEqualityComparer.GetHashCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The type of <code>obj</code> is a reference type and <code>obj</code> is `null`.
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
references:
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Collections.IEqualityComparer.Equals(System.Object,System.Object)
  parent: System.Collections.IEqualityComparer
  isExternal: false
  name: Equals(Object,Object)
  nameWithType: IEqualityComparer.Equals(Object,Object)
  fullName: System.Collections.IEqualityComparer.Equals(Object,Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IEqualityComparer.GetHashCode(System.Object)
  parent: System.Collections.IEqualityComparer
  isExternal: false
  name: GetHashCode(Object)
  nameWithType: IEqualityComparer.GetHashCode(Object)
  fullName: System.Collections.IEqualityComparer.GetHashCode(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IEqualityComparer.Equals*
  parent: System.Collections.IEqualityComparer
  isExternal: false
  name: Equals
  nameWithType: IEqualityComparer.Equals
- uid: System.Collections.IEqualityComparer.GetHashCode*
  parent: System.Collections.IEqualityComparer
  isExternal: false
  name: GetHashCode
  nameWithType: IEqualityComparer.GetHashCode
