### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IRequestChannel
  id: IRequestChannel
  children:
  - System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  - System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  - System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  - System.ServiceModel.Channels.IRequestChannel.Via
  langs:
  - csharp
  name: IRequestChannel
  nameWithType: IRequestChannel
  fullName: System.ServiceModel.Channels.IRequestChannel
  type: Interface
  summary: Defines the contract that a channel must implement to be on the requesting side of a request-reply communication between messaging endpoints.
  remarks: The IRequestChannel defines synchronous and asynchronous variants of a <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> method that returns a response message. It also provides a <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> properties to retrieve the endpoint address and URI to which the request message is sent.
  syntax:
    content: 'public interface IRequestChannel : System.ServiceModel.Channels.IChannel'
  implements:
  - System.ServiceModel.Channels.IChannel
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IRequestChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IRequestChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  name: BeginRequest(Message,AsyncCallback,Object)
  nameWithType: IRequestChannel.BeginRequest(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.
  remarks: If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown. The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property. The default value is 65536 bytes.
  example:
  - "The following code shows how to implement this method.  \n  \n [!code-cs[S_UE_HttpCookieSession#2](~/add/codesnippet/csharp/bf2e6f3b-7e86-4541-827f-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The request <xref href="System.ServiceModel.Channels.Message"></xref> to be transmitted.
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous message transmission.
  overload: System.ServiceModel.Channels.IRequestChannel.BeginRequest*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IRequestChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IRequestChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  name: BeginRequest(Message,TimeSpan,AsyncCallback,Object)
  nameWithType: IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange within a specified interval of time.
  remarks: "If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> should be thrown. The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property. The default value is 65536 bytes.  \n  \n If a `timeout` is passed while calling the function then that value is used. If the <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> is set on the binding, then the value on the binding is used if no `timeout` is specified while calling the function.  \n  \n The <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> is used if no timeout is specified on either the binding or while calling the function. This default value is 1 minute."
  example:
  - "The following code shows how to implement this method:  \n  \n [!code-cs[S_UE_HttpCookieSession#3](~/add/codesnippet/csharp/180dd790-ee41-44f3-a816-_1.cs)]"
  syntax:
    content: public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The request <xref href="System.ServiceModel.Channels.Message"></xref> to be transmitted.
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the interval of time within which a response must be received. (For defaults, see the Remarks section.)
    - id: callback
      type: System.AsyncCallback
      description: The <xref href="System.AsyncCallback"></xref> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.
    - id: state
      type: System.Object
      description: An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> that references the asynchronous message transmission.
  overload: System.ServiceModel.Channels.IRequestChannel.BeginRequest*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IRequestChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IRequestChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  id: EndRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  name: EndRequest(IAsyncResult)
  nameWithType: IRequestChannel.EndRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Completes an asynchronous operation to return a message-based response to a transmitted request.
  remarks: If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown. The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property. The default value is 65536 bytes.
  example:
  - "The following code shows how to implement this method.  \n  \n [!code-cs[S_UE_HttpCookieSession#4](~/add/codesnippet/csharp/m-system.servicemodel.ch_0_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.Message EndRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> returned by a call to the <xref href="stem.ServiceModel.Channels.IInputChannel.BeginReceive%2A"></xref> method.
    return:
      type: System.ServiceModel.Channels.Message
      description: The <xref href="System.ServiceModel.Channels.Message"></xref> received in response to the request.
  overload: System.ServiceModel.Channels.IRequestChannel.EndRequest*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IRequestChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IRequestChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  id: RemoteAddress
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  name: RemoteAddress
  nameWithType: IRequestChannel.RemoteAddress
  fullName: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the remote address to which the request channel sends messages.
  remarks: The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is not specified. If the <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.
  example:
  - "The following code shows how to implement this property.  \n  \n [!code-cs[S_UE_HttpCookieSession#0](~/add/codesnippet/csharp/p-system.servicemodel.ch_9_1.cs)]"
  syntax:
    content: public System.ServiceModel.EndpointAddress RemoteAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> to which the request channel sends messages.
  overload: System.ServiceModel.Channels.IRequestChannel.RemoteAddress*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IRequestChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IRequestChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  id: Request(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  name: Request(Message)
  nameWithType: IRequestChannel.Request(Message)
  fullName: System.ServiceModel.Channels.IRequestChannel.Request(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Sends a message-based request and returns the correlated message-based response.
  remarks: "Implementations of <xref:System.ServiceModel.Channels.IRequestChannel> ensure that the response message is correlated with the request message.  \n  \n Generally, if an implementation of <xref:System.ServiceModel.Channels.IRequestChannel> receives a message that is not correlated to an outstanding request, it is dropped.  \n  \n The <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> method can be called concurrently across multiple threads.  \n  \n Passing the message into the request channel causes the message to be accessed. After you call <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.  \n  \n If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown. The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property. The default value is 65536 bytes."
  example:
  - "The following code shows how to implement this method:  \n  \n [!code-cs[S_UE_HttpCookieSession#5](~/add/codesnippet/csharp/bf915d0e-fd16-46dc-866f-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The request <xref href="System.ServiceModel.Channels.Message"></xref> to be transmitted.
    return:
      type: System.ServiceModel.Channels.Message
      description: The <xref href="System.ServiceModel.Channels.Message"></xref> received in response to the request.
  overload: System.ServiceModel.Channels.IRequestChannel.Request*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IRequestChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IRequestChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  id: Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  name: Request(Message,TimeSpan)
  nameWithType: IRequestChannel.Request(Message,TimeSpan)
  fullName: System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Sends a message-based request and returns the correlated message-based response within a specified interval of time.
  remarks: "Implementations of <xref:System.ServiceModel.Channels.IRequestChannel> ensure that the response message is correlated with the request message.  \n  \n Generally, if an implementation of <xref:System.ServiceModel.Channels.IRequestChannel> receives a message that is not correlated to an outstanding request, it is dropped.  \n  \n The <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> method can be called concurrently across multiple threads.  \n  \n Passing the message into the request channel causes the message to be accessed. After you call <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.  \n  \n If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown. The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property. The default value is 65536 bytes.  \n  \n If a `timeout` is passed while calling the function then that value is used. If the <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> is set on the binding, then the value on the binding is used if no `timeout` is specified while calling the function.  \n  \n The <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> is used if no timeout is specified on either the binding or while calling the function. This default value is 1 minute."
  example:
  - "The following code shows how to implement this method.  \n  \n [!code-cs[S_UE_HttpCookieSession#6](~/add/codesnippet/csharp/78106247-6502-4f3b-89fd-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message, TimeSpan timeout);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: The request <xref href="System.ServiceModel.Channels.Message"></xref> to be transmitted.
    - id: timeout
      type: System.TimeSpan
      description: The <xref href="System.TimeSpan"></xref> that specifies the interval of time within which a response must be received.
    return:
      type: System.ServiceModel.Channels.Message
      description: The <xref href="System.ServiceModel.Channels.Message"></xref> received in response to the request.
  overload: System.ServiceModel.Channels.IRequestChannel.Request*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IRequestChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IRequestChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IRequestChannel.Via
  id: Via
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  name: Via
  nameWithType: IRequestChannel.Via
  fullName: System.ServiceModel.Channels.IRequestChannel.Via
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Gets the transport address to which the request is send.
  remarks: The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a Via is not specified. If the Via is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.
  example:
  - "The following code shows how to implement this property.  \n  \n [!code-cs[S_UE_HttpCookieSession#1](~/add/codesnippet/csharp/p-system.servicemodel.ch_17_1.cs)]"
  syntax:
    content: public Uri Via { get; }
    return:
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the transport address to which the message is sent.
  overload: System.ServiceModel.Channels.IRequestChannel.Via*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IRequestChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IRequestChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: BeginRequest(Message,AsyncCallback,Object)
  nameWithType: IRequestChannel.BeginRequest(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: BeginRequest(Message,TimeSpan,AsyncCallback,Object)
  nameWithType: IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: EndRequest(IAsyncResult)
  nameWithType: IRequestChannel.EndRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)
- uid: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: RemoteAddress
  nameWithType: IRequestChannel.RemoteAddress
  fullName: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: Request(Message)
  nameWithType: IRequestChannel.Request(Message)
  fullName: System.ServiceModel.Channels.IRequestChannel.Request(Message)
- uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: Request(Message,TimeSpan)
  nameWithType: IRequestChannel.Request(Message,TimeSpan)
  fullName: System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)
- uid: System.ServiceModel.Channels.IRequestChannel.Via
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: Via
  nameWithType: IRequestChannel.Via
  fullName: System.ServiceModel.Channels.IRequestChannel.Via
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest*
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: BeginRequest
  nameWithType: IRequestChannel.BeginRequest
- uid: System.ServiceModel.Channels.IRequestChannel.EndRequest*
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: EndRequest
  nameWithType: IRequestChannel.EndRequest
- uid: System.ServiceModel.Channels.IRequestChannel.RemoteAddress*
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: RemoteAddress
  nameWithType: IRequestChannel.RemoteAddress
- uid: System.ServiceModel.Channels.IRequestChannel.Request*
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: Request
  nameWithType: IRequestChannel.Request
- uid: System.ServiceModel.Channels.IRequestChannel.Via*
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: Via
  nameWithType: IRequestChannel.Via
