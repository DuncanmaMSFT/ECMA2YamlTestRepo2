### YamlMime:ManagedReference
items:
- uid: System.Uri
  id: Uri
  children:
  - System.Uri.#ctor(System.String)
  - System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Uri.#ctor(System.String,System.Boolean)
  - System.Uri.#ctor(System.String,System.UriKind)
  - System.Uri.#ctor(System.Uri,System.String)
  - System.Uri.#ctor(System.Uri,System.Uri)
  - System.Uri.#ctor(System.Uri,System.String,System.Boolean)
  - System.Uri.AbsolutePath
  - System.Uri.AbsoluteUri
  - System.Uri.Authority
  - System.Uri.Canonicalize
  - System.Uri.CheckHostName(System.String)
  - System.Uri.CheckSchemeName(System.String)
  - System.Uri.CheckSecurity
  - System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  - System.Uri.DnsSafeHost
  - System.Uri.Equals(System.Object)
  - System.Uri.Escape
  - System.Uri.EscapeDataString(System.String)
  - System.Uri.EscapeString(System.String)
  - System.Uri.EscapeUriString(System.String)
  - System.Uri.Fragment
  - System.Uri.FromHex(System.Char)
  - System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  - System.Uri.GetHashCode
  - System.Uri.GetLeftPart(System.UriPartial)
  - System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Uri.HexEscape(System.Char)
  - System.Uri.HexUnescape(System.String,System.Int32@)
  - System.Uri.Host
  - System.Uri.HostNameType
  - System.Uri.IsAbsoluteUri
  - System.Uri.IsBadFileSystemCharacter(System.Char)
  - System.Uri.IsBaseOf(System.Uri)
  - System.Uri.IsDefaultPort
  - System.Uri.IsExcludedCharacter(System.Char)
  - System.Uri.IsFile
  - System.Uri.IsHexDigit(System.Char)
  - System.Uri.IsHexEncoding(System.String,System.Int32)
  - System.Uri.IsLoopback
  - System.Uri.IsReservedCharacter(System.Char)
  - System.Uri.IsUnc
  - System.Uri.IsWellFormedOriginalString
  - System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  - System.Uri.LocalPath
  - System.Uri.MakeRelative(System.Uri)
  - System.Uri.MakeRelativeUri(System.Uri)
  - System.Uri.op_Equality(System.Uri,System.Uri)
  - System.Uri.op_Inequality(System.Uri,System.Uri)
  - System.Uri.OriginalString
  - System.Uri.Parse
  - System.Uri.PathAndQuery
  - System.Uri.Port
  - System.Uri.Query
  - System.Uri.Scheme
  - System.Uri.SchemeDelimiter
  - System.Uri.Segments
  - System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Uri.ToString
  - System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  - System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  - System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  - System.Uri.Unescape(System.String)
  - System.Uri.UnescapeDataString(System.String)
  - System.Uri.UriSchemeFile
  - System.Uri.UriSchemeFtp
  - System.Uri.UriSchemeGopher
  - System.Uri.UriSchemeHttp
  - System.Uri.UriSchemeHttps
  - System.Uri.UriSchemeMailto
  - System.Uri.UriSchemeNetPipe
  - System.Uri.UriSchemeNetTcp
  - System.Uri.UriSchemeNews
  - System.Uri.UriSchemeNntp
  - System.Uri.UserEscaped
  - System.Uri.UserInfo
  langs:
  - csharp
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
  type: Class
  summary: Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))]

      public class Uri : System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(String)
  nameWithType: Uri.Uri(String)
  fullName: System.Uri.Uri(String)
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class with the specified URI.
  syntax:
    content: public Uri (string uriString);
    parameters:
    - id: uriString
      type: System.String
      description: To be added.
  overload: System.Uri.#ctor*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(SerializationInfo,StreamingContext)
  nameWithType: Uri.Uri(SerializationInfo,StreamingContext)
  fullName: System.Uri.Uri(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class from the specified instances of the <xref href="System.Runtime.Serialization.SerializationInfo"></xref> and <xref href="System.Runtime.Serialization.StreamingContext"></xref> classes.
  syntax:
    content: protected Uri (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Uri.#ctor*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(String,Boolean)
  nameWithType: Uri.Uri(String,Boolean)
  fullName: System.Uri.Uri(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class with the specified URI, with explicit control of character escaping.
  syntax:
    content: public Uri (string uriString, bool dontEscape);
    parameters:
    - id: uriString
      type: System.String
      description: To be added.
    - id: dontEscape
      type: System.Boolean
      description: To be added.
  overload: System.Uri.#ctor*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.#ctor(System.String,System.UriKind)
  id: '#ctor(System.String,System.UriKind)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(String,UriKind)
  nameWithType: Uri.Uri(String,UriKind)
  fullName: System.Uri.Uri(String,UriKind)
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class with the specified URI. This constructor allows you to specify if the URI string is a relative URI, absolute URI, or is indeterminate.
  syntax:
    content: public Uri (string uriString, UriKind uriKind);
    parameters:
    - id: uriString
      type: System.String
      description: To be added.
    - id: uriKind
      type: System.UriKind
      description: To be added.
  overload: System.Uri.#ctor*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(Uri,String)
  nameWithType: Uri.Uri(Uri,String)
  fullName: System.Uri.Uri(Uri,String)
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class based on the specified base URI and relative URI string.
  syntax:
    content: public Uri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: To be added.
    - id: relativeUri
      type: System.String
      description: To be added.
  overload: System.Uri.#ctor*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.#ctor(System.Uri,System.Uri)
  id: '#ctor(System.Uri,System.Uri)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(Uri,Uri)
  nameWithType: Uri.Uri(Uri,Uri)
  fullName: System.Uri.Uri(Uri,Uri)
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class based on the combination of a specified base <xref href="System.Uri"></xref> instance and a relative <xref href="System.Uri"></xref> instance.
  syntax:
    content: public Uri (Uri baseUri, Uri relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: To be added.
    - id: relativeUri
      type: System.Uri
      description: To be added.
  overload: System.Uri.#ctor*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.#ctor(System.Uri,System.String,System.Boolean)
  id: '#ctor(System.Uri,System.String,System.Boolean)'
  parent: System.Uri
  langs:
  - csharp
  name: Uri(Uri,String,Boolean)
  nameWithType: Uri.Uri(Uri,String,Boolean)
  fullName: System.Uri.Uri(Uri,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System
  summary: Initializes a new instance of the <xref href="System.Uri"></xref> class based on the specified base and relative URIs, with explicit control of character escaping.
  syntax:
    content: public Uri (Uri baseUri, string relativeUri, bool dontEscape);
    parameters:
    - id: baseUri
      type: System.Uri
      description: To be added.
    - id: relativeUri
      type: System.String
      description: To be added.
    - id: dontEscape
      type: System.Boolean
      description: To be added.
  overload: System.Uri.#ctor*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.AbsolutePath
  id: AbsolutePath
  parent: System.Uri
  langs:
  - csharp
  name: AbsolutePath
  nameWithType: Uri.AbsolutePath
  fullName: System.Uri.AbsolutePath
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the absolute path of the URI.
  syntax:
    content: public string AbsolutePath { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.AbsolutePath*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.AbsoluteUri
  id: AbsoluteUri
  parent: System.Uri
  langs:
  - csharp
  name: AbsoluteUri
  nameWithType: Uri.AbsoluteUri
  fullName: System.Uri.AbsoluteUri
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the absolute URI.
  syntax:
    content: public string AbsoluteUri { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.AbsoluteUri*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Authority
  id: Authority
  parent: System.Uri
  langs:
  - csharp
  name: Authority
  nameWithType: Uri.Authority
  fullName: System.Uri.Authority
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the Domain Name System (DNS) host name or IP address and the port number for a server.
  syntax:
    content: public string Authority { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.Authority*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Canonicalize
  id: Canonicalize
  parent: System.Uri
  langs:
  - csharp
  name: Canonicalize()
  nameWithType: Uri.Canonicalize()
  fullName: System.Uri.Canonicalize()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Converts the internally stored URI to canonical form.
  syntax:
    content: protected virtual void Canonicalize ();
    parameters: []
  overload: System.Uri.Canonicalize*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.CheckHostName(System.String)
  id: CheckHostName(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: CheckHostName(String)
  nameWithType: Uri.CheckHostName(String)
  fullName: System.Uri.CheckHostName(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Determines whether the specified host name is a valid DNS name.
  syntax:
    content: public static UriHostNameType CheckHostName (string name);
    parameters:
    - id: name
      type: System.String
      description: To be added.
    return:
      type: System.UriHostNameType
      description: To be added.
  overload: System.Uri.CheckHostName*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.CheckSchemeName(System.String)
  id: CheckSchemeName(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: CheckSchemeName(String)
  nameWithType: Uri.CheckSchemeName(String)
  fullName: System.Uri.CheckSchemeName(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Determines whether the specified scheme name is valid.
  syntax:
    content: public static bool CheckSchemeName (string schemeName);
    parameters:
    - id: schemeName
      type: System.String
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.CheckSchemeName*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.CheckSecurity
  id: CheckSecurity
  parent: System.Uri
  langs:
  - csharp
  name: CheckSecurity()
  nameWithType: Uri.CheckSecurity()
  fullName: System.Uri.CheckSecurity()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Calling this method has no effect.
  syntax:
    content: protected virtual void CheckSecurity ();
    parameters: []
  overload: System.Uri.CheckSecurity*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  id: Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  parent: System.Uri
  langs:
  - csharp
  name: Compare(Uri,Uri,UriComponents,UriFormat,StringComparison)
  nameWithType: Uri.Compare(Uri,Uri,UriComponents,UriFormat,StringComparison)
  fullName: System.Uri.Compare(Uri,Uri,UriComponents,UriFormat,StringComparison)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Compares the specified parts of two URIs using the specified comparison rules.
  syntax:
    content: public static int Compare (Uri uri1, Uri uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType);
    parameters:
    - id: uri1
      type: System.Uri
      description: To be added.
    - id: uri2
      type: System.Uri
      description: To be added.
    - id: partsToCompare
      type: System.UriComponents
      description: To be added.
    - id: compareFormat
      type: System.UriFormat
      description: To be added.
    - id: comparisonType
      type: System.StringComparison
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Uri.Compare*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.DnsSafeHost
  id: DnsSafeHost
  parent: System.Uri
  langs:
  - csharp
  name: DnsSafeHost
  nameWithType: Uri.DnsSafeHost
  fullName: System.Uri.DnsSafeHost
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets an unescaped host name that is safe to use for DNS resolution.
  syntax:
    content: public string DnsSafeHost { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.DnsSafeHost*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Uri
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Uri.Equals(Object)
  fullName: System.Uri.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Compares two <xref href="System.Uri"></xref> instances for equality.
  syntax:
    content: public override bool Equals (object comparand);
    parameters:
    - id: comparand
      type: System.Object
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.Equals*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Escape
  id: Escape
  parent: System.Uri
  langs:
  - csharp
  name: Escape()
  nameWithType: Uri.Escape()
  fullName: System.Uri.Escape()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Converts any unsafe or reserved characters in the path component to their hexadecimal character representations.
  syntax:
    content: protected virtual void Escape ();
    parameters: []
  overload: System.Uri.Escape*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.EscapeDataString(System.String)
  id: EscapeDataString(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: EscapeDataString(String)
  nameWithType: Uri.EscapeDataString(String)
  fullName: System.Uri.EscapeDataString(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Converts a string to its escaped representation.
  syntax:
    content: public static string EscapeDataString (string stringToEscape);
    parameters:
    - id: stringToEscape
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.EscapeDataString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.EscapeString(System.String)
  id: EscapeString(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: EscapeString(String)
  nameWithType: Uri.EscapeString(String)
  fullName: System.Uri.EscapeString(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Converts a string to its escaped representation.
  syntax:
    content: protected static string EscapeString (string str);
    parameters:
    - id: str
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.EscapeString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.EscapeUriString(System.String)
  id: EscapeUriString(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: EscapeUriString(String)
  nameWithType: Uri.EscapeUriString(String)
  fullName: System.Uri.EscapeUriString(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Converts a URI string to its escaped representation.
  syntax:
    content: public static string EscapeUriString (string stringToEscape);
    parameters:
    - id: stringToEscape
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.EscapeUriString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Fragment
  id: Fragment
  parent: System.Uri
  langs:
  - csharp
  name: Fragment
  nameWithType: Uri.Fragment
  fullName: System.Uri.Fragment
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the escaped URI fragment.
  syntax:
    content: public string Fragment { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.Fragment*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.FromHex(System.Char)
  id: FromHex(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: FromHex(Char)
  nameWithType: Uri.FromHex(Char)
  fullName: System.Uri.FromHex(Char)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Gets the decimal value of a hexadecimal digit.
  syntax:
    content: public static int FromHex (char digit);
    parameters:
    - id: digit
      type: System.Char
      description: To be added.
    return:
      type: System.Int32
      description: To be added.
  overload: System.Uri.FromHex*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  id: GetComponents(System.UriComponents,System.UriFormat)
  parent: System.Uri
  langs:
  - csharp
  name: GetComponents(UriComponents,UriFormat)
  nameWithType: Uri.GetComponents(UriComponents,UriFormat)
  fullName: System.Uri.GetComponents(UriComponents,UriFormat)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Gets the specified components of the current instance using the specified escaping for special characters.
  syntax:
    content: public string GetComponents (UriComponents components, UriFormat format);
    parameters:
    - id: components
      type: System.UriComponents
      description: To be added.
    - id: format
      type: System.UriFormat
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.GetComponents*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.GetHashCode
  id: GetHashCode
  parent: System.Uri
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Uri.GetHashCode()
  fullName: System.Uri.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Gets the hash code for the URI.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: To be added.
  overload: System.Uri.GetHashCode*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.GetLeftPart(System.UriPartial)
  id: GetLeftPart(System.UriPartial)
  parent: System.Uri
  langs:
  - csharp
  name: GetLeftPart(UriPartial)
  nameWithType: Uri.GetLeftPart(UriPartial)
  fullName: System.Uri.GetLeftPart(UriPartial)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Gets the specified portion of a <xref href="System.Uri"></xref> instance.
  syntax:
    content: public string GetLeftPart (UriPartial part);
    parameters:
    - id: part
      type: System.UriPartial
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.GetLeftPart*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Uri
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Uri.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Uri.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Returns the data needed to serialize the current instance.
  syntax:
    content: protected void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Uri.GetObjectData*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.HexEscape(System.Char)
  id: HexEscape(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: HexEscape(Char)
  nameWithType: Uri.HexEscape(Char)
  fullName: System.Uri.HexEscape(Char)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Converts a specified character into its hexadecimal equivalent.
  syntax:
    content: public static string HexEscape (char character);
    parameters:
    - id: character
      type: System.Char
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.HexEscape*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.HexUnescape(System.String,System.Int32@)
  id: HexUnescape(System.String,System.Int32@)
  parent: System.Uri
  langs:
  - csharp
  name: HexUnescape(String,Int32)
  nameWithType: Uri.HexUnescape(String,Int32)
  fullName: System.Uri.HexUnescape(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Converts a specified hexadecimal representation of a character to the character.
  syntax:
    content: public static char HexUnescape (string pattern, ref int index);
    parameters:
    - id: pattern
      type: System.String
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    return:
      type: System.Char
      description: To be added.
  overload: System.Uri.HexUnescape*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Host
  id: Host
  parent: System.Uri
  langs:
  - csharp
  name: Host
  nameWithType: Uri.Host
  fullName: System.Uri.Host
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the host component of this instance.
  syntax:
    content: public string Host { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.Host*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.HostNameType
  id: HostNameType
  parent: System.Uri
  langs:
  - csharp
  name: HostNameType
  nameWithType: Uri.HostNameType
  fullName: System.Uri.HostNameType
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the type of the host name specified in the URI.
  syntax:
    content: public UriHostNameType HostNameType { get; }
    return:
      type: System.UriHostNameType
      description: To be added.
  overload: System.Uri.HostNameType*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsAbsoluteUri
  id: IsAbsoluteUri
  parent: System.Uri
  langs:
  - csharp
  name: IsAbsoluteUri
  nameWithType: Uri.IsAbsoluteUri
  fullName: System.Uri.IsAbsoluteUri
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets whether the <xref href="System.Uri"></xref> instance is absolute.
  syntax:
    content: public bool IsAbsoluteUri { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsAbsoluteUri*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsBadFileSystemCharacter(System.Char)
  id: IsBadFileSystemCharacter(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: IsBadFileSystemCharacter(Char)
  nameWithType: Uri.IsBadFileSystemCharacter(Char)
  fullName: System.Uri.IsBadFileSystemCharacter(Char)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Gets whether a character is invalid in a file system name.
  syntax:
    content: protected virtual bool IsBadFileSystemCharacter (char character);
    parameters:
    - id: character
      type: System.Char
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsBadFileSystemCharacter*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsBaseOf(System.Uri)
  id: IsBaseOf(System.Uri)
  parent: System.Uri
  langs:
  - csharp
  name: IsBaseOf(Uri)
  nameWithType: Uri.IsBaseOf(Uri)
  fullName: System.Uri.IsBaseOf(Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Determines whether the current <xref href="System.Uri"></xref> instance is a base of the specified <xref href="System.Uri"></xref> instance.
  syntax:
    content: public bool IsBaseOf (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsBaseOf*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsDefaultPort
  id: IsDefaultPort
  parent: System.Uri
  langs:
  - csharp
  name: IsDefaultPort
  nameWithType: Uri.IsDefaultPort
  fullName: System.Uri.IsDefaultPort
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets whether the port value of the URI is the default for this scheme.
  syntax:
    content: public bool IsDefaultPort { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsDefaultPort*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsExcludedCharacter(System.Char)
  id: IsExcludedCharacter(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: IsExcludedCharacter(Char)
  nameWithType: Uri.IsExcludedCharacter(Char)
  fullName: System.Uri.IsExcludedCharacter(Char)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Gets whether the specified character should be escaped.
  syntax:
    content: protected static bool IsExcludedCharacter (char character);
    parameters:
    - id: character
      type: System.Char
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsExcludedCharacter*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsFile
  id: IsFile
  parent: System.Uri
  langs:
  - csharp
  name: IsFile
  nameWithType: Uri.IsFile
  fullName: System.Uri.IsFile
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets a value indicating whether the specified <xref href="System.Uri"></xref> is a file URI.
  syntax:
    content: public bool IsFile { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsFile*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsHexDigit(System.Char)
  id: IsHexDigit(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: IsHexDigit(Char)
  nameWithType: Uri.IsHexDigit(Char)
  fullName: System.Uri.IsHexDigit(Char)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Determines whether a specified character is a valid hexadecimal digit.
  syntax:
    content: public static bool IsHexDigit (char character);
    parameters:
    - id: character
      type: System.Char
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsHexDigit*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsHexEncoding(System.String,System.Int32)
  id: IsHexEncoding(System.String,System.Int32)
  parent: System.Uri
  langs:
  - csharp
  name: IsHexEncoding(String,Int32)
  nameWithType: Uri.IsHexEncoding(String,Int32)
  fullName: System.Uri.IsHexEncoding(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Determines whether a character in a string is hexadecimal encoded.
  syntax:
    content: public static bool IsHexEncoding (string pattern, int index);
    parameters:
    - id: pattern
      type: System.String
      description: To be added.
    - id: index
      type: System.Int32
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsHexEncoding*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsLoopback
  id: IsLoopback
  parent: System.Uri
  langs:
  - csharp
  name: IsLoopback
  nameWithType: Uri.IsLoopback
  fullName: System.Uri.IsLoopback
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets whether the specified <xref href="System.Uri"></xref> references the local host.
  syntax:
    content: public bool IsLoopback { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsLoopback*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsReservedCharacter(System.Char)
  id: IsReservedCharacter(System.Char)
  parent: System.Uri
  langs:
  - csharp
  name: IsReservedCharacter(Char)
  nameWithType: Uri.IsReservedCharacter(Char)
  fullName: System.Uri.IsReservedCharacter(Char)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Gets whether the specified character is a reserved character.
  syntax:
    content: protected virtual bool IsReservedCharacter (char character);
    parameters:
    - id: character
      type: System.Char
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsReservedCharacter*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsUnc
  id: IsUnc
  parent: System.Uri
  langs:
  - csharp
  name: IsUnc
  nameWithType: Uri.IsUnc
  fullName: System.Uri.IsUnc
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets whether the specified <xref href="System.Uri"></xref> is a universal naming convention (UNC) path.
  syntax:
    content: public bool IsUnc { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsUnc*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsWellFormedOriginalString
  id: IsWellFormedOriginalString
  parent: System.Uri
  langs:
  - csharp
  name: IsWellFormedOriginalString()
  nameWithType: Uri.IsWellFormedOriginalString()
  fullName: System.Uri.IsWellFormedOriginalString()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Indicates whether the string used to construct this <xref href="System.Uri"></xref> was well-formed and is not required to be further escaped.
  syntax:
    content: public bool IsWellFormedOriginalString ();
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsWellFormedOriginalString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  id: IsWellFormedUriString(System.String,System.UriKind)
  parent: System.Uri
  langs:
  - csharp
  name: IsWellFormedUriString(String,UriKind)
  nameWithType: Uri.IsWellFormedUriString(String,UriKind)
  fullName: System.Uri.IsWellFormedUriString(String,UriKind)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.
  syntax:
    content: public static bool IsWellFormedUriString (string uriString, UriKind uriKind);
    parameters:
    - id: uriString
      type: System.String
      description: To be added.
    - id: uriKind
      type: System.UriKind
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.IsWellFormedUriString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.LocalPath
  id: LocalPath
  parent: System.Uri
  langs:
  - csharp
  name: LocalPath
  nameWithType: Uri.LocalPath
  fullName: System.Uri.LocalPath
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets a local operating-system representation of a file name.
  syntax:
    content: public string LocalPath { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.LocalPath*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.MakeRelative(System.Uri)
  id: MakeRelative(System.Uri)
  parent: System.Uri
  langs:
  - csharp
  name: MakeRelative(Uri)
  nameWithType: Uri.MakeRelative(Uri)
  fullName: System.Uri.MakeRelative(Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Determines the difference between two <xref href="System.Uri"></xref> instances.
  syntax:
    content: public string MakeRelative (Uri toUri);
    parameters:
    - id: toUri
      type: System.Uri
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.MakeRelative*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.MakeRelativeUri(System.Uri)
  id: MakeRelativeUri(System.Uri)
  parent: System.Uri
  langs:
  - csharp
  name: MakeRelativeUri(Uri)
  nameWithType: Uri.MakeRelativeUri(Uri)
  fullName: System.Uri.MakeRelativeUri(Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Determines the difference between two <xref href="System.Uri"></xref> instances.
  syntax:
    content: public Uri MakeRelativeUri (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: To be added.
    return:
      type: System.Uri
      description: To be added.
  overload: System.Uri.MakeRelativeUri*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.op_Equality(System.Uri,System.Uri)
  id: op_Equality(System.Uri,System.Uri)
  parent: System.Uri
  langs:
  - csharp
  name: op_Equality(Uri,Uri)
  nameWithType: Uri.op_Equality(Uri,Uri)
  fullName: System.Uri.op_Equality(Uri,Uri)
  type: Operator
  assemblies:
  - System
  namespace: System
  summary: Determines whether two <xref href="System.Uri"></xref> instances have the same value.
  syntax:
    content: public static bool op_Equality (Uri uri1, Uri uri2);
    parameters:
    - id: uri1
      type: System.Uri
      description: To be added.
    - id: uri2
      type: System.Uri
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.op_Equality*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.op_Inequality(System.Uri,System.Uri)
  id: op_Inequality(System.Uri,System.Uri)
  parent: System.Uri
  langs:
  - csharp
  name: op_Inequality(Uri,Uri)
  nameWithType: Uri.op_Inequality(Uri,Uri)
  fullName: System.Uri.op_Inequality(Uri,Uri)
  type: Operator
  assemblies:
  - System
  namespace: System
  summary: Determines whether two <xref href="System.Uri"></xref> instances do not have the same value.
  syntax:
    content: public static bool op_Inequality (Uri uri1, Uri uri2);
    parameters:
    - id: uri1
      type: System.Uri
      description: To be added.
    - id: uri2
      type: System.Uri
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.op_Inequality*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.OriginalString
  id: OriginalString
  parent: System.Uri
  langs:
  - csharp
  name: OriginalString
  nameWithType: Uri.OriginalString
  fullName: System.Uri.OriginalString
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the original URI string that was passed to the <xref href="System.Uri"></xref> constructor.
  syntax:
    content: public string OriginalString { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.OriginalString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Parse
  id: Parse
  parent: System.Uri
  langs:
  - csharp
  name: Parse()
  nameWithType: Uri.Parse()
  fullName: System.Uri.Parse()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Parses the URI of the current instance to ensure it contains all the parts required for a valid URI.
  syntax:
    content: protected virtual void Parse ();
    parameters: []
  overload: System.Uri.Parse*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.PathAndQuery
  id: PathAndQuery
  parent: System.Uri
  langs:
  - csharp
  name: PathAndQuery
  nameWithType: Uri.PathAndQuery
  fullName: System.Uri.PathAndQuery
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the <xref:System.Uri.AbsolutePath*> and <xref:System.Uri.Query*> properties separated by a question mark (?).
  syntax:
    content: public string PathAndQuery { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.PathAndQuery*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Port
  id: Port
  parent: System.Uri
  langs:
  - csharp
  name: Port
  nameWithType: Uri.Port
  fullName: System.Uri.Port
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the port number of this URI.
  syntax:
    content: public int Port { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Uri.Port*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Query
  id: Query
  parent: System.Uri
  langs:
  - csharp
  name: Query
  nameWithType: Uri.Query
  fullName: System.Uri.Query
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets any query information included in the specified URI.
  syntax:
    content: public string Query { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.Query*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Scheme
  id: Scheme
  parent: System.Uri
  langs:
  - csharp
  name: Scheme
  nameWithType: Uri.Scheme
  fullName: System.Uri.Scheme
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the scheme name for this URI.
  syntax:
    content: public string Scheme { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.Scheme*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.SchemeDelimiter
  id: SchemeDelimiter
  parent: System.Uri
  langs:
  - csharp
  name: SchemeDelimiter
  nameWithType: Uri.SchemeDelimiter
  fullName: System.Uri.SchemeDelimiter
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies the characters that separate the communication protocol scheme from the address portion of the URI. This field is read-only.
  syntax:
    content: public static readonly string SchemeDelimiter;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Segments
  id: Segments
  parent: System.Uri
  langs:
  - csharp
  name: Segments
  nameWithType: Uri.Segments
  fullName: System.Uri.Segments
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets an array containing the path segments that make up the specified URI.
  syntax:
    content: public string[] Segments { get; }
    return:
      type: System.String[]
      description: To be added.
  overload: System.Uri.Segments*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Uri
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Uri.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Uri.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Returns the data needed to serialize the current instance.
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: To be added.
    - id: streamingContext
      type: System.Runtime.Serialization.StreamingContext
      description: To be added.
  overload: System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.ToString
  id: ToString
  parent: System.Uri
  langs:
  - csharp
  name: ToString()
  nameWithType: Uri.ToString()
  fullName: System.Uri.ToString()
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Gets a canonical string representation for the specified <xref href="System.Uri"></xref> instance.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.ToString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  id: TryCreate(System.String,System.UriKind,System.Uri@)
  parent: System.Uri
  langs:
  - csharp
  name: TryCreate(String,UriKind,Uri)
  nameWithType: Uri.TryCreate(String,UriKind,Uri)
  fullName: System.Uri.TryCreate(String,UriKind,Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Creates a new <xref href="System.Uri"></xref> using the specified <xref href="System.String"></xref> instance and a <xref href="System.UriKind"></xref>.
  syntax:
    content: public static bool TryCreate (string uriString, UriKind uriKind, out Uri result);
    parameters:
    - id: uriString
      type: System.String
      description: To be added.
    - id: uriKind
      type: System.UriKind
      description: To be added.
    - id: result
      type: System.Uri
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.TryCreate*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  id: TryCreate(System.Uri,System.String,System.Uri@)
  parent: System.Uri
  langs:
  - csharp
  name: TryCreate(Uri,String,Uri)
  nameWithType: Uri.TryCreate(Uri,String,Uri)
  fullName: System.Uri.TryCreate(Uri,String,Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Creates a new <xref href="System.Uri"></xref> using the specified base and relative <xref href="System.String"></xref> instances.
  syntax:
    content: public static bool TryCreate (Uri baseUri, string relativeUri, out Uri result);
    parameters:
    - id: baseUri
      type: System.Uri
      description: To be added.
    - id: relativeUri
      type: System.String
      description: To be added.
    - id: result
      type: System.Uri
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.TryCreate*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  id: TryCreate(System.Uri,System.Uri,System.Uri@)
  parent: System.Uri
  langs:
  - csharp
  name: TryCreate(Uri,Uri,Uri)
  nameWithType: Uri.TryCreate(Uri,Uri,Uri)
  fullName: System.Uri.TryCreate(Uri,Uri,Uri)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Creates a new <xref href="System.Uri"></xref> using the specified base and relative <xref href="System.Uri"></xref> instances.
  syntax:
    content: public static bool TryCreate (Uri baseUri, Uri relativeUri, out Uri result);
    parameters:
    - id: baseUri
      type: System.Uri
      description: To be added.
    - id: relativeUri
      type: System.Uri
      description: To be added.
    - id: result
      type: System.Uri
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.TryCreate*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.Unescape(System.String)
  id: Unescape(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: Unescape(String)
  nameWithType: Uri.Unescape(String)
  fullName: System.Uri.Unescape(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Converts the specified string by replacing any escape sequences with their unescaped representation.
  syntax:
    content: protected virtual string Unescape (string path);
    parameters:
    - id: path
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.Unescape*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UnescapeDataString(System.String)
  id: UnescapeDataString(System.String)
  parent: System.Uri
  langs:
  - csharp
  name: UnescapeDataString(String)
  nameWithType: Uri.UnescapeDataString(String)
  fullName: System.Uri.UnescapeDataString(String)
  type: Method
  assemblies:
  - System
  namespace: System
  summary: Converts a string to its unescaped representation.
  syntax:
    content: public static string UnescapeDataString (string stringToUnescape);
    parameters:
    - id: stringToUnescape
      type: System.String
      description: To be added.
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.UnescapeDataString*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UriSchemeFile
  id: UriSchemeFile
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeFile
  nameWithType: Uri.UriSchemeFile
  fullName: System.Uri.UriSchemeFile
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies that the URI is a pointer to a file. This field is read-only.
  syntax:
    content: public static readonly string UriSchemeFile;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UriSchemeFtp
  id: UriSchemeFtp
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeFtp
  nameWithType: Uri.UriSchemeFtp
  fullName: System.Uri.UriSchemeFtp
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies that the URI is accessed through the File Transfer Protocol (FTP). This field is read-only.
  syntax:
    content: public static readonly string UriSchemeFtp;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UriSchemeGopher
  id: UriSchemeGopher
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeGopher
  nameWithType: Uri.UriSchemeGopher
  fullName: System.Uri.UriSchemeGopher
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies that the URI is accessed through the Gopher protocol. This field is read-only.
  syntax:
    content: public static readonly string UriSchemeGopher;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UriSchemeHttp
  id: UriSchemeHttp
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeHttp
  nameWithType: Uri.UriSchemeHttp
  fullName: System.Uri.UriSchemeHttp
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP). This field is read-only.
  syntax:
    content: public static readonly string UriSchemeHttp;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UriSchemeHttps
  id: UriSchemeHttps
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeHttps
  nameWithType: Uri.UriSchemeHttps
  fullName: System.Uri.UriSchemeHttps
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS). This field is read-only.
  syntax:
    content: public static readonly string UriSchemeHttps;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UriSchemeMailto
  id: UriSchemeMailto
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeMailto
  nameWithType: Uri.UriSchemeMailto
  fullName: System.Uri.UriSchemeMailto
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies that the URI is an e-mail address and is accessed through the Simple Mail Transport Protocol (SMTP). This field is read-only.
  syntax:
    content: public static readonly string UriSchemeMailto;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UriSchemeNetPipe
  id: UriSchemeNetPipe
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeNetPipe
  nameWithType: Uri.UriSchemeNetPipe
  fullName: System.Uri.UriSchemeNetPipe
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies that the URI is accessed through the NetPipe scheme used by Windows Communication Foundation (WCF). This field is read-only.
  syntax:
    content: public static readonly string UriSchemeNetPipe;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UriSchemeNetTcp
  id: UriSchemeNetTcp
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeNetTcp
  nameWithType: Uri.UriSchemeNetTcp
  fullName: System.Uri.UriSchemeNetTcp
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies that the URI is accessed through the NetTcp scheme used by Windows Communication Foundation (WCF). This field is read-only.
  syntax:
    content: public static readonly string UriSchemeNetTcp;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UriSchemeNews
  id: UriSchemeNews
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeNews
  nameWithType: Uri.UriSchemeNews
  fullName: System.Uri.UriSchemeNews
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.
  syntax:
    content: public static readonly string UriSchemeNews;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UriSchemeNntp
  id: UriSchemeNntp
  parent: System.Uri
  langs:
  - csharp
  name: UriSchemeNntp
  nameWithType: Uri.UriSchemeNntp
  fullName: System.Uri.UriSchemeNntp
  type: Field
  assemblies:
  - System
  namespace: System
  summary: Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.
  syntax:
    content: public static readonly string UriSchemeNntp;
    return:
      type: System.String
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UserEscaped
  id: UserEscaped
  parent: System.Uri
  langs:
  - csharp
  name: UserEscaped
  nameWithType: Uri.UserEscaped
  fullName: System.Uri.UserEscaped
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Indicates that the URI string was completely escaped before the <xref href="System.Uri"></xref> instance was created.
  syntax:
    content: public bool UserEscaped { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Uri.UserEscaped*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Uri.UserInfo
  id: UserInfo
  parent: System.Uri
  langs:
  - csharp
  name: UserInfo
  nameWithType: Uri.UserInfo
  fullName: System.Uri.UserInfo
  type: Property
  assemblies:
  - System
  namespace: System
  summary: Gets the user name, password, or other user-specific information associated with the specified URI.
  syntax:
    content: public string UserInfo { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.Uri.UserInfo*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Uri.#ctor(System.String)
  parent: System.Uri
  isExternal: false
  name: Uri(String)
  nameWithType: Uri.Uri(String)
  fullName: System.Uri.Uri(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Uri
  isExternal: false
  name: Uri(SerializationInfo,StreamingContext)
  nameWithType: Uri.Uri(SerializationInfo,StreamingContext)
  fullName: System.Uri.Uri(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Uri.#ctor(System.String,System.Boolean)
  parent: System.Uri
  isExternal: false
  name: Uri(String,Boolean)
  nameWithType: Uri.Uri(String,Boolean)
  fullName: System.Uri.Uri(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Uri.#ctor(System.String,System.UriKind)
  parent: System.Uri
  isExternal: false
  name: Uri(String,UriKind)
  nameWithType: Uri.Uri(String,UriKind)
  fullName: System.Uri.Uri(String,UriKind)
- uid: System.UriKind
  parent: System
  isExternal: false
  name: UriKind
  nameWithType: UriKind
  fullName: System.UriKind
- uid: System.Uri.#ctor(System.Uri,System.String)
  parent: System.Uri
  isExternal: false
  name: Uri(Uri,String)
  nameWithType: Uri.Uri(Uri,String)
  fullName: System.Uri.Uri(Uri,String)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Uri.#ctor(System.Uri,System.Uri)
  parent: System.Uri
  isExternal: false
  name: Uri(Uri,Uri)
  nameWithType: Uri.Uri(Uri,Uri)
  fullName: System.Uri.Uri(Uri,Uri)
- uid: System.Uri.#ctor(System.Uri,System.String,System.Boolean)
  parent: System.Uri
  isExternal: false
  name: Uri(Uri,String,Boolean)
  nameWithType: Uri.Uri(Uri,String,Boolean)
  fullName: System.Uri.Uri(Uri,String,Boolean)
- uid: System.Uri.AbsolutePath
  parent: System.Uri
  isExternal: false
  name: AbsolutePath
  nameWithType: Uri.AbsolutePath
  fullName: System.Uri.AbsolutePath
- uid: System.Uri.AbsoluteUri
  parent: System.Uri
  isExternal: false
  name: AbsoluteUri
  nameWithType: Uri.AbsoluteUri
  fullName: System.Uri.AbsoluteUri
- uid: System.Uri.Authority
  parent: System.Uri
  isExternal: false
  name: Authority
  nameWithType: Uri.Authority
  fullName: System.Uri.Authority
- uid: System.Uri.Canonicalize
  parent: System.Uri
  isExternal: false
  name: Canonicalize()
  nameWithType: Uri.Canonicalize()
  fullName: System.Uri.Canonicalize()
- uid: System.Uri.CheckHostName(System.String)
  parent: System.Uri
  isExternal: false
  name: CheckHostName(String)
  nameWithType: Uri.CheckHostName(String)
  fullName: System.Uri.CheckHostName(String)
- uid: System.UriHostNameType
  parent: System
  isExternal: false
  name: UriHostNameType
  nameWithType: UriHostNameType
  fullName: System.UriHostNameType
- uid: System.Uri.CheckSchemeName(System.String)
  parent: System.Uri
  isExternal: false
  name: CheckSchemeName(String)
  nameWithType: Uri.CheckSchemeName(String)
  fullName: System.Uri.CheckSchemeName(String)
- uid: System.Uri.CheckSecurity
  parent: System.Uri
  isExternal: false
  name: CheckSecurity()
  nameWithType: Uri.CheckSecurity()
  fullName: System.Uri.CheckSecurity()
- uid: System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)
  parent: System.Uri
  isExternal: false
  name: Compare(Uri,Uri,UriComponents,UriFormat,StringComparison)
  nameWithType: Uri.Compare(Uri,Uri,UriComponents,UriFormat,StringComparison)
  fullName: System.Uri.Compare(Uri,Uri,UriComponents,UriFormat,StringComparison)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UriComponents
  parent: System
  isExternal: false
  name: UriComponents
  nameWithType: UriComponents
  fullName: System.UriComponents
- uid: System.UriFormat
  parent: System
  isExternal: false
  name: UriFormat
  nameWithType: UriFormat
  fullName: System.UriFormat
- uid: System.StringComparison
  parent: System
  isExternal: false
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.Uri.DnsSafeHost
  parent: System.Uri
  isExternal: false
  name: DnsSafeHost
  nameWithType: Uri.DnsSafeHost
  fullName: System.Uri.DnsSafeHost
- uid: System.Uri.Equals(System.Object)
  parent: System.Uri
  isExternal: false
  name: Equals(Object)
  nameWithType: Uri.Equals(Object)
  fullName: System.Uri.Equals(Object)
- uid: System.Uri.Escape
  parent: System.Uri
  isExternal: false
  name: Escape()
  nameWithType: Uri.Escape()
  fullName: System.Uri.Escape()
- uid: System.Uri.EscapeDataString(System.String)
  parent: System.Uri
  isExternal: false
  name: EscapeDataString(String)
  nameWithType: Uri.EscapeDataString(String)
  fullName: System.Uri.EscapeDataString(String)
- uid: System.Uri.EscapeString(System.String)
  parent: System.Uri
  isExternal: false
  name: EscapeString(String)
  nameWithType: Uri.EscapeString(String)
  fullName: System.Uri.EscapeString(String)
- uid: System.Uri.EscapeUriString(System.String)
  parent: System.Uri
  isExternal: false
  name: EscapeUriString(String)
  nameWithType: Uri.EscapeUriString(String)
  fullName: System.Uri.EscapeUriString(String)
- uid: System.Uri.Fragment
  parent: System.Uri
  isExternal: false
  name: Fragment
  nameWithType: Uri.Fragment
  fullName: System.Uri.Fragment
- uid: System.Uri.FromHex(System.Char)
  parent: System.Uri
  isExternal: false
  name: FromHex(Char)
  nameWithType: Uri.FromHex(Char)
  fullName: System.Uri.FromHex(Char)
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Uri.GetComponents(System.UriComponents,System.UriFormat)
  parent: System.Uri
  isExternal: false
  name: GetComponents(UriComponents,UriFormat)
  nameWithType: Uri.GetComponents(UriComponents,UriFormat)
  fullName: System.Uri.GetComponents(UriComponents,UriFormat)
- uid: System.Uri.GetHashCode
  parent: System.Uri
  isExternal: false
  name: GetHashCode()
  nameWithType: Uri.GetHashCode()
  fullName: System.Uri.GetHashCode()
- uid: System.Uri.GetLeftPart(System.UriPartial)
  parent: System.Uri
  isExternal: false
  name: GetLeftPart(UriPartial)
  nameWithType: Uri.GetLeftPart(UriPartial)
  fullName: System.Uri.GetLeftPart(UriPartial)
- uid: System.UriPartial
  parent: System
  isExternal: false
  name: UriPartial
  nameWithType: UriPartial
  fullName: System.UriPartial
- uid: System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Uri
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Uri.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Uri.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Uri.HexEscape(System.Char)
  parent: System.Uri
  isExternal: false
  name: HexEscape(Char)
  nameWithType: Uri.HexEscape(Char)
  fullName: System.Uri.HexEscape(Char)
- uid: System.Uri.HexUnescape(System.String,System.Int32@)
  parent: System.Uri
  isExternal: false
  name: HexUnescape(String,Int32)
  nameWithType: Uri.HexUnescape(String,Int32)
  fullName: System.Uri.HexUnescape(String,Int32)
- uid: System.Uri.Host
  parent: System.Uri
  isExternal: false
  name: Host
  nameWithType: Uri.Host
  fullName: System.Uri.Host
- uid: System.Uri.HostNameType
  parent: System.Uri
  isExternal: false
  name: HostNameType
  nameWithType: Uri.HostNameType
  fullName: System.Uri.HostNameType
- uid: System.Uri.IsAbsoluteUri
  parent: System.Uri
  isExternal: false
  name: IsAbsoluteUri
  nameWithType: Uri.IsAbsoluteUri
  fullName: System.Uri.IsAbsoluteUri
- uid: System.Uri.IsBadFileSystemCharacter(System.Char)
  parent: System.Uri
  isExternal: false
  name: IsBadFileSystemCharacter(Char)
  nameWithType: Uri.IsBadFileSystemCharacter(Char)
  fullName: System.Uri.IsBadFileSystemCharacter(Char)
- uid: System.Uri.IsBaseOf(System.Uri)
  parent: System.Uri
  isExternal: false
  name: IsBaseOf(Uri)
  nameWithType: Uri.IsBaseOf(Uri)
  fullName: System.Uri.IsBaseOf(Uri)
- uid: System.Uri.IsDefaultPort
  parent: System.Uri
  isExternal: false
  name: IsDefaultPort
  nameWithType: Uri.IsDefaultPort
  fullName: System.Uri.IsDefaultPort
- uid: System.Uri.IsExcludedCharacter(System.Char)
  parent: System.Uri
  isExternal: false
  name: IsExcludedCharacter(Char)
  nameWithType: Uri.IsExcludedCharacter(Char)
  fullName: System.Uri.IsExcludedCharacter(Char)
- uid: System.Uri.IsFile
  parent: System.Uri
  isExternal: false
  name: IsFile
  nameWithType: Uri.IsFile
  fullName: System.Uri.IsFile
- uid: System.Uri.IsHexDigit(System.Char)
  parent: System.Uri
  isExternal: false
  name: IsHexDigit(Char)
  nameWithType: Uri.IsHexDigit(Char)
  fullName: System.Uri.IsHexDigit(Char)
- uid: System.Uri.IsHexEncoding(System.String,System.Int32)
  parent: System.Uri
  isExternal: false
  name: IsHexEncoding(String,Int32)
  nameWithType: Uri.IsHexEncoding(String,Int32)
  fullName: System.Uri.IsHexEncoding(String,Int32)
- uid: System.Uri.IsLoopback
  parent: System.Uri
  isExternal: false
  name: IsLoopback
  nameWithType: Uri.IsLoopback
  fullName: System.Uri.IsLoopback
- uid: System.Uri.IsReservedCharacter(System.Char)
  parent: System.Uri
  isExternal: false
  name: IsReservedCharacter(Char)
  nameWithType: Uri.IsReservedCharacter(Char)
  fullName: System.Uri.IsReservedCharacter(Char)
- uid: System.Uri.IsUnc
  parent: System.Uri
  isExternal: false
  name: IsUnc
  nameWithType: Uri.IsUnc
  fullName: System.Uri.IsUnc
- uid: System.Uri.IsWellFormedOriginalString
  parent: System.Uri
  isExternal: false
  name: IsWellFormedOriginalString()
  nameWithType: Uri.IsWellFormedOriginalString()
  fullName: System.Uri.IsWellFormedOriginalString()
- uid: System.Uri.IsWellFormedUriString(System.String,System.UriKind)
  parent: System.Uri
  isExternal: false
  name: IsWellFormedUriString(String,UriKind)
  nameWithType: Uri.IsWellFormedUriString(String,UriKind)
  fullName: System.Uri.IsWellFormedUriString(String,UriKind)
- uid: System.Uri.LocalPath
  parent: System.Uri
  isExternal: false
  name: LocalPath
  nameWithType: Uri.LocalPath
  fullName: System.Uri.LocalPath
- uid: System.Uri.MakeRelative(System.Uri)
  parent: System.Uri
  isExternal: false
  name: MakeRelative(Uri)
  nameWithType: Uri.MakeRelative(Uri)
  fullName: System.Uri.MakeRelative(Uri)
- uid: System.Uri.MakeRelativeUri(System.Uri)
  parent: System.Uri
  isExternal: false
  name: MakeRelativeUri(Uri)
  nameWithType: Uri.MakeRelativeUri(Uri)
  fullName: System.Uri.MakeRelativeUri(Uri)
- uid: System.Uri.op_Equality(System.Uri,System.Uri)
  parent: System.Uri
  isExternal: false
  name: op_Equality(Uri,Uri)
  nameWithType: Uri.op_Equality(Uri,Uri)
  fullName: System.Uri.op_Equality(Uri,Uri)
- uid: System.Uri.op_Inequality(System.Uri,System.Uri)
  parent: System.Uri
  isExternal: false
  name: op_Inequality(Uri,Uri)
  nameWithType: Uri.op_Inequality(Uri,Uri)
  fullName: System.Uri.op_Inequality(Uri,Uri)
- uid: System.Uri.OriginalString
  parent: System.Uri
  isExternal: false
  name: OriginalString
  nameWithType: Uri.OriginalString
  fullName: System.Uri.OriginalString
- uid: System.Uri.Parse
  parent: System.Uri
  isExternal: false
  name: Parse()
  nameWithType: Uri.Parse()
  fullName: System.Uri.Parse()
- uid: System.Uri.PathAndQuery
  parent: System.Uri
  isExternal: false
  name: PathAndQuery
  nameWithType: Uri.PathAndQuery
  fullName: System.Uri.PathAndQuery
- uid: System.Uri.Port
  parent: System.Uri
  isExternal: false
  name: Port
  nameWithType: Uri.Port
  fullName: System.Uri.Port
- uid: System.Uri.Query
  parent: System.Uri
  isExternal: false
  name: Query
  nameWithType: Uri.Query
  fullName: System.Uri.Query
- uid: System.Uri.Scheme
  parent: System.Uri
  isExternal: false
  name: Scheme
  nameWithType: Uri.Scheme
  fullName: System.Uri.Scheme
- uid: System.Uri.SchemeDelimiter
  parent: System.Uri
  isExternal: false
  name: SchemeDelimiter
  nameWithType: Uri.SchemeDelimiter
  fullName: System.Uri.SchemeDelimiter
- uid: System.Uri.Segments
  parent: System.Uri
  isExternal: false
  name: Segments
  nameWithType: Uri.Segments
  fullName: System.Uri.Segments
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Uri
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Uri.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Uri.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Uri.ToString
  parent: System.Uri
  isExternal: false
  name: ToString()
  nameWithType: Uri.ToString()
  fullName: System.Uri.ToString()
- uid: System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)
  parent: System.Uri
  isExternal: false
  name: TryCreate(String,UriKind,Uri)
  nameWithType: Uri.TryCreate(String,UriKind,Uri)
  fullName: System.Uri.TryCreate(String,UriKind,Uri)
- uid: System.Uri.TryCreate(System.Uri,System.String,System.Uri@)
  parent: System.Uri
  isExternal: false
  name: TryCreate(Uri,String,Uri)
  nameWithType: Uri.TryCreate(Uri,String,Uri)
  fullName: System.Uri.TryCreate(Uri,String,Uri)
- uid: System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)
  parent: System.Uri
  isExternal: false
  name: TryCreate(Uri,Uri,Uri)
  nameWithType: Uri.TryCreate(Uri,Uri,Uri)
  fullName: System.Uri.TryCreate(Uri,Uri,Uri)
- uid: System.Uri.Unescape(System.String)
  parent: System.Uri
  isExternal: false
  name: Unescape(String)
  nameWithType: Uri.Unescape(String)
  fullName: System.Uri.Unescape(String)
- uid: System.Uri.UnescapeDataString(System.String)
  parent: System.Uri
  isExternal: false
  name: UnescapeDataString(String)
  nameWithType: Uri.UnescapeDataString(String)
  fullName: System.Uri.UnescapeDataString(String)
- uid: System.Uri.UriSchemeFile
  parent: System.Uri
  isExternal: false
  name: UriSchemeFile
  nameWithType: Uri.UriSchemeFile
  fullName: System.Uri.UriSchemeFile
- uid: System.Uri.UriSchemeFtp
  parent: System.Uri
  isExternal: false
  name: UriSchemeFtp
  nameWithType: Uri.UriSchemeFtp
  fullName: System.Uri.UriSchemeFtp
- uid: System.Uri.UriSchemeGopher
  parent: System.Uri
  isExternal: false
  name: UriSchemeGopher
  nameWithType: Uri.UriSchemeGopher
  fullName: System.Uri.UriSchemeGopher
- uid: System.Uri.UriSchemeHttp
  parent: System.Uri
  isExternal: false
  name: UriSchemeHttp
  nameWithType: Uri.UriSchemeHttp
  fullName: System.Uri.UriSchemeHttp
- uid: System.Uri.UriSchemeHttps
  parent: System.Uri
  isExternal: false
  name: UriSchemeHttps
  nameWithType: Uri.UriSchemeHttps
  fullName: System.Uri.UriSchemeHttps
- uid: System.Uri.UriSchemeMailto
  parent: System.Uri
  isExternal: false
  name: UriSchemeMailto
  nameWithType: Uri.UriSchemeMailto
  fullName: System.Uri.UriSchemeMailto
- uid: System.Uri.UriSchemeNetPipe
  parent: System.Uri
  isExternal: false
  name: UriSchemeNetPipe
  nameWithType: Uri.UriSchemeNetPipe
  fullName: System.Uri.UriSchemeNetPipe
- uid: System.Uri.UriSchemeNetTcp
  parent: System.Uri
  isExternal: false
  name: UriSchemeNetTcp
  nameWithType: Uri.UriSchemeNetTcp
  fullName: System.Uri.UriSchemeNetTcp
- uid: System.Uri.UriSchemeNews
  parent: System.Uri
  isExternal: false
  name: UriSchemeNews
  nameWithType: Uri.UriSchemeNews
  fullName: System.Uri.UriSchemeNews
- uid: System.Uri.UriSchemeNntp
  parent: System.Uri
  isExternal: false
  name: UriSchemeNntp
  nameWithType: Uri.UriSchemeNntp
  fullName: System.Uri.UriSchemeNntp
- uid: System.Uri.UserEscaped
  parent: System.Uri
  isExternal: false
  name: UserEscaped
  nameWithType: Uri.UserEscaped
  fullName: System.Uri.UserEscaped
- uid: System.Uri.UserInfo
  parent: System.Uri
  isExternal: false
  name: UserInfo
  nameWithType: Uri.UserInfo
  fullName: System.Uri.UserInfo
- uid: System.Uri.#ctor*
  parent: System.Uri
  isExternal: false
  name: Uri
  nameWithType: Uri.Uri
- uid: System.Uri.AbsolutePath*
  parent: System.Uri
  isExternal: false
  name: AbsolutePath
  nameWithType: Uri.AbsolutePath
- uid: System.Uri.AbsoluteUri*
  parent: System.Uri
  isExternal: false
  name: AbsoluteUri
  nameWithType: Uri.AbsoluteUri
- uid: System.Uri.Authority*
  parent: System.Uri
  isExternal: false
  name: Authority
  nameWithType: Uri.Authority
- uid: System.Uri.Canonicalize*
  parent: System.Uri
  isExternal: false
  name: Canonicalize
  nameWithType: Uri.Canonicalize
- uid: System.Uri.CheckHostName*
  parent: System.Uri
  isExternal: false
  name: CheckHostName
  nameWithType: Uri.CheckHostName
- uid: System.Uri.CheckSchemeName*
  parent: System.Uri
  isExternal: false
  name: CheckSchemeName
  nameWithType: Uri.CheckSchemeName
- uid: System.Uri.CheckSecurity*
  parent: System.Uri
  isExternal: false
  name: CheckSecurity
  nameWithType: Uri.CheckSecurity
- uid: System.Uri.Compare*
  parent: System.Uri
  isExternal: false
  name: Compare
  nameWithType: Uri.Compare
- uid: System.Uri.DnsSafeHost*
  parent: System.Uri
  isExternal: false
  name: DnsSafeHost
  nameWithType: Uri.DnsSafeHost
- uid: System.Uri.Equals*
  parent: System.Uri
  isExternal: false
  name: Equals
  nameWithType: Uri.Equals
- uid: System.Uri.Escape*
  parent: System.Uri
  isExternal: false
  name: Escape
  nameWithType: Uri.Escape
- uid: System.Uri.EscapeDataString*
  parent: System.Uri
  isExternal: false
  name: EscapeDataString
  nameWithType: Uri.EscapeDataString
- uid: System.Uri.EscapeString*
  parent: System.Uri
  isExternal: false
  name: EscapeString
  nameWithType: Uri.EscapeString
- uid: System.Uri.EscapeUriString*
  parent: System.Uri
  isExternal: false
  name: EscapeUriString
  nameWithType: Uri.EscapeUriString
- uid: System.Uri.Fragment*
  parent: System.Uri
  isExternal: false
  name: Fragment
  nameWithType: Uri.Fragment
- uid: System.Uri.FromHex*
  parent: System.Uri
  isExternal: false
  name: FromHex
  nameWithType: Uri.FromHex
- uid: System.Uri.GetComponents*
  parent: System.Uri
  isExternal: false
  name: GetComponents
  nameWithType: Uri.GetComponents
- uid: System.Uri.GetHashCode*
  parent: System.Uri
  isExternal: false
  name: GetHashCode
  nameWithType: Uri.GetHashCode
- uid: System.Uri.GetLeftPart*
  parent: System.Uri
  isExternal: false
  name: GetLeftPart
  nameWithType: Uri.GetLeftPart
- uid: System.Uri.GetObjectData*
  parent: System.Uri
  isExternal: false
  name: GetObjectData
  nameWithType: Uri.GetObjectData
- uid: System.Uri.HexEscape*
  parent: System.Uri
  isExternal: false
  name: HexEscape
  nameWithType: Uri.HexEscape
- uid: System.Uri.HexUnescape*
  parent: System.Uri
  isExternal: false
  name: HexUnescape
  nameWithType: Uri.HexUnescape
- uid: System.Uri.Host*
  parent: System.Uri
  isExternal: false
  name: Host
  nameWithType: Uri.Host
- uid: System.Uri.HostNameType*
  parent: System.Uri
  isExternal: false
  name: HostNameType
  nameWithType: Uri.HostNameType
- uid: System.Uri.IsAbsoluteUri*
  parent: System.Uri
  isExternal: false
  name: IsAbsoluteUri
  nameWithType: Uri.IsAbsoluteUri
- uid: System.Uri.IsBadFileSystemCharacter*
  parent: System.Uri
  isExternal: false
  name: IsBadFileSystemCharacter
  nameWithType: Uri.IsBadFileSystemCharacter
- uid: System.Uri.IsBaseOf*
  parent: System.Uri
  isExternal: false
  name: IsBaseOf
  nameWithType: Uri.IsBaseOf
- uid: System.Uri.IsDefaultPort*
  parent: System.Uri
  isExternal: false
  name: IsDefaultPort
  nameWithType: Uri.IsDefaultPort
- uid: System.Uri.IsExcludedCharacter*
  parent: System.Uri
  isExternal: false
  name: IsExcludedCharacter
  nameWithType: Uri.IsExcludedCharacter
- uid: System.Uri.IsFile*
  parent: System.Uri
  isExternal: false
  name: IsFile
  nameWithType: Uri.IsFile
- uid: System.Uri.IsHexDigit*
  parent: System.Uri
  isExternal: false
  name: IsHexDigit
  nameWithType: Uri.IsHexDigit
- uid: System.Uri.IsHexEncoding*
  parent: System.Uri
  isExternal: false
  name: IsHexEncoding
  nameWithType: Uri.IsHexEncoding
- uid: System.Uri.IsLoopback*
  parent: System.Uri
  isExternal: false
  name: IsLoopback
  nameWithType: Uri.IsLoopback
- uid: System.Uri.IsReservedCharacter*
  parent: System.Uri
  isExternal: false
  name: IsReservedCharacter
  nameWithType: Uri.IsReservedCharacter
- uid: System.Uri.IsUnc*
  parent: System.Uri
  isExternal: false
  name: IsUnc
  nameWithType: Uri.IsUnc
- uid: System.Uri.IsWellFormedOriginalString*
  parent: System.Uri
  isExternal: false
  name: IsWellFormedOriginalString
  nameWithType: Uri.IsWellFormedOriginalString
- uid: System.Uri.IsWellFormedUriString*
  parent: System.Uri
  isExternal: false
  name: IsWellFormedUriString
  nameWithType: Uri.IsWellFormedUriString
- uid: System.Uri.LocalPath*
  parent: System.Uri
  isExternal: false
  name: LocalPath
  nameWithType: Uri.LocalPath
- uid: System.Uri.MakeRelative*
  parent: System.Uri
  isExternal: false
  name: MakeRelative
  nameWithType: Uri.MakeRelative
- uid: System.Uri.MakeRelativeUri*
  parent: System.Uri
  isExternal: false
  name: MakeRelativeUri
  nameWithType: Uri.MakeRelativeUri
- uid: System.Uri.op_Equality*
  parent: System.Uri
  isExternal: false
  name: op_Equality
  nameWithType: Uri.op_Equality
- uid: System.Uri.op_Inequality*
  parent: System.Uri
  isExternal: false
  name: op_Inequality
  nameWithType: Uri.op_Inequality
- uid: System.Uri.OriginalString*
  parent: System.Uri
  isExternal: false
  name: OriginalString
  nameWithType: Uri.OriginalString
- uid: System.Uri.Parse*
  parent: System.Uri
  isExternal: false
  name: Parse
  nameWithType: Uri.Parse
- uid: System.Uri.PathAndQuery*
  parent: System.Uri
  isExternal: false
  name: PathAndQuery
  nameWithType: Uri.PathAndQuery
- uid: System.Uri.Port*
  parent: System.Uri
  isExternal: false
  name: Port
  nameWithType: Uri.Port
- uid: System.Uri.Query*
  parent: System.Uri
  isExternal: false
  name: Query
  nameWithType: Uri.Query
- uid: System.Uri.Scheme*
  parent: System.Uri
  isExternal: false
  name: Scheme
  nameWithType: Uri.Scheme
- uid: System.Uri.Segments*
  parent: System.Uri
  isExternal: false
  name: Segments
  nameWithType: Uri.Segments
- uid: System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Uri
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Uri.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Uri.ToString*
  parent: System.Uri
  isExternal: false
  name: ToString
  nameWithType: Uri.ToString
- uid: System.Uri.TryCreate*
  parent: System.Uri
  isExternal: false
  name: TryCreate
  nameWithType: Uri.TryCreate
- uid: System.Uri.Unescape*
  parent: System.Uri
  isExternal: false
  name: Unescape
  nameWithType: Uri.Unescape
- uid: System.Uri.UnescapeDataString*
  parent: System.Uri
  isExternal: false
  name: UnescapeDataString
  nameWithType: Uri.UnescapeDataString
- uid: System.Uri.UserEscaped*
  parent: System.Uri
  isExternal: false
  name: UserEscaped
  nameWithType: Uri.UserEscaped
- uid: System.Uri.UserInfo*
  parent: System.Uri
  isExternal: false
  name: UserInfo
  nameWithType: Uri.UserInfo
