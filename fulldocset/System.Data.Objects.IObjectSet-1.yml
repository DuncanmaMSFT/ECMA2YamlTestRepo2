### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.IObjectSet`1
  id: IObjectSet`1
  children:
  - System.Data.Objects.IObjectSet`1.AddObject(`0)
  - System.Data.Objects.IObjectSet`1.Attach(`0)
  - System.Data.Objects.IObjectSet`1.DeleteObject(`0)
  - System.Data.Objects.IObjectSet`1.Detach(`0)
  langs:
  - csharp
  name: IObjectSet<TEntity>
  nameWithType: IObjectSet<TEntity>
  fullName: System.Data.Objects.IObjectSet<TEntity>
  type: Interface
  summary: Provides functionality to allow making modifications to a set of data objects.
  syntax:
    content: 'public interface IObjectSet<TEntity> : System.Collections.Generic.IEnumerable<TEntity>, System.Linq.IQueryable<TEntity> where TEntity : class'
    typeParameters:
    - id: TEntity
      description: The type of an entity object returned from the query.
  implements:
  - System.Collections.Generic.IEnumerable<TEntity>
  - System.Linq.IQueryable<TEntity>
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\IObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/IObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.IObjectSet`1.AddObject(`0)
  id: AddObject(`0)
  parent: System.Data.Objects.IObjectSet`1
  langs:
  - csharp
  name: AddObject(TEntity)
  nameWithType: IObjectSet<TEntity>.AddObject(TEntity)
  fullName: System.Data.Objects.IObjectSet<TEntity>.AddObject(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Notifies the set that an object that represents a new entity must be added to the set.
  remarks: Changes to the set may not be visible in an enumeration of the set until changes to that set have been persisted in some manner. This behavior depends on the specific implementation of the <xref:System.Data.Objects.IObjectSet%601>.
  syntax:
    content: public void AddObject (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The new object to add to the set.
  overload: System.Data.Objects.IObjectSet`1.AddObject*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\IObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/IObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.IObjectSet`1.Attach(`0)
  id: Attach(`0)
  parent: System.Data.Objects.IObjectSet`1
  langs:
  - csharp
  name: Attach(TEntity)
  nameWithType: IObjectSet<TEntity>.Attach(TEntity)
  fullName: System.Data.Objects.IObjectSet<TEntity>.Attach(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Notifies the set that an object that represents an existing entity must be added to the set.
  remarks: Changes to the set may not be visible in an enumeration of the set until changes to that set have been persisted in some manner. This behavior depends on the specific implementation of the <xref:System.Data.Objects.IObjectSet%601>.
  syntax:
    content: public void Attach (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The existing object to add to the set.
  overload: System.Data.Objects.IObjectSet`1.Attach*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\IObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/IObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.IObjectSet`1.DeleteObject(`0)
  id: DeleteObject(`0)
  parent: System.Data.Objects.IObjectSet`1
  langs:
  - csharp
  name: DeleteObject(TEntity)
  nameWithType: IObjectSet<TEntity>.DeleteObject(TEntity)
  fullName: System.Data.Objects.IObjectSet<TEntity>.DeleteObject(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Notifies the set that an object that represents an existing entity must be deleted from the set.
  remarks: Changes to the set may not be visible in an enumeration of the set until changes to that set have been persisted in some manner. This behavior depends on the specific implementation of the <xref:System.Data.Objects.IObjectSet%601>.
  syntax:
    content: public void DeleteObject (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The existing object to delete from the set.
  overload: System.Data.Objects.IObjectSet`1.DeleteObject*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\IObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/IObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.IObjectSet`1.Detach(`0)
  id: Detach(`0)
  parent: System.Data.Objects.IObjectSet`1
  langs:
  - csharp
  name: Detach(TEntity)
  nameWithType: IObjectSet<TEntity>.Detach(TEntity)
  fullName: System.Data.Objects.IObjectSet<TEntity>.Detach(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Notifies the set that an object that represents an existing entity must be detached from the set.
  remarks: Changes to the set may not be visible in an enumeration of the set until changes to that set have been persisted in some manner. This behavior depends on the specific implementation of the <xref:System.Data.Objects.IObjectSet%601>.
  syntax:
    content: public void Detach (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The object to detach from the set.
  overload: System.Data.Objects.IObjectSet`1.Detach*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\IObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/IObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Data.Objects.IObjectSet`1.AddObject(`0)
  parent: System.Data.Objects.IObjectSet`1
  isExternal: false
  name: AddObject(TEntity)
  nameWithType: IObjectSet<TEntity>.AddObject(TEntity)
  fullName: System.Data.Objects.IObjectSet<TEntity>.AddObject(TEntity)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Objects.IObjectSet`1.Attach(`0)
  parent: System.Data.Objects.IObjectSet`1
  isExternal: false
  name: Attach(TEntity)
  nameWithType: IObjectSet<TEntity>.Attach(TEntity)
  fullName: System.Data.Objects.IObjectSet<TEntity>.Attach(TEntity)
- uid: System.Data.Objects.IObjectSet`1.DeleteObject(`0)
  parent: System.Data.Objects.IObjectSet`1
  isExternal: false
  name: DeleteObject(TEntity)
  nameWithType: IObjectSet<TEntity>.DeleteObject(TEntity)
  fullName: System.Data.Objects.IObjectSet<TEntity>.DeleteObject(TEntity)
- uid: System.Data.Objects.IObjectSet`1.Detach(`0)
  parent: System.Data.Objects.IObjectSet`1
  isExternal: false
  name: Detach(TEntity)
  nameWithType: IObjectSet<TEntity>.Detach(TEntity)
  fullName: System.Data.Objects.IObjectSet<TEntity>.Detach(TEntity)
- uid: System.Data.Objects.IObjectSet`1.AddObject*
  parent: System.Data.Objects.IObjectSet`1
  isExternal: false
  name: AddObject
  nameWithType: IObjectSet<TEntity>.AddObject
- uid: System.Data.Objects.IObjectSet`1.Attach*
  parent: System.Data.Objects.IObjectSet`1
  isExternal: false
  name: Attach
  nameWithType: IObjectSet<TEntity>.Attach
- uid: System.Data.Objects.IObjectSet`1.DeleteObject*
  parent: System.Data.Objects.IObjectSet`1
  isExternal: false
  name: DeleteObject
  nameWithType: IObjectSet<TEntity>.DeleteObject
- uid: System.Data.Objects.IObjectSet`1.Detach*
  parent: System.Data.Objects.IObjectSet`1
  isExternal: false
  name: Detach
  nameWithType: IObjectSet<TEntity>.Detach
