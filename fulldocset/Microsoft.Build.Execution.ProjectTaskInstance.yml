### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.ProjectTaskInstance
  id: ProjectTaskInstance
  children:
  - Microsoft.Build.Execution.ProjectTaskInstance.Condition
  - Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError
  - Microsoft.Build.Execution.ProjectTaskInstance.Name
  - Microsoft.Build.Execution.ProjectTaskInstance.Outputs
  - Microsoft.Build.Execution.ProjectTaskInstance.Parameters
  langs:
  - csharp
  name: ProjectTaskInstance
  nameWithType: ProjectTaskInstance
  fullName: Microsoft.Build.Execution.ProjectTaskInstance
  type: Class
  summary: Wraps a [Task Element (MSBuild)](~/add/includes/ajax-current-ext-md.md).
  remarks: This is an immutable class
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Name={name} Condition={condition} ContinueOnError={continueOnError} #Parameters={parameters.Count} #Outputs={outputs.Count}")]

      public sealed class ProjectTaskInstance : Microsoft.Build.Execution.ProjectTargetInstanceChild
  inheritance:
  - System.Object
  - Microsoft.Build.Execution.ProjectTargetInstanceChild
  implements: []
  inheritedMembers:
  - Microsoft.Build.Execution.ProjectTargetInstanceChild.FullPath
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Condition
  id: Condition
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  langs:
  - csharp
  name: Condition
  nameWithType: ProjectTaskInstance.Condition
  fullName: Microsoft.Build.Execution.ProjectTaskInstance.Condition
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets the unevaluated Condition attribute of this task.
  syntax:
    content: public override string Condition { get; }
    return:
      type: System.String
      description: Returns the Condition attribute value. Returns an empty string if the attribute is not present.
  overload: Microsoft.Build.Execution.ProjectTaskInstance.Condition*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError
  id: ContinueOnError
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  langs:
  - csharp
  name: ContinueOnError
  nameWithType: ProjectTaskInstance.ContinueOnError
  fullName: Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets the unevaluated ContinueOnError attribute of the task.
  remarks: 'For more information, see [Task Element (MSBuild)](~/add/includes/ajax-current-ext-md.md) and [How to: Ignore Errors in Tasks](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public string ContinueOnError { get; }
    return:
      type: System.String
      description: Returns the unevaluated ContinueOnError attribute of the task. Returns an empty string if the attribute is not present.
  overload: Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Name
  id: Name
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  langs:
  - csharp
  name: Name
  nameWithType: ProjectTaskInstance.Name
  fullName: Microsoft.Build.Execution.ProjectTaskInstance.Name
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets the name of the task, possibly qualified, as it appears in the project.
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: Returns the name of the task, possibly qualified, as it appears in the project.
  overload: Microsoft.Build.Execution.ProjectTaskInstance.Name*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Outputs
  id: Outputs
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  langs:
  - csharp
  name: Outputs
  nameWithType: ProjectTaskInstance.Outputs
  fullName: Microsoft.Build.Execution.ProjectTaskInstance.Outputs
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets an ordered set of the output property and item objects of this task.
  remarks: This is a read-only collection.
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectTaskInstanceChild> Outputs { get; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectTaskInstanceChild}
      description: Returns an ordered set of the output property and item objects of the task.
  overload: Microsoft.Build.Execution.ProjectTaskInstance.Outputs*
  exceptions: []
  version:
  - netframework-4.0
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Parameters
  id: Parameters
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  langs:
  - csharp
  name: Parameters
  nameWithType: ProjectTaskInstance.Parameters
  fullName: Microsoft.Build.Execution.ProjectTaskInstance.Parameters
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets an unordered set of the task parameter names and unevaluated values of this task.
  remarks: "This is a read-only collection.  \n  \n Condition and ContinueOnError attributes, which have their own properties, are not included in this collection."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Parameters { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Returns an unordered set of the task parameter names and unevaluated values of this task.
  overload: Microsoft.Build.Execution.ProjectTaskInstance.Parameters*
  exceptions: []
  version:
  - netframework-4.0
references:
- uid: Microsoft.Build.Execution.ProjectTargetInstanceChild
  isExternal: false
  name: Microsoft.Build.Execution.ProjectTargetInstanceChild
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Condition
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  isExternal: false
  name: Condition
  nameWithType: ProjectTaskInstance.Condition
  fullName: Microsoft.Build.Execution.ProjectTaskInstance.Condition
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  isExternal: false
  name: ContinueOnError
  nameWithType: ProjectTaskInstance.ContinueOnError
  fullName: Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Name
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  isExternal: false
  name: Name
  nameWithType: ProjectTaskInstance.Name
  fullName: Microsoft.Build.Execution.ProjectTaskInstance.Name
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Outputs
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  isExternal: false
  name: Outputs
  nameWithType: ProjectTaskInstance.Outputs
  fullName: Microsoft.Build.Execution.ProjectTaskInstance.Outputs
- uid: System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectTaskInstanceChild}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<ProjectTaskInstanceChild>
  nameWithType: IList<ProjectTaskInstanceChild>
  fullName: System.Collections.Generic.IList<Microsoft.Build.Execution.ProjectTaskInstanceChild>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Build.Execution.ProjectTaskInstanceChild>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectTaskInstanceChild
    name: ProjectTaskInstanceChild
    nameWithType: ProjectTaskInstanceChild
    fullName: ProjectTaskInstanceChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Parameters
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  isExternal: false
  name: Parameters
  nameWithType: ProjectTaskInstance.Parameters
  fullName: Microsoft.Build.Execution.ProjectTaskInstance.Parameters
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Condition*
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  isExternal: false
  name: Condition
  nameWithType: ProjectTaskInstance.Condition
- uid: Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError*
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  isExternal: false
  name: ContinueOnError
  nameWithType: ProjectTaskInstance.ContinueOnError
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Name*
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  isExternal: false
  name: Name
  nameWithType: ProjectTaskInstance.Name
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Outputs*
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  isExternal: false
  name: Outputs
  nameWithType: ProjectTaskInstance.Outputs
- uid: Microsoft.Build.Execution.ProjectTaskInstance.Parameters*
  parent: Microsoft.Build.Execution.ProjectTaskInstance
  isExternal: false
  name: Parameters
  nameWithType: ProjectTaskInstance.Parameters
