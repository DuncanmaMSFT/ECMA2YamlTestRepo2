### YamlMime:ManagedReference
items:
- uid: System.Nullable`1
  id: Nullable`1
  children:
  - System.Nullable`1.#ctor(`0)
  - System.Nullable`1.Equals(System.Object)
  - System.Nullable`1.GetHashCode
  - System.Nullable`1.GetValueOrDefault
  - System.Nullable`1.GetValueOrDefault(`0)
  - System.Nullable`1.HasValue
  - System.Nullable`1.op_Explicit(System.Nullable<T> to T)
  - System.Nullable`1.op_Implicit(`0)
  - System.Nullable`1.ToString
  - System.Nullable`1.Value
  langs:
  - csharp
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  type: Struct
  summary: Represents a value type that can be assigned `null`.
  remarks: "A type is said to be nullable if it can be assigned a value or can be assigned `null`, which means the type has no value whatsoever. By default, all reference types, such as <xref:System.String>, are nullable, but all value types, such as <xref:System.Int32>, are not.  \n  \n In C# and Visual Basic, you mark a value type as nullable by using the `?` notation after the value type. For example, `int?` in C# or `Integer?` in Visual Basic declares an integer value type that can be assigned `null`.  \n  \n The Nullable(T) structure supports using only a value type as a nullable type because reference types are nullable by design.  \n  \n The <xref:System.Nullable> class provides complementary support for the Nullable(T) structure. The <xref:System.Nullable> class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.  \n  \n## Fundamental Properties  \n The two fundamental members of the Nullable(T) structure are the <xref:System.Nullable%601.HasValue%2A> and <xref:System.Nullable%601.Value%2A> properties. If the <xref:System.Nullable%601.HasValue%2A> property for a Nullable(T) object is `true`, the value of the object can be accessed with the <xref:System.Nullable%601.Value%2A> property. If the <xref:System.Nullable%601.HasValue%2A> property is `false`, the value of the object is undefined and an attempt to access the <xref:System.Nullable%601.Value%2A> property throws an <xref:System.InvalidOperationException>.  \n  \n## Boxing and Unboxing  \n When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the Nullable(T) object, not the Nullable(T) object itself. That is, if the <xref:System.Nullable%601.HasValue%2A> property is `true`, the contents of the <xref:System.Nullable%601.Value%2A> property is boxed. When the underlying value of a nullable type is unboxed, the common language runtime creates a new Nullable(T) structure initialized to the underlying value.  \n  \n If the `HasValue` property of a nullable type is `false`, the result of a boxing operation is `null`. Consequently, if a boxed nullable type is passed to a method that expects an object argument, that method must be prepared to handle the case where the argument is `null`. When `null` is unboxed into a nullable type, the common language runtime creates a new Nullable(T) structure and initializes its `HasValue` property to `false`.  \n  \n## [!INCLUDE[net_v451](~/add/includes/net-v451-md.md)] and Windows Runtime Components  \n Starting with the [!INCLUDE[net_v451](~/add/includes/net-v451-md.md)], you can include a Nullable(T) type as a member of a structure exported in a WinMD library. Previously, this was not supported."
  example:
  - "The following code example defines three rows of a table in the Microsoft Pubs sample database. The table contains two columns that are not nullable and two columns that are nullable.  \n  \n [!code-cs[system.nullableOfT.class#1](~/add/codesnippet/csharp/t-system.nullable`1_1.cs)]\n [!code-vb[system.nullableOfT.class#1](~/add/codesnippet/visualbasic/t-system.nullable`1_1.vb)]\n [!code-cpp[system.nullableOfT.class#1](~/add/codesnippet/cpp/t-system.nullable`1_1.cpp)]"
  syntax:
    content: 'public struct Nullable<T> where T : struct'
    typeParameters:
    - id: T
      description: The underlying value type of the Nullable(T) generic type.
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Nullable`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: System.Nullable`1
  langs:
  - csharp
  name: Nullable<T>(T)
  nameWithType: Nullable<T>.Nullable<T>(T)
  fullName: System.Nullable<T>.Nullable<T>(T)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="stem.Nullable%601"></xref> structure to the specified value.
  remarks: The Nullable(T) constructor initializes the <xref:System.Nullable%601.HasValue%2A> property of the new <xref:System.Nullable%601> object to `true`, and the <xref:System.Nullable%601.Value%2A> property to the value of the `value` parameter.
  syntax:
    content: public Nullable (T value);
    parameters:
    - id: value
      type: T
      description: A value type.
  overload: System.Nullable`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Nullable`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Nullable`1
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Nullable<T>.Equals(Object)
  fullName: System.Nullable<T>.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether the current <xref href="stem.Nullable%601"></xref> object is equal to a specified object.
  remarks: If the <xref:System.Nullable%601.HasValue%2A> property of the current <xref:System.Nullable%601> structure is `true` and the `other` argument is not `null`, equality is determined by passing the `other` parameter to the `Equals` method of the underlying value of the current <xref:System.Nullable%601> structure.
  example:
  - "The following code example determines whether an object and a <xref:System.Nullable%601> object are equal to the current <xref:System.Nullable%601> object.  \n  \n [!code-vb[system.nullableOfT.Equals#1](~/add/codesnippet/visualbasic/m-system.nullable`1.equa_1.vb)]\n [!code-cs[system.nullableOfT.Equals#1](~/add/codesnippet/csharp/m-system.nullable`1.equa_1.cs)]"
  syntax:
    content: public override bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: An object.
    return:
      type: System.Boolean
      description: "`true` if the <code>other</code> parameter is equal to the current <xref href=\"stem.Nullable%601\"></xref> object; otherwise, `false`.  \n  \n This table describes how equality is defined for the compared values:  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td>`true`</td><td> The <xref href=\"stem.Nullable%601.HasValue%2A\"></xref> property is `false`, and the <code>other</code> parameter is `null`. That is, two null values are equal by definition.  \n  \n -or-  \n  \n The <xref href=\"stem.Nullable%601.HasValue%2A\"></xref> property is `true`, and the value returned by the <xref href=\"stem.Nullable%601.Value%2A\"></xref> property is equal to the <code>other</code> parameter.  \n  \n </td></tr><tr><td>`false`</td><td> The <xref href=\"stem.Nullable%601.HasValue%2A\"></xref> property for the current <xref href=\"stem.Nullable%601\"></xref> structure is `true`, and the <code>other</code> parameter is `null`.  \n  \n -or-  \n  \n The <xref href=\"stem.Nullable%601.HasValue%2A\"></xref> property for the current <xref href=\"stem.Nullable%601\"></xref> structure is `false`, and the <code>other</code> parameter is not `null`.  \n  \n -or-  \n  \n The <xref href=\"stem.Nullable%601.HasValue%2A\"></xref> property for the current <xref href=\"stem.Nullable%601\"></xref> structure is `true`, and the value returned by the <xref href=\"stem.Nullable%601.Value%2A\"></xref> property is not equal to the <code>other</code> parameter.  \n  \n </td></tr></tbody></table>"
  overload: System.Nullable`1.Equals*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Nullable`1.GetHashCode
  id: GetHashCode
  parent: System.Nullable`1
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Nullable<T>.GetHashCode()
  fullName: System.Nullable<T>.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves the hash code of the object returned by the <xref href="stem.Nullable%601.Value%2A"></xref> property.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash code of the object returned by the <xref href="stem.Nullable%601.Value%2A"></xref> property if the <xref href="stem.Nullable%601.HasValue%2A"></xref> property is `true`, or zero if the <xref href="stem.Nullable%601.HasValue%2A"></xref> property is `false`.
  overload: System.Nullable`1.GetHashCode*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Nullable`1.GetValueOrDefault
  id: GetValueOrDefault
  parent: System.Nullable`1
  langs:
  - csharp
  name: GetValueOrDefault()
  nameWithType: Nullable<T>.GetValueOrDefault()
  fullName: System.Nullable<T>.GetValueOrDefault()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves the value of the current <xref href="stem.Nullable%601"></xref> object, or the object's default value.
  remarks: The <xref:System.Nullable%601.GetValueOrDefault%2A> method returns a value even if the <xref:System.Nullable%601.HasValue%2A> property is `false` (unlike the <xref:System.Nullable%601.Value%2A> property, which throws an exception).
  example:
  - "The following code example retrieves the value of a <xref:System.Nullable%601> object if that value is defined; otherwise, it retrieves the default value or a specific default value.  \n  \n [!code-cs[system.nullableOfT.GetValueOrDefault#1](~/add/codesnippet/csharp/m-system.nullable`1.getv_0_1.cs)]\n [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/add/codesnippet/visualbasic/m-system.nullable`1.getv_0_1.vb)]"
  syntax:
    content: public T GetValueOrDefault ();
    parameters: []
    return:
      type: T
      description: The value of the <xref href="stem.Nullable%601.Value%2A"></xref> property if the  <xref href="stem.Nullable%601.HasValue%2A"></xref> property is `true`; otherwise, the default value of the current <xref href="stem.Nullable%601"></xref> object. The type of the default value is the type argument of the current <xref href="stem.Nullable%601"></xref> object, and the value of the default value consists solely of binary zeroes.
  overload: System.Nullable`1.GetValueOrDefault*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Nullable`1.GetValueOrDefault(`0)
  id: GetValueOrDefault(`0)
  parent: System.Nullable`1
  langs:
  - csharp
  name: GetValueOrDefault(T)
  nameWithType: Nullable<T>.GetValueOrDefault(T)
  fullName: System.Nullable<T>.GetValueOrDefault(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Retrieves the value of the current <xref href="stem.Nullable%601"></xref> object, or the specified default value.
  remarks: The <xref:System.Nullable%601.GetValueOrDefault%2A> method returns a value even if the <xref:System.Nullable%601.HasValue%2A> property is `false` (unlike the <xref:System.Nullable%601.Value%2A> property, which throws an exception).
  example:
  - "The following code example retrieves the value of a <xref:System.Nullable%601> object if that value is defined; otherwise, it retrieves the default value or a specific default value.  \n  \n [!code-cs[system.nullableOfT.GetValueOrDefault#1](~/add/codesnippet/csharp/m-system.nullable`1.getv_1_1.cs)]\n [!code-vb[system.nullableOfT.GetValueOrDefault#1](~/add/codesnippet/visualbasic/m-system.nullable`1.getv_1_1.vb)]"
  syntax:
    content: public T GetValueOrDefault (T defaultValue);
    parameters:
    - id: defaultValue
      type: T
      description: A value to return if the <xref href="stem.Nullable%601.HasValue%2A"></xref> property is `false`.
    return:
      type: T
      description: The value of the <xref href="stem.Nullable%601.Value%2A"></xref> property if the <xref href="stem.Nullable%601.HasValue%2A"></xref> property is `true`; otherwise, the <code>defaultValue</code> parameter.
  overload: System.Nullable`1.GetValueOrDefault*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Nullable`1.HasValue
  id: HasValue
  parent: System.Nullable`1
  langs:
  - csharp
  name: HasValue
  nameWithType: Nullable<T>.HasValue
  fullName: System.Nullable<T>.HasValue
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a value indicating whether the current <xref href="stem.Nullable%601"></xref> object has a valid value of its underlying type.
  remarks: If the HasValue property is `true`, the value of the current <xref:System.Nullable%601> object can be accessed with the <xref:System.Nullable%601.Value%2A> property. Otherwise, attempting to access its value throws an <xref:System.InvalidOperationException> exception.
  example:
  - "The following example uses the HasValue property of a `Nullable<Integer>` object to determine whether it should display the object's <xref:System.Nullable%601.Value%2A> property or its <xref:System.Nullable%601.GetValueOrDefault%2A> property.  \n  \n [!code-cs[System.Nullable~1.HasValue#1](~/add/codesnippet/csharp/p-system.nullable`1.hasv_1.cs)]\n [!code-vb[System.Nullable~1.HasValue#1](~/add/codesnippet/visualbasic/p-system.nullable`1.hasv_1.vb)]"
  syntax:
    content: public bool HasValue { get; }
    return:
      type: System.Boolean
      description: '`true` if the current <xref href="stem.Nullable%601"></xref> object has a value; `false` if the current <xref href="stem.Nullable%601"></xref> object has no value.'
  overload: System.Nullable`1.HasValue*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Nullable`1.op_Explicit(System.Nullable<T> to T)
  id: op_Explicit(System.Nullable<T> to T)
  parent: System.Nullable`1
  langs:
  - csharp
  name: op_Explicit(Nullable<T>)
  nameWithType: Nullable<T>.op_Explicit(Nullable<T>)
  fullName: System.Nullable<T>.op_Explicit(Nullable<T>)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static T op_Explicit (Nullable<T> value);
    parameters:
    - id: value
      type: System.Nullable`1
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Nullable`1.op_Explicit*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Nullable`1.op_Implicit(`0)
  id: op_Implicit(`0)
  parent: System.Nullable`1
  langs:
  - csharp
  name: op_Implicit(T)
  nameWithType: Nullable<T>.op_Implicit(T)
  fullName: System.Nullable<T>.op_Implicit(T)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static Nullable<T> op_Implicit (T value);
    parameters:
    - id: value
      type: T
      description: To be added.
    return:
      type: System.Nullable`1
      description: To be added.
  overload: System.Nullable`1.op_Implicit*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Nullable`1.ToString
  id: ToString
  parent: System.Nullable`1
  langs:
  - csharp
  name: ToString()
  nameWithType: Nullable<T>.ToString()
  fullName: System.Nullable<T>.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the text representation of the value of the current <xref href="stem.Nullable%601"></xref> object.
  remarks: The ToString property returns the string yielded by calling the `ToString` property of the object returned by the <xref:System.Nullable%601.Value%2A> property.
  example:
  - "The following code example displays the value of the current <xref:System.Nullable%601> object.  \n  \n [!code-vb[system.nullableOfT.ToString#1](~/add/codesnippet/visualbasic/m-system.nullable`1.tost_1.vb)]\n [!code-cs[system.nullableOfT.ToString#1](~/add/codesnippet/csharp/m-system.nullable`1.tost_1.cs)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The text representation of the value of the current <xref href="stem.Nullable%601"></xref> object if the <xref href="stem.Nullable%601.HasValue%2A"></xref> property is `true`, or an empty string ("") if the <xref href="stem.Nullable%601.HasValue%2A"></xref> property is `false`.
  overload: System.Nullable`1.ToString*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Nullable`1.Value
  id: Value
  parent: System.Nullable`1
  langs:
  - csharp
  name: Value
  nameWithType: Nullable<T>.Value
  fullName: System.Nullable<T>.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the value of the current <xref href="stem.Nullable%601"></xref> object if it has been assigned a valid underlying value.
  remarks: If a value of type `T` has not been assigned to the <xref:System.Nullable%601> object, you can compare it to `null` and retrieve its <xref:System.Nullable%601.HasValue%2A> property, but you cannot access its Value property or call its other members.
  example:
  - "The following example uses the <xref:System.Nullable%601.HasValue%2A> property of a `Nullable<Integer>` object to determine whether it should display the object's Value property or its <xref:System.Nullable%601.GetValueOrDefault%2A> property.  \n  \n [!code-cs[System.Nullable~1.HasValue#1](~/add/codesnippet/csharp/p-system.nullable`1.value_1.cs)]\n [!code-vb[System.Nullable~1.HasValue#1](~/add/codesnippet/visualbasic/p-system.nullable`1.value_1.vb)]"
  syntax:
    content: public T Value { get; }
    return:
      type: T
      description: The value of the current <xref href="stem.Nullable%601"></xref> object if the <xref href="stem.Nullable%601.HasValue%2A"></xref> property is `true`. An exception is thrown if the <xref href="stem.Nullable%601.HasValue%2A"></xref> property is `false`.
  overload: System.Nullable`1.Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="stem.Nullable%601.HasValue%2A"></xref> property is `false`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Nullable`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Nullable`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Nullable`1.#ctor(`0)
  parent: System.Nullable`1
  isExternal: false
  name: Nullable<T>(T)
  nameWithType: Nullable<T>.Nullable<T>(T)
  fullName: System.Nullable<T>.Nullable<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Nullable`1.Equals(System.Object)
  parent: System.Nullable`1
  isExternal: false
  name: Equals(Object)
  nameWithType: Nullable<T>.Equals(Object)
  fullName: System.Nullable<T>.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Nullable`1.GetHashCode
  parent: System.Nullable`1
  isExternal: false
  name: GetHashCode()
  nameWithType: Nullable<T>.GetHashCode()
  fullName: System.Nullable<T>.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable`1.GetValueOrDefault
  parent: System.Nullable`1
  isExternal: false
  name: GetValueOrDefault()
  nameWithType: Nullable<T>.GetValueOrDefault()
  fullName: System.Nullable<T>.GetValueOrDefault()
- uid: System.Nullable`1.GetValueOrDefault(`0)
  parent: System.Nullable`1
  isExternal: false
  name: GetValueOrDefault(T)
  nameWithType: Nullable<T>.GetValueOrDefault(T)
  fullName: System.Nullable<T>.GetValueOrDefault(T)
- uid: System.Nullable`1.HasValue
  parent: System.Nullable`1
  isExternal: false
  name: HasValue
  nameWithType: Nullable<T>.HasValue
  fullName: System.Nullable<T>.HasValue
- uid: System.Nullable`1.op_Explicit(System.Nullable<T> to T)
  parent: System.Nullable`1
  isExternal: false
  name: op_Explicit(Nullable<T>)
  nameWithType: Nullable<T>.op_Explicit(Nullable<T>)
  fullName: System.Nullable<T>.op_Explicit(Nullable<T>)
- uid: System.Nullable`1
  parent: System
  isExternal: false
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
- uid: System.Nullable`1.op_Implicit(`0)
  parent: System.Nullable`1
  isExternal: false
  name: op_Implicit(T)
  nameWithType: Nullable<T>.op_Implicit(T)
  fullName: System.Nullable<T>.op_Implicit(T)
- uid: System.Nullable`1.ToString
  parent: System.Nullable`1
  isExternal: false
  name: ToString()
  nameWithType: Nullable<T>.ToString()
  fullName: System.Nullable<T>.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1.Value
  parent: System.Nullable`1
  isExternal: false
  name: Value
  nameWithType: Nullable<T>.Value
  fullName: System.Nullable<T>.Value
- uid: System.Nullable`1.#ctor*
  parent: System.Nullable`1
  isExternal: false
  name: Nullable<T>
  nameWithType: Nullable<T>.Nullable<T>
- uid: System.Nullable`1.Equals*
  parent: System.Nullable`1
  isExternal: false
  name: Equals
  nameWithType: Nullable<T>.Equals
- uid: System.Nullable`1.GetHashCode*
  parent: System.Nullable`1
  isExternal: false
  name: GetHashCode
  nameWithType: Nullable<T>.GetHashCode
- uid: System.Nullable`1.GetValueOrDefault*
  parent: System.Nullable`1
  isExternal: false
  name: GetValueOrDefault
  nameWithType: Nullable<T>.GetValueOrDefault
- uid: System.Nullable`1.HasValue*
  parent: System.Nullable`1
  isExternal: false
  name: HasValue
  nameWithType: Nullable<T>.HasValue
- uid: System.Nullable`1.op_Explicit*
  parent: System.Nullable`1
  isExternal: false
  name: op_Explicit
  nameWithType: Nullable<T>.op_Explicit
- uid: System.Nullable`1.op_Implicit*
  parent: System.Nullable`1
  isExternal: false
  name: op_Implicit
  nameWithType: Nullable<T>.op_Implicit
- uid: System.Nullable`1.ToString*
  parent: System.Nullable`1
  isExternal: false
  name: ToString
  nameWithType: Nullable<T>.ToString
- uid: System.Nullable`1.Value*
  parent: System.Nullable`1
  isExternal: false
  name: Value
  nameWithType: Nullable<T>.Value
