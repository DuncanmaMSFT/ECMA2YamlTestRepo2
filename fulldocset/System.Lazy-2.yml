### YamlMime:ManagedReference
items:
- uid: System.Lazy`2
  id: Lazy`2
  children:
  - System.Lazy`2.#ctor(`1)
  - System.Lazy`2.#ctor(System.Func{`0},`1)
  - System.Lazy`2.#ctor(`1,System.Boolean)
  - System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)
  - System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)
  - System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)
  - System.Lazy`2.Metadata
  langs:
  - csharp
  name: Lazy<T,TMetadata>
  nameWithType: Lazy<T,TMetadata>
  fullName: System.Lazy<T,TMetadata>
  type: Class
  summary: Provides a lazy indirect reference to an object and its associated metadata for use by the Managed Extensibility Framework.
  syntax:
    content: 'public class Lazy<T,TMetadata> : Lazy<T>'
    typeParameters:
    - id: T
      description: The type of the object referenced.
    - id: TMetadata
      description: The type of the metadata.
  inheritance:
  - System.Object
  - System.Lazy`1
  implements: []
  inheritedMembers:
  - System.Lazy`1.IsValueCreated
  - System.Lazy`1.ToString
  - System.Lazy`1.Value
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Lazy`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Lazy`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Lazy`2.#ctor(`1)
  id: '#ctor(`1)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(TMetadata)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System
  summary: Initializes a new instance of the <xref href="stem.Lazy%602"></xref> class with the specified metadata.
  syntax:
    content: public Lazy (TMetadata metadata);
    parameters:
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
  overload: System.Lazy`2.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Lazy`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Lazy`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Lazy`2.#ctor(System.Func{`0},`1)
  id: '#ctor(System.Func{`0},`1)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(Func<T>,TMetadata)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System
  summary: Initializes a new instance of the <xref href="stem.Lazy%602"></xref> class with the specified metadata that uses the specified function to get the referenced object.
  syntax:
    content: public Lazy (Func<T> valueFactory, TMetadata metadata);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: A function that returns the referenced object.
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
  overload: System.Lazy`2.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Lazy`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Lazy`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Lazy`2.#ctor(`1,System.Boolean)
  id: '#ctor(`1,System.Boolean)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(TMetadata,Boolean)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata,Boolean)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata,Boolean)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System
  summary: Initializes a new instance of the <xref href="stem.Lazy%602"></xref> class with the specified metadata and thread safety value.
  syntax:
    content: public Lazy (TMetadata metadata, bool isThreadSafe);
    parameters:
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
    - id: isThreadSafe
      type: System.Boolean
      description: Indicates whether the <xref href="stem.Lazy%602"></xref> object that is created will be thread-safe.
  overload: System.Lazy`2.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Lazy`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Lazy`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)
  id: '#ctor(`1,System.Threading.LazyThreadSafetyMode)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(TMetadata,LazyThreadSafetyMode)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata,LazyThreadSafetyMode)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata,LazyThreadSafetyMode)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System
  summary: Initializes a new instance of the <xref href="stem.Lazy%602"></xref> class with the specified metadata and thread synchronization mode.
  remarks: See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>.
  syntax:
    content: public Lazy (TMetadata metadata, System.Threading.LazyThreadSafetyMode mode);
    parameters:
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
    - id: mode
      type: System.Threading.LazyThreadSafetyMode
      description: The thread synchronization mode.
  overload: System.Lazy`2.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Lazy`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Lazy`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)
  id: '#ctor(System.Func{`0},`1,System.Boolean)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(Func<T>,TMetadata,Boolean)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata,Boolean)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata,Boolean)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System
  summary: Initializes a new instance of the <xref href="stem.Lazy%602"></xref> class with the specified metadata and thread safety value that uses the specified function to get the referenced object.
  syntax:
    content: public Lazy (Func<T> valueFactory, TMetadata metadata, bool isThreadSafe);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: A function that returns the referenced object.
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
    - id: isThreadSafe
      type: System.Boolean
      description: Indicates whether the <xref href="stem.Lazy%602"></xref> object that is created will be thread-safe.
  overload: System.Lazy`2.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Lazy`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Lazy`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)
  id: '#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)'
  parent: System.Lazy`2
  langs:
  - csharp
  name: Lazy<T,TMetadata>(Func<T>,TMetadata,LazyThreadSafetyMode)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata,LazyThreadSafetyMode)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata,LazyThreadSafetyMode)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System
  summary: Initializes a new instance of the <xref href="stem.Lazy%602"></xref> class with the specified metadata and thread synchronization mode that uses the specified function to get the referenced object.
  remarks: See <xref:System.Threading.LazyThreadSafetyMode> for more information on thread synchronization and <xref:System.Lazy%602>.
  syntax:
    content: public Lazy (Func<T> valueFactory, TMetadata metadata, System.Threading.LazyThreadSafetyMode mode);
    parameters:
    - id: valueFactory
      type: System.Func{T}
      description: A function that returns the referenced object
    - id: metadata
      type: TMetadata
      description: The metadata associated with the referenced object.
    - id: mode
      type: System.Threading.LazyThreadSafetyMode
      description: The thread synchronization mode
  overload: System.Lazy`2.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Lazy`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Lazy`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Lazy`2.Metadata
  id: Metadata
  parent: System.Lazy`2
  langs:
  - csharp
  name: Metadata
  nameWithType: Lazy<T,TMetadata>.Metadata
  fullName: System.Lazy<T,TMetadata>.Metadata
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System
  summary: Gets the metadata associated with the referenced object.
  syntax:
    content: public TMetadata Metadata { get; }
    return:
      type: TMetadata
      description: The metadata associated with the referenced object.
  overload: System.Lazy`2.Metadata*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\Lazy`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/Lazy`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Lazy`1
  isExternal: false
  name: System.Lazy<T>
- uid: System.Lazy`2.#ctor(`1)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(TMetadata)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata)
- uid: TMetadata
  isExternal: true
  name: TMetadata
  nameWithType: TMetadata
  fullName: TMetadata
- uid: System.Lazy`2.#ctor(System.Func{`0},`1)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(Func<T>,TMetadata)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata)
- uid: System.Func{T}
  parent: System
  isExternal: false
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Lazy`2.#ctor(`1,System.Boolean)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(TMetadata,Boolean)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata,Boolean)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(TMetadata,LazyThreadSafetyMode)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata,LazyThreadSafetyMode)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(TMetadata,LazyThreadSafetyMode)
- uid: System.Threading.LazyThreadSafetyMode
  parent: System.Threading
  isExternal: false
  name: LazyThreadSafetyMode
  nameWithType: LazyThreadSafetyMode
  fullName: System.Threading.LazyThreadSafetyMode
- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(Func<T>,TMetadata,Boolean)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata,Boolean)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata,Boolean)
- uid: System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>(Func<T>,TMetadata,LazyThreadSafetyMode)
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata,LazyThreadSafetyMode)
  fullName: System.Lazy<T,TMetadata>.Lazy<T,TMetadata>(Func<T>,TMetadata,LazyThreadSafetyMode)
- uid: System.Lazy`2.Metadata
  parent: System.Lazy`2
  isExternal: false
  name: Metadata
  nameWithType: Lazy<T,TMetadata>.Metadata
  fullName: System.Lazy<T,TMetadata>.Metadata
- uid: System.Lazy`2.#ctor*
  parent: System.Lazy`2
  isExternal: false
  name: Lazy<T,TMetadata>
  nameWithType: Lazy<T,TMetadata>.Lazy<T,TMetadata>
- uid: System.Lazy`2.Metadata*
  parent: System.Lazy`2
  isExternal: false
  name: Metadata
  nameWithType: Lazy<T,TMetadata>.Metadata
