### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.INameScope
  id: INameScope
  children:
  - System.Windows.Markup.INameScope.FindName(System.String)
  - System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)
  - System.Windows.Markup.INameScope.UnregisterName(System.String)
  langs:
  - csharp
  name: INameScope
  nameWithType: INameScope
  fullName: System.Windows.Markup.INameScope
  type: Interface
  summary: Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.
  remarks: "This interface is implemented by classes that have child elements that are intended to be reused through the template or defer metaphor. Templates, factories and similar constructs must have unique XAML namescopes that are separate from a main object graph and root XAML. The principle here is that there should be no name collisions when objects created from those child elements are introduced to an application's object graph, and so that DOM operations and XAML reference techniques that rely on the name identifier can rely on name uniqueness in each XAML namescope.  \n  \n In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], INameScope is in the System.Xaml assembly. For more information, see [Types Migrated from WPF to System.Xaml](../Topic/Types%20Migrated%20from%20WPF%20to%20System.Xaml.md).  \n  \n## WPF Usage Notes  \n This interface is implemented by the WPF class <xref:System.Windows.NameScope>. Most XAML namescope operations in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] operate by using <xref:System.Windows.NameScope> instances, but information is occasionally communicated internally by using INameScope references.  \n  \n Examples of WPF classes that use a factory or defer metaphor combined with XAML representation are <xref:System.Windows.Style> and <xref:System.Windows.FrameworkTemplate>. These implementations usually rely on the explicit versions of the interface methods available from the <xref:System.Windows.NameScope> class."
  syntax:
    content: >-
      [System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      public interface INameScope
  implements: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Markup\INameScope.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Markup/INameScope.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Markup.INameScope.FindName(System.String)
  id: FindName(System.String)
  parent: System.Windows.Markup.INameScope
  langs:
  - csharp
  name: FindName(String)
  nameWithType: INameScope.FindName(String)
  fullName: System.Windows.Markup.INameScope.FindName(String)
  type: Method
  assemblies:
  - WindowsBase
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Returns an object that has the provided identifying name.
  remarks: Valid name strings in XAML markup must match the requirements documented in [XamlName Grammar](../Topic/XamlName%20Grammar.md).
  syntax:
    content: public object FindName (string name);
    parameters:
    - id: name
      type: System.String
      description: The name identifier for the object being requested.
    return:
      type: System.Object
      description: The object, if found. Returns `null` if no object of that name was found.
  overload: System.Windows.Markup.INameScope.FindName*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Markup\INameScope.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Markup/INameScope.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)
  id: RegisterName(System.String,System.Object)
  parent: System.Windows.Markup.INameScope
  langs:
  - csharp
  name: RegisterName(String,Object)
  nameWithType: INameScope.RegisterName(String,Object)
  fullName: System.Windows.Markup.INameScope.RegisterName(String,Object)
  type: Method
  assemblies:
  - WindowsBase
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Registers the provided name into the current XAML namescope.
  remarks: Duplicate names in a XAML namescope are not permitted.
  syntax:
    content: public void RegisterName (string name, object scopedElement);
    parameters:
    - id: name
      type: System.String
      description: The name to register.
    - id: scopedElement
      type: System.Object
      description: The specific element that the provided <code>name</code> refers to.
  overload: System.Windows.Markup.INameScope.RegisterName*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Markup\INameScope.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Markup/INameScope.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Windows.Markup.INameScope.UnregisterName(System.String)
  id: UnregisterName(System.String)
  parent: System.Windows.Markup.INameScope
  langs:
  - csharp
  name: UnregisterName(String)
  nameWithType: INameScope.UnregisterName(String)
  fullName: System.Windows.Markup.INameScope.UnregisterName(String)
  type: Method
  assemblies:
  - WindowsBase
  - System.Xaml
  namespace: System.Windows.Markup
  summary: Unregisters the provided name from the current XAML namescope.
  syntax:
    content: public void UnregisterName (string name);
    parameters:
    - id: name
      type: System.String
      description: The name to unregister.
  overload: System.Windows.Markup.INameScope.UnregisterName*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Windows.Markup\INameScope.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Windows.Markup/INameScope.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Windows.Markup.INameScope.FindName(System.String)
  parent: System.Windows.Markup.INameScope
  isExternal: false
  name: FindName(String)
  nameWithType: INameScope.FindName(String)
  fullName: System.Windows.Markup.INameScope.FindName(String)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)
  parent: System.Windows.Markup.INameScope
  isExternal: false
  name: RegisterName(String,Object)
  nameWithType: INameScope.RegisterName(String,Object)
  fullName: System.Windows.Markup.INameScope.RegisterName(String,Object)
- uid: System.Windows.Markup.INameScope.UnregisterName(System.String)
  parent: System.Windows.Markup.INameScope
  isExternal: false
  name: UnregisterName(String)
  nameWithType: INameScope.UnregisterName(String)
  fullName: System.Windows.Markup.INameScope.UnregisterName(String)
- uid: System.Windows.Markup.INameScope.FindName*
  parent: System.Windows.Markup.INameScope
  isExternal: false
  name: FindName
  nameWithType: INameScope.FindName
- uid: System.Windows.Markup.INameScope.RegisterName*
  parent: System.Windows.Markup.INameScope
  isExternal: false
  name: RegisterName
  nameWithType: INameScope.RegisterName
- uid: System.Windows.Markup.INameScope.UnregisterName*
  parent: System.Windows.Markup.INameScope
  isExternal: false
  name: UnregisterName
  nameWithType: INameScope.UnregisterName
