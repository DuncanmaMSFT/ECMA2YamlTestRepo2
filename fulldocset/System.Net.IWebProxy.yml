### YamlMime:ManagedReference
items:
- uid: System.Net.IWebProxy
  id: IWebProxy
  children:
  - System.Net.IWebProxy.Credentials
  - System.Net.IWebProxy.GetProxy(System.Uri)
  - System.Net.IWebProxy.IsBypassed(System.Uri)
  langs:
  - csharp
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
  type: Interface
  summary: Provides the base interface for implementation of proxy access for the <xref:System.Net.WebRequest> class.
  syntax:
    content: public interface IWebProxy
  implements: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IWebProxy.Credentials
  id: Credentials
  parent: System.Net.IWebProxy
  langs:
  - csharp
  name: Credentials
  nameWithType: IWebProxy.Credentials
  fullName: System.Net.IWebProxy.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: The credentials to submit to the proxy server for authentication.
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: To be added.
  overload: System.Net.IWebProxy.Credentials*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IWebProxy.GetProxy(System.Uri)
  id: GetProxy(System.Uri)
  parent: System.Net.IWebProxy
  langs:
  - csharp
  name: GetProxy(Uri)
  nameWithType: IWebProxy.GetProxy(Uri)
  fullName: System.Net.IWebProxy.GetProxy(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: Returns the URI of a proxy.
  syntax:
    content: public Uri GetProxy (Uri destination);
    parameters:
    - id: destination
      type: System.Uri
      description: To be added.
    return:
      type: System.Uri
      description: To be added.
  overload: System.Net.IWebProxy.GetProxy*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Net.IWebProxy.IsBypassed(System.Uri)
  id: IsBypassed(System.Uri)
  parent: System.Net.IWebProxy
  langs:
  - csharp
  name: IsBypassed(Uri)
  nameWithType: IWebProxy.IsBypassed(Uri)
  fullName: System.Net.IWebProxy.IsBypassed(Uri)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: Indicates that the proxy should not be used for the specified host.
  syntax:
    content: public bool IsBypassed (Uri host);
    parameters:
    - id: host
      type: System.Uri
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Net.IWebProxy.IsBypassed*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Net.IWebProxy.Credentials
  parent: System.Net.IWebProxy
  isExternal: false
  name: Credentials
  nameWithType: IWebProxy.Credentials
  fullName: System.Net.IWebProxy.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.IWebProxy.GetProxy(System.Uri)
  parent: System.Net.IWebProxy
  isExternal: false
  name: GetProxy(Uri)
  nameWithType: IWebProxy.GetProxy(Uri)
  fullName: System.Net.IWebProxy.GetProxy(Uri)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.IWebProxy.IsBypassed(System.Uri)
  parent: System.Net.IWebProxy
  isExternal: false
  name: IsBypassed(Uri)
  nameWithType: IWebProxy.IsBypassed(Uri)
  fullName: System.Net.IWebProxy.IsBypassed(Uri)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.IWebProxy.Credentials*
  parent: System.Net.IWebProxy
  isExternal: false
  name: Credentials
  nameWithType: IWebProxy.Credentials
- uid: System.Net.IWebProxy.GetProxy*
  parent: System.Net.IWebProxy
  isExternal: false
  name: GetProxy
  nameWithType: IWebProxy.GetProxy
- uid: System.Net.IWebProxy.IsBypassed*
  parent: System.Net.IWebProxy
  isExternal: false
  name: IsBypassed
  nameWithType: IWebProxy.IsBypassed
