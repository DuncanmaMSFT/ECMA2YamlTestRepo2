### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  id: ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  children:
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.IsCompleted
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.OnCompleted(System.Action)
  - System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  langs:
  - csharp
  name: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter
  type: Struct
  summary: Provides an awaiter for an awaitable (<xref href="System.Runtime.CompilerServices.ConfiguredTaskAwaitable"></xref>) object.
  remarks: This type is intended for compiler use; do not use it directly in your code.
  syntax:
    content: 'public struct ConfiguredTaskAwaitable.ConfiguredTaskAwaiter : System.Runtime.CompilerServices.ICriticalNotifyCompletion'
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.Runtime.CompilerServices.ICriticalNotifyCompletion
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult
  id: GetResult
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  langs:
  - csharp
  name: GetResult()
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult()
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: Ends the await on the completed task.
  remarks: This method is intended for compiler use; do not use it directly in your code.
  syntax:
    content: public void GetResult ();
    parameters: []
  overload: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The awaiter was not properly initialized.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: The task was canceled.
  - type: System.Exception
    commentId: T:System.Exception
    description: The task completed in a faulted state.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.IsCompleted
  id: IsCompleted
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  langs:
  - csharp
  name: IsCompleted
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.IsCompleted
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.IsCompleted
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: Gets a value that specifies whether the task being awaited is completed.
  remarks: This property is intended for compiler use; do not use it directly in your code.
  syntax:
    content: public bool IsCompleted { get; }
    return:
      type: System.Boolean
      description: '`true` if the task being awaited is completed; otherwise, `false`.'
  overload: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.IsCompleted*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The awaiter was not properly initialized.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.OnCompleted(System.Action)
  id: OnCompleted(System.Action)
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  langs:
  - csharp
  name: OnCompleted(Action)
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.OnCompleted(Action)
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.OnCompleted(Action)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: Schedules the continuation action for the task associated with this awaiter.
  remarks: This method is intended for compiler use; do not use it directly in your code.
  syntax:
    content: public void OnCompleted (Action continuation);
    parameters:
    - id: continuation
      type: System.Action
      description: The action to invoke when the await operation completes.
  overload: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.OnCompleted*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>continuation</code> argument is `null`.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The awaiter was not properly initialized.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  id: UnsafeOnCompleted(System.Action)
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  langs:
  - csharp
  name: UnsafeOnCompleted(Action)
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.UnsafeOnCompleted(Action)
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.UnsafeOnCompleted(Action)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: Schedules the continuation action for the task associated with this awaiter.
  remarks: This method is intended for compiler use; do not use it directly in your code.
  syntax:
    content: public void UnsafeOnCompleted (Action continuation);
    parameters:
    - id: continuation
      type: System.Action
      description: The action to invoke when the await operation completes.
  overload: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.UnsafeOnCompleted*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>continuation</code> argument is `null`.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The awaiter was not properly initialized.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.CompilerServices\ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.CompilerServices/ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.NullReferenceException
  parent: System
  isExternal: false
  name: NullReferenceException
  nameWithType: NullReferenceException
  fullName: System.NullReferenceException
- uid: System.Threading.Tasks.TaskCanceledException
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskCanceledException
  nameWithType: TaskCanceledException
  fullName: System.Threading.Tasks.TaskCanceledException
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  isExternal: false
  name: GetResult()
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult()
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult()
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.IsCompleted
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  isExternal: false
  name: IsCompleted
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.IsCompleted
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.IsCompleted
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.OnCompleted(System.Action)
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  isExternal: false
  name: OnCompleted(Action)
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.OnCompleted(Action)
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.OnCompleted(Action)
- uid: System.Action
  parent: System
  isExternal: false
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.UnsafeOnCompleted(System.Action)
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  isExternal: false
  name: UnsafeOnCompleted(Action)
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.UnsafeOnCompleted(Action)
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.UnsafeOnCompleted(Action)
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.GetResult*
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  isExternal: false
  name: GetResult
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.IsCompleted*
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  isExternal: false
  name: IsCompleted
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.IsCompleted
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.OnCompleted*
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  isExternal: false
  name: OnCompleted
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.OnCompleted
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter.UnsafeOnCompleted*
  parent: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.ConfiguredTaskAwaiter
  isExternal: false
  name: UnsafeOnCompleted
  nameWithType: ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.UnsafeOnCompleted
