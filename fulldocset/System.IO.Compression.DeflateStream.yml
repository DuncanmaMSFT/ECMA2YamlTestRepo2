### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.DeflateStream
  id: DeflateStream
  children:
  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  - System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  - System.IO.Compression.DeflateStream.BaseStream
  - System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Compression.DeflateStream.CanRead
  - System.IO.Compression.DeflateStream.CanSeek
  - System.IO.Compression.DeflateStream.CanWrite
  - System.IO.Compression.DeflateStream.Dispose(System.Boolean)
  - System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)
  - System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)
  - System.IO.Compression.DeflateStream.Flush
  - System.IO.Compression.DeflateStream.Length
  - System.IO.Compression.DeflateStream.Position
  - System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Compression.DeflateStream.SetLength(System.Int64)
  - System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: DeflateStream
  nameWithType: DeflateStream
  fullName: System.IO.Compression.DeflateStream
  type: Class
  summary: Provides methods and properties for compressing and decompressing streams by using the Deflate algorithm.
  remarks: "This class represents the Deflate algorithm, which is an industry-standard algorithm for lossless file compression and decompression. Starting with the [!INCLUDE[net_v45](~/add/includes/net-v45-md.md)], the DeflateStream class uses the zlib library. As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.  \n  \n This class does not inherently provide functionality for adding files to or extracting files from zip archives. To work with zip archives, use the <xref:System.IO.Compression.ZipArchive> and the <xref:System.IO.Compression.ZipArchiveEntry> classes.  \n  \n The DeflateStream class uses the same compression algorithm as the gzip data format used by the <xref:System.IO.Compression.GZipStream> class.  \n  \n The compression functionality in DeflateStream and <xref:System.IO.Compression.GZipStream> is exposed as a stream. Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data. The DeflateStream and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data. If the source data is already compressed, using these classes may actually increase the size of the stream."
  example:
  - "The following example shows how to use the DeflateStream class to compress and decompress a directory of files.  \n  \n [!code-vb[IO.Compression.Deflate1#1](~/add/codesnippet/visualbasic/t-system.io.compression._0_1.vb)]\n [!code-cs[IO.Compression.Deflate1#1](~/add/codesnippet/csharp/t-system.io.compression._0_1.cs)]"
  syntax:
    content: 'public class DeflateStream : System.IO.Stream'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.Stream
  implements: []
  inheritedMembers:
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.Close
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.Stream.Null
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.ReadByte
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.WriteByte(System.Byte)
  - System.IO.Stream.WriteTimeout
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)'
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: DeflateStream(Stream,CompressionLevel)
  nameWithType: DeflateStream.DeflateStream(Stream,CompressionLevel)
  fullName: System.IO.Compression.DeflateStream.DeflateStream(Stream,CompressionLevel)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.DeflateStream"></xref> class by using the specified stream and compression level.
  remarks: "You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class.  \n  \n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode>. To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload."
  example:
  - "The following example shows how to set the compression level when creating a <xref:System.IO.Compression.DeflateStream> object.  \n  \n [!code-cs[System.IO.Compression.DeflateStream#1](~/add/codesnippet/csharp/4ff99025-f4cc-4c23-9560-_1.cs)]\n [!code-vb[System.IO.Compression.DeflateStream#1](~/add/codesnippet/visualbasic/4ff99025-f4cc-4c23-9560-_1.vb)]"
  syntax:
    content: public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to compress.
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.
  overload: System.IO.Compression.DeflateStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The stream does not support write operations such as compression. (The <xref href="stem.IO.Stream.CanWrite%2A"></xref> property on the stream object is `false`.)
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)'
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: DeflateStream(Stream,CompressionMode)
  nameWithType: DeflateStream.DeflateStream(Stream,CompressionMode)
  fullName: System.IO.Compression.DeflateStream.DeflateStream(Stream,CompressionMode)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.DeflateStream"></xref> class by using the specified stream and compression mode.
  remarks: "By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \n  \n If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately. If no further action occurs, the stream appears as a valid, empty, compressed file.  \n  \n Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception.  \n  \n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel> when the compression mode is <xref:System.IO.Compression.CompressionMode>."
  example:
  - "The following example shows how to use the <xref:System.IO.Compression.DeflateStream> class to compress and decompress a file.  \n  \n [!code-vb[IO.Compression.Deflate1#1](~/add/codesnippet/visualbasic/edc0d864-63bb-463c-91c1-_1.vb)]\n [!code-cs[IO.Compression.Deflate1#1](~/add/codesnippet/csharp/edc0d864-63bb-463c-91c1-_1.cs)]"
  syntax:
    content: public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to compress or decompress.
    - id: mode
      type: System.IO.Compression.CompressionMode
      description: One of the enumeration values that indicates whether to compress or decompress the stream.
  overload: System.IO.Compression.DeflateStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode\"></xref> and <xref href=\"stem.IO.Stream.CanWrite%2A\"></xref> is `false`.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode\"></xref> and <xref href=\"stem.IO.Stream.CanRead%2A\"></xref> is `false`."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)'
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: DeflateStream(Stream,CompressionLevel,Boolean)
  nameWithType: DeflateStream.DeflateStream(Stream,CompressionLevel,Boolean)
  fullName: System.IO.Compression.DeflateStream.DeflateStream(Stream,CompressionLevel,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.DeflateStream"></xref> class by using the specified stream and compression level, and optionally leaves the stream open.
  remarks: "You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.DeflateStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.DeflateStream> object.  \n  \n This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode>. To set the compression mode to another value, use the <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.DeflateStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload."
  example:
  - "The following example shows how to set the compression level when creating a <xref:System.IO.Compression.DeflateStream> object and how to leave the stream open.  \n  \n [!code-cs[System.IO.Compression.DeflateStream#2](~/add/codesnippet/csharp/4eeebc1c-a5be-4377-a466-_1.cs)]\n [!code-vb[System.IO.Compression.DeflateStream#2](~/add/codesnippet/visualbasic/4eeebc1c-a5be-4377-a466-_1.vb)]"
  syntax:
    content: public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to compress.
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.
    - id: leaveOpen
      type: System.Boolean
      description: '`true` to leave the stream object open after disposing the <xref href="System.IO.Compression.DeflateStream"></xref> object; otherwise, `false`.'
  overload: System.IO.Compression.DeflateStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The stream does not support write operations such as compression. (The <xref href="stem.IO.Stream.CanWrite%2A"></xref> property on the stream object is `false`.)
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)'
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: DeflateStream(Stream,CompressionMode,Boolean)
  nameWithType: DeflateStream.DeflateStream(Stream,CompressionMode,Boolean)
  fullName: System.IO.Compression.DeflateStream.DeflateStream(Stream,CompressionMode,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Initializes a new instance of the <xref href="System.IO.Compression.DeflateStream"></xref> class by using the specified stream and compression mode, and optionally leaves the stream open.
  remarks: "By default, <xref:System.IO.Compression.DeflateStream> owns the underlying stream, so closing the stream also closes the underlying stream. Note that the state of the underlying stream can affect the usability of the stream. Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.  \n  \n If an instance of the <xref:System.IO.Compression.DeflateStream> class is created with the `mode` parameter equal to `Compress`, header information is inserted immediately. If no further action occurs, the stream appears as a valid, empty, compressed file.  \n  \n Using the <xref:System.IO.Compression.DeflateStream> class to compress a file larger than 4 GB raises an exception.  \n  \n By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel> when the compression mode is <xref:System.IO.Compression.CompressionMode>."
  example:
  - "The following code example shows how to use the <xref:System.IO.Compression.DeflateStream> class to compress and decompress a file.  \n  \n [!code-vb[IO.Compression.Deflate1#1](~/add/codesnippet/visualbasic/4a6c6549-b7fd-4719-93d2-_1.vb)]\n [!code-cs[IO.Compression.Deflate1#1](~/add/codesnippet/csharp/4a6c6549-b7fd-4719-93d2-_1.cs)]"
  syntax:
    content: public DeflateStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to compress or decompress.
    - id: mode
      type: System.IO.Compression.CompressionMode
      description: One of the enumeration values that indicates whether to compress or decompress the stream.
    - id: leaveOpen
      type: System.Boolean
      description: '`true` to leave the stream open after disposing the <xref href="System.IO.Compression.DeflateStream"></xref> object; otherwise, `false`.'
  overload: System.IO.Compression.DeflateStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mode</code> is not a valid <xref href=\"System.IO.Compression.CompressionMode\"></xref> value.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode\"></xref> and <xref href=\"stem.IO.Stream.CanWrite%2A\"></xref> is `false`.  \n  \n -or-  \n  \n <xref href=\"System.IO.Compression.CompressionMode\"></xref> is <xref href=\"System.IO.Compression.CompressionMode\"></xref> and <xref href=\"stem.IO.Stream.CanRead%2A\"></xref> is `false`."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.BaseStream
  id: BaseStream
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: BaseStream
  nameWithType: DeflateStream.BaseStream
  fullName: System.IO.Compression.DeflateStream.BaseStream
  type: Property
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Gets a reference to the underlying stream.
  syntax:
    content: public System.IO.Stream BaseStream { get; }
    return:
      type: System.IO.Stream
      description: A stream object that represents the underlying stream.
  overload: System.IO.Compression.DeflateStream.BaseStream*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The underlying stream is closed.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: DeflateStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Compression.DeflateStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Begins an asynchronous read operation. (Consider using the <xref href="stem.IO.Stream.ReadAsync%2A"></xref> method instead; see the Remarks section.)
  remarks: "Starting with the [!INCLUDE[net_v45](~/add/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method. The BeginRead method is still available in the [!INCLUDE[net_v45](~/add/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.DeflateStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading. You can do this either by using the same code that called BeginRead or in a callback passed to BeginRead.  \n  \n The current position in the stream is updated when the asynchronous read or write operation is issued, not when the I/O operation completes.  \n  \n Multiple simultaneous asynchronous requests render the request completion order uncertain.  \n  \n Use the <xref:System.IO.Compression.DeflateStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports reading.  \n  \n If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from BeginRead. Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndRead%2A>."
  syntax:
    content: public override IAsyncResult BeginRead (byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: array
      type: System.Byte[]
      description: The byte array to read the data into.
    - id: offset
      type: System.Int32
      description: The byte offset in <code>array</code> at which to begin reading data from the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    - id: asyncCallback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the read operation is complete.
    - id: asyncState
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous read request from other requests.
    return:
      type: System.IAsyncResult
      description: An  object that represents the asynchronous read operation, which could still be pending.
  overload: System.IO.Compression.DeflateStream.BeginRead*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The method tried to read asynchronously past the end of the stream, or a disk error occurred.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: One or more of the arguments is invalid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The current <xref href="System.IO.Compression.DeflateStream"></xref> implementation does not support the read operation.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This call cannot be completed.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: DeflateStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Compression.DeflateStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Begins an asynchronous write operation. (Consider using the <xref href="stem.IO.Stream.WriteAsync%2A"></xref> method instead; see the Remarks section.)
  remarks: "Starting with the [!INCLUDE[net_v45](~/add/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method. The BeginWrite method is still available in the [!INCLUDE[net_v45](~/add/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n Pass the <xref:System.IAsyncResult> object returned by the current method to <xref:System.IO.Compression.DeflateStream.EndWrite%2A> to ensure that the write completes and frees resources appropriately. You can do this either by using the same code that called BeginWrite or in a callback passed to BeginWrite. If an error occurs during an asynchronous write operation, an exception will not be thrown until <xref:System.IO.Compression.DeflateStream.EndWrite%2A> is called with the <xref:System.IAsyncResult> returned by this method.  \n  \n If a stream is writable, writing at the end of the stream expands the stream.  \n  \n The current position in the stream is updated when you issue the asynchronous read or write operation, not when the I/O operation completes. Multiple simultaneous asynchronous requests render the request completion order uncertain.  \n  \n Use the <xref:System.IO.Compression.DeflateStream.CanWrite%2A> property to determine whether the current <xref:System.IO.Compression.DeflateStream> object supports writing.  \n  \n If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from BeginWrite. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.DeflateStream.EndWrite%2A>."
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: array
      type: System.Byte[]
      description: The buffer to write data from.
    - id: offset
      type: System.Int32
      description: The byte offset in <code>buffer</code> to begin writing from.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
    - id: asyncCallback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the write operation is complete.
    - id: asyncState
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous write request from other requests.
    return:
      type: System.IAsyncResult
      description: An  object that represents the asynchronous write operation, which could still be pending.
  overload: System.IO.Compression.DeflateStream.BeginWrite*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The method tried to write asynchronously past the end of the stream, or a disk error occurred.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: One or more of the arguments is invalid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The current <xref href="System.IO.Compression.DeflateStream"></xref> implementation does not support the write operation.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The write operation cannot be performed because the stream is closed.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.CanRead
  id: CanRead
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: CanRead
  nameWithType: DeflateStream.CanRead
  fullName: System.IO.Compression.DeflateStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Gets a value indicating whether the stream supports reading while decompressing a file.
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.IO.Compression.CompressionMode"></xref> value is `Decompress`, and the underlying stream is opened and supports reading; otherwise, `false`.'
  overload: System.IO.Compression.DeflateStream.CanRead*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.CanSeek
  id: CanSeek
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: DeflateStream.CanSeek
  fullName: System.IO.Compression.DeflateStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Gets a value indicating whether the stream supports seeking.
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: '`false` in all cases.'
  overload: System.IO.Compression.DeflateStream.CanSeek*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.CanWrite
  id: CanWrite
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: DeflateStream.CanWrite
  fullName: System.IO.Compression.DeflateStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Gets a value indicating whether the stream supports writing.
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.IO.Compression.CompressionMode"></xref> value is `Compress`, and the underlying stream supports writing and is not closed; otherwise, `false`.'
  overload: System.IO.Compression.DeflateStream.CanWrite*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DeflateStream.Dispose(Boolean)
  fullName: System.IO.Compression.DeflateStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Releases the unmanaged resources used by the <xref href="System.IO.Compression.DeflateStream"></xref> and optionally releases the managed resources.
  remarks: "This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method. <xref:System.ComponentModel.Component.Dispose%2A> invokes the protected Dispose method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes Dispose with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references. This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.IO.Compression.DeflateStream.Dispose*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: DeflateStream.EndRead(IAsyncResult)
  fullName: System.IO.Compression.DeflateStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Waits for the pending asynchronous read to complete. (Consider using the <xref href="stem.IO.Stream.ReadAsync%2A"></xref> method instead; see the Remarks section.)
  remarks: "Starting with the [!INCLUDE[net_v45](~/add/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A> method. The EndRead method is still available in the [!INCLUDE[net_v45](~/add/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n Call this method to determine how many bytes were read from the stream. This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.DeflateStream.BeginRead%2A> and EndRead.  \n  \n This method blocks until the I/O operation has completed."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to finish.
    return:
      type: System.Int32
      description: The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. <xref href="System.IO.Compression.DeflateStream"></xref> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.
  overload: System.IO.Compression.DeflateStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>asyncResult</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>asyncResult</code> did not originate from a <xref href="stem.IO.Compression.DeflateStream.BeginRead%2A"></xref> method on the current stream.
  - type: System.SystemException
    commentId: T:System.SystemException
    description: An exception was thrown during a call to <xref href="stem.Threading.WaitHandle.WaitOne%2A"></xref>.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The stream is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: DeflateStream.EndWrite(IAsyncResult)
  fullName: System.IO.Compression.DeflateStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Ends an asynchronous write operation. (Consider using the <xref href="stem.IO.Stream.WriteAsync%2A"></xref> method instead; see the Remarks section.)
  remarks: "Starting with the [!INCLUDE[net_v45](~/add/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A> method. The EndWrite method is still available in the [!INCLUDE[net_v45](~/add/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods. For more information, see .  \n  \n EndWrite must be called only once for every call to the <xref:System.IO.Compression.DeflateStream.BeginWrite%2A> method.  \n  \n This method blocks until the I/O operation has completed. Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, occur on the thread pool thread and become visible upon a call to EndWrite. Exceptions thrown by the thread pool thread will not be visible when calling EndWrite."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: A reference to the outstanding asynchronous I/O request.
  overload: System.IO.Compression.DeflateStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>asyncResult</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>asyncResult</code> did not originate from a <xref href="stem.IO.Compression.DeflateStream.BeginWrite%2A"></xref> method on the current stream.
  - type: System.Exception
    commentId: T:System.Exception
    description: An exception was thrown during a call to <xref href="stem.Threading.WaitHandle.WaitOne%2A"></xref>.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The end write call is invalid.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.Flush
  id: Flush
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: Flush()
  nameWithType: DeflateStream.Flush()
  fullName: System.IO.Compression.DeflateStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: The current implementation of this method has no functionality.
  remarks: The current implementation of this method does not flush the internal buffer. The internal buffer is flushed when the object is disposed.
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.Compression.DeflateStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.Length
  id: Length
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: Length
  nameWithType: DeflateStream.Length
  fullName: System.IO.Compression.DeflateStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: This property is not supported and always throws a <xref href="System.NotSupportedException"></xref>.
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: A long value.
  overload: System.IO.Compression.DeflateStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.Position
  id: Position
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: Position
  nameWithType: DeflateStream.Position
  fullName: System.IO.Compression.DeflateStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: This property is not supported and always throws a <xref href="System.NotSupportedException"></xref>.
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: A long value.
  overload: System.IO.Compression.DeflateStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: DeflateStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Compression.DeflateStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Reads a number of decompressed bytes into the specified byte array.
  remarks: ''
  example:
  - "The following example shows how to compress and decompress bytes by using the Read and <xref:System.IO.Compression.DeflateStream.Write%2A> methods.  \n  \n [!code-cs[System.IO.Compression.DeflateStream#3](~/add/codesnippet/csharp/944629df-9c46-4943-ad5a-_1.cs)]\n [!code-vb[System.IO.Compression.DeflateStream#3](~/add/codesnippet/visualbasic/944629df-9c46-4943-ad5a-_1.vb)]"
  syntax:
    content: public override int Read (byte[] array, int offset, int count);
    parameters:
    - id: array
      type: System.Byte[]
      description: The array to store decompressed bytes.
    - id: offset
      type: System.Int32
      description: The byte offset in <code>array</code> at which the read bytes will be placed.
    - id: count
      type: System.Int32
      description: The maximum number of decompressed bytes to read.
    return:
      type: System.Int32
      description: The number of bytes that were read into the byte array.
  overload: System.IO.Compression.DeflateStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>array</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.IO.Compression.CompressionMode\"></xref> value was `Compress` when the object was created.  \n  \n \\- or -  \n  \n The underlying stream does not support reading."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> or <code>count</code> is less than zero.  \n  \n -or-  \n  \n <code>array</code> length minus the index starting point is less than <code>count</code>."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: The data is in an invalid format.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream is closed.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: DeflateStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Compression.DeflateStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: This operation is not supported and always throws a <xref href="System.NotSupportedException"></xref>.
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: The location in the stream.
    - id: origin
      type: System.IO.SeekOrigin
      description: One of the <xref href="System.IO.SeekOrigin"></xref> values.
    return:
      type: System.Int64
      description: A long value.
  overload: System.IO.Compression.DeflateStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: DeflateStream.SetLength(Int64)
  fullName: System.IO.Compression.DeflateStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: This operation is not supported and always throws a <xref href="System.NotSupportedException"></xref>.
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: The length of the stream.
  overload: System.IO.Compression.DeflateStream.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This property is not supported on this stream.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Compression.DeflateStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: DeflateStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Compression.DeflateStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Compression
  summary: Writes compressed bytes to the underlying stream from the specified byte array.
  remarks: ''
  example:
  - "The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.DeflateStream.Read%2A> and Write methods.  \n  \n [!code-cs[System.IO.Compression.DeflateStream#3](~/add/codesnippet/csharp/52a4be35-90b6-4edc-8c0f-_1.cs)]\n [!code-vb[System.IO.Compression.DeflateStream#3](~/add/codesnippet/visualbasic/52a4be35-90b6-4edc-8c0f-_1.vb)]"
  syntax:
    content: public override void Write (byte[] array, int offset, int count);
    parameters:
    - id: array
      type: System.Byte[]
      description: The buffer that contains the data to compress.
    - id: offset
      type: System.Int32
      description: The byte offset in <code>array</code> from which the bytes will be read.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
  overload: System.IO.Compression.DeflateStream.Write*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.IO.Compression\DeflateStream.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.IO.Compression/DeflateStream.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.IO.InvalidDataException
  parent: System.IO
  isExternal: false
  name: InvalidDataException
  nameWithType: InvalidDataException
  fullName: System.IO.InvalidDataException
- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: DeflateStream(Stream,CompressionLevel)
  nameWithType: DeflateStream.DeflateStream(Stream,CompressionLevel)
  fullName: System.IO.Compression.DeflateStream.DeflateStream(Stream,CompressionLevel)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: false
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: DeflateStream(Stream,CompressionMode)
  nameWithType: DeflateStream.DeflateStream(Stream,CompressionMode)
  fullName: System.IO.Compression.DeflateStream.DeflateStream(Stream,CompressionMode)
- uid: System.IO.Compression.CompressionMode
  parent: System.IO.Compression
  isExternal: false
  name: CompressionMode
  nameWithType: CompressionMode
  fullName: System.IO.Compression.CompressionMode
- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: DeflateStream(Stream,CompressionLevel,Boolean)
  nameWithType: DeflateStream.DeflateStream(Stream,CompressionLevel,Boolean)
  fullName: System.IO.Compression.DeflateStream.DeflateStream(Stream,CompressionLevel,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: DeflateStream(Stream,CompressionMode,Boolean)
  nameWithType: DeflateStream.DeflateStream(Stream,CompressionMode,Boolean)
  fullName: System.IO.Compression.DeflateStream.DeflateStream(Stream,CompressionMode,Boolean)
- uid: System.IO.Compression.DeflateStream.BaseStream
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: BaseStream
  nameWithType: DeflateStream.BaseStream
  fullName: System.IO.Compression.DeflateStream.BaseStream
- uid: System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: DeflateStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Compression.DeflateStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: DeflateStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Compression.DeflateStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.Compression.DeflateStream.CanRead
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: CanRead
  nameWithType: DeflateStream.CanRead
  fullName: System.IO.Compression.DeflateStream.CanRead
- uid: System.IO.Compression.DeflateStream.CanSeek
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: CanSeek
  nameWithType: DeflateStream.CanSeek
  fullName: System.IO.Compression.DeflateStream.CanSeek
- uid: System.IO.Compression.DeflateStream.CanWrite
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: CanWrite
  nameWithType: DeflateStream.CanWrite
  fullName: System.IO.Compression.DeflateStream.CanWrite
- uid: System.IO.Compression.DeflateStream.Dispose(System.Boolean)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DeflateStream.Dispose(Boolean)
  fullName: System.IO.Compression.DeflateStream.Dispose(Boolean)
- uid: System.IO.Compression.DeflateStream.EndRead(System.IAsyncResult)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: DeflateStream.EndRead(IAsyncResult)
  fullName: System.IO.Compression.DeflateStream.EndRead(IAsyncResult)
- uid: System.IO.Compression.DeflateStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: DeflateStream.EndWrite(IAsyncResult)
  fullName: System.IO.Compression.DeflateStream.EndWrite(IAsyncResult)
- uid: System.IO.Compression.DeflateStream.Flush
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Flush()
  nameWithType: DeflateStream.Flush()
  fullName: System.IO.Compression.DeflateStream.Flush()
- uid: System.IO.Compression.DeflateStream.Length
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Length
  nameWithType: DeflateStream.Length
  fullName: System.IO.Compression.DeflateStream.Length
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Compression.DeflateStream.Position
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Position
  nameWithType: DeflateStream.Position
  fullName: System.IO.Compression.DeflateStream.Position
- uid: System.IO.Compression.DeflateStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: DeflateStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Compression.DeflateStream.Read(Byte[],Int32,Int32)
- uid: System.IO.Compression.DeflateStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: DeflateStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Compression.DeflateStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Compression.DeflateStream.SetLength(System.Int64)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: DeflateStream.SetLength(Int64)
  fullName: System.IO.Compression.DeflateStream.SetLength(Int64)
- uid: System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: DeflateStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Compression.DeflateStream.Write(Byte[],Int32,Int32)
- uid: System.IO.Compression.DeflateStream.#ctor*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: DeflateStream
  nameWithType: DeflateStream.DeflateStream
- uid: System.IO.Compression.DeflateStream.BaseStream*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: BaseStream
  nameWithType: DeflateStream.BaseStream
- uid: System.IO.Compression.DeflateStream.BeginRead*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: BeginRead
  nameWithType: DeflateStream.BeginRead
- uid: System.IO.Compression.DeflateStream.BeginWrite*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: BeginWrite
  nameWithType: DeflateStream.BeginWrite
- uid: System.IO.Compression.DeflateStream.CanRead*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: CanRead
  nameWithType: DeflateStream.CanRead
- uid: System.IO.Compression.DeflateStream.CanSeek*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: CanSeek
  nameWithType: DeflateStream.CanSeek
- uid: System.IO.Compression.DeflateStream.CanWrite*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: CanWrite
  nameWithType: DeflateStream.CanWrite
- uid: System.IO.Compression.DeflateStream.Dispose*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Dispose
  nameWithType: DeflateStream.Dispose
- uid: System.IO.Compression.DeflateStream.EndRead*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: EndRead
  nameWithType: DeflateStream.EndRead
- uid: System.IO.Compression.DeflateStream.EndWrite*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: EndWrite
  nameWithType: DeflateStream.EndWrite
- uid: System.IO.Compression.DeflateStream.Flush*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Flush
  nameWithType: DeflateStream.Flush
- uid: System.IO.Compression.DeflateStream.Length*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Length
  nameWithType: DeflateStream.Length
- uid: System.IO.Compression.DeflateStream.Position*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Position
  nameWithType: DeflateStream.Position
- uid: System.IO.Compression.DeflateStream.Read*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Read
  nameWithType: DeflateStream.Read
- uid: System.IO.Compression.DeflateStream.Seek*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Seek
  nameWithType: DeflateStream.Seek
- uid: System.IO.Compression.DeflateStream.SetLength*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: SetLength
  nameWithType: DeflateStream.SetLength
- uid: System.IO.Compression.DeflateStream.Write*
  parent: System.IO.Compression.DeflateStream
  isExternal: false
  name: Write
  nameWithType: DeflateStream.Write
