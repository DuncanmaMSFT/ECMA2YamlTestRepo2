### YamlMime:ManagedReference
items:
- uid: System.Activities.Expressions.IndexerReference`2
  id: IndexerReference`2
  children:
  - System.Activities.Expressions.IndexerReference`2.#ctor
  - System.Activities.Expressions.IndexerReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)
  - System.Activities.Expressions.IndexerReference`2.Execute(System.Activities.CodeActivityContext)
  - System.Activities.Expressions.IndexerReference`2.Indices
  - System.Activities.Expressions.IndexerReference`2.Operand
  langs:
  - csharp
  name: IndexerReference<TOperand,TItem>
  nameWithType: IndexerReference<TOperand,TItem>
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>
  type: Class
  summary: Represents an element referenced by an object indexer that can be used as an l-value in an expression.
  remarks: ''
  example:
  - "The following code example uses IndexerReference(TOperand, in an `Assign` activity to assign an integer value to the object item at index [1,2] and prints the item value to the console. The `Assign` activity is equivalent to the following statement when using an object that implements an indexer. `myObj[1,2] = 4;` .  \n  \n> [!NOTE]\n>  Instead of instantiating the IndexerReference(TOperand, l-value expression activity directly, it is strongly recommended that you call <xref:System.Activities.Expressions.ExpressionServices.ConvertReference%2A>, which provides a higher level of abstraction and enables you to implement your workflow more intuitively.  \n  \n```  \n  \n// Define a class with a multi-dimensional indexer.  \npublic class ObjectWithIndexer  \n{  \n    private int[,] array = new int[10,10];  \n    public int this[int i, int j]  \n    {  \n        get { return array[i,j]; }  \n        set { array[i,j] = value; }  \n    }  \n}  \n  \npublic static void IndexerReferenceSample()  \n{  \n    // Create a variable of type ObjectWithIndexer to store the object item.  \n    var oivar = new Variable<ObjectWithIndexer>(\"oivar\", new ObjectWithIndexer());  \n  \n    Activity myActivity = new Sequence  \n    {  \n        Variables = { oivar },  \n        Activities =   \n        {                      \n            // Create an Assign activity with a reference for the object at index [1,2].  \n            new Assign<int>  \n            {  \n                To = new IndexerReference<ObjectWithIndexer, int>  \n                {  \n                    Operand = oivar,  \n                    Indices =  \n                    {  \n                        new InArgument<int>(1),  \n                        new InArgument<int>(2)  \n                    }  \n                },  \n                // Assign an integer value to the object at index [1,2].  \n                Value = 4,  \n            },  \n            // Print the new item value to the console.  \n            new WriteLine()  \n            {  \n                Text = ExpressionServices.Convert<string>(ctx => oivar.Get(ctx)[1, 2].ToString()),  \n            }  \n        }  \n    };  \n  \n    // Invoke the Sequence activity.  \n    WorkflowInvoker.Invoke(myActivity);  \n}  \n  \n```"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Indices")]

      public sealed class IndexerReference<TOperand,TItem> : System.Activities.CodeActivity<System.Activities.Location<TItem>>
    typeParameters:
    - id: TOperand
      description: The type with the indexer.
    - id: TItem
      description: The type of the indexer array.
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.ActivityWithResult
  - System.Activities.Activity`1
  - System.Activities.CodeActivity`1
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.Activity`1.FromValue(`0)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})
  - System.Activities.Activity`1.op_Implicit(`0)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})
  - System.Activities.Activity`1.Result
  - System.Activities.ActivityWithResult.ResultType
  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.CodeActivity`1.Implementation
  - System.Activities.CodeActivity`1.ImplementationVersion
  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\IndexerReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/IndexerReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.Expressions.IndexerReference`2.#ctor
  id: '#ctor'
  parent: System.Activities.Expressions.IndexerReference`2
  langs:
  - csharp
  name: IndexerReference<TOperand,TItem>()
  nameWithType: IndexerReference<TOperand,TItem>.IndexerReference<TOperand,TItem>()
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.IndexerReference<TOperand,TItem>()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  summary: Initializes a new instance of the <xref href="stem.Activities.Expressions.IndexerReference%602"></xref> class.
  syntax:
    content: public IndexerReference ();
    parameters: []
  overload: System.Activities.Expressions.IndexerReference`2.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\IndexerReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/IndexerReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.Expressions.IndexerReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Expressions.IndexerReference`2
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: IndexerReference<TOperand,TItem>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: To be added.
  overload: System.Activities.Expressions.IndexerReference`2.CacheMetadata*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\IndexerReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/IndexerReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.Expressions.IndexerReference`2.Execute(System.Activities.CodeActivityContext)
  id: Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Expressions.IndexerReference`2
  langs:
  - csharp
  name: Execute(CodeActivityContext)
  nameWithType: IndexerReference<TOperand,TItem>.Execute(CodeActivityContext)
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Execute(CodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override System.Activities.Location<TItem> Execute (System.Activities.CodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.CodeActivityContext
      description: To be added.
    return:
      type: System.Activities.Location{TItem}
      description: To be added.
  overload: System.Activities.Expressions.IndexerReference`2.Execute*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\IndexerReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/IndexerReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.Expressions.IndexerReference`2.Indices
  id: Indices
  parent: System.Activities.Expressions.IndexerReference`2
  langs:
  - csharp
  name: Indices
  nameWithType: IndexerReference<TOperand,TItem>.Indices
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Indices
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  summary: Gets a collection of arguments that represent the indices of the element in the indexer array.
  remarks: The Indices property is read-only, but the items in the collection can be modified and the indices can be changed.
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.InArgument> Indices { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.InArgument}
      description: The indices of the element in the indexer array.
  overload: System.Activities.Expressions.IndexerReference`2.Indices*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\IndexerReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/IndexerReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.Expressions.IndexerReference`2.Operand
  id: Operand
  parent: System.Activities.Expressions.IndexerReference`2
  langs:
  - csharp
  name: Operand
  nameWithType: IndexerReference<TOperand,TItem>.Operand
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Operand
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  summary: Gets or sets the object that contains the indexer.
  syntax:
    content: public System.Activities.InArgument<TOperand> Operand { get; set; }
    return:
      type: System.Activities.InArgument{TOperand}
      description: The object that contains the indexer.
  overload: System.Activities.Expressions.IndexerReference`2.Operand*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities.Expressions\IndexerReference`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities.Expressions/IndexerReference`2.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Activities.CodeActivity`1
  isExternal: false
  name: System.Activities.CodeActivity<System.Activities.Location<TItem>>
- uid: System.Activities.Expressions.IndexerReference`2.#ctor
  parent: System.Activities.Expressions.IndexerReference`2
  isExternal: false
  name: IndexerReference<TOperand,TItem>()
  nameWithType: IndexerReference<TOperand,TItem>.IndexerReference<TOperand,TItem>()
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.IndexerReference<TOperand,TItem>()
- uid: System.Activities.Expressions.IndexerReference`2.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Expressions.IndexerReference`2
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: IndexerReference<TOperand,TItem>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.Expressions.IndexerReference`2.Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Expressions.IndexerReference`2
  isExternal: false
  name: Execute(CodeActivityContext)
  nameWithType: IndexerReference<TOperand,TItem>.Execute(CodeActivityContext)
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Execute(CodeActivityContext)
- uid: System.Activities.Location{TItem}
  parent: System.Activities
  isExternal: false
  name: Location<TItem>
  nameWithType: Location<TItem>
  fullName: System.Activities.Location<TItem>
  spec.csharp:
  - uid: System.Activities.Location`1
    name: Location
    nameWithType: Location
    fullName: Location<TItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TItem
    name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: System.Activities.Expressions.IndexerReference`2.Indices
  parent: System.Activities.Expressions.IndexerReference`2
  isExternal: false
  name: Indices
  nameWithType: IndexerReference<TOperand,TItem>.Indices
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Indices
- uid: System.Collections.ObjectModel.Collection{System.Activities.InArgument}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: Collection<InArgument>
  nameWithType: Collection<InArgument>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.InArgument>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.InArgument>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.InArgument
    name: InArgument
    nameWithType: InArgument
    fullName: InArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Expressions.IndexerReference`2.Operand
  parent: System.Activities.Expressions.IndexerReference`2
  isExternal: false
  name: Operand
  nameWithType: IndexerReference<TOperand,TItem>.Operand
  fullName: System.Activities.Expressions.IndexerReference<TOperand,TItem>.Operand
- uid: System.Activities.InArgument{TOperand}
  parent: System.Activities
  isExternal: false
  name: InArgument<TOperand>
  nameWithType: InArgument<TOperand>
  fullName: System.Activities.InArgument<TOperand>
  spec.csharp:
  - uid: System.Activities.InArgument`1
    name: InArgument
    nameWithType: InArgument
    fullName: InArgument<TOperand>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TOperand
    name: TOperand
    nameWithType: TOperand
    fullName: TOperand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Expressions.IndexerReference`2.#ctor*
  parent: System.Activities.Expressions.IndexerReference`2
  isExternal: false
  name: IndexerReference<TOperand,TItem>
  nameWithType: IndexerReference<TOperand,TItem>.IndexerReference<TOperand,TItem>
- uid: System.Activities.Expressions.IndexerReference`2.CacheMetadata*
  parent: System.Activities.Expressions.IndexerReference`2
  isExternal: false
  name: CacheMetadata
  nameWithType: IndexerReference<TOperand,TItem>.CacheMetadata
- uid: System.Activities.Expressions.IndexerReference`2.Execute*
  parent: System.Activities.Expressions.IndexerReference`2
  isExternal: false
  name: Execute
  nameWithType: IndexerReference<TOperand,TItem>.Execute
- uid: System.Activities.Expressions.IndexerReference`2.Indices*
  parent: System.Activities.Expressions.IndexerReference`2
  isExternal: false
  name: Indices
  nameWithType: IndexerReference<TOperand,TItem>.Indices
- uid: System.Activities.Expressions.IndexerReference`2.Operand*
  parent: System.Activities.Expressions.IndexerReference`2
  isExternal: false
  name: Operand
  nameWithType: IndexerReference<TOperand,TItem>.Operand
