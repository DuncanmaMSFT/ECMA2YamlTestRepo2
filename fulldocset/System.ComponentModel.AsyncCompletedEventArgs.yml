### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.AsyncCompletedEventArgs
  id: AsyncCompletedEventArgs
  children:
  - System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  - System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  - System.ComponentModel.AsyncCompletedEventArgs.Error
  - System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  - System.ComponentModel.AsyncCompletedEventArgs.UserState
  langs:
  - csharp
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
  type: Class
  summary: Provides data for the *MethodName*`Completed` event.
  syntax:
    content: 'public class AsyncCompletedEventArgs : EventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  id: '#ctor(System.Exception,System.Boolean,System.Object)'
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: AsyncCompletedEventArgs(Exception,Boolean,Object)
  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs(Exception,Boolean,Object)
  fullName: System.ComponentModel.AsyncCompletedEventArgs.AsyncCompletedEventArgs(Exception,Boolean,Object)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <xref href="System.ComponentModel.AsyncCompletedEventArgs"></xref> class.
  syntax:
    content: public AsyncCompletedEventArgs (Exception error, bool cancelled, object userState);
    parameters:
    - id: error
      type: System.Exception
      description: To be added.
    - id: cancelled
      type: System.Boolean
      description: To be added.
    - id: userState
      type: System.Object
      description: To be added.
  overload: System.ComponentModel.AsyncCompletedEventArgs.#ctor*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  id: Cancelled
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: Cancelled
  nameWithType: AsyncCompletedEventArgs.Cancelled
  fullName: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets a value indicating whether an asynchronous operation has been canceled.
  syntax:
    content: public bool Cancelled { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.ComponentModel.AsyncCompletedEventArgs.Cancelled*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ComponentModel.AsyncCompletedEventArgs.Error
  id: Error
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: Error
  nameWithType: AsyncCompletedEventArgs.Error
  fullName: System.ComponentModel.AsyncCompletedEventArgs.Error
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets a value indicating which error occurred during an asynchronous operation.
  syntax:
    content: public Exception Error { get; }
    return:
      type: System.Exception
      description: To be added.
  overload: System.ComponentModel.AsyncCompletedEventArgs.Error*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  id: RaiseExceptionIfNecessary
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: RaiseExceptionIfNecessary()
  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
  fullName: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Raises a user-supplied exception if an asynchronous operation failed.
  syntax:
    content: protected void RaiseExceptionIfNecessary ();
    parameters: []
  overload: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState
  id: UserState
  parent: System.ComponentModel.AsyncCompletedEventArgs
  langs:
  - csharp
  name: UserState
  nameWithType: AsyncCompletedEventArgs.UserState
  fullName: System.ComponentModel.AsyncCompletedEventArgs.UserState
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets the unique identifier for the asynchronous task.
  syntax:
    content: public object UserState { get; }
    return:
      type: System.Object
      description: To be added.
  overload: System.ComponentModel.AsyncCompletedEventArgs.UserState*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: AsyncCompletedEventArgs(Exception,Boolean,Object)
  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs(Exception,Boolean,Object)
  fullName: System.ComponentModel.AsyncCompletedEventArgs.AsyncCompletedEventArgs(Exception,Boolean,Object)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: Cancelled
  nameWithType: AsyncCompletedEventArgs.Cancelled
  fullName: System.ComponentModel.AsyncCompletedEventArgs.Cancelled
- uid: System.ComponentModel.AsyncCompletedEventArgs.Error
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: Error
  nameWithType: AsyncCompletedEventArgs.Error
  fullName: System.ComponentModel.AsyncCompletedEventArgs.Error
- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: RaiseExceptionIfNecessary()
  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
  fullName: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary()
- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: UserState
  nameWithType: AsyncCompletedEventArgs.UserState
  fullName: System.ComponentModel.AsyncCompletedEventArgs.UserState
- uid: System.ComponentModel.AsyncCompletedEventArgs.#ctor*
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs.AsyncCompletedEventArgs
- uid: System.ComponentModel.AsyncCompletedEventArgs.Cancelled*
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: Cancelled
  nameWithType: AsyncCompletedEventArgs.Cancelled
- uid: System.ComponentModel.AsyncCompletedEventArgs.Error*
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: Error
  nameWithType: AsyncCompletedEventArgs.Error
- uid: System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary*
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: RaiseExceptionIfNecessary
  nameWithType: AsyncCompletedEventArgs.RaiseExceptionIfNecessary
- uid: System.ComponentModel.AsyncCompletedEventArgs.UserState*
  parent: System.ComponentModel.AsyncCompletedEventArgs
  isExternal: false
  name: UserState
  nameWithType: AsyncCompletedEventArgs.UserState
