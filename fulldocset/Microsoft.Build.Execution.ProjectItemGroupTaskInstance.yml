### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.ProjectItemGroupTaskInstance
  id: ProjectItemGroupTaskInstance
  children:
  - Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition
  - Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items
  langs:
  - csharp
  name: ProjectItemGroupTaskInstance
  nameWithType: ProjectItemGroupTaskInstance
  fullName: Microsoft.Build.Execution.ProjectItemGroupTaskInstance
  type: Class
  summary: Wraps an unevaluated itemgroup under a target. Immutable.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Condition={condition}")]

      public class ProjectItemGroupTaskInstance : Microsoft.Build.Execution.ProjectTargetInstanceChild
  inheritance:
  - System.Object
  - Microsoft.Build.Execution.ProjectTargetInstanceChild
  implements: []
  inheritedMembers:
  - Microsoft.Build.Execution.ProjectTargetInstanceChild.FullPath
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-40
- uid: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition
  id: Condition
  parent: Microsoft.Build.Execution.ProjectItemGroupTaskInstance
  langs:
  - csharp
  name: Condition
  nameWithType: ProjectItemGroupTaskInstance.Condition
  fullName: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets or sets the Condition attribute of this project element.
  syntax:
    content: public override string Condition { get; }
    return:
      type: System.String
      description: Returns the Condition attribute value. Returns an empty string if the attribute is not present.
  overload: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition*
  exceptions: []
  version:
  - netframework-40
- uid: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items
  id: Items
  parent: Microsoft.Build.Execution.ProjectItemGroupTaskInstance
  langs:
  - csharp
  name: Items
  nameWithType: ProjectItemGroupTaskInstance.Items
  fullName: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: Gets all child items of this item definition.
  remarks: Does not include ProjectItemInstances, as these are evaluated during the build.
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance> Items { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance}
      description: Returns all child items of this item definition.
  overload: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items*
  exceptions: []
  version:
  - netframework-40
references:
- uid: Microsoft.Build.Execution.ProjectTargetInstanceChild
  isExternal: false
  name: Microsoft.Build.Execution.ProjectTargetInstanceChild
- uid: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition
  parent: Microsoft.Build.Execution.ProjectItemGroupTaskInstance
  isExternal: false
  name: Condition
  nameWithType: ProjectItemGroupTaskInstance.Condition
  fullName: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items
  parent: Microsoft.Build.Execution.ProjectItemGroupTaskInstance
  isExternal: false
  name: Items
  nameWithType: ProjectItemGroupTaskInstance.Items
  fullName: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<ProjectItemGroupTaskItemInstance>
  nameWithType: ICollection<ProjectItemGroupTaskItemInstance>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance
    name: ProjectItemGroupTaskItemInstance
    nameWithType: ProjectItemGroupTaskItemInstance
    fullName: ProjectItemGroupTaskItemInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition*
  parent: Microsoft.Build.Execution.ProjectItemGroupTaskInstance
  isExternal: false
  name: Condition
  nameWithType: ProjectItemGroupTaskInstance.Condition
- uid: Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items*
  parent: Microsoft.Build.Execution.ProjectItemGroupTaskInstance
  isExternal: false
  name: Items
  nameWithType: ProjectItemGroupTaskInstance.Items
