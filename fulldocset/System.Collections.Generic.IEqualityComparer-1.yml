### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.IEqualityComparer`1
  id: IEqualityComparer`1
  children:
  - System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  - System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  langs:
  - csharp
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  type: Interface
  summary: Defines methods to support the comparison of objects for equality.
  remarks: "This interface allows the implementation of customized equality comparison for collections. That is, you can create your own definition of equality for type `T`, and specify that this definition be used with a collection type that accepts the IEqualityComparer(T) generic interface. In the .NET Framework, constructors of the <xref:System.Collections.Generic.Dictionary%602> generic collection type accept this interface.  \n  \n A default implementation of this interface is provided by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property of the <xref:System.Collections.Generic.EqualityComparer%601> generic class. The <xref:System.StringComparer> class implements IEqualityComparer(T) of type <xref:System.String>.  \n  \n This interface supports only equality comparisons. Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.Generic.IComparer%601> generic interface.  \n  \n We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the IEqualityComparer(T) interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=fullName> method instead of the <xref:System.Object.Equals%2A?displayProperty=fullName> method. This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections."
  example:
  - "The following example adds custom `Box` objects to a dictionary collection. The `Box` objects are considered equal if their dimensions are the same.  \n  \n [!code-cs[System.Collections.Generic.IEqualityComparer#1](~/add/codesnippet/csharp/t-system.collections.gen_14_1.cs)]\n [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/add/codesnippet/visualbasic/t-system.collections.gen_14_1.vb)]"
  syntax:
    content: public interface IEqualityComparer<in T>
    typeParameters:
    - id: T
      description: The type of objects to compare.
  implements: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\IEqualityComparer`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/IEqualityComparer`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  id: Equals(`0,`0)
  parent: System.Collections.Generic.IEqualityComparer`1
  langs:
  - csharp
  name: Equals(T,T)
  nameWithType: IEqualityComparer<T>.Equals(T,T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T,T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: Determines whether the specified objects are equal.
  remarks: Implement this method to provide a customized equality comparison for type `T`.
  syntax:
    content: public bool Equals (T x, T y);
    parameters:
    - id: x
      type: T
      description: The first object of type <code>T</code> to compare.
    - id: y
      type: T
      description: The second object of type <code>T</code> to compare.
    return:
      type: System.Boolean
      description: '`true` if the specified objects are equal; otherwise, `false`.'
  overload: System.Collections.Generic.IEqualityComparer`1.Equals*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\IEqualityComparer`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/IEqualityComparer`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  id: GetHashCode(`0)
  parent: System.Collections.Generic.IEqualityComparer`1
  langs:
  - csharp
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  summary: Returns a hash code for the specified object.
  remarks: Implement this method to provide a customized hash code for type `T`,corresponding to the customized equality comparison provided by the <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> method.
  syntax:
    content: public int GetHashCode (T obj);
    parameters:
    - id: obj
      type: T
      description: The <xref href="System.Object"></xref> for which a hash code is to be returned.
    return:
      type: System.Int32
      description: A hash code for the specified object.
  overload: System.Collections.Generic.IEqualityComparer`1.GetHashCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The type of <code>obj</code> is a reference type and <code>obj</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\IEqualityComparer`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/IEqualityComparer`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  parent: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: Equals(T,T)
  nameWithType: IEqualityComparer<T>.Equals(T,T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T,T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  parent: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEqualityComparer`1.Equals*
  parent: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: Equals
  nameWithType: IEqualityComparer<T>.Equals
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode*
  parent: System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: GetHashCode
  nameWithType: IEqualityComparer<T>.GetHashCode
