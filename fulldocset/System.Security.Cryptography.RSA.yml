### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSA
  id: RSA
  children:
  - System.Security.Cryptography.RSA.#ctor
  - System.Security.Cryptography.RSA.Create
  - System.Security.Cryptography.RSA.Create(System.String)
  - System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  - System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  - System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSA.FromXmlString(System.String)
  - System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  langs:
  - csharp
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
  type: Class
  summary: Represents the base class from which all implementations of the RSA algorithm inherit.
  remarks: "Extending this class proves that you are implementing an `RSA` key. This is required for any developer providing a new `RSA` key implementation.  \n  \n The only purpose of this class is as a hierarchy member for identification of the `RSA` algorithm.  \n  \n The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.  It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class RSA : System.Security.Cryptography.AsymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Security.Cryptography.RSA.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: RSA()
  nameWithType: RSA.RSA()
  fullName: System.Security.Cryptography.RSA.RSA()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.RSA"></xref> class.
  remarks: This is a protected method that can only be called from a class derived from <xref:System.Security.Cryptography.RSA>. You cannot create an instance of an abstract class.
  syntax:
    content: protected RSA ();
    parameters: []
  overload: System.Security.Cryptography.RSA.#ctor*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Security.Cryptography.RSA.Create
  id: Create
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Create()
  nameWithType: RSA.Create()
  fullName: System.Security.Cryptography.RSA.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Creates an instance of the default implementation of the <xref href="System.Security.Cryptography.RSA"></xref> algorithm.
  syntax:
    content: public static System.Security.Cryptography.RSA Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.RSA
      description: A new instance of the default implementation of <xref href="System.Security.Cryptography.RSA"></xref>.
  overload: System.Security.Cryptography.RSA.Create*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Security.Cryptography.RSA.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: Create(String)
  nameWithType: RSA.Create(String)
  fullName: System.Security.Cryptography.RSA.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Creates an instance of the specified implementation of <xref href="System.Security.Cryptography.RSA"></xref>.
  syntax:
    content: public static System.Security.Cryptography.RSA Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: The name of the implementation of <xref href="System.Security.Cryptography.RSA"></xref> to use.
    return:
      type: System.Security.Cryptography.RSA
      description: A new instance of the specified implementation of <xref href="System.Security.Cryptography.RSA"></xref>.
  overload: System.Security.Cryptography.RSA.Create*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  id: DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: DecryptValue(Byte[])
  nameWithType: RSA.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.DecryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, decrypts the input data using the private key.
  remarks: In the [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`. However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception.
  syntax:
    content: public abstract byte[] DecryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: The cipher text to be decrypted.
    return:
      type: System.Byte[]
      description: The resulting decryption of the <code>rgb</code> parameter in plain text.
  overload: System.Security.Cryptography.RSA.DecryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method call is not supported. This exception is thrown starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)].
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  id: EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: EncryptValue(Byte[])
  nameWithType: RSA.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.EncryptValue(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, encrypts the input data using the public key.
  remarks: In the [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] and earlier versions of the .NET Framework, this method was `abstract`. However, the only implementation by a derived class, <xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=fullName>, also threw a <xref:System.NotSupportedException> exception.
  syntax:
    content: public abstract byte[] EncryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: The plain text to be encrypted.
    return:
      type: System.Byte[]
      description: The resulting encryption of the <code>rgb</code> parameter as cipher text.
  overload: System.Security.Cryptography.RSA.EncryptValue*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: This method call is not supported. This exception is thrown starting with the [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)].
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: RSA.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSA.ExportParameters(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, exports the <xref href="System.Security.Cryptography.RSAParameters"></xref>.
  syntax:
    content: public abstract System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> to include private parameters; otherwise, <xref uid="langword_csharp_false" name="false" href=""></xref>.
    return:
      type: System.Security.Cryptography.RSAParameters
      description: The parameters for <xref href="System.Security.Cryptography.DSA"></xref>.
  overload: System.Security.Cryptography.RSA.ExportParameters*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: RSA.FromXmlString(String)
  fullName: System.Security.Cryptography.RSA.FromXmlString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes an <xref href="System.Security.Cryptography.RSA"></xref> object from the key information from an XML string.
  remarks: "The FromXmlString initializes an RSA object using key information in an XML string that was generated using the <xref:System.Security.Cryptography.RSA.ToXmlString%2A> method.  The FromXmlString method accepts either an XML string containing a public key or an XML string containing a public and private key.  \n  \n Use the FromXmlString method to conveniently initialize <xref:System.Security.Cryptography.RSA> key information.  \n  \n> [!CAUTION]\n>  Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: The XML string containing <xref href="System.Security.Cryptography.RSA"></xref> key information.
  overload: System.Security.Cryptography.RSA.FromXmlString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>xmlString</code> parameter is <xref uid="langword_csharp_null" name="null" href=""></xref>.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: The format of the <code>xmlString</code> parameter is not valid.
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ImportParameters(RSAParameters)
  nameWithType: RSA.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSA.ImportParameters(RSAParameters)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: When overridden in a derived class, imports the specified <xref href="System.Security.Cryptography.RSAParameters"></xref>.
  syntax:
    content: public abstract void ImportParameters (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: The parameters for <xref href="System.Security.Cryptography.RSA"></xref>.
  overload: System.Security.Cryptography.RSA.ImportParameters*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.RSA
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: RSA.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.RSA.ToXmlString(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Creates and returns an XML string containing the key of the current <xref href="System.Security.Cryptography.RSA"></xref> object.
  remarks: "The ToXmlString method creates an XML string that contains either the public and private key of the current <xref:System.Security.Cryptography.RSA> object or contains only the public key of the current <xref:System.Security.Cryptography.RSA> object.  \n  \n Use the ToXmlString method whenever you need to conveniently persist RSA key information.  To initialize an <xref:System.Security.Cryptography.RSA> object with the key in an XML string, use the <xref:System.Security.Cryptography.RSA.FromXmlString%2A> method.  \n  \n> [!CAUTION]\n>  Persisting an XML string containing a private key to an insecure location is a security threat.  The security of your application can be compromised if a malicious third party can access your private key.  To safely persist a private key, use a secure key container.  For more information about persisting private keys in a key container, see [How to: Store Asymmetric Keys in a Key Container](~/add/includes/ajax-current-ext-md.md).  \n  \n When you pass `true` to the ToXmlString method, the resulting XML string takes the following form:  \n  \n```  \n<RSAKeyValue>  \n   <Modulus>…</Modulus>  \n   <Exponent>…</Exponent>  \n   <P>…</P>  \n   <Q>…</Q>  \n   <DP>…</DP>  \n   <DQ>…</DQ>  \n   <InverseQ>…</InverseQ>  \n   <D>…</D>  \n</RSAKeyValue>  \n```  \n  \n When you pass `false` to the ToXmlString method, the resulting XML string takes the following form:  \n  \n```  \n<RSAKeyValue>  \n   <Modulus>…</Modulus>  \n   <Exponent>…</Exponent>  \n</RSAKeyValue>  \n```"
  syntax:
    content: public override string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> to include a public and private RSA key; <xref uid="langword_csharp_false" name="false" href=""></xref> to include only the public key.
    return:
      type: System.String
      description: An XML string containing the key of the current <xref href="System.Security.Cryptography.RSA"></xref> object.
  overload: System.Security.Cryptography.RSA.ToXmlString*
  exceptions: []
  platform:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  isExternal: false
  name: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.RSA.#ctor
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: RSA()
  nameWithType: RSA.RSA()
  fullName: System.Security.Cryptography.RSA.RSA()
- uid: System.Security.Cryptography.RSA.Create
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create()
  nameWithType: RSA.Create()
  fullName: System.Security.Cryptography.RSA.Create()
- uid: System.Security.Cryptography.RSA
  parent: System.Security.Cryptography
  isExternal: false
  name: RSA
  nameWithType: RSA
  fullName: System.Security.Cryptography.RSA
- uid: System.Security.Cryptography.RSA.Create(System.String)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create(String)
  nameWithType: RSA.Create(String)
  fullName: System.Security.Cryptography.RSA.Create(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSA.DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: DecryptValue(Byte[])
  nameWithType: RSA.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.DecryptValue(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RSA.EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: EncryptValue(Byte[])
  nameWithType: RSA.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSA.EncryptValue(Byte[])
- uid: System.Security.Cryptography.RSA.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: RSA.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSA.ExportParameters(Boolean)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSA.FromXmlString(System.String)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: FromXmlString(String)
  nameWithType: RSA.FromXmlString(String)
  fullName: System.Security.Cryptography.RSA.FromXmlString(String)
- uid: System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ImportParameters(RSAParameters)
  nameWithType: RSA.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSA.ImportParameters(RSAParameters)
- uid: System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: RSA.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.RSA.ToXmlString(Boolean)
- uid: System.Security.Cryptography.RSA.#ctor*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: RSA
  nameWithType: RSA.RSA
- uid: System.Security.Cryptography.RSA.Create*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: Create
  nameWithType: RSA.Create
- uid: System.Security.Cryptography.RSA.DecryptValue*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: DecryptValue
  nameWithType: RSA.DecryptValue
- uid: System.Security.Cryptography.RSA.EncryptValue*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: EncryptValue
  nameWithType: RSA.EncryptValue
- uid: System.Security.Cryptography.RSA.ExportParameters*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ExportParameters
  nameWithType: RSA.ExportParameters
- uid: System.Security.Cryptography.RSA.FromXmlString*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: FromXmlString
  nameWithType: RSA.FromXmlString
- uid: System.Security.Cryptography.RSA.ImportParameters*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ImportParameters
  nameWithType: RSA.ImportParameters
- uid: System.Security.Cryptography.RSA.ToXmlString*
  parent: System.Security.Cryptography.RSA
  isExternal: false
  name: ToXmlString
  nameWithType: RSA.ToXmlString
