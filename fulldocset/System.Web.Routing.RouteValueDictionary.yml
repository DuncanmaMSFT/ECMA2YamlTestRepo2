### YamlMime:ManagedReference
items:
- uid: System.Web.Routing.RouteValueDictionary
  id: RouteValueDictionary
  children:
  - System.Web.Routing.RouteValueDictionary.#ctor
  - System.Web.Routing.RouteValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Web.Routing.RouteValueDictionary.#ctor(System.Object)
  - System.Web.Routing.RouteValueDictionary.Add(System.String,System.Object)
  - System.Web.Routing.RouteValueDictionary.Clear
  - System.Web.Routing.RouteValueDictionary.ContainsKey(System.String)
  - System.Web.Routing.RouteValueDictionary.ContainsValue(System.Object)
  - System.Web.Routing.RouteValueDictionary.Count
  - System.Web.Routing.RouteValueDictionary.GetEnumerator
  - System.Web.Routing.RouteValueDictionary.Item(System.String)
  - System.Web.Routing.RouteValueDictionary.Keys
  - System.Web.Routing.RouteValueDictionary.Remove(System.String)
  - System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  - System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
  - System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys
  - System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Values
  - System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  - System.Web.Routing.RouteValueDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Web.Routing.RouteValueDictionary.TryGetValue(System.String,System.Object@)
  - System.Web.Routing.RouteValueDictionary.Values
  langs:
  - csharp
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
  type: Class
  summary: Represents a case-insensitive collection of key/value pairs that you use in various places in the routing framework, such as when you define the default values for a route or when you generate a URL that is based on a route.
  remarks: "The RouteValueDictionary class enables you to work with collections of key/value pairs that are required in order to use ASP.NET routing. You use the RouteValueDictionary object to define values for the <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, and <xref:System.Web.Routing.Route.Defaults%2A> properties. You also use a RouteValueDictionary object when you generate a URL by calling the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method and passing a RouteValueDictionary object as a parameter.  \n  \n Every key in a RouteValueDictionary object must be unique. The RouteValueDictionary class uses case-insensitive ordinal comparison. For more information, see <xref:System.StringComparer.OrdinalIgnoreCase%2A>. A key cannot be `null`."
  example:
  - "The following example shows how to create a <xref:System.Web.Routing.Route> object and how to set the <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, and <xref:System.Web.Routing.Route.Defaults%2A> properties.  \n  \n [!code-cs[System.Web.Routing.Route.ctor#1](~/add/codesnippet/csharp/t-system.web.routing.rou_1_1.asax)]\n [!code-vb[System.Web.Routing.Route.ctor#1](~/add/codesnippet/visualbasic/t-system.web.routing.rou_1_1.asax)]"
  syntax:
    content: >-
      [System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")]

      public class RouteValueDictionary : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,object>>, System.Collections.Generic.IDictionary<string,object>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - System.Collections.Generic.IDictionary<System.String,System.Object>
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.#ctor
  id: '#ctor'
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: RouteValueDictionary()
  nameWithType: RouteValueDictionary.RouteValueDictionary()
  fullName: System.Web.Routing.RouteValueDictionary.RouteValueDictionary()
  type: Constructor
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Initializes a new instance of the <xref href="System.Web.Routing.RouteValueDictionary"></xref> class that is empty.
  remarks: You can add elements to a <xref:System.Web.Routing.RouteValueDictionary> object by calling the <xref:System.Web.Routing.RouteValueDictionary.Add%2A> method.
  syntax:
    content: public RouteValueDictionary ();
    parameters: []
  overload: System.Web.Routing.RouteValueDictionary.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: RouteValueDictionary(IDictionary<String,Object>)
  nameWithType: RouteValueDictionary.RouteValueDictionary(IDictionary<String,Object>)
  fullName: System.Web.Routing.RouteValueDictionary.RouteValueDictionary(IDictionary<String,Object>)
  type: Constructor
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Initializes a new instance of the <xref href="System.Web.Routing.RouteValueDictionary"></xref> class and adds elements from the specified collection.
  remarks: Every key in a <xref:System.Web.Routing.RouteValueDictionary> object must be unique. The <xref:System.Web.Routing.RouteValueDictionary> class uses case-insensitive ordinal comparison. For more information, see <xref:System.StringComparer.OrdinalIgnoreCase%2A>. A key cannot be `null`.
  syntax:
    content: public RouteValueDictionary (System.Collections.Generic.IDictionary<string,object> dictionary);
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: A collection whose elements are copied to the new collection.
  overload: System.Web.Routing.RouteValueDictionary.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>dictionary</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>dictionary</code> contains one or more duplicate keys.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: RouteValueDictionary(Object)
  nameWithType: RouteValueDictionary.RouteValueDictionary(Object)
  fullName: System.Web.Routing.RouteValueDictionary.RouteValueDictionary(Object)
  type: Constructor
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Initializes a new instance of the <xref href="System.Web.Routing.RouteValueDictionary"></xref> class and adds values that are based on properties from the specified object.
  remarks: Every key in a <xref:System.Web.Routing.RouteValueDictionary> object must be unique according to the dictionary's equality comparer. The <xref:System.Web.Routing.RouteValueDictionary> class uses case-insensitive ordinal comparison. For more information, see <xref:System.StringComparer.OrdinalIgnoreCase%2A>. A key cannot be `null`.
  example:
  - "The following example shows how to create a <xref:System.Web.Routing.Route> object and how to set the <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, and <xref:System.Web.Routing.Route.Defaults%2A> properties.  \n  \n [!code-cs[System.Web.Routing.Route.ctor#1](~/add/codesnippet/csharp/m-system.web.routing.rou_0_1.asax)]\n [!code-vb[System.Web.Routing.Route.ctor#1](~/add/codesnippet/visualbasic/m-system.web.routing.rou_0_1.asax)]"
  syntax:
    content: public RouteValueDictionary (object values);
    parameters:
    - id: values
      type: System.Object
      description: An object that contains properties that will be added as elements to the new collection.
  overload: System.Web.Routing.RouteValueDictionary.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: RouteValueDictionary.Add(String,Object)
  fullName: System.Web.Routing.RouteValueDictionary.Add(String,Object)
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Adds the specified value to the dictionary by using the specified key.
  syntax:
    content: public void Add (string key, object value);
    parameters:
    - id: key
      type: System.String
      description: The key of the element to add.
    - id: value
      type: System.Object
      description: The value of the element to add.
  overload: System.Web.Routing.RouteValueDictionary.Add*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.Clear
  id: Clear
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: RouteValueDictionary.Clear()
  fullName: System.Web.Routing.RouteValueDictionary.Clear()
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Removes all keys and values from the dictionary.
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.Routing.RouteValueDictionary.Clear*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: RouteValueDictionary.ContainsKey(String)
  fullName: System.Web.Routing.RouteValueDictionary.ContainsKey(String)
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Determines whether the dictionary contains the specified key.
  syntax:
    content: public bool ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: The key to locate in the dictionary.
    return:
      type: System.Boolean
      description: '`true` if the dictionary contains an element that has the specified key; otherwise, `false`.'
  overload: System.Web.Routing.RouteValueDictionary.ContainsKey*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.ContainsValue(System.Object)
  id: ContainsValue(System.Object)
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: ContainsValue(Object)
  nameWithType: RouteValueDictionary.ContainsValue(Object)
  fullName: System.Web.Routing.RouteValueDictionary.ContainsValue(Object)
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Determines whether the dictionary contains a specific value.
  syntax:
    content: public bool ContainsValue (object value);
    parameters:
    - id: value
      type: System.Object
      description: The value to locate in the dictionary.
    return:
      type: System.Boolean
      description: '`true` if the dictionary contains an element that has the specified value; otherwise, `false`.'
  overload: System.Web.Routing.RouteValueDictionary.ContainsValue*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.Count
  id: Count
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: Count
  nameWithType: RouteValueDictionary.Count
  fullName: System.Web.Routing.RouteValueDictionary.Count
  type: Property
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Gets the number of key/value pairs that are in the collection.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: The number of key/value pairs that are in the collection.
  overload: System.Web.Routing.RouteValueDictionary.Count*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: RouteValueDictionary.GetEnumerator()
  fullName: System.Web.Routing.RouteValueDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Returns an enumerator that you can use to iterate through the dictionary.
  syntax:
    content: public System.Collections.Generic.Dictionary<string,object>.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: A structure for reading data in the dictionary.
  overload: System.Web.Routing.RouteValueDictionary.GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: Item(String)
  nameWithType: RouteValueDictionary.Item(String)
  fullName: System.Web.Routing.RouteValueDictionary.Item(String)
  type: Property
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Gets or sets the value that is associated with the specified key.
  syntax:
    content: public object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: The key of the value to get or set.
    return:
      type: System.Object
      description: The value that is associated with the specified key, or `null` if the key does not exist in the collection.
  overload: System.Web.Routing.RouteValueDictionary.Item*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.Keys
  id: Keys
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: RouteValueDictionary.Keys
  fullName: System.Web.Routing.RouteValueDictionary.Keys
  type: Property
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Gets a collection that contains the keys in the dictionary.
  syntax:
    content: public System.Collections.Generic.Dictionary<string,object>.KeyCollection Keys { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: A collection that contains the keys in the dictionary.
  overload: System.Web.Routing.RouteValueDictionary.Keys*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: Remove(String)
  nameWithType: RouteValueDictionary.Remove(String)
  fullName: System.Web.Routing.RouteValueDictionary.Remove(String)
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Removes the value that has the specified key from the dictionary.
  syntax:
    content: public bool Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: The key of the element to remove.
    return:
      type: System.Boolean
      description: '`true` if the element is found and removed; otherwise, `false`. This method returns `false` if <code>key</code> is not found in the dictionary.'
  overload: System.Web.Routing.RouteValueDictionary.Remove*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  isEii: true
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: ICollection<KeyValuePair<String,Object>>.Add(KeyValuePair<String,Object>)
  nameWithType: RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Add(KeyValuePair<String,Object>)
  fullName: System.Web.Routing.RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Add(KeyValuePair<String,Object>)
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  syntax:
    content: void ICollection<KeyValuePair<string,object>>.Add (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: To be added.
  overload: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#Add*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  isEii: true
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: ICollection<KeyValuePair<String,Object>>.Contains(KeyValuePair<String,Object>)
  nameWithType: RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Contains(KeyValuePair<String,Object>)
  fullName: System.Web.Routing.RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Contains(KeyValuePair<String,Object>)
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  syntax:
    content: bool ICollection<KeyValuePair<string,object>>.Contains (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#Contains*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  isEii: true
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: ICollection<KeyValuePair<String,Object>>.CopyTo(KeyValuePair<String,Object>[],Int32)
  nameWithType: RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.CopyTo(KeyValuePair<String,Object>[],Int32)
  fullName: System.Web.Routing.RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.CopyTo(KeyValuePair<String,Object>[],Int32)
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  syntax:
    content: void ICollection<KeyValuePair<string,object>>.CopyTo (System.Collections.Generic.KeyValuePair<string,object>[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
      description: To be added.
    - id: arrayIndex
      type: System.Int32
      description: To be added.
  overload: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#CopyTo*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
  isEii: true
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: ICollection<KeyValuePair<String,Object>>.IsReadOnly
  nameWithType: RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.IsReadOnly
  fullName: System.Web.Routing.RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.IsReadOnly
  type: Property
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#IsReadOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  isEii: true
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: ICollection<KeyValuePair<String,Object>>.Remove(KeyValuePair<String,Object>)
  nameWithType: RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Remove(KeyValuePair<String,Object>)
  fullName: System.Web.Routing.RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Remove(KeyValuePair<String,Object>)
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  syntax:
    content: bool ICollection<KeyValuePair<string,object>>.Remove (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#Remove*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys
  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Keys
  isEii: true
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: IDictionary<String,Object>.Keys
  nameWithType: RouteValueDictionary.IDictionary<String,Object>.Keys
  fullName: System.Web.Routing.RouteValueDictionary.IDictionary<String,Object>.Keys
  type: Property
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  syntax:
    content: System.Collections.Generic.ICollection<string> System.Collections.Generic.IDictionary<System.String,System.Object>.Keys { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: To be added.
  overload: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary<System#String,System#Object>#Keys*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Values
  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Values
  isEii: true
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: IDictionary<String,Object>.Values
  nameWithType: RouteValueDictionary.IDictionary<String,Object>.Values
  fullName: System.Web.Routing.RouteValueDictionary.IDictionary<String,Object>.Values
  type: Property
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  syntax:
    content: System.Collections.Generic.ICollection<object> System.Collections.Generic.IDictionary<System.String,System.Object>.Values { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Object}
      description: To be added.
  overload: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary<System#String,System#Object>#Values*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  isEii: true
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()
  nameWithType: RouteValueDictionary.IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()
  fullName: System.Web.Routing.RouteValueDictionary.IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> IEnumerable<KeyValuePair<string,object>>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: To be added.
  overload: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: IEnumerable.GetEnumerator()
  nameWithType: RouteValueDictionary.IEnumerable.GetEnumerator()
  fullName: System.Web.Routing.RouteValueDictionary.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: For a description of this member, see <xref href="stem.Collections.IEnumerable.GetEnumerator%2A"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.Routing.RouteValueDictionary> instance is cast to an <xref:System.Collections.IEnumerable> interface.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: A structure for reading data in the dictionary.
  overload: System.Web.Routing.RouteValueDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: RouteValueDictionary.TryGetValue(String,Object)
  fullName: System.Web.Routing.RouteValueDictionary.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Gets a value that indicates whether a value is associated with the specified key.
  remarks: "This method combines the functionality of the <xref:System.Web.Routing.RouteValueDictionary.ContainsKey%2A> method and the <xref:System.Web.Routing.RouteValueDictionary.Item%2A> property.  \n  \n If the key is not found, the `value` parameter is assigned the appropriate default value for the type, such as 0 (zero) for integer types, `false` for Boolean types, and `null` for reference types."
  syntax:
    content: public bool TryGetValue (string key, out object value);
    parameters:
    - id: key
      type: System.String
      description: The key of the value to get.
    - id: value
      type: System.Object
      description: When this method returns, contains the value that is associated with the specified key, if the key is found; otherwise, contains the appropriate default value for the type of the <code>value</code> parameter that you provided as an `out` parameter. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the dictionary contains an element that has the specified key; otherwise, `false`.'
  overload: System.Web.Routing.RouteValueDictionary.TryGetValue*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Routing.RouteValueDictionary.Values
  id: Values
  parent: System.Web.Routing.RouteValueDictionary
  langs:
  - csharp
  name: Values
  nameWithType: RouteValueDictionary.Values
  fullName: System.Web.Routing.RouteValueDictionary.Values
  type: Property
  assemblies:
  - System.Web.Routing
  - System.Web
  namespace: System.Web.Routing
  summary: Gets a collection that contains the values in the dictionary.
  syntax:
    content: public System.Collections.Generic.Dictionary<string,object>.ValueCollection Values { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: A collection that contains the values in the dictionary.
  overload: System.Web.Routing.RouteValueDictionary.Values*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Routing\RouteValueDictionary.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Routing/RouteValueDictionary.xml
  version:
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Web.Routing.RouteValueDictionary.#ctor
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: RouteValueDictionary()
  nameWithType: RouteValueDictionary.RouteValueDictionary()
  fullName: System.Web.Routing.RouteValueDictionary.RouteValueDictionary()
- uid: System.Web.Routing.RouteValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: RouteValueDictionary(IDictionary<String,Object>)
  nameWithType: RouteValueDictionary.RouteValueDictionary(IDictionary<String,Object>)
  fullName: System.Web.Routing.RouteValueDictionary.RouteValueDictionary(IDictionary<String,Object>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Routing.RouteValueDictionary.#ctor(System.Object)
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: RouteValueDictionary(Object)
  nameWithType: RouteValueDictionary.RouteValueDictionary(Object)
  fullName: System.Web.Routing.RouteValueDictionary.RouteValueDictionary(Object)
- uid: System.Web.Routing.RouteValueDictionary.Add(System.String,System.Object)
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Add(String,Object)
  nameWithType: RouteValueDictionary.Add(String,Object)
  fullName: System.Web.Routing.RouteValueDictionary.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Routing.RouteValueDictionary.Clear
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Clear()
  nameWithType: RouteValueDictionary.Clear()
  fullName: System.Web.Routing.RouteValueDictionary.Clear()
- uid: System.Web.Routing.RouteValueDictionary.ContainsKey(System.String)
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: ContainsKey(String)
  nameWithType: RouteValueDictionary.ContainsKey(String)
  fullName: System.Web.Routing.RouteValueDictionary.ContainsKey(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Routing.RouteValueDictionary.ContainsValue(System.Object)
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: ContainsValue(Object)
  nameWithType: RouteValueDictionary.ContainsValue(Object)
  fullName: System.Web.Routing.RouteValueDictionary.ContainsValue(Object)
- uid: System.Web.Routing.RouteValueDictionary.Count
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Count
  nameWithType: RouteValueDictionary.Count
  fullName: System.Web.Routing.RouteValueDictionary.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Routing.RouteValueDictionary.GetEnumerator
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: RouteValueDictionary.GetEnumerator()
  fullName: System.Web.Routing.RouteValueDictionary.GetEnumerator()
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>+Enumerator
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>.Enumerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Routing.RouteValueDictionary.Item(System.String)
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Item(String)
  nameWithType: RouteValueDictionary.Item(String)
  fullName: System.Web.Routing.RouteValueDictionary.Item(String)
- uid: System.Web.Routing.RouteValueDictionary.Keys
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Keys
  nameWithType: RouteValueDictionary.Keys
  fullName: System.Web.Routing.RouteValueDictionary.Keys
- uid: System.Web.Routing.RouteValueDictionary.Remove(System.String)
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Remove(String)
  nameWithType: RouteValueDictionary.Remove(String)
  fullName: System.Web.Routing.RouteValueDictionary.Remove(String)
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: ICollection<KeyValuePair<String,Object>>.Add(KeyValuePair<String,Object>)
  nameWithType: RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Add(KeyValuePair<String,Object>)
  fullName: System.Web.Routing.RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Add(KeyValuePair<String,Object>)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<String,Object>
  nameWithType: KeyValuePair<String,Object>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: ICollection<KeyValuePair<String,Object>>.Contains(KeyValuePair<String,Object>)
  nameWithType: RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Contains(KeyValuePair<String,Object>)
  fullName: System.Web.Routing.RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Contains(KeyValuePair<String,Object>)
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: ICollection<KeyValuePair<String,Object>>.CopyTo(KeyValuePair<String,Object>[],Int32)
  nameWithType: RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.CopyTo(KeyValuePair<String,Object>[],Int32)
  fullName: System.Web.Routing.RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.CopyTo(KeyValuePair<String,Object>[],Int32)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<String,Object>[]
  nameWithType: KeyValuePair<String,Object>[]
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: ICollection<KeyValuePair<String,Object>>.IsReadOnly
  nameWithType: RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.IsReadOnly
  fullName: System.Web.Routing.RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.IsReadOnly
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: ICollection<KeyValuePair<String,Object>>.Remove(KeyValuePair<String,Object>)
  nameWithType: RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Remove(KeyValuePair<String,Object>)
  fullName: System.Web.Routing.RouteValueDictionary.ICollection<KeyValuePair<String,Object>>.Remove(KeyValuePair<String,Object>)
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: IDictionary<String,Object>.Keys
  nameWithType: RouteValueDictionary.IDictionary<String,Object>.Keys
  fullName: System.Web.Routing.RouteValueDictionary.IDictionary<String,Object>.Keys
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary{System#String,System#Object}#Values
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: IDictionary<String,Object>.Values
  nameWithType: RouteValueDictionary.IDictionary<String,Object>.Values
  fullName: System.Web.Routing.RouteValueDictionary.IDictionary<String,Object>.Values
- uid: System.Collections.Generic.ICollection{System.Object}
  parent: System.Collections.Generic
  isExternal: false
  name: ICollection<Object>
  nameWithType: ICollection<Object>
  fullName: System.Collections.Generic.ICollection<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()
  nameWithType: RouteValueDictionary.IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()
  fullName: System.Web.Routing.RouteValueDictionary.IEnumerable<KeyValuePair<String,Object>>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<KeyValuePair<String,Object>>
  nameWithType: IEnumerator<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: RouteValueDictionary.IEnumerable.GetEnumerator()
  fullName: System.Web.Routing.RouteValueDictionary.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.Routing.RouteValueDictionary.TryGetValue(System.String,System.Object@)
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: RouteValueDictionary.TryGetValue(String,Object)
  fullName: System.Web.Routing.RouteValueDictionary.TryGetValue(String,Object)
- uid: System.Web.Routing.RouteValueDictionary.Values
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Values
  nameWithType: RouteValueDictionary.Values
  fullName: System.Web.Routing.RouteValueDictionary.Values
- uid: System.Web.Routing.RouteValueDictionary.#ctor*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary.RouteValueDictionary
- uid: System.Web.Routing.RouteValueDictionary.Add*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Add
  nameWithType: RouteValueDictionary.Add
- uid: System.Web.Routing.RouteValueDictionary.Clear*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Clear
  nameWithType: RouteValueDictionary.Clear
- uid: System.Web.Routing.RouteValueDictionary.ContainsKey*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: ContainsKey
  nameWithType: RouteValueDictionary.ContainsKey
- uid: System.Web.Routing.RouteValueDictionary.ContainsValue*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: ContainsValue
  nameWithType: RouteValueDictionary.ContainsValue
- uid: System.Web.Routing.RouteValueDictionary.Count*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Count
  nameWithType: RouteValueDictionary.Count
- uid: System.Web.Routing.RouteValueDictionary.GetEnumerator*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: RouteValueDictionary.GetEnumerator
- uid: System.Web.Routing.RouteValueDictionary.Item*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Item
  nameWithType: RouteValueDictionary.Item
- uid: System.Web.Routing.RouteValueDictionary.Keys*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Keys
  nameWithType: RouteValueDictionary.Keys
- uid: System.Web.Routing.RouteValueDictionary.Remove*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Remove
  nameWithType: RouteValueDictionary.Remove
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#Add*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
  nameWithType: RouteValueDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#Contains*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
  nameWithType: RouteValueDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#CopyTo*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
  nameWithType: RouteValueDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#IsReadOnly*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly
  nameWithType: RouteValueDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#Remove*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
  nameWithType: RouteValueDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary<System#String,System#Object>#Keys*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Keys
  nameWithType: RouteValueDictionary.System.Collections.Generic.IDictionary<System.String,System.Object>.Keys
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IDictionary<System#String,System#Object>#Values*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Values
  nameWithType: RouteValueDictionary.System.Collections.Generic.IDictionary<System.String,System.Object>.Values
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  nameWithType: RouteValueDictionary.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
- uid: System.Web.Routing.RouteValueDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: RouteValueDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.Routing.RouteValueDictionary.TryGetValue*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: TryGetValue
  nameWithType: RouteValueDictionary.TryGetValue
- uid: System.Web.Routing.RouteValueDictionary.Values*
  parent: System.Web.Routing.RouteValueDictionary
  isExternal: false
  name: Values
  nameWithType: RouteValueDictionary.Values
