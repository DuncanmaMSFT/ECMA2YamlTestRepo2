### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  id: WrappedKeySecurityToken
  children:
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference
  langs:
  - csharp
  name: WrappedKeySecurityToken
  nameWithType: WrappedKeySecurityToken
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  type: Class
  summary: Represents a security token whose key is wrapped inside another token.
  syntax:
    content: 'public class WrappedKeySecurityToken : System.IdentityModel.Tokens.SecurityToken'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: '#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)'
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: WrappedKeySecurityToken(String,Byte[],String,SecurityToken,SecurityKeyIdentifier)
  nameWithType: WrappedKeySecurityToken.WrappedKeySecurityToken(String,Byte[],String,SecurityToken,SecurityKeyIdentifier)
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappedKeySecurityToken(String,Byte[],String,SecurityToken,SecurityKeyIdentifier)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Security.Tokens.WrappedKeySecurityToken"></xref> class.
  syntax:
    content: public WrappedKeySecurityToken (string id, byte[] keyToWrap, string wrappingAlgorithm, System.IdentityModel.Tokens.SecurityToken wrappingToken, System.IdentityModel.Tokens.SecurityKeyIdentifier wrappingTokenReference);
    parameters:
    - id: id
      type: System.String
      description: To be added.
    - id: keyToWrap
      type: System.Byte[]
      description: To be added.
    - id: wrappingAlgorithm
      type: System.String
      description: To be added.
    - id: wrappingToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: To be added.
    - id: wrappingTokenReference
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: WrappedKeySecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  syntax:
    content: 'public override bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: WrappedKeySecurityToken.CreateKeyIdentifierClause()
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  syntax:
    content: 'public override T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey
  id: GetWrappedKey
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: GetWrappedKey()
  nameWithType: WrappedKeySecurityToken.GetWrappedKey()
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Gets the wrapped key.
  syntax:
    content: public byte[] GetWrappedKey ();
    parameters: []
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id
  id: Id
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: WrappedKeySecurityToken.Id
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Gets the token ID.
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: WrappedKeySecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Compares the current security key identifier clause to a specified one for equality.
  syntax:
    content: public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: WrappedKeySecurityToken.SecurityKeys
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Gets a collection of security keys.
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom
  id: ValidFrom
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: WrappedKeySecurityToken.ValidFrom
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Gets the token effective start date.
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo
  id: ValidTo
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: WrappedKeySecurityToken.ValidTo
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Gets the token expiration date.
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm
  id: WrappingAlgorithm
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: WrappingAlgorithm
  nameWithType: WrappedKeySecurityToken.WrappingAlgorithm
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Gets the wrapping algorithm.
  syntax:
    content: public string WrappingAlgorithm { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken
  id: WrappingToken
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: WrappingToken
  nameWithType: WrappedKeySecurityToken.WrappingToken
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Gets the wrapping token.
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken WrappingToken { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference
  id: WrappingTokenReference
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  langs:
  - csharp
  name: WrappingTokenReference
  nameWithType: WrappedKeySecurityToken.WrappingTokenReference
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: Gets the wrapping token reference.
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifier WrappingTokenReference { get; }
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: To be added.
  overload: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor(System.String,System.Byte[],System.String,System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: WrappedKeySecurityToken(String,Byte[],String,SecurityToken,SecurityKeyIdentifier)
  nameWithType: WrappedKeySecurityToken.WrappedKeySecurityToken(String,Byte[],String,SecurityToken,SecurityKeyIdentifier)
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappedKeySecurityToken(String,Byte[],String,SecurityToken,SecurityKeyIdentifier)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: WrappedKeySecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause``1
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: WrappedKeySecurityToken.CreateKeyIdentifierClause()
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: GetWrappedKey()
  nameWithType: WrappedKeySecurityToken.GetWrappedKey()
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey()
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: Id
  nameWithType: WrappedKeySecurityToken.Id
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: WrappedKeySecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: WrappedKeySecurityToken.SecurityKeys
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: WrappedKeySecurityToken.ValidFrom
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: WrappedKeySecurityToken.ValidTo
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: WrappingAlgorithm
  nameWithType: WrappedKeySecurityToken.WrappingAlgorithm
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: WrappingToken
  nameWithType: WrappedKeySecurityToken.WrappingToken
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: WrappingTokenReference
  nameWithType: WrappedKeySecurityToken.WrappingTokenReference
  fullName: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.#ctor*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: WrappedKeySecurityToken
  nameWithType: WrappedKeySecurityToken.WrappedKeySecurityToken
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: WrappedKeySecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: WrappedKeySecurityToken.CreateKeyIdentifierClause<T>
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.GetWrappedKey*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: GetWrappedKey
  nameWithType: WrappedKeySecurityToken.GetWrappedKey
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.Id*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: Id
  nameWithType: WrappedKeySecurityToken.Id
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.MatchesKeyIdentifierClause*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: WrappedKeySecurityToken.MatchesKeyIdentifierClause
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.SecurityKeys*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: WrappedKeySecurityToken.SecurityKeys
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidFrom*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: WrappedKeySecurityToken.ValidFrom
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.ValidTo*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: WrappedKeySecurityToken.ValidTo
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingAlgorithm*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: WrappingAlgorithm
  nameWithType: WrappedKeySecurityToken.WrappingAlgorithm
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingToken*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: WrappingToken
  nameWithType: WrappedKeySecurityToken.WrappingToken
- uid: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken.WrappingTokenReference*
  parent: System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  isExternal: false
  name: WrappingTokenReference
  nameWithType: WrappedKeySecurityToken.WrappingTokenReference
