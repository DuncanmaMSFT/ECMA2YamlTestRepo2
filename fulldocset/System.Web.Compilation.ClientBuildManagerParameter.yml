### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ClientBuildManagerParameter
  id: ClientBuildManagerParameter
  children:
  - System.Web.Compilation.ClientBuildManagerParameter.#ctor
  - System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  - System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  - System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  langs:
  - csharp
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter
  fullName: System.Web.Compilation.ClientBuildManagerParameter
  type: Class
  summary: Contains values passed to the ASP.NET compiler during precompilation.
  remarks: "ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code. For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](../Topic/ASP.NET%20Web%20Site%20Project%20Precompilation%20Overview.md).  \n  \n The ClientBuildManagerParameter class stores values that are used during precompilation. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built. For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.  \n  \n Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.  \n  \n A ClientBuildManagerParameter object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor."
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a ClientBuildManagerParameter object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/t-system.web.compilation_9_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/t-system.web.compilation_9_1.cs)]"
  syntax:
    content: public class ClientBuildManagerParameter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Compilation\ClientBuildManagerParameter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Compilation/ClientBuildManagerParameter.xml
  version:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: ClientBuildManagerParameter()
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ClientBuildManagerParameter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: Initializes a new instance of the <xref href="System.Web.Compilation.ClientBuildManagerParameter"></xref> class.
  remarks: This constructor does not initialize any property values. Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/m-system.web.compilation_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/m-system.web.compilation_1.cs)]"
  syntax:
    content: public ClientBuildManagerParameter ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManagerParameter.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Compilation\ClientBuildManagerParameter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Compilation/ClientBuildManagerParameter.xml
  version:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  id: ExcludedVirtualPaths
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: Gets or sets excluded virtual paths.
  syntax:
    content: public System.Collections.Generic.List<string> ExcludedVirtualPaths { get; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: Excluded virtual paths.
  overload: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Compilation\ClientBuildManagerParameter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Compilation/ClientBuildManagerParameter.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  id: PrecompilationFlags
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
  fullName: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: Gets or sets the flags that determine precompilation behavior.
  remarks: The PrecompilationFlags property determines how the assembly will be built. For example, you can set PrecompilationFlags to <xref:System.Web.Compilation.PrecompilationFlags> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags> to permit the resulting assembly to overwrite any components in the target directory. The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values. The PrecompilationFlags property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/p-system.web.compilation_3_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/p-system.web.compilation_3_1.cs)]"
  syntax:
    content: public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }
    return:
      type: System.Web.Compilation.PrecompilationFlags
      description: The <xref href="System.Web.Compilation.PrecompilationFlags"></xref> for a client build.
  overload: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Compilation\ClientBuildManagerParameter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Compilation/ClientBuildManagerParameter.xml
  version:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  id: StrongNameKeyContainer
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: Gets or sets the key container used during compilation.
  remarks: Either the StrongNameKeyContainer property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.
  example:
  - "The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container. It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-cs[System.Web.Compilation.ClientBuildManager_2#1](~/add/codesnippet/csharp/p-system.web.compilation_1_1.cs)]\n [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/add/codesnippet/visualbasic/p-system.web.compilation_1_1.vb)]"
  syntax:
    content: public string StrongNameKeyContainer { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> of the value for the key container.
  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Compilation\ClientBuildManagerParameter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Compilation/ClientBuildManagerParameter.xml
  version:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  id: StrongNameKeyFile
  parent: System.Web.Compilation.ClientBuildManagerParameter
  langs:
  - csharp
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: Gets or sets the key file used during compilation.
  remarks: Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the StrongNameKeyFile property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.
  example:
  - "The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview. In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.  \n  \n [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/visualbasic/p-system.web.compilation_2_1.vb)]\n [!code-cs[System.Web.Compilation.ClientBuildManager#2](~/add/codesnippet/csharp/p-system.web.compilation_2_1.cs)]"
  syntax:
    content: public string StrongNameKeyFile { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> of the value for the key file.
  overload: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Web.Compilation\ClientBuildManagerParameter.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Web.Compilation/ClientBuildManagerParameter.xml
  version:
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ClientBuildManagerParameter()
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter()
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ClientBuildManagerParameter()
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
  fullName: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
  fullName: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags
- uid: System.Web.Compilation.PrecompilationFlags
  parent: System.Web.Compilation
  isExternal: false
  name: PrecompilationFlags
  nameWithType: PrecompilationFlags
  fullName: System.Web.Compilation.PrecompilationFlags
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
  fullName: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile
- uid: System.Web.Compilation.ClientBuildManagerParameter.#ctor*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter.ClientBuildManagerParameter
- uid: System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: ExcludedVirtualPaths
  nameWithType: ClientBuildManagerParameter.ExcludedVirtualPaths
- uid: System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: PrecompilationFlags
  nameWithType: ClientBuildManagerParameter.PrecompilationFlags
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyContainer
  nameWithType: ClientBuildManagerParameter.StrongNameKeyContainer
- uid: System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile*
  parent: System.Web.Compilation.ClientBuildManagerParameter
  isExternal: false
  name: StrongNameKeyFile
  nameWithType: ClientBuildManagerParameter.StrongNameKeyFile
