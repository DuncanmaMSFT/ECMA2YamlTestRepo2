### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.WindowsClientCredential
  id: WindowsClientCredential
  children:
  - System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel
  - System.ServiceModel.Security.WindowsClientCredential.AllowNtlm
  - System.ServiceModel.Security.WindowsClientCredential.ClientCredential
  langs:
  - csharp
  name: WindowsClientCredential
  nameWithType: WindowsClientCredential
  fullName: System.ServiceModel.Security.WindowsClientCredential
  type: Class
  summary: Allows you to specify properties related to Windows credentials to be used to represent the client.
  syntax:
    content: public sealed class WindowsClientCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel
  id: AllowedImpersonationLevel
  parent: System.ServiceModel.Security.WindowsClientCredential
  langs:
  - csharp
  name: AllowedImpersonationLevel
  nameWithType: WindowsClientCredential.AllowedImpersonationLevel
  fullName: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets or sets the allowed impersonation level.
  syntax:
    content: public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }
    return:
      type: System.Security.Principal.TokenImpersonationLevel
      description: To be added.
  overload: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.WindowsClientCredential.AllowNtlm
  id: AllowNtlm
  parent: System.ServiceModel.Security.WindowsClientCredential
  langs:
  - csharp
  name: AllowNtlm
  nameWithType: WindowsClientCredential.AllowNtlm
  fullName: System.ServiceModel.Security.WindowsClientCredential.AllowNtlm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets or sets a value that indicates whether NTLM authentication should be allowed as Windows SSPI Negotiate authentication.
  syntax:
    content: public bool AllowNtlm { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.ServiceModel.Security.WindowsClientCredential.AllowNtlm*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Security.WindowsClientCredential.ClientCredential
  id: ClientCredential
  parent: System.ServiceModel.Security.WindowsClientCredential
  langs:
  - csharp
  name: ClientCredential
  nameWithType: WindowsClientCredential.ClientCredential
  fullName: System.ServiceModel.Security.WindowsClientCredential.ClientCredential
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: Gets or sets the Windows client credential.
  syntax:
    content: public System.Net.NetworkCredential ClientCredential { get; set; }
    return:
      type: System.Net.NetworkCredential
      description: To be added.
  overload: System.ServiceModel.Security.WindowsClientCredential.ClientCredential*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel
  parent: System.ServiceModel.Security.WindowsClientCredential
  isExternal: false
  name: AllowedImpersonationLevel
  nameWithType: WindowsClientCredential.AllowedImpersonationLevel
  fullName: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: false
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.ServiceModel.Security.WindowsClientCredential.AllowNtlm
  parent: System.ServiceModel.Security.WindowsClientCredential
  isExternal: false
  name: AllowNtlm
  nameWithType: WindowsClientCredential.AllowNtlm
  fullName: System.ServiceModel.Security.WindowsClientCredential.AllowNtlm
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.WindowsClientCredential.ClientCredential
  parent: System.ServiceModel.Security.WindowsClientCredential
  isExternal: false
  name: ClientCredential
  nameWithType: WindowsClientCredential.ClientCredential
  fullName: System.ServiceModel.Security.WindowsClientCredential.ClientCredential
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel*
  parent: System.ServiceModel.Security.WindowsClientCredential
  isExternal: false
  name: AllowedImpersonationLevel
  nameWithType: WindowsClientCredential.AllowedImpersonationLevel
- uid: System.ServiceModel.Security.WindowsClientCredential.AllowNtlm*
  parent: System.ServiceModel.Security.WindowsClientCredential
  isExternal: false
  name: AllowNtlm
  nameWithType: WindowsClientCredential.AllowNtlm
- uid: System.ServiceModel.Security.WindowsClientCredential.ClientCredential*
  parent: System.ServiceModel.Security.WindowsClientCredential
  isExternal: false
  name: ClientCredential
  nameWithType: WindowsClientCredential.ClientCredential
