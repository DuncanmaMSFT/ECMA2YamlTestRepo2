### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.DataContractResolver
  id: DataContractResolver
  children:
  - System.Runtime.Serialization.DataContractResolver.#ctor
  - System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  - System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  langs:
  - csharp
  name: DataContractResolver
  nameWithType: DataContractResolver
  fullName: System.Runtime.Serialization.DataContractResolver
  type: Class
  summary: Provides a mechanism for dynamically mapping types to and from `xsi:type` representations during serialization and deserialization.
  remarks: "Developers should be careful about what data is being sent over the wire. You can use transport or message security to secure that data. [!INCLUDE[crdefault](~/add/includes/crdefault-md.md)] see [Security](../Topic/Security%20in%20WCF.md).  \n  \n> [!WARNING]\n>  Only use DataContractResolver if you are completely sure of what information is being serialized. Malicious types can cause unexpected behavior."
  example:
  - "The following example shows how to derive a class from DataContractResolver. For a working sample, see [DataContractResolver](../Topic/DataContractResolver.md).  \n  \n [!code-cs[DataContractResolver#2](~/add/codesnippet/csharp/t-system.runtime.seriali_34_1.cs)]"
  syntax:
    content: public abstract class DataContractResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.Serialization\DataContractResolver.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.Serialization/DataContractResolver.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.Serialization.DataContractResolver.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.DataContractResolver
  langs:
  - csharp
  name: DataContractResolver()
  nameWithType: DataContractResolver.DataContractResolver()
  fullName: System.Runtime.Serialization.DataContractResolver.DataContractResolver()
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: Initializes a new instance of the <xref href="System.Runtime.Serialization.DataContractResolver"></xref> class.
  syntax:
    content: protected DataContractResolver ();
    parameters: []
  overload: System.Runtime.Serialization.DataContractResolver.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.Serialization\DataContractResolver.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.Serialization/DataContractResolver.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  id: ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  parent: System.Runtime.Serialization.DataContractResolver
  langs:
  - csharp
  name: ResolveName(String,String,Type,DataContractResolver)
  nameWithType: DataContractResolver.ResolveName(String,String,Type,DataContractResolver)
  fullName: System.Runtime.Serialization.DataContractResolver.ResolveName(String,String,Type,DataContractResolver)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: Override this method to map the specified `xsi:type` name and namespace to a data contract type during deserialization.
  remarks: If you want to use the known type resolution logic inside your implementation, a reference to it is passed in as the `knownTypeResolver` parameter.
  example:
  - "The following example shows an implementation of the ResolveName method.  \n  \n [!code-cs[DataContractResolver#0](~/add/codesnippet/csharp/1c1adc6c-f8c3-4bc5-939f-_1.cs)]"
  syntax:
    content: public abstract Type ResolveName (string typeName, string typeNamespace, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver);
    parameters:
    - id: typeName
      type: System.String
      description: The `xsi:type` name to map.
    - id: typeNamespace
      type: System.String
      description: The `xsi:type` namespace to map.
    - id: declaredType
      type: System.Type
      description: The type declared in the data contract.
    - id: knownTypeResolver
      type: System.Runtime.Serialization.DataContractResolver
      description: The known type resolver.
    return:
      type: System.Type
      description: The type the `xsi:type` name and namespace is mapped to.
  overload: System.Runtime.Serialization.DataContractResolver.ResolveName*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.Serialization\DataContractResolver.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.Serialization/DataContractResolver.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  id: TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  parent: System.Runtime.Serialization.DataContractResolver
  langs:
  - csharp
  name: TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
  nameWithType: DataContractResolver.TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
  fullName: System.Runtime.Serialization.DataContractResolver.TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: Override this method to map a data contract type to an `xsi:type` name and namespace during serialization.
  remarks: If you want to use the known type resolution logic inside your implementation, a reference to it is passed in as the `knownTypeResolver` parameter.
  example:
  - "The following example shows an implementation of the TryResolveType method.  \n  \n [!code-cs[DataContractResolver#1](~/add/codesnippet/csharp/5459e6e7-bebb-4484-8178-_1.cs)]"
  syntax:
    content: public abstract bool TryResolveType (Type type, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver, out System.Xml.XmlDictionaryString typeName, out System.Xml.XmlDictionaryString typeNamespace);
    parameters:
    - id: type
      type: System.Type
      description: The type to map.
    - id: declaredType
      type: System.Type
      description: The type declared in the data contract.
    - id: knownTypeResolver
      type: System.Runtime.Serialization.DataContractResolver
      description: The known type resolver.
    - id: typeName
      type: System.Xml.XmlDictionaryString
      description: The xsi:type name.
    - id: typeNamespace
      type: System.Xml.XmlDictionaryString
      description: The xsi:type namespace.
    return:
      type: System.Boolean
      description: '`true` if mapping succeeded; otherwise, `false`.'
  overload: System.Runtime.Serialization.DataContractResolver.TryResolveType*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Runtime.Serialization\DataContractResolver.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Runtime.Serialization/DataContractResolver.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Serialization.DataContractResolver.#ctor
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: DataContractResolver()
  nameWithType: DataContractResolver.DataContractResolver()
  fullName: System.Runtime.Serialization.DataContractResolver.DataContractResolver()
- uid: System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: ResolveName(String,String,Type,DataContractResolver)
  nameWithType: DataContractResolver.ResolveName(String,String,Type,DataContractResolver)
  fullName: System.Runtime.Serialization.DataContractResolver.ResolveName(String,String,Type,DataContractResolver)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.DataContractResolver
  parent: System.Runtime.Serialization
  isExternal: false
  name: DataContractResolver
  nameWithType: DataContractResolver
  fullName: System.Runtime.Serialization.DataContractResolver
- uid: System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
  nameWithType: DataContractResolver.TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
  fullName: System.Runtime.Serialization.DataContractResolver.TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString,XmlDictionaryString)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryString
  nameWithType: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.Runtime.Serialization.DataContractResolver.#ctor*
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: DataContractResolver
  nameWithType: DataContractResolver.DataContractResolver
- uid: System.Runtime.Serialization.DataContractResolver.ResolveName*
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: ResolveName
  nameWithType: DataContractResolver.ResolveName
- uid: System.Runtime.Serialization.DataContractResolver.TryResolveType*
  parent: System.Runtime.Serialization.DataContractResolver
  isExternal: false
  name: TryResolveType
  nameWithType: DataContractResolver.TryResolveType
