### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ChannelFactory`1
  id: ChannelFactory`1
  children:
  - System.ServiceModel.ChannelFactory`1.#ctor
  - System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ChannelFactory`1.#ctor(System.String)
  - System.ServiceModel.ChannelFactory`1.#ctor(System.Type)
  - System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory`1.CreateChannel
  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)
  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)
  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)
  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.ChannelFactory`1.CreateDescription
  langs:
  - csharp
  name: ChannelFactory<TChannel>
  nameWithType: ChannelFactory<TChannel>
  fullName: System.ServiceModel.ChannelFactory<TChannel>
  type: Class
  summary: A factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.
  remarks: "This generic class enables more advanced scenarios where there is a requirement to create a channel factory that can be used to create more than one type of channel.  \n  \n When adding behaviors programmatically, the behavior is added to the appropriate `Behaviors` property on the <xref:System.ServiceModel.ChannelFactory> prior to the creation of any channel. See the example section for a code sample.  \n  \n Frequently client or calling applications (for example, middle-tier applications are client applications, too) using this type also have complex state management needs as well as performance needs. For more information about these scenarios, please see [Middle-Tier Client Applications](../Topic/Middle-Tier%20Client%20Applications.md)."
  example:
  - "The following sample shows how to create a channel factory and use it to create and manage channels.  \n  \n [!code-cs[S_UEChannels#21](~/add/codesnippet/csharp/t-system.servicemodel.ch_2_1.cs)]  \n  \n The following code example shows how to insert programmatically a client behavior prior to the creation of the channel object by the factory.  \n  \n [!code-cs[ChannelFactoryBehaviors#10](~/add/codesnippet/csharp/channelfactorybehaviors.client/client.cs#10)]\n [!code-vb[ChannelFactoryBehaviors#10](~/add/codesnippet/visualbasic/channelfactorybehaviors.client/client.vb#10)]"
  syntax:
    content: 'public class ChannelFactory<TChannel> : System.ServiceModel.ChannelFactory, System.ServiceModel.Channels.IChannelFactory<TChannel>'
    typeParameters:
    - id: TChannel
      description: The type of channel produced by the channel factory. This type must be either <xref href="System.ServiceModel.Channels.IOutputChannel"></xref> or <xref href="System.ServiceModel.Channels.IRequestChannel"></xref>.
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ChannelFactory
  implements:
  - System.ServiceModel.Channels.IChannelFactory<TChannel>
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  - System.ServiceModel.ChannelFactory.CreateFactory
  - System.ServiceModel.ChannelFactory.Credentials
  - System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  - System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  - System.ServiceModel.ChannelFactory.Endpoint
  - System.ServiceModel.ChannelFactory.EnsureOpened
  - System.ServiceModel.ChannelFactory.GetProperty``1
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory.OnAbort
  - System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  - System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  - System.ServiceModel.ChannelFactory.OnOpened
  - System.ServiceModel.ChannelFactory.OnOpening
  - System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.OnClosed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable
  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: ChannelFactory<TChannel>()
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>()
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="stem.ServiceModel.ChannelFactory%601"></xref> class.
  remarks: ''
  example:
  - "This example shows how to create a new object of the <xref:System.ServiceModel.ChannelFactory%601> class with the `IRequestChannel` interface.  \n  \n [!code-cs[S_UEChannels#24](~/add/codesnippet/csharp/m-system.servicemodel.ch_48_1.cs)]"
  syntax:
    content: public ChannelFactory ();
    parameters: []
  overload: System.ServiceModel.ChannelFactory`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)
  id: '#ctor(System.ServiceModel.Channels.Binding)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: ChannelFactory<TChannel>(Binding)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="stem.ServiceModel.ChannelFactory%601"></xref> class.
  remarks: Use this constructor when you want to pass the binding information programmatically rather than using an application configuration file.
  syntax:
    content: public ChannelFactory (System.ServiceModel.Channels.Binding binding);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The <xref href="System.ServiceModel.Channels.Binding"></xref> specified for the channels produced by the factory.
  overload: System.ServiceModel.ChannelFactory`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)
  id: '#ctor(System.ServiceModel.Description.ServiceEndpoint)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: ChannelFactory<TChannel>(ServiceEndpoint)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(ServiceEndpoint)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(ServiceEndpoint)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="stem.ServiceModel.ChannelFactory%601"></xref> class that produces channels with a specified endpoint.
  remarks: Use this constructor when you want to pass the service endpoint information programmatically rather than using an application configuration file.
  example:
  - '[!code-cs[S_UEChannels#25](~/add/codesnippet/csharp/d92b5ad0-cd37-4f67-ad24-_1.cs)]'
  syntax:
    content: public ChannelFactory (System.ServiceModel.Description.ServiceEndpoint endpoint);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: The <xref href="System.ServiceModel.Description.ServiceEndpoint"></xref> for the channels produced by the factory.
  overload: System.ServiceModel.ChannelFactory`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>endpoint</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: ChannelFactory<TChannel>(String)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="stem.ServiceModel.ChannelFactory%601"></xref> class with a specified endpoint configuration name.
  remarks: Use this constructor when there is more than one target endpoint in the application configuration file.
  example:
  - '[!code-cs[S_UEChannels#23](~/add/codesnippet/csharp/m-system.servicemodel.ch_12_1.cs)]'
  syntax:
    content: public ChannelFactory (string endpointConfigurationName);
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: The configuration name used for the endpoint.
  overload: System.ServiceModel.ChannelFactory`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>endpointConfigurationName</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: ChannelFactory<TChannel>(Type)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Type)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(Type)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="stem.ServiceModel.ChannelFactory%601"></xref> class.
  remarks: Use this constructor when you want to pass the channel type information programmatically rather than using an application configuration file. The `channelType` parameter must be an interface.
  syntax:
    content: protected ChannelFactory (Type channelType);
    parameters:
    - id: channelType
      type: System.Type
      description: The <xref href="System.Type"></xref> of channel produced by the factory.
  overload: System.ServiceModel.ChannelFactory`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>channelType</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <code>channelType</code> is a class or value type and is not an interface.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: ChannelFactory<TChannel>(Binding,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding,EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="stem.ServiceModel.ChannelFactory%601"></xref> class with a specified binding and endpoint address.
  remarks: Use this constructor when you want to pass the binding and address information programmatically rather than using an application configuration file.
  example:
  - '[!code-cs[S_UEChannels#26](~/add/codesnippet/csharp/959257db-b33e-40e6-8167-_1.cs)]'
  syntax:
    content: public ChannelFactory (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The <xref href="System.ServiceModel.Channels.Binding"></xref> used to configure the endpoint.
    - id: remoteAddress
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> that provides the location of the service.
  overload: System.ServiceModel.ChannelFactory`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>binding</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)
  id: '#ctor(System.ServiceModel.Channels.Binding,System.String)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: ChannelFactory<TChannel>(Binding,String)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding,String)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding,String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="stem.ServiceModel.ChannelFactory%601"></xref> class with a specified binding and remote address.
  remarks: Use this constructor when you want to pass the information about the remote address information with a string rather than as a typed object.
  example:
  - '[!code-cs[S_UEChannels#29](~/add/codesnippet/csharp/84b20a3b-b9c9-4c83-8256-_1.cs)]'
  syntax:
    content: public ChannelFactory (System.ServiceModel.Channels.Binding binding, string remoteAddress);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The <xref href="System.ServiceModel.Channels.Binding"></xref> used to configure the endpoint.
    - id: remoteAddress
      type: System.String
      description: The address that provides the location of the service.
  overload: System.ServiceModel.ChannelFactory`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>remoteAddress</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.String,System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: ChannelFactory<TChannel>(String,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(String,EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="stem.ServiceModel.ChannelFactory%601"></xref> class associated with a specified name for the endpoint configuration and remote address.
  remarks: ''
  example:
  - '[!code-cs[S_UEChannels#24](~/add/codesnippet/csharp/fbe8e908-2c9f-4370-8b15-_1.cs)]'
  syntax:
    content: public ChannelFactory (string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress);
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: The configuration name used for the endpoint.
    - id: remoteAddress
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> that provides the location of the service.
  overload: System.ServiceModel.ChannelFactory`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>endpointConfigurationName</code> or <code>remoteAddress</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel
  id: CreateChannel
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannel()
  nameWithType: ChannelFactory<TChannel>.CreateChannel()
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel of a specified type to a specified endpoint address.
  remarks: Creates a channel of type `TChannel`, the generic parameter for the class.
  example:
  - '[!code-cs[S_UEChannels#30](~/add/codesnippet/csharp/m-system.servicemodel.ch_34_1.cs)]'
  syntax:
    content: public TChannel CreateChannel ();
    parameters: []
    return:
      type: TChannel
      description: The <code>TChannel</code> of type <xref href="System.ServiceModel.Channels.IChannel"></xref> created by the factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  id: CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannel(EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service at a specific endpoint address.
  remarks: ''
  example:
  - '[!code-cs[S_UEChannels#27](~/add/codesnippet/csharp/1c192c30-9e77-43dc-b992-_1.cs)]'
  syntax:
    content: public TChannel CreateChannel (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> that provides the location of the service.
    return:
      type: TChannel
      description: The <code>TChannel</code> of type <xref href="System.ServiceModel.Channels.IChannel"></xref> created by the factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>address</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)
  id: CreateChannel(System.String)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannel(String)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(String)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service whose endpoint is configured in a specified way.
  remarks: ''
  example:
  - '[!code-cs[S_UEChannels#21](~/add/codesnippet/csharp/m-system.servicemodel.ch_27_1.cs)]'
  syntax:
    content: protected static TChannel CreateChannel (string endpointConfigurationName);
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: The name of the endpoint configuration used for the service.
    return:
      type: TChannel
      description: The <code>TChannel</code> of type <xref href="System.ServiceModel.Channels.IChannel"></xref> created by the factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.ServiceModel.ChannelFactory"></xref> has duplex operations it does not support.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  id: CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannel(Binding,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(Binding,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel of a specified type that is used to send messages to a service endpoint that is configured with a specified binding.
  remarks: ''
  example:
  - '[!code-cs[S_UEChannels#31](~/add/codesnippet/csharp/ce87c597-c291-402f-b8b0-_1.cs)]'
  syntax:
    content: public static TChannel CreateChannel (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The <xref href="System.ServiceModel.Channels.Binding"></xref> used to configure the endpoint.
    - id: endpointAddress
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> that provides the location of the service.
    return:
      type: TChannel
      description: The <code>TChannel</code> of type <xref href="System.ServiceModel.Channels.IChannel"></xref> created by the factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.ServiceModel.ChannelFactory"></xref> has duplex operations it does not support.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannel(EndpointAddress,Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress,Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(EndpointAddress,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.
  remarks: ''
  example:
  - '[!code-cs[S_UEChannels#28](~/add/codesnippet/csharp/415d5e9a-3e2d-4dc1-b19e-_1.cs)]'
  syntax:
    content: public virtual TChannel CreateChannel (System.ServiceModel.EndpointAddress address, Uri via);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> that provides the location of the service.
    - id: via
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the transport address to which the channel sends messages.
    return:
      type: TChannel
      description: The <code>TChannel</code> of type <xref href="System.ServiceModel.Channels.IChannel"></xref> created by the factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>address</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.ServiceModel.ChannelFactory"></xref> has duplex operations it does not support.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannel(Binding,EndpointAddress,Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding,EndpointAddress,Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(Binding,EndpointAddress,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel of a specified type that is used to send messages to a service endpoint at a specified transport address that is configured with a specified binding.
  remarks: ''
  example:
  - '[!code-cs[S_UEChannels#33](~/add/codesnippet/csharp/7368ead2-1997-489d-8045-_1.cs)]'
  syntax:
    content: public static TChannel CreateChannel (System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpointAddress, Uri via);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: The <xref href="System.ServiceModel.Channels.Binding"></xref> used to configure the endpoint.
    - id: endpointAddress
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> that provides the location of the service.
    - id: via
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the transport address to which the channel sends messages.
    return:
      type: TChannel
      description: The <code>TChannel</code> of type <xref href="System.ServiceModel.Channels.IChannel"></xref> created by the factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.ServiceModel.ChannelFactory"></xref> has duplex operations it does not support.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)
  id: CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannelWithActAsToken(SecurityToken)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service with an act as security token.
  syntax:
    content: public TChannel CreateChannelWithActAsToken (System.IdentityModel.Tokens.SecurityToken actAsToken);
    parameters:
    - id: actAsToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: The security token.
    return:
      type: TChannel
      description: The created channel factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  id: CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannelWithActAsToken(SecurityToken,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address.
  syntax:
    content: public TChannel CreateChannelWithActAsToken (System.IdentityModel.Tokens.SecurityToken actAsToken, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: actAsToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: The security token
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The endpoint address that provides the location of the service.
    return:
      type: TChannel
      description: The created channel factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannelWithActAsToken(SecurityToken,EndpointAddress,Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken,EndpointAddress,Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken,EndpointAddress,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service with an act as security token at a specific endpoint address through a specified transport address.
  syntax:
    content: public TChannel CreateChannelWithActAsToken (System.IdentityModel.Tokens.SecurityToken actAsToken, System.ServiceModel.EndpointAddress address, Uri via);
    parameters:
    - id: actAsToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: The security token
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The endpoint address that provides the location of the service.
    - id: via
      type: System.Uri
      description: The transport address to which the channel sends messages.
    return:
      type: TChannel
      description: The created channel factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)
  id: CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannelWithIssuedToken(SecurityToken)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service with an issued security token.
  syntax:
    content: public TChannel CreateChannelWithIssuedToken (System.IdentityModel.Tokens.SecurityToken issuedToken);
    parameters:
    - id: issuedToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: The issued security token.
    return:
      type: TChannel
      description: The created channel factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  id: CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannelWithIssuedToken(SecurityToken,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address.
  syntax:
    content: public TChannel CreateChannelWithIssuedToken (System.IdentityModel.Tokens.SecurityToken issuedToken, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: issuedToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: The issued security token.
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The endpoint address that provides the location of the service.
    return:
      type: TChannel
      description: The created channel factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannelWithIssuedToken(SecurityToken,EndpointAddress,Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken,EndpointAddress,Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken,EndpointAddress,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service with an issued security token at a specific endpoint address through a specified transport address.
  syntax:
    content: public TChannel CreateChannelWithIssuedToken (System.IdentityModel.Tokens.SecurityToken issuedToken, System.ServiceModel.EndpointAddress address, Uri via);
    parameters:
    - id: issuedToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: The issued security token.
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The endpoint address that provides the location of the service.
    - id: via
      type: System.Uri
      description: The transport address to which the channel sends messages.
    return:
      type: TChannel
      description: The created channel factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)
  id: CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannelWithOnBehalfOfToken(SecurityToken)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service with an on behalf of security token.
  syntax:
    content: public TChannel CreateChannelWithOnBehalfOfToken (System.IdentityModel.Tokens.SecurityToken onBehalfOf);
    parameters:
    - id: onBehalfOf
      type: System.IdentityModel.Tokens.SecurityToken
      description: The security token.
    return:
      type: TChannel
      description: The created channel factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  id: CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address.
  syntax:
    content: public TChannel CreateChannelWithOnBehalfOfToken (System.IdentityModel.Tokens.SecurityToken onBehalfOf, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: onBehalfOf
      type: System.IdentityModel.Tokens.SecurityToken
      description: The security token.
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The endpoint address that provides the location of the service.
    return:
      type: TChannel
      description: The created channel factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress,Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress,Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a channel that is used to send messages to a service with an on behalf of security token at a specific endpoint address through a specified transport address.
  syntax:
    content: public TChannel CreateChannelWithOnBehalfOfToken (System.IdentityModel.Tokens.SecurityToken onBehalfOf, System.ServiceModel.EndpointAddress address, Uri via);
    parameters:
    - id: onBehalfOf
      type: System.IdentityModel.Tokens.SecurityToken
      description: The security token.
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: The endpoint address that provides the location of the service.
    - id: via
      type: System.Uri
      description: The transport address to which the channel sends messages.
    return:
      type: TChannel
      description: The created channel factory.
  overload: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ChannelFactory`1.CreateDescription
  id: CreateDescription
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  name: CreateDescription()
  nameWithType: ChannelFactory<TChannel>.CreateDescription()
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateDescription()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Creates a description of the service endpoint.
  syntax:
    content: protected override System.ServiceModel.Description.ServiceEndpoint CreateDescription ();
    parameters: []
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: The <xref href="System.ServiceModel.Description.ServiceEndpoint"></xref> of the service.
  overload: System.ServiceModel.ChannelFactory`1.CreateDescription*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The callback contract is `null` but the service endpoint requires one that is non-`null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ServiceModel.ChannelFactory
  isExternal: false
  name: System.ServiceModel.ChannelFactory
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ServiceModel.ChannelFactory`1.#ctor
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: ChannelFactory<TChannel>()
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>()
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>()
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: ChannelFactory<TChannel>(Binding)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding)
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: ChannelFactory<TChannel>(ServiceEndpoint)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(ServiceEndpoint)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(ServiceEndpoint)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.String)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: ChannelFactory<TChannel>(String)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.Type)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: ChannelFactory<TChannel>(Type)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Type)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: ChannelFactory<TChannel>(Binding,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding,EndpointAddress)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: ChannelFactory<TChannel>(Binding,String)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding,String)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(Binding,String)
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: ChannelFactory<TChannel>(String,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>(String,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory<TChannel>(String,EndpointAddress)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannel()
  nameWithType: ChannelFactory<TChannel>.CreateChannel()
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel()
- uid: TChannel
  isExternal: true
  name: TChannel
  nameWithType: TChannel
  fullName: TChannel
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannel(EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(EndpointAddress)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannel(String)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(String)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(String)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannel(Binding,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(Binding,EndpointAddress)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannel(EndpointAddress,Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress,Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(EndpointAddress,Uri)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannel(Binding,EndpointAddress,Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(Binding,EndpointAddress,Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(Binding,EndpointAddress,Uri)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithActAsToken(SecurityToken)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithActAsToken(SecurityToken,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken,EndpointAddress)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithActAsToken(SecurityToken,EndpointAddress,Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken,EndpointAddress,Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithActAsToken(SecurityToken,EndpointAddress,Uri)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithIssuedToken(SecurityToken)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithIssuedToken(SecurityToken,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken,EndpointAddress)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithIssuedToken(SecurityToken,EndpointAddress,Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken,EndpointAddress,Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithIssuedToken(SecurityToken,EndpointAddress,Uri)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithOnBehalfOfToken(SecurityToken)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress,Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress,Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken(SecurityToken,EndpointAddress,Uri)
- uid: System.ServiceModel.ChannelFactory`1.CreateDescription
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateDescription()
  nameWithType: ChannelFactory<TChannel>.CreateDescription()
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateDescription()
- uid: System.ServiceModel.ChannelFactory`1.#ctor*
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: ChannelFactory<TChannel>
  nameWithType: ChannelFactory<TChannel>.ChannelFactory<TChannel>
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel*
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannel
  nameWithType: ChannelFactory<TChannel>.CreateChannel
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithActAsToken*
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithActAsToken
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithActAsToken
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithIssuedToken*
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithIssuedToken
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithIssuedToken
- uid: System.ServiceModel.ChannelFactory`1.CreateChannelWithOnBehalfOfToken*
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateChannelWithOnBehalfOfToken
  nameWithType: ChannelFactory<TChannel>.CreateChannelWithOnBehalfOfToken
- uid: System.ServiceModel.ChannelFactory`1.CreateDescription*
  parent: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: CreateDescription
  nameWithType: ChannelFactory<TChannel>.CreateDescription
