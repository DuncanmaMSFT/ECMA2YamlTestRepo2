### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.XText
  id: XText
  children:
  - System.Xml.Linq.XText.#ctor(System.String)
  - System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)
  - System.Xml.Linq.XText.NodeType
  - System.Xml.Linq.XText.Value
  - System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XText
  nameWithType: XText
  fullName: System.Xml.Linq.XText
  type: Class
  summary: Represents a text node.
  remarks: "XML elements can contain text content. Sometimes the content is simple (the element only contains text content), and sometimes the content is mixed (the contents of the element contains both text and other elements). In either case, each chunk of text is represented as an XText node.  \n  \n [!INCLUDE[sqltecxlinq](~/add/includes/sqltecxlinq-md.md)] developers will often have to write code to work with arbitrary [!INCLUDE[sqltecxlinq](~/add/includes/sqltecxlinq-md.md)] trees that they did not create. If you are writing code that has to work with [!INCLUDE[sqltecxlinq](~/add/includes/sqltecxlinq-md.md)] trees that you have no control over creating, you should be aware of certain behaviors of XText nodes.  \n  \n When processing the contents of an XML tree at the node level, you should be prepared for multiple XText nodes to be adjacent to each other. Further, you should be prepared for XText nodes that contain no text. It is possible through [!INCLUDE[sqltecxlinq](~/add/includes/sqltecxlinq-md.md)] methods to remove the content of a text node. However, [!INCLUDE[sqltecxlinq](~/add/includes/sqltecxlinq-md.md)] does not automatically delete the node. The node has identity, and might have annotations, so [!INCLUDE[sqltecxlinq](~/add/includes/sqltecxlinq-md.md)] allows for zero-length nodes in the tree.  \n  \n For more information, see [Programming with Nodes](../Topic/Programming%20with%20Nodes.md)."
  syntax:
    content: 'public class XText : System.Xml.Linq.XNode'
  inheritance:
  - System.Object
  - System.Xml.Linq.XObject
  - System.Xml.Linq.XNode
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Xml.Linq.XNode.AddAfterSelf(System.Object)
  - System.Xml.Linq.XNode.AddAfterSelf(System.Object[])
  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object)
  - System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])
  - System.Xml.Linq.XNode.Ancestors
  - System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.CreateReader
  - System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)
  - System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.DocumentOrderComparer
  - System.Xml.Linq.XNode.ElementsAfterSelf
  - System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.ElementsBeforeSelf
  - System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)
  - System.Xml.Linq.XNode.EqualityComparer
  - System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)
  - System.Xml.Linq.XNode.NextNode
  - System.Xml.Linq.XNode.NodesAfterSelf
  - System.Xml.Linq.XNode.NodesBeforeSelf
  - System.Xml.Linq.XNode.PreviousNode
  - System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)
  - System.Xml.Linq.XNode.Remove
  - System.Xml.Linq.XNode.ReplaceWith(System.Object)
  - System.Xml.Linq.XNode.ReplaceWith(System.Object[])
  - System.Xml.Linq.XNode.ToString
  - System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XObject.AddAnnotation(System.Object)
  - System.Xml.Linq.XObject.Annotation(System.Type)
  - System.Xml.Linq.XObject.Annotation``1
  - System.Xml.Linq.XObject.Annotations(System.Type)
  - System.Xml.Linq.XObject.Annotations``1
  - System.Xml.Linq.XObject.BaseUri
  - System.Xml.Linq.XObject.Changed
  - System.Xml.Linq.XObject.Changing
  - System.Xml.Linq.XObject.Document
  - System.Xml.Linq.XObject.Parent
  - System.Xml.Linq.XObject.RemoveAnnotations(System.Type)
  - System.Xml.Linq.XObject.RemoveAnnotations``1
  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo
  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber
  - System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Linq\XText.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Linq/XText.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Linq.XText.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.Linq.XText
  langs:
  - csharp
  name: XText(String)
  nameWithType: XText.XText(String)
  fullName: System.Xml.Linq.XText.XText(String)
  type: Constructor
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Initializes a new instance of the <xref href="System.Xml.Linq.XText"></xref> class.
  remarks: You typically do not create text nodes by using the <xref:System.Xml.Linq.XText> constructors. When you pass text content when constructing an <xref:System.Xml.Linq.XElement>, text nodes are automatically created.
  example:
  - "The following example creates an element that contains a text node.  \n  \n```c#  \n  \n                XElement root = new XElement(\"Root\", \"Some text\");  \nConsole.WriteLine(root);  \n```  \n  \n```vb  \n  \n                Dim root As XElement = <Root>Some text</Root>  \nConsole.WriteLine(root)  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n  \n<Root>Some text</Root>  \n```"
  syntax:
    content: public XText (string value);
    parameters:
    - id: value
      type: System.String
      description: The <xref href="System.String"></xref> that contains the value of the <xref href="System.Xml.Linq.XText"></xref> node.
  overload: System.Xml.Linq.XText.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Linq\XText.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Linq/XText.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)
  id: '#ctor(System.Xml.Linq.XText)'
  parent: System.Xml.Linq.XText
  langs:
  - csharp
  name: XText(XText)
  nameWithType: XText.XText(XText)
  fullName: System.Xml.Linq.XText.XText(XText)
  type: Constructor
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Initializes a new instance of the <xref href="System.Xml.Linq.XText"></xref> class from another <xref href="System.Xml.Linq.XText"></xref> object.
  remarks: This constructor is primarily used internally to make a deep copy of an XML tree.
  syntax:
    content: public XText (System.Xml.Linq.XText other);
    parameters:
    - id: other
      type: System.Xml.Linq.XText
      description: The <xref href="System.Xml.Linq.XText"></xref> node to copy from.
  overload: System.Xml.Linq.XText.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Linq\XText.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Linq/XText.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Linq.XText.NodeType
  id: NodeType
  parent: System.Xml.Linq.XText
  langs:
  - csharp
  name: NodeType
  nameWithType: XText.NodeType
  fullName: System.Xml.Linq.XText.NodeType
  type: Property
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Gets the node type for this node.
  remarks: Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>. Your code can then test for the node type of each node in the collection.
  example:
  - "The following example creates an XML tree that contains a number of types of nodes. It then iterates through the tree, outputting the node type of each node.  \n  \n Note that `Child2` contains an <xref:System.Xml.Linq.XText> node, implicitly converted from the string content.  \n  \n```c#  \n  \n                // Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  \nXDocument xmlTree = new XDocument(  \n    new XComment(\"a comment\"),  \n    new XProcessingInstruction(\"xml-stylesheet\", \"type=\\\"text/xsl\\\" href=\\\"hello.xsl\\\"\"),  \n    new XElement(\"Root\",  \n        new XAttribute(\"Att\", \"attContent\"),  \n        new XElement(\"Child1\",  \n            new XCData(\"CDATA content\")  \n        ),  \n        new XElement(\"Child2\", \"Text content\")  \n    )  \n);  \n  \nforeach (XNode node in xmlTree.DescendantNodes())  \n{  \n    Console.WriteLine(node.NodeType);  \n    if (node.NodeType == XmlNodeType.Element)  \n    {  \n        foreach (XAttribute att in ((XElement)node).Attributes())  \n            Console.WriteLine(att.NodeType);  \n    }  \n}  \n```  \n  \n```vb  \n  \n                ' Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  \nDim xmlTree As XDocument = _  \n    <?xml version='1.0'?>  \n    <!-- a comment -->  \n    <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  \n    <Root Att=\"attContent\">  \n        <Child1>  \n            <![CDATA[CDATA content]]>  \n        </Child1>  \n        <Child2>Text content</Child2>  \n    </Root>  \n  \nFor Each node As XNode In xmlTree.DescendantNodes  \n    Console.WriteLine(node.NodeType.ToString())  \n    If node.NodeType = XmlNodeType.Element Then  \n        For Each att In DirectCast(node, XElement).Attributes  \n            Console.WriteLine(att.NodeType.ToString())  \n        Next  \n    End If  \nNext  \n  \n```  \n  \n This example produces the following output:  \n  \n```  \nComment  \nProcessingInstruction  \nElement  \nAttribute  \nElement  \nCDATA  \nElement  \nText  \n```"
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: The node type. For <xref href="System.Xml.Linq.XText"></xref> objects, this value is <xref href="System.Xml.XmlNodeType"></xref>.
  overload: System.Xml.Linq.XText.NodeType*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Linq\XText.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Linq/XText.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Linq.XText.Value
  id: Value
  parent: System.Xml.Linq.XText
  langs:
  - csharp
  name: Value
  nameWithType: XText.Value
  fullName: System.Xml.Linq.XText.Value
  type: Property
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Gets or sets the value of this node.
  remarks: Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.
  example:
  - "The following example shows getting and setting this property.  \n  \n```c#  \n  \n                XElement root = new XElement(\"Root\", \"Some text\");  \nXText txtNode = root.Nodes().OfType<XText>().First();  \nConsole.WriteLine(txtNode.Value);  \ntxtNode.Value = \"New text\";  \nConsole.WriteLine(txtNode.Value);  \n  \nroot.Value = \"Newer text\";  \ntxtNode = root.Nodes().OfType<XText>().First();  \nConsole.WriteLine(txtNode.Value);  \n```  \n  \n```vb  \n  \n                Dim root As XElement = <Root>Some text</Root>  \nDim txtNode As XText = root.Nodes().OfType(Of XText).First()  \nConsole.WriteLine(txtNode.Value)  \ntxtNode.Value = \"New text\"  \nConsole.WriteLine(txtNode.Value)  \n  \nroot.Value = \"Newer text\"  \ntxtNode = root.Nodes().OfType(Of XText).First()  \nConsole.WriteLine(txtNode.Value)  \n```  \n  \n This example produces the following output:  \n  \n```  \nSome text  \nNew text  \nNewer text  \n```"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: A <xref href="System.String"></xref> that contains the value of this node.
  overload: System.Xml.Linq.XText.Value*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Linq\XText.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Linq/XText.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XText
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XText.WriteTo(XmlWriter)
  fullName: System.Xml.Linq.XText.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Writes this node to an <xref href="System.Xml.XmlWriter"></xref>.
  remarks: This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: An <xref href="System.Xml.XmlWriter"></xref> into which this method will write.
  overload: System.Xml.Linq.XText.WriteTo*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Xml.Linq\XText.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Xml.Linq/XText.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Xml.Linq.XNode
  isExternal: false
  name: System.Xml.Linq.XNode
- uid: System.Xml.Linq.XText.#ctor(System.String)
  parent: System.Xml.Linq.XText
  isExternal: false
  name: XText(String)
  nameWithType: XText.XText(String)
  fullName: System.Xml.Linq.XText.XText(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)
  parent: System.Xml.Linq.XText
  isExternal: false
  name: XText(XText)
  nameWithType: XText.XText(XText)
  fullName: System.Xml.Linq.XText.XText(XText)
- uid: System.Xml.Linq.XText
  parent: System.Xml.Linq
  isExternal: false
  name: XText
  nameWithType: XText
  fullName: System.Xml.Linq.XText
- uid: System.Xml.Linq.XText.NodeType
  parent: System.Xml.Linq.XText
  isExternal: false
  name: NodeType
  nameWithType: XText.NodeType
  fullName: System.Xml.Linq.XText.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.Linq.XText.Value
  parent: System.Xml.Linq.XText
  isExternal: false
  name: Value
  nameWithType: XText.Value
  fullName: System.Xml.Linq.XText.Value
- uid: System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XText
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XText.WriteTo(XmlWriter)
  fullName: System.Xml.Linq.XText.WriteTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Linq.XText.#ctor*
  parent: System.Xml.Linq.XText
  isExternal: false
  name: XText
  nameWithType: XText.XText
- uid: System.Xml.Linq.XText.NodeType*
  parent: System.Xml.Linq.XText
  isExternal: false
  name: NodeType
  nameWithType: XText.NodeType
- uid: System.Xml.Linq.XText.Value*
  parent: System.Xml.Linq.XText
  isExternal: false
  name: Value
  nameWithType: XText.Value
- uid: System.Xml.Linq.XText.WriteTo*
  parent: System.Xml.Linq.XText
  isExternal: false
  name: WriteTo
  nameWithType: XText.WriteTo
