### YamlMime:ManagedReference
items:
- uid: System.Threading.Barrier
  id: Barrier
  children:
  - System.Threading.Barrier.#ctor(System.Int32)
  - System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})
  - System.Threading.Barrier.AddParticipant
  - System.Threading.Barrier.AddParticipants(System.Int32)
  - System.Threading.Barrier.CurrentPhaseNumber
  - System.Threading.Barrier.Dispose
  - System.Threading.Barrier.Dispose(System.Boolean)
  - System.Threading.Barrier.ParticipantCount
  - System.Threading.Barrier.ParticipantsRemaining
  - System.Threading.Barrier.RemoveParticipant
  - System.Threading.Barrier.RemoveParticipants(System.Int32)
  - System.Threading.Barrier.SignalAndWait
  - System.Threading.Barrier.SignalAndWait(System.Int32)
  - System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)
  - System.Threading.Barrier.SignalAndWait(System.TimeSpan)
  - System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)
  - System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  langs:
  - csharp
  name: Barrier
  nameWithType: Barrier
  fullName: System.Threading.Barrier
  type: Class
  summary: Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Participant Count={ParticipantCount},Participants Remaining={ParticipantsRemaining}")]

      [System.Runtime.InteropServices.ComVisible(false)]

      public class Barrier : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: Barrier(Int32)
  nameWithType: Barrier.Barrier(Int32)
  fullName: System.Threading.Barrier.Barrier(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.Barrier"></xref> class.
  syntax:
    content: public Barrier (int participantCount);
    parameters:
    - id: participantCount
      type: System.Int32
      description: To be added.
  overload: System.Threading.Barrier.#ctor*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})
  id: '#ctor(System.Int32,System.Action{System.Threading.Barrier})'
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: Barrier(Int32,Action<Barrier>)
  nameWithType: Barrier.Barrier(Int32,Action<Barrier>)
  fullName: System.Threading.Barrier.Barrier(Int32,Action<Barrier>)
  type: Constructor
  assemblies:
  - System
  namespace: System.Threading
  summary: Initializes a new instance of the <xref href="System.Threading.Barrier"></xref> class.
  syntax:
    content: public Barrier (int participantCount, Action<System.Threading.Barrier> postPhaseAction);
    parameters:
    - id: participantCount
      type: System.Int32
      description: To be added.
    - id: postPhaseAction
      type: System.Action{System.Threading.Barrier}
      description: To be added.
  overload: System.Threading.Barrier.#ctor*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.AddParticipant
  id: AddParticipant
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: AddParticipant()
  nameWithType: Barrier.AddParticipant()
  fullName: System.Threading.Barrier.AddParticipant()
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Notifies the <xref href="System.Threading.Barrier"></xref> that there will be an additional participant.
  syntax:
    content: public long AddParticipant ();
    parameters: []
    return:
      type: System.Int64
      description: To be added.
  overload: System.Threading.Barrier.AddParticipant*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.AddParticipants(System.Int32)
  id: AddParticipants(System.Int32)
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: AddParticipants(Int32)
  nameWithType: Barrier.AddParticipants(Int32)
  fullName: System.Threading.Barrier.AddParticipants(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Notifies the <xref href="System.Threading.Barrier"></xref> that there will be additional participants.
  syntax:
    content: public long AddParticipants (int participantCount);
    parameters:
    - id: participantCount
      type: System.Int32
      description: To be added.
    return:
      type: System.Int64
      description: To be added.
  overload: System.Threading.Barrier.AddParticipants*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.CurrentPhaseNumber
  id: CurrentPhaseNumber
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: CurrentPhaseNumber
  nameWithType: Barrier.CurrentPhaseNumber
  fullName: System.Threading.Barrier.CurrentPhaseNumber
  type: Property
  assemblies:
  - System
  namespace: System.Threading
  summary: Gets the number of the barrier's current phase.
  syntax:
    content: public long CurrentPhaseNumber { get; }
    return:
      type: System.Int64
      description: To be added.
  overload: System.Threading.Barrier.CurrentPhaseNumber*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.Dispose
  id: Dispose
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: Dispose()
  nameWithType: Barrier.Dispose()
  fullName: System.Threading.Barrier.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Releases all resources used by the current instance of the <xref href="System.Threading.Barrier"></xref> class.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Threading.Barrier.Dispose*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Barrier.Dispose(Boolean)
  fullName: System.Threading.Barrier.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Releases the unmanaged resources used by the <xref href="System.Threading.Barrier"></xref>, and optionally releases the managed resources.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Barrier.Dispose*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.ParticipantCount
  id: ParticipantCount
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: ParticipantCount
  nameWithType: Barrier.ParticipantCount
  fullName: System.Threading.Barrier.ParticipantCount
  type: Property
  assemblies:
  - System
  namespace: System.Threading
  summary: Gets the total number of participants in the barrier.
  syntax:
    content: public int ParticipantCount { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.Barrier.ParticipantCount*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.ParticipantsRemaining
  id: ParticipantsRemaining
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: ParticipantsRemaining
  nameWithType: Barrier.ParticipantsRemaining
  fullName: System.Threading.Barrier.ParticipantsRemaining
  type: Property
  assemblies:
  - System
  namespace: System.Threading
  summary: Gets the number of participants in the barrier that havenâ€™t yet signaled in the current phase.
  syntax:
    content: public int ParticipantsRemaining { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Threading.Barrier.ParticipantsRemaining*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.RemoveParticipant
  id: RemoveParticipant
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: RemoveParticipant()
  nameWithType: Barrier.RemoveParticipant()
  fullName: System.Threading.Barrier.RemoveParticipant()
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Notifies the <xref href="System.Threading.Barrier"></xref> that there will be one less participant.
  syntax:
    content: public void RemoveParticipant ();
    parameters: []
  overload: System.Threading.Barrier.RemoveParticipant*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.RemoveParticipants(System.Int32)
  id: RemoveParticipants(System.Int32)
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: RemoveParticipants(Int32)
  nameWithType: Barrier.RemoveParticipants(Int32)
  fullName: System.Threading.Barrier.RemoveParticipants(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Notifies the <xref href="System.Threading.Barrier"></xref> that there will be fewer participants.
  syntax:
    content: public void RemoveParticipants (int participantCount);
    parameters:
    - id: participantCount
      type: System.Int32
      description: To be added.
  overload: System.Threading.Barrier.RemoveParticipants*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.SignalAndWait
  id: SignalAndWait
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: SignalAndWait()
  nameWithType: Barrier.SignalAndWait()
  fullName: System.Threading.Barrier.SignalAndWait()
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.
  syntax:
    content: public void SignalAndWait ();
    parameters: []
  overload: System.Threading.Barrier.SignalAndWait*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.SignalAndWait(System.Int32)
  id: SignalAndWait(System.Int32)
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: SignalAndWait(Int32)
  nameWithType: Barrier.SignalAndWait(Int32)
  fullName: System.Threading.Barrier.SignalAndWait(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.
  syntax:
    content: public bool SignalAndWait (int millisecondsTimeout);
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Barrier.SignalAndWait*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)
  id: SignalAndWait(System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: SignalAndWait(CancellationToken)
  nameWithType: Barrier.SignalAndWait(CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(CancellationToken)
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.
  syntax:
    content: public void SignalAndWait (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
  overload: System.Threading.Barrier.SignalAndWait*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan)
  id: SignalAndWait(System.TimeSpan)
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: SignalAndWait(TimeSpan)
  nameWithType: Barrier.SignalAndWait(TimeSpan)
  fullName: System.Threading.Barrier.SignalAndWait(TimeSpan)
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <xref href="System.TimeSpan"></xref> object to measure the time interval.
  syntax:
    content: public bool SignalAndWait (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Barrier.SignalAndWait*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)
  id: SignalAndWait(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: SignalAndWait(Int32,CancellationToken)
  nameWithType: Barrier.SignalAndWait(Int32,CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(Int32,CancellationToken)
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.
  syntax:
    content: public bool SignalAndWait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Barrier.SignalAndWait*
  exceptions: []
  platform:
  - netframework-4.0
- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  id: SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  langs:
  - csharp
  name: SignalAndWait(TimeSpan,CancellationToken)
  nameWithType: Barrier.SignalAndWait(TimeSpan,CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(TimeSpan,CancellationToken)
  type: Method
  assemblies:
  - System
  namespace: System.Threading
  summary: Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <xref href="System.TimeSpan"></xref> object to measure the time interval, while observing a cancellation token.
  syntax:
    content: public bool SignalAndWait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Threading.Barrier.SignalAndWait*
  exceptions: []
  platform:
  - netframework-4.0
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Threading.Barrier.#ctor(System.Int32)
  parent: System.Threading.Barrier
  isExternal: false
  name: Barrier(Int32)
  nameWithType: Barrier.Barrier(Int32)
  fullName: System.Threading.Barrier.Barrier(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})
  parent: System.Threading.Barrier
  isExternal: false
  name: Barrier(Int32,Action<Barrier>)
  nameWithType: Barrier.Barrier(Int32,Action<Barrier>)
  fullName: System.Threading.Barrier.Barrier(Int32,Action<Barrier>)
- uid: System.Action{System.Threading.Barrier}
  parent: System
  isExternal: false
  name: Action<Barrier>
  nameWithType: Action<Barrier>
  fullName: System.Action<System.Threading.Barrier>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Threading.Barrier>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Barrier
    name: Barrier
    nameWithType: Barrier
    fullName: Barrier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.Barrier.AddParticipant
  parent: System.Threading.Barrier
  isExternal: false
  name: AddParticipant()
  nameWithType: Barrier.AddParticipant()
  fullName: System.Threading.Barrier.AddParticipant()
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Threading.Barrier.AddParticipants(System.Int32)
  parent: System.Threading.Barrier
  isExternal: false
  name: AddParticipants(Int32)
  nameWithType: Barrier.AddParticipants(Int32)
  fullName: System.Threading.Barrier.AddParticipants(Int32)
- uid: System.Threading.Barrier.CurrentPhaseNumber
  parent: System.Threading.Barrier
  isExternal: false
  name: CurrentPhaseNumber
  nameWithType: Barrier.CurrentPhaseNumber
  fullName: System.Threading.Barrier.CurrentPhaseNumber
- uid: System.Threading.Barrier.Dispose
  parent: System.Threading.Barrier
  isExternal: false
  name: Dispose()
  nameWithType: Barrier.Dispose()
  fullName: System.Threading.Barrier.Dispose()
- uid: System.Threading.Barrier.Dispose(System.Boolean)
  parent: System.Threading.Barrier
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Barrier.Dispose(Boolean)
  fullName: System.Threading.Barrier.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Barrier.ParticipantCount
  parent: System.Threading.Barrier
  isExternal: false
  name: ParticipantCount
  nameWithType: Barrier.ParticipantCount
  fullName: System.Threading.Barrier.ParticipantCount
- uid: System.Threading.Barrier.ParticipantsRemaining
  parent: System.Threading.Barrier
  isExternal: false
  name: ParticipantsRemaining
  nameWithType: Barrier.ParticipantsRemaining
  fullName: System.Threading.Barrier.ParticipantsRemaining
- uid: System.Threading.Barrier.RemoveParticipant
  parent: System.Threading.Barrier
  isExternal: false
  name: RemoveParticipant()
  nameWithType: Barrier.RemoveParticipant()
  fullName: System.Threading.Barrier.RemoveParticipant()
- uid: System.Threading.Barrier.RemoveParticipants(System.Int32)
  parent: System.Threading.Barrier
  isExternal: false
  name: RemoveParticipants(Int32)
  nameWithType: Barrier.RemoveParticipants(Int32)
  fullName: System.Threading.Barrier.RemoveParticipants(Int32)
- uid: System.Threading.Barrier.SignalAndWait
  parent: System.Threading.Barrier
  isExternal: false
  name: SignalAndWait()
  nameWithType: Barrier.SignalAndWait()
  fullName: System.Threading.Barrier.SignalAndWait()
- uid: System.Threading.Barrier.SignalAndWait(System.Int32)
  parent: System.Threading.Barrier
  isExternal: false
  name: SignalAndWait(Int32)
  nameWithType: Barrier.SignalAndWait(Int32)
  fullName: System.Threading.Barrier.SignalAndWait(Int32)
- uid: System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  isExternal: false
  name: SignalAndWait(CancellationToken)
  nameWithType: Barrier.SignalAndWait(CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan)
  parent: System.Threading.Barrier
  isExternal: false
  name: SignalAndWait(TimeSpan)
  nameWithType: Barrier.SignalAndWait(TimeSpan)
  fullName: System.Threading.Barrier.SignalAndWait(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  isExternal: false
  name: SignalAndWait(Int32,CancellationToken)
  nameWithType: Barrier.SignalAndWait(Int32,CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(Int32,CancellationToken)
- uid: System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.Barrier
  isExternal: false
  name: SignalAndWait(TimeSpan,CancellationToken)
  nameWithType: Barrier.SignalAndWait(TimeSpan,CancellationToken)
  fullName: System.Threading.Barrier.SignalAndWait(TimeSpan,CancellationToken)
- uid: System.Threading.Barrier.#ctor*
  parent: System.Threading.Barrier
  isExternal: false
  name: Barrier
  nameWithType: Barrier.Barrier
- uid: System.Threading.Barrier.AddParticipant*
  parent: System.Threading.Barrier
  isExternal: false
  name: AddParticipant
  nameWithType: Barrier.AddParticipant
- uid: System.Threading.Barrier.AddParticipants*
  parent: System.Threading.Barrier
  isExternal: false
  name: AddParticipants
  nameWithType: Barrier.AddParticipants
- uid: System.Threading.Barrier.CurrentPhaseNumber*
  parent: System.Threading.Barrier
  isExternal: false
  name: CurrentPhaseNumber
  nameWithType: Barrier.CurrentPhaseNumber
- uid: System.Threading.Barrier.Dispose*
  parent: System.Threading.Barrier
  isExternal: false
  name: Dispose
  nameWithType: Barrier.Dispose
- uid: System.Threading.Barrier.ParticipantCount*
  parent: System.Threading.Barrier
  isExternal: false
  name: ParticipantCount
  nameWithType: Barrier.ParticipantCount
- uid: System.Threading.Barrier.ParticipantsRemaining*
  parent: System.Threading.Barrier
  isExternal: false
  name: ParticipantsRemaining
  nameWithType: Barrier.ParticipantsRemaining
- uid: System.Threading.Barrier.RemoveParticipant*
  parent: System.Threading.Barrier
  isExternal: false
  name: RemoveParticipant
  nameWithType: Barrier.RemoveParticipant
- uid: System.Threading.Barrier.RemoveParticipants*
  parent: System.Threading.Barrier
  isExternal: false
  name: RemoveParticipants
  nameWithType: Barrier.RemoveParticipants
- uid: System.Threading.Barrier.SignalAndWait*
  parent: System.Threading.Barrier
  isExternal: false
  name: SignalAndWait
  nameWithType: Barrier.SignalAndWait
