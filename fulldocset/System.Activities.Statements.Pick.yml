### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.Pick
  id: Pick
  children:
  - System.Activities.Statements.Pick.#ctor
  - System.Activities.Statements.Pick.Branches
  - System.Activities.Statements.Pick.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.Statements.Pick.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.Statements.Pick.CanInduceIdle
  - System.Activities.Statements.Pick.Execute(System.Activities.NativeActivityContext)
  langs:
  - csharp
  name: Pick
  nameWithType: Pick
  fullName: System.Activities.Statements.Pick
  type: Class
  summary: Provides event-based control flow modeling.
  remarks: This activity behaves similarly to <xref:System.Activities.Statements.Switch> in that it executes only one of several activities in response to events. The action chosen to be executed is defined by an event, chosen from a set of events.
  example:
  - "The following code sample demonstrates creating a Pick activity. This example is from the [Using the Pick Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_Pick#1](~/add/codesnippet/csharp/pick/program.cs#1)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Branches")]

      public sealed class Pick : System.Activities.NativeActivity
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Implementation
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netframework-4.0
- uid: System.Activities.Statements.Pick.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.Pick
  langs:
  - csharp
  name: Pick()
  nameWithType: Pick.Pick()
  fullName: System.Activities.Statements.Pick.Pick()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Creates a new instance of the <xref href="System.Activities.Statements.Pick"></xref> class.
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.Pick> activity. This example is from the [Using the Pick Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_Pick#1](~/add/codesnippet/csharp/pick/program.cs#1)]"
  syntax:
    content: public Pick ();
    parameters: []
  overload: System.Activities.Statements.Pick.#ctor*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.Activities.Statements.Pick.Branches
  id: Branches
  parent: System.Activities.Statements.Pick
  langs:
  - csharp
  name: Branches
  nameWithType: Pick.Branches
  fullName: System.Activities.Statements.Pick.Branches
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: The collection of <xref href="System.Activities.Statements.PickBranch"></xref> objects that the <xref href="System.Activities.Statements.Pick"></xref> activity potentially executes one of, based on incoming events.
  remarks: ''
  example:
  - "The following code sample demonstrates setting the Branches property of a <xref:System.Activities.Statements.Pick> activity. This example is from the [Using the Pick Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_Pick#1](~/add/codesnippet/csharp/pick/program.cs#1)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Statements.PickBranch> Branches { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Statements.PickBranch}
      description: The branch collection.
  overload: System.Activities.Statements.Pick.Branches*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.Activities.Statements.Pick.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Pick
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: Pick.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.Pick.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: To be added.
  overload: System.Activities.Statements.Pick.CacheMetadata*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.Activities.Statements.Pick.Cancel(System.Activities.NativeActivityContext)
  id: Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Pick
  langs:
  - csharp
  name: Cancel(NativeActivityContext)
  nameWithType: Pick.Cancel(NativeActivityContext)
  fullName: System.Activities.Statements.Pick.Cancel(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Cancel (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: To be added.
  overload: System.Activities.Statements.Pick.Cancel*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.Activities.Statements.Pick.CanInduceIdle
  id: CanInduceIdle
  parent: System.Activities.Statements.Pick
  langs:
  - csharp
  name: CanInduceIdle
  nameWithType: Pick.CanInduceIdle
  fullName: System.Activities.Statements.Pick.CanInduceIdle
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override bool CanInduceIdle { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Activities.Statements.Pick.CanInduceIdle*
  exceptions: []
  version:
  - netframework-4.0
- uid: System.Activities.Statements.Pick.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Pick
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: Pick.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.Pick.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: To be added.
  overload: System.Activities.Statements.Pick.Execute*
  exceptions: []
  version:
  - netframework-4.0
references:
- uid: System.Activities.NativeActivity
  isExternal: false
  name: System.Activities.NativeActivity
- uid: System.Activities.Statements.Pick.#ctor
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: Pick()
  nameWithType: Pick.Pick()
  fullName: System.Activities.Statements.Pick.Pick()
- uid: System.Activities.Statements.Pick.Branches
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: Branches
  nameWithType: Pick.Branches
  fullName: System.Activities.Statements.Pick.Branches
- uid: System.Collections.ObjectModel.Collection{System.Activities.Statements.PickBranch}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: Collection<PickBranch>
  nameWithType: Collection<PickBranch>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Statements.PickBranch>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Statements.PickBranch>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Statements.PickBranch
    name: PickBranch
    nameWithType: PickBranch
    fullName: PickBranch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.Pick.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: Pick.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.Pick.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.Statements.Pick.Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: Cancel(NativeActivityContext)
  nameWithType: Pick.Cancel(NativeActivityContext)
  fullName: System.Activities.Statements.Pick.Cancel(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Statements.Pick.CanInduceIdle
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: CanInduceIdle
  nameWithType: Pick.CanInduceIdle
  fullName: System.Activities.Statements.Pick.CanInduceIdle
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Statements.Pick.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: Pick.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.Pick.Execute(NativeActivityContext)
- uid: System.Activities.Statements.Pick.#ctor*
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: Pick
  nameWithType: Pick.Pick
- uid: System.Activities.Statements.Pick.Branches*
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: Branches
  nameWithType: Pick.Branches
- uid: System.Activities.Statements.Pick.CacheMetadata*
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: CacheMetadata
  nameWithType: Pick.CacheMetadata
- uid: System.Activities.Statements.Pick.Cancel*
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: Cancel
  nameWithType: Pick.Cancel
- uid: System.Activities.Statements.Pick.CanInduceIdle*
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: CanInduceIdle
  nameWithType: Pick.CanInduceIdle
- uid: System.Activities.Statements.Pick.Execute*
  parent: System.Activities.Statements.Pick
  isExternal: false
  name: Execute
  nameWithType: Pick.Execute
