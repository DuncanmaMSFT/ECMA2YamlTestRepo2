### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.IClientChannel
  id: IClientChannel
  children:
  - System.ServiceModel.IClientChannel.AllowInitializationUI
  - System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  - System.ServiceModel.IClientChannel.DidInteractiveInitialization
  - System.ServiceModel.IClientChannel.DisplayInitializationUI
  - System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  - System.ServiceModel.IClientChannel.UnknownMessageReceived
  - System.ServiceModel.IClientChannel.Via
  langs:
  - csharp
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
  type: Interface
  summary: Defines the behavior of outbound request and request/reply channels used by client applications.
  remarks: "The IClientChannel interface defines the operations supported by all channels returned by a call to <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=fullName>. Use the IClientChannel methods and properties to inspect and modify the outbound typed channel. The [ServiceModel Metadata Utility Tool (Svcutil.exe)](../Topic/ServiceModel%20Metadata%20Utility%20Tool%20\\(Svcutil.exe\\).md) exports both a <xref:System.ServiceModel.ClientBase%601> class and a service contract interface by creating a contract interface that inherits from both the target service contract and IClientChannel, enabling you to use the extended contract as both the proxy to the service and to access the client channel.  \n  \n For more information, see [WCF Client Architecture](../Topic/Client%20Architecture.md). For examples of its appearance in generated client code files, see [Understanding Generated Client Code](../Topic/Understanding%20Generated%20Client%20Code.md)."
  syntax:
    content: 'public interface IClientChannel : IDisposable, System.ServiceModel.IContextChannel, System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>'
  implements:
  - System.IDisposable
  - System.ServiceModel.IContextChannel
  - System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\IClientChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/IClientChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.IClientChannel.AllowInitializationUI
  id: AllowInitializationUI
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  name: AllowInitializationUI
  nameWithType: IClientChannel.AllowInitializationUI
  fullName: System.ServiceModel.IClientChannel.AllowInitializationUI
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value indicating whether <xref href="stem.ServiceModel.IClientChannel.DisplayInitializationUI%2A"></xref> attempts to call the <xref href="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer"></xref> objects in the <xref href="stem.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A"></xref> property or throws if that collection is not empty.
  remarks: Set this to `false` if you want to throw an exception rather than display an initialization dialog. This is useful in a middle-tier scenario in which you want to guarantee that no dialog appears even if the application is configured to display one. For details, see [Accessing Services Using a WCF Client](../Topic/Accessing%20Services%20Using%20a%20Client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>.
  syntax:
    content: public bool AllowInitializationUI { get; set; }
    return:
      type: System.Boolean
      description: '`true` if [!INCLUDE[indigo1](~/add/includes/indigo1-md.md)] is permitted to invoke interactive channel initializers; otherwise, `false`.'
  overload: System.ServiceModel.IClientChannel.AllowInitializationUI*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\IClientChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/IClientChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  id: BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  name: BeginDisplayInitializationUI(AsyncCallback,Object)
  nameWithType: IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)
  fullName: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: An asynchronous call to begin using a user interface to obtain credential information.
  remarks: "Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur. This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional.  \n  \n However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> or BeginDisplayInitializationUI and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly. These operations do not time out and allow you to control exactly where in your application this dialog comes up.  \n  \n This method only brings up a dialog if the application is configured to do so. When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.  \n  \n If you call this method explicitly, you must also explicitly open the channel before using it."
  syntax:
    content: public IAsyncResult BeginDisplayInitializationUI (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: The method that is called when this method completes.
    - id: state
      type: System.Object
      description: Information about the state of the channel.
    return:
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> to use to call back when processing has completed.
  overload: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\IClientChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/IClientChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  id: DidInteractiveInitialization
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  name: DidInteractiveInitialization
  nameWithType: IClientChannel.DidInteractiveInitialization
  fullName: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets a value indicating whether a call was done to a user interface to obtain credential information.
  remarks: If operations are called on an <xref:System.ServiceModel.IClientChannel> without calling <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A> and <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, these methods are called automatically. For details, see [Accessing Services Using a WCF Client](../Topic/Accessing%20Services%20Using%20a%20Client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>.
  syntax:
    content: public bool DidInteractiveInitialization { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="stem.ServiceModel.IClientChannel.DisplayInitializationUI%2A"></xref> method was called (or the <xref href="stem.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A"></xref> and <xref href="stem.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A"></xref> methods; otherwise, `false`.'
  overload: System.ServiceModel.IClientChannel.DidInteractiveInitialization*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\IClientChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/IClientChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.IClientChannel.DisplayInitializationUI
  id: DisplayInitializationUI
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  name: DisplayInitializationUI()
  nameWithType: IClientChannel.DisplayInitializationUI()
  fullName: System.ServiceModel.IClientChannel.DisplayInitializationUI()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: A call to a user interface to obtain credential information.
  remarks: "Call this method to cause any interactive channel initialization (for example, CardSpace card selection) to occur. This happens automatically if the channel is used without explicitly calling <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName>, so for many applications this call is optional.  \n  \n However, if the user takes a long time in the selection process, the operation that automatically called this may time out. To prevent this, call DisplayInitializationUI or <xref:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A> and <xref:System.ServiceModel.IClientChannel.EndDisplayInitializationUI%2A> explicitly. These operations do not time out and allow you to control exactly where in your application this dialog comes up.  \n  \n This method only brings up a dialog if the application is configured to do so. When the application is not configured to use CardSpace or another interactive channel initializer, this call returns without any action.  \n  \n If you call this method explicitly, you must also explicitly open the channel before using it.  \n  \n For details, see [Accessing Services Using a WCF Client](../Topic/Accessing%20Services%20Using%20a%20Client.md) and <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=fullName>."
  syntax:
    content: public void DisplayInitializationUI ();
    parameters: []
  overload: System.ServiceModel.IClientChannel.DisplayInitializationUI*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\IClientChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/IClientChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  id: EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Called when the call to <xref href="stem.ServiceModel.IClientChannel.BeginDisplayInitializationUI%2A"></xref> has finished.
  syntax:
    content: public void EndDisplayInitializationUI (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref>.
  overload: System.ServiceModel.IClientChannel.EndDisplayInitializationUI*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\IClientChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/IClientChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.IClientChannel.UnknownMessageReceived
  id: UnknownMessageReceived
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  name: UnknownMessageReceived
  nameWithType: IClientChannel.UnknownMessageReceived
  fullName: System.ServiceModel.IClientChannel.UnknownMessageReceived
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: This is a reserved event.
  syntax:
    content: public event EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs> UnknownMessageReceived;
    return:
      type: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
      description: To be added.
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\IClientChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/IClientChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.IClientChannel.Via
  id: Via
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  name: Via
  nameWithType: IClientChannel.Via
  fullName: System.ServiceModel.IClientChannel.Via
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the URI that contains the transport address to which messages are sent on the client channel.
  remarks: The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a Via is not specified. If the Via is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination. This value can be set from a configuration file using the <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=fullName>.
  syntax:
    content: public Uri Via { get; }
    return:
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the transport address to which messages are sent on the channel.
  overload: System.ServiceModel.IClientChannel.Via*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\IClientChannel.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/IClientChannel.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ServiceModel.IClientChannel.AllowInitializationUI
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: AllowInitializationUI
  nameWithType: IClientChannel.AllowInitializationUI
  fullName: System.ServiceModel.IClientChannel.AllowInitializationUI
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: BeginDisplayInitializationUI(AsyncCallback,Object)
  nameWithType: IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)
  fullName: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: DidInteractiveInitialization
  nameWithType: IClientChannel.DidInteractiveInitialization
  fullName: System.ServiceModel.IClientChannel.DidInteractiveInitialization
- uid: System.ServiceModel.IClientChannel.DisplayInitializationUI
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: DisplayInitializationUI()
  nameWithType: IClientChannel.DisplayInitializationUI()
  fullName: System.ServiceModel.IClientChannel.DisplayInitializationUI()
- uid: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
- uid: System.ServiceModel.IClientChannel.UnknownMessageReceived
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: UnknownMessageReceived
  nameWithType: IClientChannel.UnknownMessageReceived
  fullName: System.ServiceModel.IClientChannel.UnknownMessageReceived
- uid: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<UnknownMessageReceivedEventArgs>
  nameWithType: EventHandler<UnknownMessageReceivedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    nameWithType: UnknownMessageReceivedEventArgs
    fullName: UnknownMessageReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.IClientChannel.Via
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: Via
  nameWithType: IClientChannel.Via
  fullName: System.ServiceModel.IClientChannel.Via
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.IClientChannel.AllowInitializationUI*
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: AllowInitializationUI
  nameWithType: IClientChannel.AllowInitializationUI
- uid: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI*
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: BeginDisplayInitializationUI
  nameWithType: IClientChannel.BeginDisplayInitializationUI
- uid: System.ServiceModel.IClientChannel.DidInteractiveInitialization*
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: DidInteractiveInitialization
  nameWithType: IClientChannel.DidInteractiveInitialization
- uid: System.ServiceModel.IClientChannel.DisplayInitializationUI*
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: DisplayInitializationUI
  nameWithType: IClientChannel.DisplayInitializationUI
- uid: System.ServiceModel.IClientChannel.EndDisplayInitializationUI*
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: EndDisplayInitializationUI
  nameWithType: IClientChannel.EndDisplayInitializationUI
- uid: System.ServiceModel.IClientChannel.Via*
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: Via
  nameWithType: IClientChannel.Via
