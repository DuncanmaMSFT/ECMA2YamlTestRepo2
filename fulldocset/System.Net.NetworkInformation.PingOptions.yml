### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.PingOptions
  id: PingOptions
  children:
  - System.Net.NetworkInformation.PingOptions.#ctor
  - System.Net.NetworkInformation.PingOptions.#ctor(System.Int32,System.Boolean)
  - System.Net.NetworkInformation.PingOptions.DontFragment
  - System.Net.NetworkInformation.PingOptions.Ttl
  langs:
  - csharp
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
  type: Class
  summary: Used to control how <xref href="System.Net.NetworkInformation.Ping"></xref> data packets are transmitted.
  remarks: "The PingOptions class provides the <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> and <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> properties to control how Internet Control Message Protocol (ICMP) echo request packets are transmitted.  \n  \n The <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A> property specifies the Time to Live for packets sent by the <xref:System.Net.NetworkInformation.Ping> class. This value indicates the number of routing nodes that can forward a <xref:System.Net.NetworkInformation.Ping> packet before it is discarded. Setting this option is useful if you want to test the number of forwards, also known as hops, are required to send a packet from a source computer to a destination computer.  \n  \n The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> property controls whether data sent to a remote host can be divided into multiple packets.  This option is useful if you want to test the maximum transmission unit (MTU) of the routers and gateways used to transmit the packet.  \n  \n Instances of the PingOptions class are passed to the <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods, and the <xref:System.Net.NetworkInformation.PingReply> class returns instances of PingOptions via the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property.  \n  \n For a list of initial property values for an instance of PingOptions, see the <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> constructor."
  example:
  - "The following code example uses the <xref:System.Net.NetworkInformation.Ping>, PingOptions and <xref:System.Net.NetworkInformation.PingReply> classes to send an ICMP echo request to the host specified on the command line.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_3_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_3_1.cpp)]"
  syntax:
    content: public class PingOptions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.PingOptions.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.PingOptions
  langs:
  - csharp
  name: PingOptions()
  nameWithType: PingOptions.PingOptions()
  fullName: System.Net.NetworkInformation.PingOptions.PingOptions()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.PingOptions"></xref> class.
  remarks: "The following table shows initial property values for an instance of <xref:System.Net.NetworkInformation.PingOptions>.  \n  \n|Property|Initial Value|  \n|--------------|-------------------|  \n|<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>|128|  \n|<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>|`false`|  \n  \n You can set the properties to new values before calling <xref:System.Net.NetworkInformation.Ping.Send%2A> or <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>."
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cs[NCLPingSync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_1_1.cs)]\n [!code-cpp[NCLPingSync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_1_1.cpp)]"
  syntax:
    content: public PingOptions ();
    parameters: []
  overload: System.Net.NetworkInformation.PingOptions.#ctor*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.PingOptions.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.Net.NetworkInformation.PingOptions
  langs:
  - csharp
  name: PingOptions(Int32,Boolean)
  nameWithType: PingOptions.PingOptions(Int32,Boolean)
  fullName: System.Net.NetworkInformation.PingOptions.PingOptions(Int32,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Initializes a new instance of the <xref href="System.Net.NetworkInformation.PingOptions"></xref> class and sets the Time to Live and fragmentation values.
  remarks: The `ttl` parameter limits the number of routers and gateways that can forward the data. This is useful for testing the length of the route between the local and remote computers. The `dontFragment` parameter allows you to test the maximum transmission unit (MTU) of the routers and gateways used to transmit the packet.
  example:
  - "The following code example demonstrates calling this constructor and displaying the new instance's property values.  \n  \n [!code-cpp[NCLPingAsync#3](~/add/codesnippet/cpp/8c34d411-a08b-4063-8a72-_1.cpp)]\n [!code-cs[NCLPingAsync#3](~/add/codesnippet/csharp/8c34d411-a08b-4063-8a72-_1.cs)]"
  syntax:
    content: public PingOptions (int ttl, bool dontFragment);
    parameters:
    - id: ttl
      type: System.Int32
      description: An <xref href="System.Int32"></xref> value greater than zero that specifies the number of times that the <xref href="System.Net.NetworkInformation.Ping"></xref> data packets can be forwarded.
    - id: dontFragment
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> to prevent data sent to the remote host from being fragmented; otherwise, <xref uid="langword_csharp_false" name="false" href=""></xref>.
  overload: System.Net.NetworkInformation.PingOptions.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>ttl </code>is less than or equal to zero.
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.PingOptions.DontFragment
  id: DontFragment
  parent: System.Net.NetworkInformation.PingOptions
  langs:
  - csharp
  name: DontFragment
  nameWithType: PingOptions.DontFragment
  fullName: System.Net.NetworkInformation.PingOptions.DontFragment
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets or sets a <xref href="System.Boolean"></xref> value that controls fragmentation of the data sent to the remote host.
  remarks: Applications use this property to control whether data sent to a remote host by the <xref:System.Net.NetworkInformation.Ping> class can be divided into multiple packets.  This option is useful if you want to test the maximum transmission unit (MTU) of the routers and gateways used to transmit the packet. If this property is `true` and the data sent to the remote host is larger then the MTU of a gateway or router between the sender and the remote host, the ping operation fails with status <xref:System.Net.NetworkInformation.IPStatus>.
  example:
  - "The following code example demonstrates setting the value of this property using a <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> constructor, and then displaying the value.  \n  \n [!code-cpp[NCLPingAsync#3](~/add/codesnippet/cpp/p-system.net.networkinfo_5_1.cpp)]\n [!code-cs[NCLPingAsync#3](~/add/codesnippet/csharp/p-system.net.networkinfo_5_1.cs)]"
  syntax:
    content: public bool DontFragment { get; set; }
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the data cannot be sent in multiple packets; otherwise <xref uid="langword_csharp_false" name="false" href=""></xref>. The default is <xref uid="langword_csharp_false" name="false" href=""></xref>.
  overload: System.Net.NetworkInformation.PingOptions.DontFragment*
  exceptions: []
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Net.NetworkInformation.PingOptions.Ttl
  id: Ttl
  parent: System.Net.NetworkInformation.PingOptions
  langs:
  - csharp
  name: Ttl
  nameWithType: PingOptions.Ttl
  fullName: System.Net.NetworkInformation.PingOptions.Ttl
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: Gets or sets the number of routing nodes that can forward the <xref href="System.Net.NetworkInformation.Ping"></xref> data before it is discarded.
  remarks: As gateways and routers transmit packets through a network, they decrement the current Time-to-Live (TTL) value found in the packet header. If the TTL value reaches zero, the packet is deemed undeliverable and is discarded. This option is useful if you want to test the number of routers and gateways used to transmit the data.
  example:
  - "The following code example demonstrates setting the value of this property using a <xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A> constructor, and then displaying the value.  \n  \n [!code-cpp[NCLPingAsync#3](~/add/codesnippet/cpp/p-system.net.networkinfo_0_1.cpp)]\n [!code-cs[NCLPingAsync#3](~/add/codesnippet/csharp/p-system.net.networkinfo_0_1.cs)]"
  syntax:
    content: public int Ttl { get; set; }
    return:
      type: System.Int32
      description: An <xref href="System.Int32"></xref> value that specifies the number of times the <xref href="System.Net.NetworkInformation.Ping"></xref> data packets can be forwarded. The default is 128.
  overload: System.Net.NetworkInformation.PingOptions.Ttl*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value specified for a set operation is less than or equal to zero.
  platform:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Net.NetworkInformation.PingOptions.#ctor
  parent: System.Net.NetworkInformation.PingOptions
  isExternal: false
  name: PingOptions()
  nameWithType: PingOptions.PingOptions()
  fullName: System.Net.NetworkInformation.PingOptions.PingOptions()
- uid: System.Net.NetworkInformation.PingOptions.#ctor(System.Int32,System.Boolean)
  parent: System.Net.NetworkInformation.PingOptions
  isExternal: false
  name: PingOptions(Int32,Boolean)
  nameWithType: PingOptions.PingOptions(Int32,Boolean)
  fullName: System.Net.NetworkInformation.PingOptions.PingOptions(Int32,Boolean)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.PingOptions.DontFragment
  parent: System.Net.NetworkInformation.PingOptions
  isExternal: false
  name: DontFragment
  nameWithType: PingOptions.DontFragment
  fullName: System.Net.NetworkInformation.PingOptions.DontFragment
- uid: System.Net.NetworkInformation.PingOptions.Ttl
  parent: System.Net.NetworkInformation.PingOptions
  isExternal: false
  name: Ttl
  nameWithType: PingOptions.Ttl
  fullName: System.Net.NetworkInformation.PingOptions.Ttl
- uid: System.Net.NetworkInformation.PingOptions.#ctor*
  parent: System.Net.NetworkInformation.PingOptions
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions.PingOptions
- uid: System.Net.NetworkInformation.PingOptions.DontFragment*
  parent: System.Net.NetworkInformation.PingOptions
  isExternal: false
  name: DontFragment
  nameWithType: PingOptions.DontFragment
- uid: System.Net.NetworkInformation.PingOptions.Ttl*
  parent: System.Net.NetworkInformation.PingOptions
  isExternal: false
  name: Ttl
  nameWithType: PingOptions.Ttl
