### YamlMime:ManagedReference
items:
- uid: System.MissingFieldException
  id: MissingFieldException
  children:
  - System.MissingFieldException.#ctor
  - System.MissingFieldException.#ctor(System.String)
  - System.MissingFieldException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.MissingFieldException.#ctor(System.String,System.Exception)
  - System.MissingFieldException.#ctor(System.String,System.String)
  - System.MissingFieldException.Message
  langs:
  - csharp
  name: MissingFieldException
  nameWithType: MissingFieldException
  fullName: System.MissingFieldException
  type: Class
  summary: The exception that is thrown when there is an attempt to dynamically access a field that does not exist. If a field in a class library has been removed or renamed, recompile any assemblies that reference that library.
  remarks: "Normally a compilation error is generated if code attempts to access a nonexistent member of a class. MissingFieldException is designed to handle cases where an attempt is made to dynamically access a renamed or deleted field of an assembly that is not referenced by its strong name. The MissingFieldException is thrown when code in a dependent assembly attempts to access a missing field in an assembly that was modified.  \n  \n MissingFieldException uses the HRESULT COR_E_MISSINGFIELD, that has the value 0x80131511.  \n  \n For a list of initial property values for an instance of MissingFieldException, see the <xref:System.MissingFieldException.%23ctor%2A> constructors."
  example:
  - "This example shows what happens if you attempt to use reflection to call a method that does not exist and access a field that does not exist. The application recovers by catching the <xref:System.MissingMethodException>, MissingFieldException, and <xref:System.MissingMemberException>.  \n  \n [!code-vb[MissingMethodException#1](~/add/codesnippet/visualbasic/t-system.missingfieldexc_1.vb)]\n [!code-cpp[MissingMethodException#1](~/add/codesnippet/cpp/t-system.missingfieldexc_1.cpp)]\n [!code-cs[MissingMethodException#1](~/add/codesnippet/csharp/t-system.missingfieldexc_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class MissingFieldException : MissingMemberException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.MemberAccessException
  - System.MissingMemberException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.MissingMemberException.ClassName
  - System.MissingMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.MissingMemberException.MemberName
  - System.MissingMemberException.Signature
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\MissingFieldException.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/MissingFieldException.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.MissingFieldException.#ctor
  id: '#ctor'
  parent: System.MissingFieldException
  langs:
  - csharp
  name: MissingFieldException()
  nameWithType: MissingFieldException.MissingFieldException()
  fullName: System.MissingFieldException.MissingFieldException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.MissingFieldException"></xref> class.
  remarks: "This constructor initializes <xref:System.MissingFieldException.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Attempted to access a non-existing field.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.MissingFieldException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.MissingFieldException.Message%2A>|The localized error message string.|"
  syntax:
    content: public MissingFieldException ();
    parameters: []
  overload: System.MissingFieldException.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\MissingFieldException.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/MissingFieldException.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.MissingFieldException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.MissingFieldException
  langs:
  - csharp
  name: MissingFieldException(String)
  nameWithType: MissingFieldException.MissingFieldException(String)
  fullName: System.MissingFieldException.MissingFieldException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.MissingFieldException"></xref> class with a specified error message.
  remarks: "The content of `message` should be understandable to the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.MissingFieldException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.MissingFieldException.Message%2A>|The error message string.|"
  syntax:
    content: public MissingFieldException (string message);
    parameters:
    - id: message
      type: System.String
      description: A <xref href="System.String"></xref> that describes the error.
  overload: System.MissingFieldException.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\MissingFieldException.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/MissingFieldException.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.MissingFieldException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.MissingFieldException
  langs:
  - csharp
  name: MissingFieldException(SerializationInfo,StreamingContext)
  nameWithType: MissingFieldException.MissingFieldException(SerializationInfo,StreamingContext)
  fullName: System.MissingFieldException.MissingFieldException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.MissingFieldException"></xref> class with serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](../Topic/XML%20and%20SOAP%20Serialization.md).
  syntax:
    content: protected MissingFieldException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  overload: System.MissingFieldException.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\MissingFieldException.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/MissingFieldException.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.MissingFieldException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.MissingFieldException
  langs:
  - csharp
  name: MissingFieldException(String,Exception)
  nameWithType: MissingFieldException.MissingFieldException(String,Exception)
  fullName: System.MissingFieldException.MissingFieldException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.MissingFieldException"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.MissingFieldException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.MissingFieldException.Message%2A>|The error message string.|"
  syntax:
    content: public MissingFieldException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.MissingFieldException.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\MissingFieldException.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/MissingFieldException.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.MissingFieldException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.MissingFieldException
  langs:
  - csharp
  name: MissingFieldException(String,String)
  nameWithType: MissingFieldException.MissingFieldException(String,String)
  fullName: System.MissingFieldException.MissingFieldException(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <xref href="System.MissingFieldException"></xref> class with the specified class name and field name.
  syntax:
    content: public MissingFieldException (string className, string fieldName);
    parameters:
    - id: className
      type: System.String
      description: The name of the class in which access to a nonexistent field was attempted.
    - id: fieldName
      type: System.String
      description: The name of the field that cannot be accessed.
  overload: System.MissingFieldException.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\MissingFieldException.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/MissingFieldException.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.MissingFieldException.Message
  id: Message
  parent: System.MissingFieldException
  langs:
  - csharp
  name: Message
  nameWithType: MissingFieldException.Message
  fullName: System.MissingFieldException.Message
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the text string showing the signature of the missing field, the class name, and the field name. This property is read-only.
  remarks: If the class name is not specified when the object is constructed, the default text string inherited from the base class is returned. This property overrides <xref:System.MissingMemberException.Message%2A>. The error message should be localized.
  example:
  - "The following example demonstrates the Message property. This code example is part of a larger example provided for the <xref:System.MissingFieldException> class.  \n  \n [!code-vb[MissingMethodException#3](~/add/codesnippet/visualbasic/p-system.missingfieldexc_1.vb)]\n [!code-cpp[MissingMethodException#3](~/add/codesnippet/cpp/p-system.missingfieldexc_1.cpp)]\n [!code-cs[MissingMethodException#3](~/add/codesnippet/csharp/p-system.missingfieldexc_1.cs)]"
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: The error message string.
  overload: System.MissingFieldException.Message*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System\MissingFieldException.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System/MissingFieldException.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.MissingMemberException
  isExternal: false
  name: System.MissingMemberException
- uid: System.MissingFieldException.#ctor
  parent: System.MissingFieldException
  isExternal: false
  name: MissingFieldException()
  nameWithType: MissingFieldException.MissingFieldException()
  fullName: System.MissingFieldException.MissingFieldException()
- uid: System.MissingFieldException.#ctor(System.String)
  parent: System.MissingFieldException
  isExternal: false
  name: MissingFieldException(String)
  nameWithType: MissingFieldException.MissingFieldException(String)
  fullName: System.MissingFieldException.MissingFieldException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.MissingFieldException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.MissingFieldException
  isExternal: false
  name: MissingFieldException(SerializationInfo,StreamingContext)
  nameWithType: MissingFieldException.MissingFieldException(SerializationInfo,StreamingContext)
  fullName: System.MissingFieldException.MissingFieldException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.MissingFieldException.#ctor(System.String,System.Exception)
  parent: System.MissingFieldException
  isExternal: false
  name: MissingFieldException(String,Exception)
  nameWithType: MissingFieldException.MissingFieldException(String,Exception)
  fullName: System.MissingFieldException.MissingFieldException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.MissingFieldException.#ctor(System.String,System.String)
  parent: System.MissingFieldException
  isExternal: false
  name: MissingFieldException(String,String)
  nameWithType: MissingFieldException.MissingFieldException(String,String)
  fullName: System.MissingFieldException.MissingFieldException(String,String)
- uid: System.MissingFieldException.Message
  parent: System.MissingFieldException
  isExternal: false
  name: Message
  nameWithType: MissingFieldException.Message
  fullName: System.MissingFieldException.Message
- uid: System.MissingFieldException.#ctor*
  parent: System.MissingFieldException
  isExternal: false
  name: MissingFieldException
  nameWithType: MissingFieldException.MissingFieldException
- uid: System.MissingFieldException.Message*
  parent: System.MissingFieldException
  isExternal: false
  name: Message
  nameWithType: MissingFieldException.Message
