### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessageContractAttribute
  id: MessageContractAttribute
  children:
  - System.ServiceModel.MessageContractAttribute.#ctor
  - System.ServiceModel.MessageContractAttribute.HasProtectionLevel
  - System.ServiceModel.MessageContractAttribute.IsWrapped
  - System.ServiceModel.MessageContractAttribute.ProtectionLevel
  - System.ServiceModel.MessageContractAttribute.WrapperName
  - System.ServiceModel.MessageContractAttribute.WrapperNamespace
  langs:
  - csharp
  name: MessageContractAttribute
  nameWithType: MessageContractAttribute
  fullName: System.ServiceModel.MessageContractAttribute
  type: Class
  summary: Defines a strongly-typed class that corresponds to a SOAP message.
  remarks: "Use the MessageContractAttribute attribute to specify the structure of the SOAP envelope for a particular message. Your service can then use the message as a parameter or return type in service operations. For information about controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [Specifying Data Transfer in Service Contracts](../Topic/Specifying%20Data%20Transfer%20in%20Service%20Contracts.md), and [Using Data Contracts](../Topic/Using%20Data%20Contracts.md).  \n  \n> [!NOTE]\n>  You cannot use custom message types in your service operation with regular serializable parameters. Either use custom message types or serializable parameters that are not <xref:System.ServiceModel.Channels.Message> objects. For details, see , [Specifying Data Transfer in Service Contracts](../Topic/Specifying%20Data%20Transfer%20in%20Service%20Contracts.md).  \n  \n To implement a message contract for a type, annotate it with MessageContractAttribute and annotate one or more of the class's fields or properties with <xref:System.ServiceModel.MessageBodyMemberAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, or <xref:System.ServiceModel.MessageHeaderArrayAttribute>.  \n  \n> [!NOTE]\n>  <xref:System.ServiceModel.MessageParameterAttribute?displayProperty=fullName> is not a message contract attribute and cannot be used in conjunction with MessageContractAttribute.  \n  \n Use the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> and <xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A> properties to specify the value of the `<Action>` element in the SOAP message.  \n  \n-   Use the <xref:System.ServiceModel.MessageContractAttribute.HasProtectionLevel%2A> and <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A> properties to indicate whether the SOAP message type has a protection level, and if so, what it is.  \n  \n-   Use the <xref:System.ServiceModel.MessageContractAttribute.IsWrapped%2A> property to indicate whether the message body has a wrapper element, and if so, use the <xref:System.ServiceModel.MessageContractAttribute.WrapperName%2A> and <xref:System.ServiceModel.MessageContractAttribute.WrapperNamespace%2A> properties to specify the name and namespace, respectively, of the wrapping element.  \n  \n For more information, see [Using Message Contracts](../Topic/Using%20Message%20Contracts.md)."
  example:
  - "The following code example shows the use of the MessageContractAttribute to control the SOAP envelope structure for both the request message and the response message, and the use of both the <xref:System.ServiceModel.MessageHeaderAttribute> (to create a SOAP header for the response message) and the <xref:System.ServiceModel.MessageBodyMemberAttribute> (to specify the bodies of both the request and response message). The code example contains an example of each message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#1](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#1)]\n [!code-cs[MessageHeaderAttribute#1](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false)]

      public sealed class MessageContractAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\MessageContractAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/MessageContractAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.MessageContractAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageContractAttribute
  langs:
  - csharp
  name: MessageContractAttribute()
  nameWithType: MessageContractAttribute.MessageContractAttribute()
  fullName: System.ServiceModel.MessageContractAttribute.MessageContractAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.MessageContractAttribute"></xref> class.
  syntax:
    content: public MessageContractAttribute ();
    parameters: []
  overload: System.ServiceModel.MessageContractAttribute.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\MessageContractAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/MessageContractAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.MessageContractAttribute.HasProtectionLevel
  id: HasProtectionLevel
  parent: System.ServiceModel.MessageContractAttribute
  langs:
  - csharp
  name: HasProtectionLevel
  nameWithType: MessageContractAttribute.HasProtectionLevel
  fullName: System.ServiceModel.MessageContractAttribute.HasProtectionLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets a value that indicates whether the message has a protection level.
  remarks: If this setting is `true`, the protection level for the message is the value of <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A>. For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](../Topic/Understanding%20Protection%20Level.md).
  syntax:
    content: public bool HasProtectionLevel { get; }
    return:
      type: System.Boolean
      description: '`true` if the message must be encrypted, signed, or both; otherwise `false`. The default is `false`.'
  overload: System.ServiceModel.MessageContractAttribute.HasProtectionLevel*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\MessageContractAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/MessageContractAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.MessageContractAttribute.IsWrapped
  id: IsWrapped
  parent: System.ServiceModel.MessageContractAttribute
  langs:
  - csharp
  name: IsWrapped
  nameWithType: MessageContractAttribute.IsWrapped
  fullName: System.ServiceModel.MessageContractAttribute.IsWrapped
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that specifies whether the message body has a wrapper element.
  remarks: Set the value of IsWrapped to `false` to suppress the wrapper element into which the message body is serialized.
  syntax:
    content: public bool IsWrapped { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the message body has a wrapper element; otherwise, `false`. The default is `true`.'
  overload: System.ServiceModel.MessageContractAttribute.IsWrapped*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\MessageContractAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/MessageContractAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.MessageContractAttribute.ProtectionLevel
  id: ProtectionLevel
  parent: System.ServiceModel.MessageContractAttribute
  langs:
  - csharp
  name: ProtectionLevel
  nameWithType: MessageContractAttribute.ProtectionLevel
  fullName: System.ServiceModel.MessageContractAttribute.ProtectionLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that specified whether the message must be encrypted, signed, or both.
  remarks: For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](../Topic/Understanding%20Protection%20Level.md).
  syntax:
    content: public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }
    return:
      type: System.Net.Security.ProtectionLevel
      description: One of the <xref href="System.Net.Security.ProtectionLevel"></xref> values. The default is <xref href="System.Net.Security.ProtectionLevel"></xref>.
  overload: System.ServiceModel.MessageContractAttribute.ProtectionLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value passed to the property when the setting is not one of the <xref href="System.Net.Security.ProtectionLevel"></xref> values.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\MessageContractAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/MessageContractAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.MessageContractAttribute.WrapperName
  id: WrapperName
  parent: System.ServiceModel.MessageContractAttribute
  langs:
  - csharp
  name: WrapperName
  nameWithType: MessageContractAttribute.WrapperName
  fullName: System.ServiceModel.MessageContractAttribute.WrapperName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the name of the wrapper element of the message body.
  remarks: Use the WrapperName property to set the name of the wrapper element.
  syntax:
    content: public string WrapperName { get; set; }
    return:
      type: System.String
      description: The name of the wrapper element in the message body.
  overload: System.ServiceModel.MessageContractAttribute.WrapperName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value is an empty string.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\MessageContractAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/MessageContractAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.MessageContractAttribute.WrapperNamespace
  id: WrapperNamespace
  parent: System.ServiceModel.MessageContractAttribute
  langs:
  - csharp
  name: WrapperNamespace
  nameWithType: MessageContractAttribute.WrapperNamespace
  fullName: System.ServiceModel.MessageContractAttribute.WrapperNamespace
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the namespace of the message body wrapper element.
  remarks: Use the WrapperNamespace property to set the namespace of the wrapper element.
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.MessageContractAttribute> to control the SOAP envelope structure for both the request message and the response message, and the use of both the <xref:System.ServiceModel.MessageHeaderAttribute> (to create a SOAP header for the response message) and the <xref:System.ServiceModel.MessageBodyMemberAttribute> (to specify the bodies of both the request and response message). The code example contains an example of each message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#1](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#1)]\n [!code-cs[MessageHeaderAttribute#1](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#1)]"
  syntax:
    content: public string WrapperNamespace { get; set; }
    return:
      type: System.String
      description: The wrapper element namespace.
  overload: System.ServiceModel.MessageContractAttribute.WrapperNamespace*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\MessageContractAttribute.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/MessageContractAttribute.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ServiceModel.MessageContractAttribute.#ctor
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: MessageContractAttribute()
  nameWithType: MessageContractAttribute.MessageContractAttribute()
  fullName: System.ServiceModel.MessageContractAttribute.MessageContractAttribute()
- uid: System.ServiceModel.MessageContractAttribute.HasProtectionLevel
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: HasProtectionLevel
  nameWithType: MessageContractAttribute.HasProtectionLevel
  fullName: System.ServiceModel.MessageContractAttribute.HasProtectionLevel
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.MessageContractAttribute.IsWrapped
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: IsWrapped
  nameWithType: MessageContractAttribute.IsWrapped
  fullName: System.ServiceModel.MessageContractAttribute.IsWrapped
- uid: System.ServiceModel.MessageContractAttribute.ProtectionLevel
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: ProtectionLevel
  nameWithType: MessageContractAttribute.ProtectionLevel
  fullName: System.ServiceModel.MessageContractAttribute.ProtectionLevel
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.ServiceModel.MessageContractAttribute.WrapperName
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: WrapperName
  nameWithType: MessageContractAttribute.WrapperName
  fullName: System.ServiceModel.MessageContractAttribute.WrapperName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.MessageContractAttribute.WrapperNamespace
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: WrapperNamespace
  nameWithType: MessageContractAttribute.WrapperNamespace
  fullName: System.ServiceModel.MessageContractAttribute.WrapperNamespace
- uid: System.ServiceModel.MessageContractAttribute.#ctor*
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: MessageContractAttribute
  nameWithType: MessageContractAttribute.MessageContractAttribute
- uid: System.ServiceModel.MessageContractAttribute.HasProtectionLevel*
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: HasProtectionLevel
  nameWithType: MessageContractAttribute.HasProtectionLevel
- uid: System.ServiceModel.MessageContractAttribute.IsWrapped*
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: IsWrapped
  nameWithType: MessageContractAttribute.IsWrapped
- uid: System.ServiceModel.MessageContractAttribute.ProtectionLevel*
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: ProtectionLevel
  nameWithType: MessageContractAttribute.ProtectionLevel
- uid: System.ServiceModel.MessageContractAttribute.WrapperName*
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: WrapperName
  nameWithType: MessageContractAttribute.WrapperName
- uid: System.ServiceModel.MessageContractAttribute.WrapperNamespace*
  parent: System.ServiceModel.MessageContractAttribute
  isExternal: false
  name: WrapperNamespace
  nameWithType: MessageContractAttribute.WrapperNamespace
