### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.DbFilterExpression
  id: DbFilterExpression
  children:
  - System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  - System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  - System.Data.Common.CommandTrees.DbFilterExpression.Input
  - System.Data.Common.CommandTrees.DbFilterExpression.Predicate
  langs:
  - csharp
  name: DbFilterExpression
  nameWithType: DbFilterExpression
  fullName: System.Data.Common.CommandTrees.DbFilterExpression
  type: Class
  summary: Represents a predicate applied to filter an input set. This produces the set of elements that satisfy the predicate. This class cannot be inherited.
  syntax:
    content: 'public sealed class DbFilterExpression : System.Data.Common.CommandTrees.DbExpression'
  inheritance:
  - System.Object
  - System.Data.Common.CommandTrees.DbExpression
  implements: []
  inheritedMembers:
  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)
  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind
  - System.Data.Common.CommandTrees.DbExpression.GetHashCode
  - System.Data.Common.CommandTrees.DbExpression.ResultType
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-35
  - netframework-40
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  langs:
  - csharp
  name: Accept(DbExpressionVisitor)
  nameWithType: DbFilterExpression.Accept(DbExpressionVisitor)
  fullName: System.Data.Common.CommandTrees.DbFilterExpression.Accept(DbExpressionVisitor)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: Implements the visitor pattern for expressions that do not produce a result value.
  syntax:
    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Data.Common.CommandTrees.DbExpressionVisitor
      description: An instance of <xref href="System.Data.Common.CommandTrees.DbExpressionVisitor"></xref>.
  overload: System.Data.Common.CommandTrees.DbFilterExpression.Accept*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>visitor</code> is `null`.
  version:
  - netframework-35
  - netframework-40
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  langs:
  - csharp
  name: Accept(DbExpressionVisitor<TResultType>)
  nameWithType: DbFilterExpression.Accept(DbExpressionVisitor<TResultType>)
  fullName: System.Data.Common.CommandTrees.DbFilterExpression.Accept(DbExpressionVisitor<TResultType>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  syntax:
    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);
    parameters:
    - id: visitor
      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1
      description: To be added.
    return:
      type: TResultType
      description: To be added.
  overload: System.Data.Common.CommandTrees.DbFilterExpression.Accept<TResultType>*
  exceptions: []
  version:
  - netframework-35
  - netframework-40
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Input
  id: Input
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  langs:
  - csharp
  name: Input
  nameWithType: DbFilterExpression.Input
  fullName: System.Data.Common.CommandTrees.DbFilterExpression.Input
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: Gets the <xref href="System.Data.Common.CommandTrees.DbExpressionBinding"></xref> that specifies the input set.
  syntax:
    content: public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: The <xref href="System.Data.Common.CommandTrees.DbExpressionBinding"></xref> that specifies the input set.
  overload: System.Data.Common.CommandTrees.DbFilterExpression.Input*
  exceptions: []
  version:
  - netframework-35
  - netframework-40
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Predicate
  id: Predicate
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  langs:
  - csharp
  name: Predicate
  nameWithType: DbFilterExpression.Predicate
  fullName: System.Data.Common.CommandTrees.DbFilterExpression.Predicate
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: Gets or sets the <xref href="System.Data.Common.CommandTrees.DbExpression"></xref> that specifies the predicate used to filter the input set.
  syntax:
    content: public System.Data.Common.CommandTrees.DbExpression Predicate { get; }
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: The <xref href="System.Data.Common.CommandTrees.DbExpression"></xref> that specifies the predicate used to filter the input set.
  overload: System.Data.Common.CommandTrees.DbFilterExpression.Predicate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The expression is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The expression is not associated with the command tree of the <xref href="System.Data.Common.CommandTrees.DbFilterExpression"></xref>, or its result type is not a `Boolean` type.
  version:
  - netframework-35
  - netframework-40
references:
- uid: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: System.Data.Common.CommandTrees.DbExpression
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  isExternal: false
  name: Accept(DbExpressionVisitor)
  nameWithType: DbFilterExpression.Accept(DbExpressionVisitor)
  fullName: System.Data.Common.CommandTrees.DbFilterExpression.Accept(DbExpressionVisitor)
- uid: System.Data.Common.CommandTrees.DbExpressionVisitor
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionVisitor
  nameWithType: DbExpressionVisitor
  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  isExternal: false
  name: Accept(DbExpressionVisitor<TResultType>)
  nameWithType: DbFilterExpression.Accept(DbExpressionVisitor<TResultType>)
  fullName: System.Data.Common.CommandTrees.DbFilterExpression.Accept(DbExpressionVisitor<TResultType>)
- uid: TResultType
  isExternal: true
  name: TResultType
  nameWithType: TResultType
  fullName: TResultType
- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionVisitor<TResultType>
  nameWithType: DbExpressionVisitor<TResultType>
  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Input
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  isExternal: false
  name: Input
  nameWithType: DbFilterExpression.Input
  fullName: System.Data.Common.CommandTrees.DbFilterExpression.Input
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Predicate
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  isExternal: false
  name: Predicate
  nameWithType: DbFilterExpression.Predicate
  fullName: System.Data.Common.CommandTrees.DbFilterExpression.Predicate
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Accept*
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  isExternal: false
  name: Accept
  nameWithType: DbFilterExpression.Accept
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Accept<TResultType>*
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  isExternal: false
  name: Accept<TResultType>
  nameWithType: DbFilterExpression.Accept<TResultType>
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Input*
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  isExternal: false
  name: Input
  nameWithType: DbFilterExpression.Input
- uid: System.Data.Common.CommandTrees.DbFilterExpression.Predicate*
  parent: System.Data.Common.CommandTrees.DbFilterExpression
  isExternal: false
  name: Predicate
  nameWithType: DbFilterExpression.Predicate
