### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.DbExpression
  id: DbExpression
  children:
  - System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  - System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})
  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)
  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind
  - System.Data.Common.CommandTrees.DbExpression.GetHashCode
  - System.Data.Common.CommandTrees.DbExpression.ResultType
  langs:
  - csharp
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
  type: Class
  summary: Represents the base type for all expressions.
  remarks: No content here will be updated; please do not add material here.
  syntax:
    content: public abstract class DbExpression
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-35
  - netframework-40
- uid: System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  parent: System.Data.Common.CommandTrees.DbExpression
  langs:
  - csharp
  name: Accept(DbExpressionVisitor)
  nameWithType: DbExpression.Accept(DbExpressionVisitor)
  fullName: System.Data.Common.CommandTrees.DbExpression.Accept(DbExpressionVisitor)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: Implements the visitor pattern for expressions that do not produce a result value.
  syntax:
    content: public abstract void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Data.Common.CommandTrees.DbExpressionVisitor
      description: An instance of <xref href="System.Data.Common.CommandTrees.DbExpressionVisitor"></xref>.
  overload: System.Data.Common.CommandTrees.DbExpression.Accept*
  exceptions: []
  version:
  - netframework-35
  - netframework-40
- uid: System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})
  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})
  parent: System.Data.Common.CommandTrees.DbExpression
  langs:
  - csharp
  name: Accept<TResultType>(DbExpressionVisitor<TResultType>)
  nameWithType: DbExpression.Accept<TResultType>(DbExpressionVisitor<TResultType>)
  fullName: System.Data.Common.CommandTrees.DbExpression.Accept<TResultType>(DbExpressionVisitor<TResultType>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  syntax:
    content: public abstract TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);
    parameters:
    - id: visitor
      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1
      description: To be added.
    return:
      type: TResultType
      description: To be added.
  overload: System.Data.Common.CommandTrees.DbExpression.Accept<TResultType>*
  exceptions: []
  version:
  - netframework-35
  - netframework-40
- uid: System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.Common.CommandTrees.DbExpression
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DbExpression.Equals(Object)
  fullName: System.Data.Common.CommandTrees.DbExpression.Equals(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: Determines whether the specified <xref href="System.Object"></xref> is equal to the current DbExpression instance.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare to the current <xref href="System.Data.Common.CommandTrees.DbExpression"></xref>.
    return:
      type: System.Boolean
      description: '`True` if the specified <xref href="System.Object"></xref> is equal to the current DbExpression instance; otherwise, `false`.'
  overload: System.Data.Common.CommandTrees.DbExpression.Equals*
  exceptions: []
  version:
  - netframework-40
- uid: System.Data.Common.CommandTrees.DbExpression.ExpressionKind
  id: ExpressionKind
  parent: System.Data.Common.CommandTrees.DbExpression
  langs:
  - csharp
  name: ExpressionKind
  nameWithType: DbExpression.ExpressionKind
  fullName: System.Data.Common.CommandTrees.DbExpression.ExpressionKind
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: Gets the kind of the expression, which indicates the operation of this expression.
  syntax:
    content: public System.Data.Common.CommandTrees.DbExpressionKind ExpressionKind { get; }
    return:
      type: System.Data.Common.CommandTrees.DbExpressionKind
      description: The kind of the expression, which indicates the operation of this expression.
  overload: System.Data.Common.CommandTrees.DbExpression.ExpressionKind*
  exceptions: []
  version:
  - netframework-35
  - netframework-40
- uid: System.Data.Common.CommandTrees.DbExpression.GetHashCode
  id: GetHashCode
  parent: System.Data.Common.CommandTrees.DbExpression
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DbExpression.GetHashCode()
  fullName: System.Data.Common.CommandTrees.DbExpression.GetHashCode()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: Serves as a hash function for the type.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for the current expression.
  overload: System.Data.Common.CommandTrees.DbExpression.GetHashCode*
  exceptions: []
  version:
  - netframework-40
- uid: System.Data.Common.CommandTrees.DbExpression.ResultType
  id: ResultType
  parent: System.Data.Common.CommandTrees.DbExpression
  langs:
  - csharp
  name: ResultType
  nameWithType: DbExpression.ResultType
  fullName: System.Data.Common.CommandTrees.DbExpression.ResultType
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: Gets the type metadata for the result type of the expression.
  syntax:
    content: public System.Data.Metadata.Edm.TypeUsage ResultType { get; }
    return:
      type: System.Data.Metadata.Edm.TypeUsage
      description: The type metadata for the result type of the expression.
  overload: System.Data.Common.CommandTrees.DbExpression.ResultType*
  exceptions: []
  version:
  - netframework-35
  - netframework-40
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: Accept(DbExpressionVisitor)
  nameWithType: DbExpression.Accept(DbExpressionVisitor)
  fullName: System.Data.Common.CommandTrees.DbExpression.Accept(DbExpressionVisitor)
- uid: System.Data.Common.CommandTrees.DbExpressionVisitor
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionVisitor
  nameWithType: DbExpressionVisitor
  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor
- uid: System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: Accept<TResultType>(DbExpressionVisitor<TResultType>)
  nameWithType: DbExpression.Accept<TResultType>(DbExpressionVisitor<TResultType>)
  fullName: System.Data.Common.CommandTrees.DbExpression.Accept<TResultType>(DbExpressionVisitor<TResultType>)
- uid: TResultType
  isExternal: true
  name: TResultType
  nameWithType: TResultType
  fullName: TResultType
- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionVisitor<TResultType>
  nameWithType: DbExpressionVisitor<TResultType>
  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>
- uid: System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: Equals(Object)
  nameWithType: DbExpression.Equals(Object)
  fullName: System.Data.Common.CommandTrees.DbExpression.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.CommandTrees.DbExpression.ExpressionKind
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: ExpressionKind
  nameWithType: DbExpression.ExpressionKind
  fullName: System.Data.Common.CommandTrees.DbExpression.ExpressionKind
- uid: System.Data.Common.CommandTrees.DbExpressionKind
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionKind
  nameWithType: DbExpressionKind
  fullName: System.Data.Common.CommandTrees.DbExpressionKind
- uid: System.Data.Common.CommandTrees.DbExpression.GetHashCode
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: GetHashCode()
  nameWithType: DbExpression.GetHashCode()
  fullName: System.Data.Common.CommandTrees.DbExpression.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.CommandTrees.DbExpression.ResultType
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: ResultType
  nameWithType: DbExpression.ResultType
  fullName: System.Data.Common.CommandTrees.DbExpression.ResultType
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.DbExpression.Accept*
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: Accept
  nameWithType: DbExpression.Accept
- uid: System.Data.Common.CommandTrees.DbExpression.Accept<TResultType>*
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: Accept<TResultType>
  nameWithType: DbExpression.Accept<TResultType>
- uid: System.Data.Common.CommandTrees.DbExpression.Equals*
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: Equals
  nameWithType: DbExpression.Equals
- uid: System.Data.Common.CommandTrees.DbExpression.ExpressionKind*
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: ExpressionKind
  nameWithType: DbExpression.ExpressionKind
- uid: System.Data.Common.CommandTrees.DbExpression.GetHashCode*
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: GetHashCode
  nameWithType: DbExpression.GetHashCode
- uid: System.Data.Common.CommandTrees.DbExpression.ResultType*
  parent: System.Data.Common.CommandTrees.DbExpression
  isExternal: false
  name: ResultType
  nameWithType: DbExpression.ResultType
