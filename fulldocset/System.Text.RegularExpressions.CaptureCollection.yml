### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.CaptureCollection
  id: CaptureCollection
  children:
  - System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)
  - System.Text.RegularExpressions.CaptureCollection.Count
  - System.Text.RegularExpressions.CaptureCollection.GetEnumerator
  - System.Text.RegularExpressions.CaptureCollection.IsReadOnly
  - System.Text.RegularExpressions.CaptureCollection.IsSynchronized
  - System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  - System.Text.RegularExpressions.CaptureCollection.SyncRoot
  langs:
  - csharp
  name: CaptureCollection
  nameWithType: CaptureCollection
  fullName: System.Text.RegularExpressions.CaptureCollection
  type: Class
  summary: Represents the set of captures made by a single capturing group.
  syntax:
    content: 'public class CaptureCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: CaptureCollection.CopyTo(Array,Int32)
  fullName: System.Text.RegularExpressions.CaptureCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Copies all the elements of the collection to the given array beginning at the given index.
  syntax:
    content: public void CopyTo (Array array, int arrayIndex);
    parameters:
    - id: array
      type: System.Array
      description: To be added.
    - id: arrayIndex
      type: System.Int32
      description: To be added.
  overload: System.Text.RegularExpressions.CaptureCollection.CopyTo*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Text.RegularExpressions.CaptureCollection.Count
  id: Count
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: Count
  nameWithType: CaptureCollection.Count
  fullName: System.Text.RegularExpressions.CaptureCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets the number of substrings captured by the group.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  overload: System.Text.RegularExpressions.CaptureCollection.Count*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: CaptureCollection.GetEnumerator()
  fullName: System.Text.RegularExpressions.CaptureCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Provides an enumerator that iterates through the collection.
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: To be added.
  overload: System.Text.RegularExpressions.CaptureCollection.GetEnumerator*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Text.RegularExpressions.CaptureCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: CaptureCollection.IsReadOnly
  fullName: System.Text.RegularExpressions.CaptureCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets a value that indicates whether the collection is read only.
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Text.RegularExpressions.CaptureCollection.IsReadOnly*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Text.RegularExpressions.CaptureCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: CaptureCollection.IsSynchronized
  fullName: System.Text.RegularExpressions.CaptureCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets a value that indicates whether access to the collection is synchronized (thread-safe).
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Text.RegularExpressions.CaptureCollection.IsSynchronized*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CaptureCollection.Item(Int32)
  fullName: System.Text.RegularExpressions.CaptureCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets an individual member of the collection.
  syntax:
    content: public System.Text.RegularExpressions.Capture this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: To be added.
    return:
      type: System.Text.RegularExpressions.Capture
      description: To be added.
  overload: System.Text.RegularExpressions.CaptureCollection.Item*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
- uid: System.Text.RegularExpressions.CaptureCollection.SyncRoot
  id: SyncRoot
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: CaptureCollection.SyncRoot
  fullName: System.Text.RegularExpressions.CaptureCollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets an object that can be used to synchronize access to the collection.
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: To be added.
  overload: System.Text.RegularExpressions.CaptureCollection.SyncRoot*
  exceptions: []
  version:
  - netframework-2.0
  - netframework-3.0
  - netframework-3.5
  - netframework-4.0
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: CaptureCollection.CopyTo(Array,Int32)
  fullName: System.Text.RegularExpressions.CaptureCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.RegularExpressions.CaptureCollection.Count
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: Count
  nameWithType: CaptureCollection.Count
  fullName: System.Text.RegularExpressions.CaptureCollection.Count
- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: CaptureCollection.GetEnumerator()
  fullName: System.Text.RegularExpressions.CaptureCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Text.RegularExpressions.CaptureCollection.IsReadOnly
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: CaptureCollection.IsReadOnly
  fullName: System.Text.RegularExpressions.CaptureCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.CaptureCollection.IsSynchronized
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: CaptureCollection.IsSynchronized
  fullName: System.Text.RegularExpressions.CaptureCollection.IsSynchronized
- uid: System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: CaptureCollection.Item(Int32)
  fullName: System.Text.RegularExpressions.CaptureCollection.Item(Int32)
- uid: System.Text.RegularExpressions.Capture
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Capture
  nameWithType: Capture
  fullName: System.Text.RegularExpressions.Capture
- uid: System.Text.RegularExpressions.CaptureCollection.SyncRoot
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: SyncRoot
  nameWithType: CaptureCollection.SyncRoot
  fullName: System.Text.RegularExpressions.CaptureCollection.SyncRoot
- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: CopyTo
  nameWithType: CaptureCollection.CopyTo
- uid: System.Text.RegularExpressions.CaptureCollection.Count*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: Count
  nameWithType: CaptureCollection.Count
- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: CaptureCollection.GetEnumerator
- uid: System.Text.RegularExpressions.CaptureCollection.IsReadOnly*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: CaptureCollection.IsReadOnly
- uid: System.Text.RegularExpressions.CaptureCollection.IsSynchronized*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: CaptureCollection.IsSynchronized
- uid: System.Text.RegularExpressions.CaptureCollection.Item*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: Item
  nameWithType: CaptureCollection.Item
- uid: System.Text.RegularExpressions.CaptureCollection.SyncRoot*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: SyncRoot
  nameWithType: CaptureCollection.SyncRoot
