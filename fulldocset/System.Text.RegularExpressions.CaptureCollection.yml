### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.CaptureCollection
  id: CaptureCollection
  children:
  - System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)
  - System.Text.RegularExpressions.CaptureCollection.Count
  - System.Text.RegularExpressions.CaptureCollection.GetEnumerator
  - System.Text.RegularExpressions.CaptureCollection.IsReadOnly
  - System.Text.RegularExpressions.CaptureCollection.IsSynchronized
  - System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  - System.Text.RegularExpressions.CaptureCollection.SyncRoot
  langs:
  - csharp
  name: CaptureCollection
  nameWithType: CaptureCollection
  fullName: System.Text.RegularExpressions.CaptureCollection
  type: Class
  summary: Represents the set of captures made by a single capturing group.
  remarks: "The collection is immutable (read-only) and has no public constructor. The CaptureCollection object contains one or more <xref:System.Text.RegularExpressions.Capture> objects.  \n  \n Instances of the CaptureCollection class are returned by the following properties:  \n  \n-   The <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property. Each member of the collection represents a substring captured by a capturing group. If a quantifier is not applied to a capturing group, the CaptureCollection includes a single <xref:System.Text.RegularExpressions.Capture> object that represents the same captured substring as the <xref:System.Text.RegularExpressions.Group> object. If a quantifier is applied to a capturing group, the CaptureCollection includes one <xref:System.Text.RegularExpressions.Capture> object for each captured substring, and the <xref:System.Text.RegularExpressions.Group> object provides information only about the last captured substring.  \n  \n-   The `Match.Captures` property. In this case, the collection consists of a single <xref:System.Text.RegularExpressions.Capture> object that provides information about the match as a whole. That is, the CaptureCollection object provides the same information as the <xref:System.Text.RegularExpressions.Match> object.  \n  \n To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as `foreach` in C# and `For Each`â€¦`Next` in Visual Basic) instead of retrieving the enumerator that is returned by the <xref:System.Text.RegularExpressions.CaptureCollection.GetEnumerator%2A> method."
  example:
  - "The following example compares the <xref:System.Text.RegularExpressions.Capture> objects in the CaptureCollection object returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> and `Match.Captures` properties. It also compares <xref:System.Text.RegularExpressions.Group> objects with the <xref:System.Text.RegularExpressions.Capture> objects in the CaptureCollection returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property. The example uses the following two regular expressions to find matches in a single input string:  \n  \n-   `\\b\\w+\\W{1,2}`  \n  \n     This regular expression pattern identifies a word that consists of one or more word characters, followed by either one or two non-word characters such as white space or punctuation. The regular expression does not include any capturing groups. The output from the example shows that both the <xref:System.Text.RegularExpressions.Match> object and the CaptureCollection objects returned by the <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> and `Match.Captures` properties contain information about the same match.  \n  \n-   `(\\b\\w+\\W{1,2})+`  \n  \n     This regular expression pattern identifies the words in a sentence. The pattern defines a single capturing group that consists of one or more word characters followed by one or two non-word characters. The regular expression pattern uses the `+` quantifier to match one or more occurrences of this group. The output from this example shows that the <xref:System.Text.RegularExpressions.Match> object and the CaptureCollection object returned by the `Match.Captures` property contain information about the same match. The second <xref:System.Text.RegularExpressions.Group> object, which corresponds to the only capturing group in the regular expression, identifies only the last captured string, whereas the CaptureCollection object returned by the first capturing group's <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=fullName> property includes all captured substrings.  \n  \n [!code-cs[System.Text.RegularExpressions.CaptureCollection#1](~/add/codesnippet/csharp/t-system.text.regularexp_2_1.cs)]\n [!code-vb[System.Text.RegularExpressions.CaptureCollection#1](~/add/codesnippet/visualbasic/t-system.text.regularexp_2_1.vb)]"
  syntax:
    content: 'public class CaptureCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Text.RegularExpressions\CaptureCollection.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Text.RegularExpressions/CaptureCollection.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: CaptureCollection.CopyTo(Array,Int32)
  fullName: System.Text.RegularExpressions.CaptureCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Copies all the elements of the collection to the given array beginning at the given index.
  remarks: "Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.  \n  \n> [!WARNING]\n>  This member is not present in the [!INCLUDE[net_portable](~/add/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/add/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=fullName> method instead."
  syntax:
    content: public void CopyTo (Array array, int arrayIndex);
    parameters:
    - id: array
      type: System.Array
      description: The array the collection is to be copied into.
    - id: arrayIndex
      type: System.Int32
      description: The position in the destination array where copying is to begin.
  overload: System.Text.RegularExpressions.CaptureCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>array </code>is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>arrayIndex</code> is outside the bounds of <code>array</code>.  \n  \n -or-  \n  \n <code>arrayIndex</code> plus <xref href=\"stem.Text.RegularExpressions.CaptureCollection.Count%2A\"></xref> is outside the bounds of <code>array</code>."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Text.RegularExpressions\CaptureCollection.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Text.RegularExpressions/CaptureCollection.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Text.RegularExpressions.CaptureCollection.Count
  id: Count
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: Count
  nameWithType: CaptureCollection.Count
  fullName: System.Text.RegularExpressions.CaptureCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets the number of substrings captured by the group.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: The number of items in the <xref href="System.Text.RegularExpressions.CaptureCollection"></xref>.
  overload: System.Text.RegularExpressions.CaptureCollection.Count*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Text.RegularExpressions\CaptureCollection.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Text.RegularExpressions/CaptureCollection.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: CaptureCollection.GetEnumerator()
  fullName: System.Text.RegularExpressions.CaptureCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Provides an enumerator that iterates through the collection.
  remarks: Instead of calling the <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`â€¦`Next` in Visual Basic) that is provided by your programming language.
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An object that contains all <xref href="System.Text.RegularExpressions.Capture"></xref> objects within the <xref href="System.Text.RegularExpressions.CaptureCollection"></xref>.
  overload: System.Text.RegularExpressions.CaptureCollection.GetEnumerator*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Text.RegularExpressions\CaptureCollection.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Text.RegularExpressions/CaptureCollection.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Text.RegularExpressions.CaptureCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: CaptureCollection.IsReadOnly
  fullName: System.Text.RegularExpressions.CaptureCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets a value that indicates whether the collection is read only.
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: '`true` in all cases.'
  overload: System.Text.RegularExpressions.CaptureCollection.IsReadOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Text.RegularExpressions\CaptureCollection.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Text.RegularExpressions/CaptureCollection.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Text.RegularExpressions.CaptureCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: CaptureCollection.IsSynchronized
  fullName: System.Text.RegularExpressions.CaptureCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets a value that indicates whether access to the collection is synchronized (thread-safe).
  remarks: >-
    > [!WARNING]

    >  This member is not present in the [!INCLUDE[net_portable](~/add/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/add/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=fullName> property instead.
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: '`false` in all cases.'
  overload: System.Text.RegularExpressions.CaptureCollection.IsSynchronized*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Text.RegularExpressions\CaptureCollection.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Text.RegularExpressions/CaptureCollection.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CaptureCollection.Item(Int32)
  fullName: System.Text.RegularExpressions.CaptureCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets an individual member of the collection.
  syntax:
    content: public System.Text.RegularExpressions.Capture this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: Index into the capture collection.
    return:
      type: System.Text.RegularExpressions.Capture
      description: The captured substring at position <code>i</code> in the collection.
  overload: System.Text.RegularExpressions.CaptureCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>i</code> is less than 0 or greater than <xref href="stem.Text.RegularExpressions.CaptureCollection.Count%2A"></xref>.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Text.RegularExpressions\CaptureCollection.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Text.RegularExpressions/CaptureCollection.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Text.RegularExpressions.CaptureCollection.SyncRoot
  id: SyncRoot
  parent: System.Text.RegularExpressions.CaptureCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: CaptureCollection.SyncRoot
  fullName: System.Text.RegularExpressions.CaptureCollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: Gets an object that can be used to synchronize access to the collection.
  remarks: >-
    > [!WARNING]

    >  This member is not present in the [!INCLUDE[net_portable](~/add/includes/net-portable-md.md)]. If you are developing applications that target the [!INCLUDE[net_portable](~/add/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=fullName> property instead.
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the collection.
  overload: System.Text.RegularExpressions.CaptureCollection.SyncRoot*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Text.RegularExpressions\CaptureCollection.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Text.RegularExpressions/CaptureCollection.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: CaptureCollection.CopyTo(Array,Int32)
  fullName: System.Text.RegularExpressions.CaptureCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.RegularExpressions.CaptureCollection.Count
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: Count
  nameWithType: CaptureCollection.Count
  fullName: System.Text.RegularExpressions.CaptureCollection.Count
- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: CaptureCollection.GetEnumerator()
  fullName: System.Text.RegularExpressions.CaptureCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Text.RegularExpressions.CaptureCollection.IsReadOnly
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: CaptureCollection.IsReadOnly
  fullName: System.Text.RegularExpressions.CaptureCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.CaptureCollection.IsSynchronized
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: CaptureCollection.IsSynchronized
  fullName: System.Text.RegularExpressions.CaptureCollection.IsSynchronized
- uid: System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: CaptureCollection.Item(Int32)
  fullName: System.Text.RegularExpressions.CaptureCollection.Item(Int32)
- uid: System.Text.RegularExpressions.Capture
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Capture
  nameWithType: Capture
  fullName: System.Text.RegularExpressions.Capture
- uid: System.Text.RegularExpressions.CaptureCollection.SyncRoot
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: SyncRoot
  nameWithType: CaptureCollection.SyncRoot
  fullName: System.Text.RegularExpressions.CaptureCollection.SyncRoot
- uid: System.Text.RegularExpressions.CaptureCollection.CopyTo*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: CopyTo
  nameWithType: CaptureCollection.CopyTo
- uid: System.Text.RegularExpressions.CaptureCollection.Count*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: Count
  nameWithType: CaptureCollection.Count
- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: CaptureCollection.GetEnumerator
- uid: System.Text.RegularExpressions.CaptureCollection.IsReadOnly*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: CaptureCollection.IsReadOnly
- uid: System.Text.RegularExpressions.CaptureCollection.IsSynchronized*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: CaptureCollection.IsSynchronized
- uid: System.Text.RegularExpressions.CaptureCollection.Item*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: Item
  nameWithType: CaptureCollection.Item
- uid: System.Text.RegularExpressions.CaptureCollection.SyncRoot*
  parent: System.Text.RegularExpressions.CaptureCollection
  isExternal: false
  name: SyncRoot
  nameWithType: CaptureCollection.SyncRoot
