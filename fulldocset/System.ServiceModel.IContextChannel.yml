### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.IContextChannel
  id: IContextChannel
  children:
  - System.ServiceModel.IContextChannel.AllowOutputBatching
  - System.ServiceModel.IContextChannel.InputSession
  - System.ServiceModel.IContextChannel.LocalAddress
  - System.ServiceModel.IContextChannel.OperationTimeout
  - System.ServiceModel.IContextChannel.OutputSession
  - System.ServiceModel.IContextChannel.RemoteAddress
  - System.ServiceModel.IContextChannel.SessionId
  langs:
  - csharp
  name: IContextChannel
  nameWithType: IContextChannel
  fullName: System.ServiceModel.IContextChannel
  type: Interface
  summary: Defines the interface for the context control of a channel.
  syntax:
    content: 'public interface IContextChannel : System.ServiceModel.Channels.IChannel, System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>'
  implements:
  - System.ServiceModel.Channels.IChannel
  - System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.IContextChannel.AllowOutputBatching
  id: AllowOutputBatching
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  name: AllowOutputBatching
  nameWithType: IContextChannel.AllowOutputBatching
  fullName: System.ServiceModel.IContextChannel.AllowOutputBatching
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets a value that instructs [!INCLUDE[indigo1](~/add/includes/indigo1-md.md)] to store a set of messages before giving the messages to the transport.
  syntax:
    content: public bool AllowOutputBatching { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.ServiceModel.IContextChannel.AllowOutputBatching*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.IContextChannel.InputSession
  id: InputSession
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  name: InputSession
  nameWithType: IContextChannel.InputSession
  fullName: System.ServiceModel.IContextChannel.InputSession
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the input session for the channel.
  syntax:
    content: public System.ServiceModel.Channels.IInputSession InputSession { get; }
    return:
      type: System.ServiceModel.Channels.IInputSession
      description: To be added.
  overload: System.ServiceModel.IContextChannel.InputSession*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.IContextChannel.LocalAddress
  id: LocalAddress
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  name: LocalAddress
  nameWithType: IContextChannel.LocalAddress
  fullName: System.ServiceModel.IContextChannel.LocalAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the local endpoint for the channel.
  syntax:
    content: public System.ServiceModel.EndpointAddress LocalAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: To be added.
  overload: System.ServiceModel.IContextChannel.LocalAddress*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.IContextChannel.OperationTimeout
  id: OperationTimeout
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  name: OperationTimeout
  nameWithType: IContextChannel.OperationTimeout
  fullName: System.ServiceModel.IContextChannel.OperationTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the time period within which an operation must complete or an exception is thrown.
  syntax:
    content: public TimeSpan OperationTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: To be added.
  overload: System.ServiceModel.IContextChannel.OperationTimeout*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.IContextChannel.OutputSession
  id: OutputSession
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  name: OutputSession
  nameWithType: IContextChannel.OutputSession
  fullName: System.ServiceModel.IContextChannel.OutputSession
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the output session associated with the channel, if any.
  syntax:
    content: public System.ServiceModel.Channels.IOutputSession OutputSession { get; }
    return:
      type: System.ServiceModel.Channels.IOutputSession
      description: To be added.
  overload: System.ServiceModel.IContextChannel.OutputSession*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.IContextChannel.RemoteAddress
  id: RemoteAddress
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  name: RemoteAddress
  nameWithType: IContextChannel.RemoteAddress
  fullName: System.ServiceModel.IContextChannel.RemoteAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the remote address associated with the channel.
  syntax:
    content: public System.ServiceModel.EndpointAddress RemoteAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: To be added.
  overload: System.ServiceModel.IContextChannel.RemoteAddress*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.IContextChannel.SessionId
  id: SessionId
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  name: SessionId
  nameWithType: IContextChannel.SessionId
  fullName: System.ServiceModel.IContextChannel.SessionId
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Returns an identifier for the current session, if any.
  syntax:
    content: public string SessionId { get; }
    return:
      type: System.String
      description: To be added.
  overload: System.ServiceModel.IContextChannel.SessionId*
  exceptions: []
  platform:
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.ServiceModel.IContextChannel.AllowOutputBatching
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: AllowOutputBatching
  nameWithType: IContextChannel.AllowOutputBatching
  fullName: System.ServiceModel.IContextChannel.AllowOutputBatching
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.IContextChannel.InputSession
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: InputSession
  nameWithType: IContextChannel.InputSession
  fullName: System.ServiceModel.IContextChannel.InputSession
- uid: System.ServiceModel.Channels.IInputSession
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IInputSession
  nameWithType: IInputSession
  fullName: System.ServiceModel.Channels.IInputSession
- uid: System.ServiceModel.IContextChannel.LocalAddress
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: LocalAddress
  nameWithType: IContextChannel.LocalAddress
  fullName: System.ServiceModel.IContextChannel.LocalAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.IContextChannel.OperationTimeout
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: OperationTimeout
  nameWithType: IContextChannel.OperationTimeout
  fullName: System.ServiceModel.IContextChannel.OperationTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.IContextChannel.OutputSession
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: OutputSession
  nameWithType: IContextChannel.OutputSession
  fullName: System.ServiceModel.IContextChannel.OutputSession
- uid: System.ServiceModel.Channels.IOutputSession
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IOutputSession
  nameWithType: IOutputSession
  fullName: System.ServiceModel.Channels.IOutputSession
- uid: System.ServiceModel.IContextChannel.RemoteAddress
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: RemoteAddress
  nameWithType: IContextChannel.RemoteAddress
  fullName: System.ServiceModel.IContextChannel.RemoteAddress
- uid: System.ServiceModel.IContextChannel.SessionId
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: SessionId
  nameWithType: IContextChannel.SessionId
  fullName: System.ServiceModel.IContextChannel.SessionId
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.IContextChannel.AllowOutputBatching*
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: AllowOutputBatching
  nameWithType: IContextChannel.AllowOutputBatching
- uid: System.ServiceModel.IContextChannel.InputSession*
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: InputSession
  nameWithType: IContextChannel.InputSession
- uid: System.ServiceModel.IContextChannel.LocalAddress*
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: LocalAddress
  nameWithType: IContextChannel.LocalAddress
- uid: System.ServiceModel.IContextChannel.OperationTimeout*
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: OperationTimeout
  nameWithType: IContextChannel.OperationTimeout
- uid: System.ServiceModel.IContextChannel.OutputSession*
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: OutputSession
  nameWithType: IContextChannel.OutputSession
- uid: System.ServiceModel.IContextChannel.RemoteAddress*
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: RemoteAddress
  nameWithType: IContextChannel.RemoteAddress
- uid: System.ServiceModel.IContextChannel.SessionId*
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: SessionId
  nameWithType: IContextChannel.SessionId
