### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectSet`1
  id: ObjectSet`1
  children:
  - System.Data.Objects.ObjectSet`1.AddObject(`0)
  - System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)
  - System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)
  - System.Data.Objects.ObjectSet`1.Attach(`0)
  - System.Data.Objects.ObjectSet`1.CreateObject
  - System.Data.Objects.ObjectSet`1.CreateObject``1
  - System.Data.Objects.ObjectSet`1.DeleteObject(`0)
  - System.Data.Objects.ObjectSet`1.Detach(`0)
  - System.Data.Objects.ObjectSet`1.EntitySet
  langs:
  - csharp
  name: ObjectSet<TEntity>
  nameWithType: ObjectSet<TEntity>
  fullName: System.Data.Objects.ObjectSet<TEntity>
  type: Class
  summary: Represents a typed entity set that is used to perform create, read, update, and delete operations.
  remarks: The ObjectSet(TEntity) class allows you to operate on a typed entity set without having to specify the entity set name as an argument to each method call. The ObjectSet(TEntity) class extends the functionality of the <xref:System.Data.Objects.ObjectQuery%601> class to provide object context functionality, such as adding and deleting objects, in the context of a typed entity set that is accessed from the <xref:System.Data.Objects.ObjectContext>.
  syntax:
    content: 'public class ObjectSet<TEntity> : System.Data.Objects.ObjectQuery<TEntity>, System.Collections.Generic.IEnumerable<TEntity>, System.Data.Objects.IObjectSet<TEntity>, System.Linq.IQueryable<TEntity> where TEntity : class'
    typeParameters:
    - id: TEntity
      description: The entity type.
  inheritance:
  - System.Object
  - System.Data.Objects.ObjectQuery
  - System.Data.Objects.ObjectQuery`1
  implements:
  - System.Collections.Generic.IEnumerable<TEntity>
  - System.Data.Objects.IObjectSet<TEntity>
  - System.Linq.IQueryable<TEntity>
  inheritedMembers:
  - System.Data.Objects.ObjectQuery.CommandText
  - System.Data.Objects.ObjectQuery.Context
  - System.Data.Objects.ObjectQuery.EnablePlanCaching
  - System.Data.Objects.ObjectQuery.GetResultType
  - System.Data.Objects.ObjectQuery.MergeOption
  - System.Data.Objects.ObjectQuery.Parameters
  - System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  - System.Data.Objects.ObjectQuery.ToTraceString
  - System.Data.Objects.ObjectQuery`1.Distinct
  - System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})
  - System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)
  - System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.Include(System.String)
  - System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})
  - System.Data.Objects.ObjectQuery`1.Name
  - System.Data.Objects.ObjectQuery`1.OfType``1
  - System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})
  - System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})
  - System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\ObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/ObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.ObjectSet`1.AddObject(`0)
  id: AddObject(`0)
  parent: System.Data.Objects.ObjectSet`1
  langs:
  - csharp
  name: AddObject(TEntity)
  nameWithType: ObjectSet<TEntity>.AddObject(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.AddObject(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Adds an object to the object context in the current entity set.
  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AddObject%2A> method.
  syntax:
    content: public void AddObject (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The object to add.
  overload: System.Data.Objects.ObjectSet`1.AddObject*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\ObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/ObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)
  id: ApplyCurrentValues(`0)
  parent: System.Data.Objects.ObjectSet`1
  langs:
  - csharp
  name: ApplyCurrentValues(TEntity)
  nameWithType: ObjectSet<TEntity>.ApplyCurrentValues(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.ApplyCurrentValues(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Copies the scalar values from the supplied object into the object in the <xref href="System.Data.Objects.ObjectContext"></xref> that has the same key.
  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method.
  syntax:
    content: public TEntity ApplyCurrentValues (TEntity currentEntity);
    parameters:
    - id: currentEntity
      type: TEntity
      description: The detached object that has property updates to apply to the original object. The entity key of <code>currentEntity</code> must match the <xref href="stem.Data.Objects.ObjectStateEntry.EntityKey%2A"></xref> property of an entry in the <xref href="System.Data.Objects.ObjectContext"></xref>.
    return:
      type: TEntity
      description: The updated object.
  overload: System.Data.Objects.ObjectSet`1.ApplyCurrentValues*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\ObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/ObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)
  id: ApplyOriginalValues(`0)
  parent: System.Data.Objects.ObjectSet`1
  langs:
  - csharp
  name: ApplyOriginalValues(TEntity)
  nameWithType: ObjectSet<TEntity>.ApplyOriginalValues(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.ApplyOriginalValues(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Sets the <xref href="stem.Data.Objects.ObjectStateEntry.OriginalValues%2A"></xref> property of an <xref href="System.Data.Objects.ObjectStateEntry"></xref> to match the property values of a supplied object.
  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method.
  syntax:
    content: public TEntity ApplyOriginalValues (TEntity originalEntity);
    parameters:
    - id: originalEntity
      type: TEntity
      description: The detached object that has property updates to apply to the original object. The entity key of <code>originalEntity</code> must match the <xref href="stem.Data.Objects.ObjectStateEntry.EntityKey%2A"></xref> property of an entry in the <xref href="System.Data.Objects.ObjectContext"></xref>.
    return:
      type: TEntity
      description: The updated object.
  overload: System.Data.Objects.ObjectSet`1.ApplyOriginalValues*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\ObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/ObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.ObjectSet`1.Attach(`0)
  id: Attach(`0)
  parent: System.Data.Objects.ObjectSet`1
  langs:
  - csharp
  name: Attach(TEntity)
  nameWithType: ObjectSet<TEntity>.Attach(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.Attach(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Attaches an object or object graph to the object context in the current entity set.
  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method.
  syntax:
    content: public void Attach (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: The object to attach.
  overload: System.Data.Objects.ObjectSet`1.Attach*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\ObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/ObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.ObjectSet`1.CreateObject
  id: CreateObject
  parent: System.Data.Objects.ObjectSet`1
  langs:
  - csharp
  name: CreateObject()
  nameWithType: ObjectSet<TEntity>.CreateObject()
  fullName: System.Data.Objects.ObjectSet<TEntity>.CreateObject()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Creates a new entity type object.
  syntax:
    content: public TEntity CreateObject ();
    parameters: []
    return:
      type: TEntity
      description: The new entity type object, or an instance of a proxy type that corresponds to the entity type.
  overload: System.Data.Objects.ObjectSet`1.CreateObject*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\ObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/ObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.ObjectSet`1.CreateObject``1
  id: CreateObject``1
  parent: System.Data.Objects.ObjectSet`1
  langs:
  - csharp
  name: CreateObject<T>()
  nameWithType: ObjectSet<TEntity>.CreateObject<T>()
  fullName: System.Data.Objects.ObjectSet<TEntity>.CreateObject<T>()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Creates an instance of the specified type.
  syntax:
    content: 'public T CreateObject<T> () where T : class, TEntity;'
    parameters: []
    return:
      type: T
      description: An instance of the requested type <code>T</code>, or an instance of a proxy type that corresponds to the type <code>T</code>.
  overload: System.Data.Objects.ObjectSet`1.CreateObject<T>*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\ObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/ObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.ObjectSet`1.DeleteObject(`0)
  id: DeleteObject(`0)
  parent: System.Data.Objects.ObjectSet`1
  langs:
  - csharp
  name: DeleteObject(TEntity)
  nameWithType: ObjectSet<TEntity>.DeleteObject(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.DeleteObject(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Marks an object for deletion.
  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> method.
  syntax:
    content: public void DeleteObject (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: An object that represents the entity to delete. The object can be in any state except <xref href="System.Data.EntityState"></xref>.
  overload: System.Data.Objects.ObjectSet`1.DeleteObject*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\ObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/ObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.ObjectSet`1.Detach(`0)
  id: Detach(`0)
  parent: System.Data.Objects.ObjectSet`1
  langs:
  - csharp
  name: Detach(TEntity)
  nameWithType: ObjectSet<TEntity>.Detach(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.Detach(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Removes the object from the object context.
  remarks: This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.Detach%2A> method.
  syntax:
    content: public void Detach (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: Object to be detached. Only the <code>entity</code> is removed; if there are any related objects that are being tracked by the same <xref href="System.Data.Objects.ObjectStateManager"></xref>, those will not be detached automatically.
  overload: System.Data.Objects.ObjectSet`1.Detach*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\ObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/ObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Objects.ObjectSet`1.EntitySet
  id: EntitySet
  parent: System.Data.Objects.ObjectSet`1
  langs:
  - csharp
  name: EntitySet
  nameWithType: ObjectSet<TEntity>.EntitySet
  fullName: System.Data.Objects.ObjectSet<TEntity>.EntitySet
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: Gets the metadata of the entity set represented by this <xref href="stem.Data.Objects.ObjectSet%601"></xref> instance.
  syntax:
    content: public System.Data.Metadata.Edm.EntitySet EntitySet { get; }
    return:
      type: System.Data.Metadata.Edm.EntitySet
      description: An <xref href="System.Data.Metadata.Edm.EntitySet"></xref> object.
  overload: System.Data.Objects.ObjectSet`1.EntitySet*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Objects\ObjectSet`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Objects/ObjectSet`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: System.Data.Objects.ObjectQuery<TEntity>
- uid: System.Data.Objects.ObjectSet`1.AddObject(`0)
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: AddObject(TEntity)
  nameWithType: ObjectSet<TEntity>.AddObject(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.AddObject(TEntity)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: ApplyCurrentValues(TEntity)
  nameWithType: ObjectSet<TEntity>.ApplyCurrentValues(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.ApplyCurrentValues(TEntity)
- uid: System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: ApplyOriginalValues(TEntity)
  nameWithType: ObjectSet<TEntity>.ApplyOriginalValues(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.ApplyOriginalValues(TEntity)
- uid: System.Data.Objects.ObjectSet`1.Attach(`0)
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: Attach(TEntity)
  nameWithType: ObjectSet<TEntity>.Attach(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.Attach(TEntity)
- uid: System.Data.Objects.ObjectSet`1.CreateObject
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: CreateObject()
  nameWithType: ObjectSet<TEntity>.CreateObject()
  fullName: System.Data.Objects.ObjectSet<TEntity>.CreateObject()
- uid: System.Data.Objects.ObjectSet`1.CreateObject``1
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: CreateObject<T>()
  nameWithType: ObjectSet<TEntity>.CreateObject<T>()
  fullName: System.Data.Objects.ObjectSet<TEntity>.CreateObject<T>()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Objects.ObjectSet`1.DeleteObject(`0)
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: DeleteObject(TEntity)
  nameWithType: ObjectSet<TEntity>.DeleteObject(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.DeleteObject(TEntity)
- uid: System.Data.Objects.ObjectSet`1.Detach(`0)
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: Detach(TEntity)
  nameWithType: ObjectSet<TEntity>.Detach(TEntity)
  fullName: System.Data.Objects.ObjectSet<TEntity>.Detach(TEntity)
- uid: System.Data.Objects.ObjectSet`1.EntitySet
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: EntitySet
  nameWithType: ObjectSet<TEntity>.EntitySet
  fullName: System.Data.Objects.ObjectSet<TEntity>.EntitySet
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Objects.ObjectSet`1.AddObject*
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: AddObject
  nameWithType: ObjectSet<TEntity>.AddObject
- uid: System.Data.Objects.ObjectSet`1.ApplyCurrentValues*
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: ApplyCurrentValues
  nameWithType: ObjectSet<TEntity>.ApplyCurrentValues
- uid: System.Data.Objects.ObjectSet`1.ApplyOriginalValues*
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: ApplyOriginalValues
  nameWithType: ObjectSet<TEntity>.ApplyOriginalValues
- uid: System.Data.Objects.ObjectSet`1.Attach*
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: Attach
  nameWithType: ObjectSet<TEntity>.Attach
- uid: System.Data.Objects.ObjectSet`1.CreateObject*
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: CreateObject
  nameWithType: ObjectSet<TEntity>.CreateObject
- uid: System.Data.Objects.ObjectSet`1.CreateObject<T>*
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: CreateObject<T>
  nameWithType: ObjectSet<TEntity>.CreateObject<T>
- uid: System.Data.Objects.ObjectSet`1.DeleteObject*
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: DeleteObject
  nameWithType: ObjectSet<TEntity>.DeleteObject
- uid: System.Data.Objects.ObjectSet`1.Detach*
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: Detach
  nameWithType: ObjectSet<TEntity>.Detach
- uid: System.Data.Objects.ObjectSet`1.EntitySet*
  parent: System.Data.Objects.ObjectSet`1
  isExternal: false
  name: EntitySet
  nameWithType: ObjectSet<TEntity>.EntitySet
