### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.Label
  id: Label
  children:
  - System.Reflection.Emit.Label.Equals(System.Object)
  - System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)
  - System.Reflection.Emit.Label.GetHashCode
  - System.Reflection.Emit.Label.op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  - System.Reflection.Emit.Label.op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  langs:
  - csharp
  name: Label
  nameWithType: Label
  fullName: System.Reflection.Emit.Label
  type: Struct
  summary: Represents a label in the instruction stream. `Label` is used in conjunction with the <xref href="System.Reflection.Emit.ILGenerator"></xref> class.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct Label
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Reflection.Emit.Label.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Emit.Label
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Label.Equals(Object)
  fullName: System.Reflection.Emit.Label.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Checks if the given object is an instance of `Label` and is equal to this instance.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with this `Label` instance.
    return:
      type: System.Boolean
      description: Returns `true` if <code>obj</code> is an instance of `Label` and is equal to this object; otherwise, `false`.
  overload: System.Reflection.Emit.Label.Equals*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)
  id: Equals(System.Reflection.Emit.Label)
  parent: System.Reflection.Emit.Label
  langs:
  - csharp
  name: Equals(Label)
  nameWithType: Label.Equals(Label)
  fullName: System.Reflection.Emit.Label.Equals(Label)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Indicates whether the current instance is equal to the specified <xref href="System.Reflection.Emit.Label"></xref>.
  syntax:
    content: public bool Equals (System.Reflection.Emit.Label obj);
    parameters:
    - id: obj
      type: System.Reflection.Emit.Label
      description: The <xref href="System.Reflection.Emit.Label"></xref> to compare to the current instance.
    return:
      type: System.Boolean
      description: '`true` if the value of <code>obj</code> is equal to the value of the current instance; otherwise, `false`.'
  overload: System.Reflection.Emit.Label.Equals*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Reflection.Emit.Label.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Emit.Label
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Label.GetHashCode()
  fullName: System.Reflection.Emit.Label.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Generates a hash code for this instance.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: Returns a hash code for this instance.
  overload: System.Reflection.Emit.Label.GetHashCode*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Reflection.Emit.Label.op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  id: op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  parent: System.Reflection.Emit.Label
  langs:
  - csharp
  name: op_Equality(Label,Label)
  nameWithType: Label.op_Equality(Label,Label)
  fullName: System.Reflection.Emit.Label.op_Equality(Label,Label)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Indicates whether two <xref href="System.Reflection.Emit.Label"></xref> structures are equal.
  syntax:
    content: public static bool op_Equality (System.Reflection.Emit.Label a, System.Reflection.Emit.Label b);
    parameters:
    - id: a
      type: System.Reflection.Emit.Label
      description: The <xref href="System.Reflection.Emit.Label"></xref> to compare to `b`.
    - id: b
      type: System.Reflection.Emit.Label
      description: The <xref href="System.Reflection.Emit.Label"></xref> to compare to `a`.
    return:
      type: System.Boolean
      description: '`true` if <code>a</code> is equal to <code>b</code>; otherwise, `false`.'
  overload: System.Reflection.Emit.Label.op_Equality*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Reflection.Emit.Label.op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  id: op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  parent: System.Reflection.Emit.Label
  langs:
  - csharp
  name: op_Inequality(Label,Label)
  nameWithType: Label.op_Inequality(Label,Label)
  fullName: System.Reflection.Emit.Label.op_Inequality(Label,Label)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Indicates whether two <xref href="System.Reflection.Emit.Label"></xref> structures are not equal.
  syntax:
    content: public static bool op_Inequality (System.Reflection.Emit.Label a, System.Reflection.Emit.Label b);
    parameters:
    - id: a
      type: System.Reflection.Emit.Label
      description: The <xref href="System.Reflection.Emit.Label"></xref> to compare to `b`.
    - id: b
      type: System.Reflection.Emit.Label
      description: The <xref href="System.Reflection.Emit.Label"></xref> to compare to `a`.
    return:
      type: System.Boolean
      description: '`true` if <code>a</code> is not equal to <code>b</code>; otherwise, `false`.'
  overload: System.Reflection.Emit.Label.op_Inequality*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Reflection.Emit.Label.Equals(System.Object)
  parent: System.Reflection.Emit.Label
  isExternal: false
  name: Equals(Object)
  nameWithType: Label.Equals(Object)
  fullName: System.Reflection.Emit.Label.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.Emit.Label.Equals(System.Reflection.Emit.Label)
  parent: System.Reflection.Emit.Label
  isExternal: false
  name: Equals(Label)
  nameWithType: Label.Equals(Label)
  fullName: System.Reflection.Emit.Label.Equals(Label)
- uid: System.Reflection.Emit.Label
  parent: System.Reflection.Emit
  isExternal: false
  name: Label
  nameWithType: Label
  fullName: System.Reflection.Emit.Label
- uid: System.Reflection.Emit.Label.GetHashCode
  parent: System.Reflection.Emit.Label
  isExternal: false
  name: GetHashCode()
  nameWithType: Label.GetHashCode()
  fullName: System.Reflection.Emit.Label.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.Label.op_Equality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  parent: System.Reflection.Emit.Label
  isExternal: false
  name: op_Equality(Label,Label)
  nameWithType: Label.op_Equality(Label,Label)
  fullName: System.Reflection.Emit.Label.op_Equality(Label,Label)
- uid: System.Reflection.Emit.Label.op_Inequality(System.Reflection.Emit.Label,System.Reflection.Emit.Label)
  parent: System.Reflection.Emit.Label
  isExternal: false
  name: op_Inequality(Label,Label)
  nameWithType: Label.op_Inequality(Label,Label)
  fullName: System.Reflection.Emit.Label.op_Inequality(Label,Label)
- uid: System.Reflection.Emit.Label.Equals*
  parent: System.Reflection.Emit.Label
  isExternal: false
  name: Equals
  nameWithType: Label.Equals
- uid: System.Reflection.Emit.Label.GetHashCode*
  parent: System.Reflection.Emit.Label
  isExternal: false
  name: GetHashCode
  nameWithType: Label.GetHashCode
- uid: System.Reflection.Emit.Label.op_Equality*
  parent: System.Reflection.Emit.Label
  isExternal: false
  name: op_Equality
  nameWithType: Label.op_Equality
- uid: System.Reflection.Emit.Label.op_Inequality*
  parent: System.Reflection.Emit.Label
  isExternal: false
  name: op_Inequality
  nameWithType: Label.op_Inequality
