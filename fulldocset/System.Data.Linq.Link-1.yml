### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Link`1
  id: Link`1
  children:
  - System.Data.Linq.Link`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Linq.Link`1.#ctor(System.Data.Linq.Link{`0})
  - System.Data.Linq.Link`1.#ctor(`0)
  - System.Data.Linq.Link`1.HasLoadedOrAssignedValue
  - System.Data.Linq.Link`1.HasValue
  - System.Data.Linq.Link`1.Value
  langs:
  - csharp
  name: Link<T>
  nameWithType: Link<T>
  fullName: System.Data.Linq.Link<T>
  type: Struct
  summary: Used to enable deferred loading of individual properties (similar to <xref href="stem.Data.Linq.EntityRef%601"></xref>).
  remarks: If you assign a deferred source (<xref:System.Collections.Generic.IEnumerable%601>) to Link(T), Link(T) loads the value by enumerating the source the first time the <xref:System.Data.Linq.Link%601.Value%2A> property is accessed.
  syntax:
    content: public struct Link<T>
    typeParameters:
    - id: T
      description: The type of the elements in the deferred source.
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\Link`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/Link`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.Link`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: System.Data.Linq.Link`1
  langs:
  - csharp
  name: Link<T>(IEnumerable<T>)
  nameWithType: Link<T>.Link<T>(IEnumerable<T>)
  fullName: System.Data.Linq.Link<T>.Link<T>(IEnumerable<T>)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Initializes a new instance of the <xref href="stem.Data.Linq.Link%601"></xref> structure by referencing the source.
  remarks: Use this constructor to initialize the <xref:System.Data.Linq.Link%601> with a deferred value loader (implements <xref:System.Collections.Generic.IEnumerable%601>)
  syntax:
    content: public Link (System.Collections.Generic.IEnumerable<T> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: The source collection.
  overload: System.Data.Linq.Link`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\Link`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/Link`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.Link`1.#ctor(System.Data.Linq.Link{`0})
  id: '#ctor(System.Data.Linq.Link{`0})'
  parent: System.Data.Linq.Link`1
  langs:
  - csharp
  name: Link<T>(Link<T>)
  nameWithType: Link<T>.Link<T>(Link<T>)
  fullName: System.Data.Linq.Link<T>.Link<T>(Link<T>)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Initializes a new instance of the <xref href="stem.Data.Linq.Link%601"></xref> structure by copying the internal state from another <xref href="stem.Data.Linq.Link%601"></xref> instance.
  syntax:
    content: public Link (System.Data.Linq.Link<T> link);
    parameters:
    - id: link
      type: System.Data.Linq.Link`1
      description: The <xref href="stem.Data.Linq.Link%601"></xref> instance from which to copy.
  overload: System.Data.Linq.Link`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\Link`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/Link`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.Link`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: System.Data.Linq.Link`1
  langs:
  - csharp
  name: Link<T>(T)
  nameWithType: Link<T>.Link<T>(T)
  fullName: System.Data.Linq.Link<T>.Link<T>(T)
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Initializes a new instance of the <xref href="stem.Data.Linq.Link%601"></xref> structure by referencing the value of the property.
  remarks: Use this constructor when the value for the property is already known.
  syntax:
    content: public Link (T value);
    parameters:
    - id: value
      type: T
      description: The value for the property.
  overload: System.Data.Linq.Link`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\Link`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/Link`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.Link`1.HasLoadedOrAssignedValue
  id: HasLoadedOrAssignedValue
  parent: System.Data.Linq.Link`1
  langs:
  - csharp
  name: HasLoadedOrAssignedValue
  nameWithType: Link<T>.HasLoadedOrAssignedValue
  fullName: System.Data.Linq.Link<T>.HasLoadedOrAssignedValue
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Specifies whether the <xref href="stem.Data.Linq.Link%601"></xref> has loaded or assigned a value.
  remarks: "\"Loaded\" means that the data was loaded during materialization or at deferred loading. \"Assigned\" means that you have manually given the data a value.  \n  \n [!INCLUDE[vbtecdlinq](~/add/includes/vbtecdlinq-md.md)] uses this property to make sure that the <xref:System.Data.Linq.Link%601> has a value, so that accesing it will not trigger deferred loading."
  syntax:
    content: public bool HasLoadedOrAssignedValue { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="stem.Data.Linq.Link%601"></xref> has either loaded or assigned a value; otherwise `false`.'
  overload: System.Data.Linq.Link`1.HasLoadedOrAssignedValue*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\Link`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/Link`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.Link`1.HasValue
  id: HasValue
  parent: System.Data.Linq.Link`1
  langs:
  - csharp
  name: HasValue
  nameWithType: Link<T>.HasValue
  fullName: System.Data.Linq.Link<T>.HasValue
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets a value that specifies whether the source has a value.
  syntax:
    content: public bool HasValue { get; }
    return:
      type: System.Boolean
      description: Returns `true` if the source has an assigned or loaded value (including null).
  overload: System.Data.Linq.Link`1.HasValue*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\Link`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/Link`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Data.Linq.Link`1.Value
  id: Value
  parent: System.Data.Linq.Link`1
  langs:
  - csharp
  name: Value
  nameWithType: Link<T>.Value
  fullName: System.Data.Linq.Link<T>.Value
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  summary: Gets or sets the value assigned to or loaded by the <xref href="stem.Data.Linq.Link%601"></xref>.
  syntax:
    content: public T Value { get; set; }
    return:
      type: T
      description: The value of this deferred property.
  overload: System.Data.Linq.Link`1.Value*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Data.Linq\Link`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Data.Linq/Link`1.xml
  version:
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.Linq.Link`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.Link`1
  isExternal: false
  name: Link<T>(IEnumerable<T>)
  nameWithType: Link<T>.Link<T>(IEnumerable<T>)
  fullName: System.Data.Linq.Link<T>.Link<T>(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Data.Linq.Link`1.#ctor(System.Data.Linq.Link{`0})
  parent: System.Data.Linq.Link`1
  isExternal: false
  name: Link<T>(Link<T>)
  nameWithType: Link<T>.Link<T>(Link<T>)
  fullName: System.Data.Linq.Link<T>.Link<T>(Link<T>)
- uid: System.Data.Linq.Link`1
  parent: System.Data.Linq
  isExternal: false
  name: Link<T>
  nameWithType: Link<T>
  fullName: System.Data.Linq.Link<T>
- uid: System.Data.Linq.Link`1.#ctor(`0)
  parent: System.Data.Linq.Link`1
  isExternal: false
  name: Link<T>(T)
  nameWithType: Link<T>.Link<T>(T)
  fullName: System.Data.Linq.Link<T>.Link<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Linq.Link`1.HasLoadedOrAssignedValue
  parent: System.Data.Linq.Link`1
  isExternal: false
  name: HasLoadedOrAssignedValue
  nameWithType: Link<T>.HasLoadedOrAssignedValue
  fullName: System.Data.Linq.Link<T>.HasLoadedOrAssignedValue
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Link`1.HasValue
  parent: System.Data.Linq.Link`1
  isExternal: false
  name: HasValue
  nameWithType: Link<T>.HasValue
  fullName: System.Data.Linq.Link<T>.HasValue
- uid: System.Data.Linq.Link`1.Value
  parent: System.Data.Linq.Link`1
  isExternal: false
  name: Value
  nameWithType: Link<T>.Value
  fullName: System.Data.Linq.Link<T>.Value
- uid: System.Data.Linq.Link`1.#ctor*
  parent: System.Data.Linq.Link`1
  isExternal: false
  name: Link<T>
  nameWithType: Link<T>.Link<T>
- uid: System.Data.Linq.Link`1.HasLoadedOrAssignedValue*
  parent: System.Data.Linq.Link`1
  isExternal: false
  name: HasLoadedOrAssignedValue
  nameWithType: Link<T>.HasLoadedOrAssignedValue
- uid: System.Data.Linq.Link`1.HasValue*
  parent: System.Data.Linq.Link`1
  isExternal: false
  name: HasValue
  nameWithType: Link<T>.HasValue
- uid: System.Data.Linq.Link`1.Value*
  parent: System.Data.Linq.Link`1
  isExternal: false
  name: Value
  nameWithType: Link<T>.Value
