### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.Extensions
  id: Extensions
  children:
  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable`1@)
  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable`1@)
  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable`1@)
  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable`1@)
  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable`1@)
  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable`1@)
  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}@)
  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable`1@)
  langs:
  - csharp
  name: Extensions
  nameWithType: Extensions
  fullName: System.Xml.Linq.Extensions
  type: Class
  summary: Contains the [!INCLUDE[sqltecxlinq](~/add/includes/sqltecxlinq-md.md)] extension methods.
  syntax:
    content: public static class Extensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable`1@)
  id: Ancestors``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Ancestors(IEnumerable<T>)
  nameWithType: Extensions.Ancestors(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Ancestors(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> Ancestors<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Xml.Linq.XNode;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
  overload: System.Xml.Linq.Extensions.Ancestors<T>*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  id: Ancestors``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Ancestors(IEnumerable<T>,XName)
  nameWithType: Extensions.Ancestors(IEnumerable<T>,XName)
  fullName: System.Xml.Linq.Extensions.Ancestors(IEnumerable<T>,XName)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> Ancestors<T> (this System.Collections.Generic.IEnumerable<T> source, System.Xml.Linq.XName name) where T : System.Xml.Linq.XNode;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    - id: name
      type: System.Xml.Linq.XName
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
  overload: System.Xml.Linq.Extensions.Ancestors<T>*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  id: AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: AncestorsAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.AncestorsAndSelf(IEnumerable<XElement>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Returns a collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> AncestorsAndSelf (this System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
  overload: System.Xml.Linq.Extensions.AncestorsAndSelf*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  id: AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: AncestorsAndSelf(IEnumerable<XElement>,XName)
  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>,XName)
  fullName: System.Xml.Linq.Extensions.AncestorsAndSelf(IEnumerable<XElement>,XName)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Returns a filtered collection of elements that contains every element in the source collection, and the ancestors of every element in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName"></xref> are included in the collection.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> AncestorsAndSelf (this System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source, System.Xml.Linq.XName name);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
    - id: name
      type: System.Xml.Linq.XName
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
  overload: System.Xml.Linq.Extensions.AncestorsAndSelf*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  id: Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Attributes(IEnumerable<XElement>)
  nameWithType: Extensions.Attributes(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.Attributes(IEnumerable<XElement>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Returns a collection of the attributes of every element in the source collection.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute> Attributes (this System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: To be added.
  overload: System.Xml.Linq.Extensions.Attributes*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  id: Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Attributes(IEnumerable<XElement>,XName)
  nameWithType: Extensions.Attributes(IEnumerable<XElement>,XName)
  fullName: System.Xml.Linq.Extensions.Attributes(IEnumerable<XElement>,XName)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Returns a filtered collection of the attributes of every element in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName"></xref> are included in the collection.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute> Attributes (this System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source, System.Xml.Linq.XName name);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
    - id: name
      type: System.Xml.Linq.XName
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: To be added.
  overload: System.Xml.Linq.Extensions.Attributes*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable`1@)
  id: DescendantNodes``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: DescendantNodes(IEnumerable<T>)
  nameWithType: Extensions.DescendantNodes(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.DescendantNodes(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode> DescendantNodes<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Xml.Linq.XContainer;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
      description: To be added.
  overload: System.Xml.Linq.Extensions.DescendantNodes<T>*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  id: DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: DescendantNodesAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Returns a collection of nodes that contains every element in the source collection, and the descendant nodes of every element in the source collection.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode> DescendantNodesAndSelf (this System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
      description: To be added.
  overload: System.Xml.Linq.Extensions.DescendantNodesAndSelf*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable`1@)
  id: Descendants``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Descendants(IEnumerable<T>)
  nameWithType: Extensions.Descendants(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Descendants(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> Descendants<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Xml.Linq.XContainer;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
  overload: System.Xml.Linq.Extensions.Descendants<T>*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  id: Descendants``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Descendants(IEnumerable<T>,XName)
  nameWithType: Extensions.Descendants(IEnumerable<T>,XName)
  fullName: System.Xml.Linq.Extensions.Descendants(IEnumerable<T>,XName)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> Descendants<T> (this System.Collections.Generic.IEnumerable<T> source, System.Xml.Linq.XName name) where T : System.Xml.Linq.XContainer;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    - id: name
      type: System.Xml.Linq.XName
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
  overload: System.Xml.Linq.Extensions.Descendants<T>*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  id: DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: DescendantsAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.DescendantsAndSelf(IEnumerable<XElement>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Returns a collection of elements that contains every element in the source collection, and the descendent elements of every element in the source collection.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> DescendantsAndSelf (this System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
  overload: System.Xml.Linq.Extensions.DescendantsAndSelf*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  id: DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: DescendantsAndSelf(IEnumerable<XElement>,XName)
  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>,XName)
  fullName: System.Xml.Linq.Extensions.DescendantsAndSelf(IEnumerable<XElement>,XName)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Returns a filtered collection of elements that contains every element in the source collection, and the descendents of every element in the source collection. Only elements that have a matching <xref href="System.Xml.Linq.XName"></xref> are included in the collection.
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> DescendantsAndSelf (this System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> source, System.Xml.Linq.XName name);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
    - id: name
      type: System.Xml.Linq.XName
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
  overload: System.Xml.Linq.Extensions.DescendantsAndSelf*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable`1@)
  id: Elements``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Elements(IEnumerable<T>)
  nameWithType: Extensions.Elements(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Elements(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> Elements<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Xml.Linq.XContainer;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
  overload: System.Xml.Linq.Extensions.Elements<T>*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  id: Elements``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Elements(IEnumerable<T>,XName)
  nameWithType: Extensions.Elements(IEnumerable<T>,XName)
  fullName: System.Xml.Linq.Extensions.Elements(IEnumerable<T>,XName)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> Elements<T> (this System.Collections.Generic.IEnumerable<T> source, System.Xml.Linq.XName name) where T : System.Xml.Linq.XContainer;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    - id: name
      type: System.Xml.Linq.XName
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: To be added.
  overload: System.Xml.Linq.Extensions.Elements<T>*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable`1@)
  id: InDocumentOrder``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: InDocumentOrder(IEnumerable<T>)
  nameWithType: Extensions.InDocumentOrder(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.InDocumentOrder(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<T> InDocumentOrder<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Xml.Linq.XNode;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
  overload: System.Xml.Linq.Extensions.InDocumentOrder<T>*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable`1@)
  id: Nodes``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Nodes(IEnumerable<T>)
  nameWithType: Extensions.Nodes(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Nodes(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  syntax:
    content: 'public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode> Nodes<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Xml.Linq.XContainer;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
      description: To be added.
  overload: System.Xml.Linq.Extensions.Nodes<T>*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}@)
  id: Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Remove(IEnumerable<XAttribute>)
  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)
  fullName: System.Xml.Linq.Extensions.Remove(IEnumerable<XAttribute>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  summary: Removes every attribute in the source collection from its parent element.
  syntax:
    content: public static void Remove (this System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: To be added.
  overload: System.Xml.Linq.Extensions.Remove*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable`1@)
  id: Remove``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  langs:
  - csharp
  name: Remove(IEnumerable<T>)
  nameWithType: Extensions.Remove(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Remove(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.Linq
  syntax:
    content: 'public static void Remove<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Xml.Linq.XNode;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable`1
      description: To be added.
  overload: System.Xml.Linq.Extensions.Remove<T>*
  exceptions: []
  platform:
  - netframework-3.5
  - netframework-4.0
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Ancestors(IEnumerable<T>)
  nameWithType: Extensions.Ancestors(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Ancestors(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<XElement>
  nameWithType: IEnumerable<XElement>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xml.Linq.XElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: XElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Ancestors(IEnumerable<T>,XName)
  nameWithType: Extensions.Ancestors(IEnumerable<T>,XName)
  fullName: System.Xml.Linq.Extensions.Ancestors(IEnumerable<T>,XName)
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: false
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: AncestorsAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.AncestorsAndSelf(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: AncestorsAndSelf(IEnumerable<XElement>,XName)
  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>,XName)
  fullName: System.Xml.Linq.Extensions.AncestorsAndSelf(IEnumerable<XElement>,XName)
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Attributes(IEnumerable<XElement>)
  nameWithType: Extensions.Attributes(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.Attributes(IEnumerable<XElement>)
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<XAttribute>
  nameWithType: IEnumerable<XAttribute>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xml.Linq.XAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    nameWithType: XAttribute
    fullName: XAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Attributes(IEnumerable<XElement>,XName)
  nameWithType: Extensions.Attributes(IEnumerable<XElement>,XName)
  fullName: System.Xml.Linq.Extensions.Attributes(IEnumerable<XElement>,XName)
- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantNodes(IEnumerable<T>)
  nameWithType: Extensions.DescendantNodes(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.DescendantNodes(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<XNode>
  nameWithType: IEnumerable<XNode>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xml.Linq.XNode>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XNode
    name: XNode
    nameWithType: XNode
    fullName: XNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantNodesAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Descendants(IEnumerable<T>)
  nameWithType: Extensions.Descendants(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Descendants(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Descendants(IEnumerable<T>,XName)
  nameWithType: Extensions.Descendants(IEnumerable<T>,XName)
  fullName: System.Xml.Linq.Extensions.Descendants(IEnumerable<T>,XName)
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantsAndSelf(IEnumerable<XElement>)
  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)
  fullName: System.Xml.Linq.Extensions.DescendantsAndSelf(IEnumerable<XElement>)
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantsAndSelf(IEnumerable<XElement>,XName)
  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>,XName)
  fullName: System.Xml.Linq.Extensions.DescendantsAndSelf(IEnumerable<XElement>,XName)
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Elements(IEnumerable<T>)
  nameWithType: Extensions.Elements(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Elements(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable`1@,System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Elements(IEnumerable<T>,XName)
  nameWithType: Extensions.Elements(IEnumerable<T>,XName)
  fullName: System.Xml.Linq.Extensions.Elements(IEnumerable<T>,XName)
- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: InDocumentOrder(IEnumerable<T>)
  nameWithType: Extensions.InDocumentOrder(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.InDocumentOrder(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Nodes(IEnumerable<T>)
  nameWithType: Extensions.Nodes(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Nodes(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Remove(IEnumerable<XAttribute>)
  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)
  fullName: System.Xml.Linq.Extensions.Remove(IEnumerable<XAttribute>)
- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable`1@)
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Remove(IEnumerable<T>)
  nameWithType: Extensions.Remove(IEnumerable<T>)
  fullName: System.Xml.Linq.Extensions.Remove(IEnumerable<T>)
- uid: System.Xml.Linq.Extensions.Ancestors<T>*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Ancestors<T>
  nameWithType: Extensions.Ancestors<T>
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: AncestorsAndSelf
  nameWithType: Extensions.AncestorsAndSelf
- uid: System.Xml.Linq.Extensions.Attributes*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Attributes
  nameWithType: Extensions.Attributes
- uid: System.Xml.Linq.Extensions.DescendantNodes<T>*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantNodes<T>
  nameWithType: Extensions.DescendantNodes<T>
- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantNodesAndSelf
  nameWithType: Extensions.DescendantNodesAndSelf
- uid: System.Xml.Linq.Extensions.Descendants<T>*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Descendants<T>
  nameWithType: Extensions.Descendants<T>
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: DescendantsAndSelf
  nameWithType: Extensions.DescendantsAndSelf
- uid: System.Xml.Linq.Extensions.Elements<T>*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Elements<T>
  nameWithType: Extensions.Elements<T>
- uid: System.Xml.Linq.Extensions.InDocumentOrder<T>*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: InDocumentOrder<T>
  nameWithType: Extensions.InDocumentOrder<T>
- uid: System.Xml.Linq.Extensions.Nodes<T>*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Nodes<T>
  nameWithType: Extensions.Nodes<T>
- uid: System.Xml.Linq.Extensions.Remove*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Remove
  nameWithType: Extensions.Remove
- uid: System.Xml.Linq.Extensions.Remove<T>*
  parent: System.Xml.Linq.Extensions
  isExternal: false
  name: Remove<T>
  nameWithType: Extensions.Remove<T>
