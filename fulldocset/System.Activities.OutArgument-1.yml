### YamlMime:ManagedReference
items:
- uid: System.Activities.OutArgument`1
  id: OutArgument`1
  children:
  - System.Activities.OutArgument`1.#ctor
  - System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})
  - System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)
  - System.Activities.OutArgument`1.#ctor(System.Activities.Variable)
  - System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  - System.Activities.OutArgument`1.Expression
  - System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)
  - System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  - System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)
  - System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)
  - System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)
  - System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})
  - System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)
  - System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)
  - System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)
  langs:
  - csharp
  name: OutArgument<T>
  nameWithType: OutArgument<T>
  fullName: System.Activities.OutArgument<T>
  type: Class
  summary: A binding terminal that represents the flow of data out of an activity.
  remarks: "An OutArgument(T) is used to flow data out of an activity. If the activity is the root activity of a workflow, then it is also used to flow data out of the workflow to the workflow host. In this example, a custom `Divide` activity that has two input arguments and one output argument is used as the root activity of a workflow. The host application passes two values into the workflow and then retrieves the result of the division after the workflow completes.  \n  \n [!code-cs[CFX_WorkflowInvokerExample#20](~/add/codesnippet/csharp/t-system.activities.outa_1.cs)]  \n  \n The `Divide` activity uses arguments to receive the input values and to provide the computed result values. The `Remainder` OutArgument(T) is used to pass out the remainder of the division, and the <xref:System.Activities.Activity%601.Result%2A> output argument provided by <xref:System.Activities.Activity%601> derived activities is used to pass out the quotient.  \n  \n> [!NOTE]\n>  If your custom activity is derived from the generic <xref:System.Activities.CodeActivity%601> with an <xref:System.Int32> as its generic type argument, when you invoke the activity with the <xref:System.Activities.WorkflowInvoker> Invoke method, it returns an <xref:System.Int32> value. In Addition, the <xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=fullName> method will return an <xref:System.Int32> value instead of `void` and you do not need to set a return value.  \n  \n [!code-cs[CFX_WorkflowApplicationExample#120](~/add/codesnippet/csharp/t-system.activities.outa_2.cs)]"
  example:
  - "The following code sample demonstrates creating an OutArgument(T). This example is from the Formatter sample.  \n  \n [!code-cs[wfs_Formatter#1](~/add/codesnippet/csharp/formatterclient/program.cs#1)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.OutArgumentConverter))]

      [System.Windows.Markup.ContentProperty("Expression")]

      [System.Windows.Markup.ValueSerializer(typeof(System.Activities.XamlIntegration.ArgumentValueSerializer))]

      public sealed class OutArgument<T> : System.Activities.OutArgument
    typeParameters:
    - id: T
      description: The data type of the OutArgument(T).
  inheritance:
  - System.Object
  - System.Activities.Argument
  - System.Activities.OutArgument
  implements: []
  inheritedMembers:
  - System.Activities.Argument.ArgumentType
  - System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  - System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  - System.Activities.Argument.Direction
  - System.Activities.Argument.EvaluationOrder
  - System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  - System.Activities.Argument.ResultValue
  - System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  - System.Activities.Argument.UnspecifiedEvaluationOrder
  - System.Activities.OutArgument.CreateReference(System.Activities.InOutArgument,System.String)
  - System.Activities.OutArgument.CreateReference(System.Activities.OutArgument,System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.#ctor
  id: '#ctor'
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: OutArgument<T>()
  nameWithType: OutArgument<T>.OutArgument<T>()
  fullName: System.Activities.OutArgument<T>.OutArgument<T>()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initialize a new instance of the <xref href="stem.Activities.OutArgument%601"></xref> class using default values.
  remarks: ''
  example:
  - "The following code sample demonstrates creating an <xref:System.Activities.OutArgument%601>. This example is from the Formatter sample.  \n  \n [!code-cs[wfs_Formatter#1](~/add/codesnippet/csharp/formatterclient/program.cs#1)]"
  syntax:
    content: public OutArgument ();
    parameters: []
  overload: System.Activities.OutArgument`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})
  id: '#ctor(System.Activities.Activity{System.Activities.Location{`0}})'
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: OutArgument<T>(Activity<Location<T>>)
  nameWithType: OutArgument<T>.OutArgument<T>(Activity<Location<T>>)
  fullName: System.Activities.OutArgument<T>.OutArgument<T>(Activity<Location<T>>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <xref href="stem.Activities.OutArgument%601"></xref> class using the specified <xref href="stem.Activities.Activity%601"></xref>.
  syntax:
    content: public OutArgument (System.Activities.Activity<System.Activities.Location<T>> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: The value of the argument.
  overload: System.Activities.OutArgument`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)
  id: '#ctor(System.Activities.DelegateArgument)'
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: OutArgument<T>(DelegateArgument)
  nameWithType: OutArgument<T>.OutArgument<T>(DelegateArgument)
  fullName: System.Activities.OutArgument<T>.OutArgument<T>(DelegateArgument)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <xref href="stem.Activities.OutArgument%601"></xref> class using the specified <xref href="System.Activities.DelegateArgument"></xref>.
  syntax:
    content: public OutArgument (System.Activities.DelegateArgument delegateArgument);
    parameters:
    - id: delegateArgument
      type: System.Activities.DelegateArgument
      description: The value of the argument.
  overload: System.Activities.OutArgument`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.#ctor(System.Activities.Variable)
  id: '#ctor(System.Activities.Variable)'
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: OutArgument<T>(Variable)
  nameWithType: OutArgument<T>.OutArgument<T>(Variable)
  fullName: System.Activities.OutArgument<T>.OutArgument<T>(Variable)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <xref href="stem.Activities.OutArgument%601"></xref> class using the specified <xref href="System.Activities.Variable"></xref>.
  syntax:
    content: public OutArgument (System.Activities.Variable variable);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: The value of the argument.
  overload: System.Activities.OutArgument`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: OutArgument<T>(Expression<Func<ActivityContext,T>>)
  nameWithType: OutArgument<T>.OutArgument<T>(Expression<Func<ActivityContext,T>>)
  fullName: System.Activities.OutArgument<T>.OutArgument<T>(Expression<Func<ActivityContext,T>>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <xref href="stem.Activities.OutArgument%601"></xref> class using the specified expression.
  syntax:
    content: public OutArgument (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
      description: The value of the argument.
  overload: System.Activities.OutArgument`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.Expression
  id: Expression
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: Expression
  nameWithType: OutArgument<T>.Expression
  fullName: System.Activities.OutArgument<T>.Expression
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets an <xref href="stem.Activities.Activity%601"></xref> that represents the value of this <xref href="stem.Activities.OutArgument%601"></xref>.
  syntax:
    content: public System.Activities.Activity<System.Activities.Location<T>> Expression { get; set; }
    return:
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: An activity that represents the value of the argument.
  overload: System.Activities.OutArgument`1.Expression*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)
  id: FromDelegateArgument(System.Activities.DelegateArgument)
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: FromDelegateArgument(DelegateArgument)
  nameWithType: OutArgument<T>.FromDelegateArgument(DelegateArgument)
  fullName: System.Activities.OutArgument<T>.FromDelegateArgument(DelegateArgument)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes and returns a new <xref href="stem.Activities.OutArgument%601"></xref> constructed using the specified <xref href="System.Activities.DelegateArgument"></xref>.
  syntax:
    content: public static System.Activities.OutArgument<T> FromDelegateArgument (System.Activities.DelegateArgument delegateArgument);
    parameters:
    - id: delegateArgument
      type: System.Activities.DelegateArgument
      description: The value of the argument.
    return:
      type: System.Activities.OutArgument`1
      description: The new argument.
  overload: System.Activities.OutArgument`1.FromDelegateArgument*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  id: FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: FromExpression(Activity<Location<T>>)
  nameWithType: OutArgument<T>.FromExpression(Activity<Location<T>>)
  fullName: System.Activities.OutArgument<T>.FromExpression(Activity<Location<T>>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes and returns a new <xref href="stem.Activities.OutArgument%601"></xref> constructed using the specified <xref href="stem.Activities.Activity%601"></xref>.
  syntax:
    content: public static System.Activities.OutArgument<T> FromExpression (System.Activities.Activity<System.Activities.Location<T>> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: The value of the argument,
    return:
      type: System.Activities.OutArgument`1
      description: The new argument.
  overload: System.Activities.OutArgument`1.FromExpression*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)
  id: FromVariable(System.Activities.Variable)
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: FromVariable(Variable)
  nameWithType: OutArgument<T>.FromVariable(Variable)
  fullName: System.Activities.OutArgument<T>.FromVariable(Variable)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes and returns a new <xref href="stem.Activities.OutArgument%601"></xref> constructed using the specified <xref href="System.Activities.Variable"></xref>.
  syntax:
    content: public static System.Activities.OutArgument<T> FromVariable (System.Activities.Variable variable);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: The value of the argument.
    return:
      type: System.Activities.OutArgument`1
      description: The new argument.
  overload: System.Activities.OutArgument`1.FromVariable*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)
  id: Get(System.Activities.ActivityContext)
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: OutArgument<T>.Get(ActivityContext)
  fullName: System.Activities.OutArgument<T>.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets the value of the <xref href="stem.Activities.OutArgument%601"></xref> using the specified activity context.
  syntax:
    content: public T Get (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: The current activity context.
    return:
      type: T
      description: The value of the argument.
  overload: System.Activities.OutArgument`1.Get*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)
  id: GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: GetLocation(ActivityContext)
  nameWithType: OutArgument<T>.GetLocation(ActivityContext)
  fullName: System.Activities.OutArgument<T>.GetLocation(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets the location of the value for the <xref href="stem.Activities.OutArgument%601"></xref>.
  syntax:
    content: public System.Activities.Location<T> GetLocation (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: The activity context that contains the value of the variable.
    return:
      type: System.Activities.Location`1
      description: A reference to the location where the value of the argument is stored.
  overload: System.Activities.OutArgument`1.GetLocation*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})
  id: op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: op_Implicit(Activity<Location<T>>)
  nameWithType: OutArgument<T>.op_Implicit(Activity<Location<T>>)
  fullName: System.Activities.OutArgument<T>.op_Implicit(Activity<Location<T>>)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public static System.Activities.OutArgument<T> op_Implicit (System.Activities.Activity<System.Activities.Location<T>> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: To be added.
    return:
      type: System.Activities.OutArgument`1
      description: To be added.
  overload: System.Activities.OutArgument`1.op_Implicit*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)
  id: op_Implicit(System.Activities.DelegateArgument)
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: op_Implicit(DelegateArgument)
  nameWithType: OutArgument<T>.op_Implicit(DelegateArgument)
  fullName: System.Activities.OutArgument<T>.op_Implicit(DelegateArgument)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public static System.Activities.OutArgument<T> op_Implicit (System.Activities.DelegateArgument delegateArgument);
    parameters:
    - id: delegateArgument
      type: System.Activities.DelegateArgument
      description: To be added.
    return:
      type: System.Activities.OutArgument`1
      description: To be added.
  overload: System.Activities.OutArgument`1.op_Implicit*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)
  id: op_Implicit(System.Activities.Variable)
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: op_Implicit(Variable)
  nameWithType: OutArgument<T>.op_Implicit(Variable)
  fullName: System.Activities.OutArgument<T>.op_Implicit(Variable)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public static System.Activities.OutArgument<T> op_Implicit (System.Activities.Variable variable);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: To be added.
    return:
      type: System.Activities.OutArgument`1
      description: To be added.
  overload: System.Activities.OutArgument`1.op_Implicit*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)
  id: Set(System.Activities.ActivityContext,`0)
  parent: System.Activities.OutArgument`1
  langs:
  - csharp
  name: Set(ActivityContext,T)
  nameWithType: OutArgument<T>.Set(ActivityContext,T)
  fullName: System.Activities.OutArgument<T>.Set(ActivityContext,T)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Sets the value of the <xref href="stem.Activities.OutArgument%601"></xref> using the specified activity context.
  syntax:
    content: public void Set (System.Activities.ActivityContext context, T value);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: The current activity context.
    - id: value
      type: T
      description: The new value.
  overload: System.Activities.OutArgument`1.Set*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Activities\OutArgument`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Activities/OutArgument`1.xml
  version:
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Activities.OutArgument
  isExternal: false
  name: System.Activities.OutArgument
- uid: System.Activities.OutArgument`1.#ctor
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: OutArgument<T>()
  nameWithType: OutArgument<T>.OutArgument<T>()
  fullName: System.Activities.OutArgument<T>.OutArgument<T>()
- uid: System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: OutArgument<T>(Activity<Location<T>>)
  nameWithType: OutArgument<T>.OutArgument<T>(Activity<Location<T>>)
  fullName: System.Activities.OutArgument<T>.OutArgument<T>(Activity<Location<T>>)
- uid: System.Activities.Activity{System.Activities.Location{T}}
  parent: System.Activities
  isExternal: false
  name: Activity<Location<T>>
  nameWithType: Activity<Location<T>>
  fullName: System.Activities.Activity<System.Activities.Location<T>>
  spec.csharp:
  - uid: System.Activities.Activity`1
    name: Activity
    nameWithType: Activity
    fullName: Activity<System.Activities.Location<T>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Location`1
    name: Location
    nameWithType: Location
    fullName: Location<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: OutArgument<T>(DelegateArgument)
  nameWithType: OutArgument<T>.OutArgument<T>(DelegateArgument)
  fullName: System.Activities.OutArgument<T>.OutArgument<T>(DelegateArgument)
- uid: System.Activities.DelegateArgument
  parent: System.Activities
  isExternal: false
  name: DelegateArgument
  nameWithType: DelegateArgument
  fullName: System.Activities.DelegateArgument
- uid: System.Activities.OutArgument`1.#ctor(System.Activities.Variable)
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: OutArgument<T>(Variable)
  nameWithType: OutArgument<T>.OutArgument<T>(Variable)
  fullName: System.Activities.OutArgument<T>.OutArgument<T>(Variable)
- uid: System.Activities.Variable
  parent: System.Activities
  isExternal: false
  name: Variable
  nameWithType: Variable
  fullName: System.Activities.Variable
- uid: System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: OutArgument<T>(Expression<Func<ActivityContext,T>>)
  nameWithType: OutArgument<T>.OutArgument<T>(Expression<Func<ActivityContext,T>>)
  fullName: System.Activities.OutArgument<T>.OutArgument<T>(Expression<Func<ActivityContext,T>>)
- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<Func<ActivityContext,T>>
  nameWithType: Expression<Func<ActivityContext,T>>
  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,T>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<System.Activities.ActivityContext,T>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Activities.ActivityContext,T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.ActivityContext
    name: ActivityContext
    nameWithType: ActivityContext
    fullName: ActivityContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.OutArgument`1.Expression
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: Expression
  nameWithType: OutArgument<T>.Expression
  fullName: System.Activities.OutArgument<T>.Expression
- uid: System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: FromDelegateArgument(DelegateArgument)
  nameWithType: OutArgument<T>.FromDelegateArgument(DelegateArgument)
  fullName: System.Activities.OutArgument<T>.FromDelegateArgument(DelegateArgument)
- uid: System.Activities.OutArgument`1
  parent: System.Activities
  isExternal: false
  name: OutArgument<T>
  nameWithType: OutArgument<T>
  fullName: System.Activities.OutArgument<T>
- uid: System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: FromExpression(Activity<Location<T>>)
  nameWithType: OutArgument<T>.FromExpression(Activity<Location<T>>)
  fullName: System.Activities.OutArgument<T>.FromExpression(Activity<Location<T>>)
- uid: System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: FromVariable(Variable)
  nameWithType: OutArgument<T>.FromVariable(Variable)
  fullName: System.Activities.OutArgument<T>.FromVariable(Variable)
- uid: System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: OutArgument<T>.Get(ActivityContext)
  fullName: System.Activities.OutArgument<T>.Get(ActivityContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: GetLocation(ActivityContext)
  nameWithType: OutArgument<T>.GetLocation(ActivityContext)
  fullName: System.Activities.OutArgument<T>.GetLocation(ActivityContext)
- uid: System.Activities.Location`1
  parent: System.Activities
  isExternal: false
  name: Location<T>
  nameWithType: Location<T>
  fullName: System.Activities.Location<T>
- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: op_Implicit(Activity<Location<T>>)
  nameWithType: OutArgument<T>.op_Implicit(Activity<Location<T>>)
  fullName: System.Activities.OutArgument<T>.op_Implicit(Activity<Location<T>>)
- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: op_Implicit(DelegateArgument)
  nameWithType: OutArgument<T>.op_Implicit(DelegateArgument)
  fullName: System.Activities.OutArgument<T>.op_Implicit(DelegateArgument)
- uid: System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: op_Implicit(Variable)
  nameWithType: OutArgument<T>.op_Implicit(Variable)
  fullName: System.Activities.OutArgument<T>.op_Implicit(Variable)
- uid: System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: Set(ActivityContext,T)
  nameWithType: OutArgument<T>.Set(ActivityContext,T)
  fullName: System.Activities.OutArgument<T>.Set(ActivityContext,T)
- uid: System.Activities.OutArgument`1.#ctor*
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: OutArgument<T>
  nameWithType: OutArgument<T>.OutArgument<T>
- uid: System.Activities.OutArgument`1.Expression*
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: Expression
  nameWithType: OutArgument<T>.Expression
- uid: System.Activities.OutArgument`1.FromDelegateArgument*
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: FromDelegateArgument
  nameWithType: OutArgument<T>.FromDelegateArgument
- uid: System.Activities.OutArgument`1.FromExpression*
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: FromExpression
  nameWithType: OutArgument<T>.FromExpression
- uid: System.Activities.OutArgument`1.FromVariable*
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: FromVariable
  nameWithType: OutArgument<T>.FromVariable
- uid: System.Activities.OutArgument`1.Get*
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: Get
  nameWithType: OutArgument<T>.Get
- uid: System.Activities.OutArgument`1.GetLocation*
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: GetLocation
  nameWithType: OutArgument<T>.GetLocation
- uid: System.Activities.OutArgument`1.op_Implicit*
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: op_Implicit
  nameWithType: OutArgument<T>.op_Implicit
- uid: System.Activities.OutArgument`1.Set*
  parent: System.Activities.OutArgument`1
  isExternal: false
  name: Set
  nameWithType: OutArgument<T>.Set
