### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ExtensionCollection`1
  id: ExtensionCollection`1
  children:
  - System.ServiceModel.ExtensionCollection`1.#ctor(`0)
  - System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)
  - System.ServiceModel.ExtensionCollection`1.ClearItems
  - System.ServiceModel.ExtensionCollection`1.Find``1
  - System.ServiceModel.ExtensionCollection`1.FindAll``1
  - System.ServiceModel.ExtensionCollection`1.InsertItem(System.Int32,System.ServiceModel.IExtension{`0})
  - System.ServiceModel.ExtensionCollection`1.RemoveItem(System.Int32)
  - System.ServiceModel.ExtensionCollection`1.SetItem(System.Int32,System.ServiceModel.IExtension{`0})
  - System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly
  langs:
  - csharp
  name: ExtensionCollection<T>
  nameWithType: ExtensionCollection<T>
  fullName: System.ServiceModel.ExtensionCollection<T>
  type: Class
  summary: Represents a collection of extensions.
  remarks: Typically, implementations of <xref:System.ServiceModel.IExtensibleObject%601?displayProperty=fullName> return an ExtensionCollection(T) from the <xref:System.ServiceModel.IExtensibleObject%601.Extensions%2A?displayProperty=fullName> property.
  syntax:
    content: 'public sealed class ExtensionCollection<T> : System.Collections.Generic.SynchronizedCollection<System.ServiceModel.IExtension<T>>, System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>, System.Collections.Generic.IEnumerable<System.ServiceModel.IExtension<T>>, System.ServiceModel.IExtensionCollection<T> where T : IExtensibleObject<T>'
    typeParameters:
    - id: T
      description: The type for the collection.
  inheritance:
  - System.Object
  - System.Collections.Generic.SynchronizedCollection`1
  implements:
  - System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>
  - System.Collections.Generic.IEnumerable<System.ServiceModel.IExtension<T>>
  - System.ServiceModel.IExtensionCollection<T>
  inheritedMembers:
  - System.Collections.Generic.SynchronizedCollection`1.Add(`0)
  - System.Collections.Generic.SynchronizedCollection`1.Clear
  - System.Collections.Generic.SynchronizedCollection`1.Contains(`0)
  - System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.Count
  - System.Collections.Generic.SynchronizedCollection`1.GetEnumerator
  - System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)
  - System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)
  - System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)
  - System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.Items
  - System.Collections.Generic.SynchronizedCollection`1.Remove(`0)
  - System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)
  - System.Collections.Generic.SynchronizedCollection`1.SyncRoot
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ExtensionCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ExtensionCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ExtensionCollection`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: System.ServiceModel.ExtensionCollection`1
  langs:
  - csharp
  name: ExtensionCollection<T>(T)
  nameWithType: ExtensionCollection<T>.ExtensionCollection<T>(T)
  fullName: System.ServiceModel.ExtensionCollection<T>.ExtensionCollection<T>(T)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="stem.ServiceModel.ExtensionCollection%601"></xref> class with a specified owner.
  syntax:
    content: public ExtensionCollection (T owner);
    parameters:
    - id: owner
      type: T
      description: The owner of the collection.
  overload: System.ServiceModel.ExtensionCollection`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ExtensionCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ExtensionCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)
  id: '#ctor(`0,System.Object)'
  parent: System.ServiceModel.ExtensionCollection`1
  langs:
  - csharp
  name: ExtensionCollection<T>(T,Object)
  nameWithType: ExtensionCollection<T>.ExtensionCollection<T>(T,Object)
  fullName: System.ServiceModel.ExtensionCollection<T>.ExtensionCollection<T>(T,Object)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="stem.ServiceModel.ExtensionCollection%601"></xref> class with a specified owner and synchronization root.
  syntax:
    content: public ExtensionCollection (T owner, object syncRoot);
    parameters:
    - id: owner
      type: T
      description: The owner of the collection.
    - id: syncRoot
      type: System.Object
      description: The object used to synchronize.
  overload: System.ServiceModel.ExtensionCollection`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ExtensionCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ExtensionCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ExtensionCollection`1.ClearItems
  id: ClearItems
  parent: System.ServiceModel.ExtensionCollection`1
  langs:
  - csharp
  name: ClearItems()
  nameWithType: ExtensionCollection<T>.ClearItems()
  fullName: System.ServiceModel.ExtensionCollection<T>.ClearItems()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void ClearItems ();
    parameters: []
  overload: System.ServiceModel.ExtensionCollection`1.ClearItems*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ExtensionCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ExtensionCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ExtensionCollection`1.Find``1
  id: Find``1
  parent: System.ServiceModel.ExtensionCollection`1
  langs:
  - csharp
  name: Find<E>()
  nameWithType: ExtensionCollection<T>.Find<E>()
  fullName: System.ServiceModel.ExtensionCollection<T>.Find<E>()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Returns an extension if it is in the collection.
  syntax:
    content: public E Find<E> ();
    parameters: []
    return:
      type: E
      description: An extension of the type sought, or `null` if no extensions implement the type. If more than one extension implements the type, the most recently added is returned.
  overload: System.ServiceModel.ExtensionCollection`1.Find<E>*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ExtensionCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ExtensionCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ExtensionCollection`1.FindAll``1
  id: FindAll``1
  parent: System.ServiceModel.ExtensionCollection`1
  langs:
  - csharp
  name: FindAll<E>()
  nameWithType: ExtensionCollection<T>.FindAll<E>()
  fullName: System.ServiceModel.ExtensionCollection<T>.FindAll<E>()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Returns a collection of extensions if found in the collection.
  syntax:
    content: public System.Collections.ObjectModel.Collection<E> FindAll<E> ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{E}
      description: A collection of extensions of the type sought. If no extensions implement this type, a non-null empty collection is returned.
  overload: System.ServiceModel.ExtensionCollection`1.FindAll<E>*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ExtensionCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ExtensionCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ExtensionCollection`1.InsertItem(System.Int32,System.ServiceModel.IExtension{`0})
  id: InsertItem(System.Int32,System.ServiceModel.IExtension{`0})
  parent: System.ServiceModel.ExtensionCollection`1
  langs:
  - csharp
  name: InsertItem(Int32,IExtension<T>)
  nameWithType: ExtensionCollection<T>.InsertItem(Int32,IExtension<T>)
  fullName: System.ServiceModel.ExtensionCollection<T>.InsertItem(Int32,IExtension<T>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void InsertItem (int index, System.ServiceModel.IExtension<T> item);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    - id: item
      type: System.ServiceModel.IExtension`1
      description: To be added.
  overload: System.ServiceModel.ExtensionCollection`1.InsertItem*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ExtensionCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ExtensionCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ExtensionCollection`1.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: System.ServiceModel.ExtensionCollection`1
  langs:
  - csharp
  name: RemoveItem(Int32)
  nameWithType: ExtensionCollection<T>.RemoveItem(Int32)
  fullName: System.ServiceModel.ExtensionCollection<T>.RemoveItem(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void RemoveItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
  overload: System.ServiceModel.ExtensionCollection`1.RemoveItem*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ExtensionCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ExtensionCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ExtensionCollection`1.SetItem(System.Int32,System.ServiceModel.IExtension{`0})
  id: SetItem(System.Int32,System.ServiceModel.IExtension{`0})
  parent: System.ServiceModel.ExtensionCollection`1
  langs:
  - csharp
  name: SetItem(Int32,IExtension<T>)
  nameWithType: ExtensionCollection<T>.SetItem(Int32,IExtension<T>)
  fullName: System.ServiceModel.ExtensionCollection<T>.SetItem(Int32,IExtension<T>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected override void SetItem (int index, System.ServiceModel.IExtension<T> item);
    parameters:
    - id: index
      type: System.Int32
      description: To be added.
    - id: item
      type: System.ServiceModel.IExtension`1
      description: To be added.
  overload: System.ServiceModel.ExtensionCollection`1.SetItem*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ExtensionCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ExtensionCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly
  isEii: true
  parent: System.ServiceModel.ExtensionCollection`1
  langs:
  - csharp
  name: ICollection<IExtension<T>>.IsReadOnly
  nameWithType: ExtensionCollection<T>.ICollection<IExtension<T>>.IsReadOnly
  fullName: System.ServiceModel.ExtensionCollection<T>.ICollection<IExtension<T>>.IsReadOnly
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets whether the collection is read-only.
  syntax:
    content: bool System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: <xref href="stem.ServiceModel.ExtensionCollection%601"></xref> always returns `false`.
  overload: System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection<System#ServiceModel#IExtension<T>>#IsReadOnly*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel\ExtensionCollection`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel/ExtensionCollection`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Collections.Generic.SynchronizedCollection`1
  isExternal: false
  name: System.Collections.Generic.SynchronizedCollection<System.ServiceModel.IExtension<T>>
- uid: System.ServiceModel.ExtensionCollection`1.#ctor(`0)
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: ExtensionCollection<T>(T)
  nameWithType: ExtensionCollection<T>.ExtensionCollection<T>(T)
  fullName: System.ServiceModel.ExtensionCollection<T>.ExtensionCollection<T>(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: ExtensionCollection<T>(T,Object)
  nameWithType: ExtensionCollection<T>.ExtensionCollection<T>(T,Object)
  fullName: System.ServiceModel.ExtensionCollection<T>.ExtensionCollection<T>(T,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ExtensionCollection`1.ClearItems
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: ClearItems()
  nameWithType: ExtensionCollection<T>.ClearItems()
  fullName: System.ServiceModel.ExtensionCollection<T>.ClearItems()
- uid: System.ServiceModel.ExtensionCollection`1.Find``1
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: Find<E>()
  nameWithType: ExtensionCollection<T>.Find<E>()
  fullName: System.ServiceModel.ExtensionCollection<T>.Find<E>()
- uid: E
  isExternal: true
  name: E
  nameWithType: E
  fullName: E
- uid: System.ServiceModel.ExtensionCollection`1.FindAll``1
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: FindAll<E>()
  nameWithType: ExtensionCollection<T>.FindAll<E>()
  fullName: System.ServiceModel.ExtensionCollection<T>.FindAll<E>()
- uid: System.Collections.ObjectModel.Collection{E}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: Collection<E>
  nameWithType: Collection<E>
  fullName: System.Collections.ObjectModel.Collection<E>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<E>
  - name: <
    nameWithType: <
    fullName: <
  - uid: E
    name: E
    nameWithType: E
    fullName: E
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ExtensionCollection`1.InsertItem(System.Int32,System.ServiceModel.IExtension{`0})
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: InsertItem(Int32,IExtension<T>)
  nameWithType: ExtensionCollection<T>.InsertItem(Int32,IExtension<T>)
  fullName: System.ServiceModel.ExtensionCollection<T>.InsertItem(Int32,IExtension<T>)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.IExtension`1
  parent: System.ServiceModel
  isExternal: false
  name: IExtension<T>
  nameWithType: IExtension<T>
  fullName: System.ServiceModel.IExtension<T>
- uid: System.ServiceModel.ExtensionCollection`1.RemoveItem(System.Int32)
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: RemoveItem(Int32)
  nameWithType: ExtensionCollection<T>.RemoveItem(Int32)
  fullName: System.ServiceModel.ExtensionCollection<T>.RemoveItem(Int32)
- uid: System.ServiceModel.ExtensionCollection`1.SetItem(System.Int32,System.ServiceModel.IExtension{`0})
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: SetItem(Int32,IExtension<T>)
  nameWithType: ExtensionCollection<T>.SetItem(Int32,IExtension<T>)
  fullName: System.ServiceModel.ExtensionCollection<T>.SetItem(Int32,IExtension<T>)
- uid: System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: ICollection<IExtension<T>>.IsReadOnly
  nameWithType: ExtensionCollection<T>.ICollection<IExtension<T>>.IsReadOnly
  fullName: System.ServiceModel.ExtensionCollection<T>.ICollection<IExtension<T>>.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ExtensionCollection`1.#ctor*
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: ExtensionCollection<T>
  nameWithType: ExtensionCollection<T>.ExtensionCollection<T>
- uid: System.ServiceModel.ExtensionCollection`1.ClearItems*
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: ClearItems
  nameWithType: ExtensionCollection<T>.ClearItems
- uid: System.ServiceModel.ExtensionCollection`1.Find<E>*
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: Find<E>
  nameWithType: ExtensionCollection<T>.Find<E>
- uid: System.ServiceModel.ExtensionCollection`1.FindAll<E>*
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: FindAll<E>
  nameWithType: ExtensionCollection<T>.FindAll<E>
- uid: System.ServiceModel.ExtensionCollection`1.InsertItem*
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: InsertItem
  nameWithType: ExtensionCollection<T>.InsertItem
- uid: System.ServiceModel.ExtensionCollection`1.RemoveItem*
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: RemoveItem
  nameWithType: ExtensionCollection<T>.RemoveItem
- uid: System.ServiceModel.ExtensionCollection`1.SetItem*
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: SetItem
  nameWithType: ExtensionCollection<T>.SetItem
- uid: System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection<System#ServiceModel#IExtension<T>>#IsReadOnly*
  parent: System.ServiceModel.ExtensionCollection`1
  isExternal: false
  name: System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>.IsReadOnly
  nameWithType: ExtensionCollection<T>.System.Collections.Generic.ICollection<System.ServiceModel.IExtension<T>>.IsReadOnly
