### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IChannelFactory`1
  id: IChannelFactory`1
  children:
  - System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  langs:
  - csharp
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  type: Interface
  summary: Defines the interface that must be implemented by channel factories that create type-specific channels.
  remarks: Implementing the IChannelFactory(TChannel) contract allows users to create multiple channels of a given type without having to specify the channel type each time. In other words, defining the channel type as a generic parameter for the channel factory implementing the IChannelFactory(TChannel) interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A> methods. If users want to create different channel types, they can create additional channel factories for each type of channel required. The <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload allows you to distinguish the address to which the message is initially sent from the ultimate destination. For a discussion of addressing, see the [Addresses](../Topic/Endpoint%20Addresses.md) topic.
  syntax:
    content: 'public interface IChannelFactory<TChannel> : System.ServiceModel.Channels.IChannelFactory'
    typeParameters:
    - id: TChannel
      description: The type of channel that the channel factory creates.
  implements:
  - System.ServiceModel.Channels.IChannelFactory
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  id: CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Channels.IChannelFactory`1
  langs:
  - csharp
  name: CreateChannel(EndpointAddress)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a channel of a specified type to a specified endpoint address.
  remarks: Use the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing. Note that any channels created by this channel factory are closed when the channel factory is closed.
  syntax:
    content: public TChannel CreateChannel (System.ServiceModel.EndpointAddress to);
    parameters:
    - id: to
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> that provides the location of the service.
    return:
      type: TChannel
      description: A channel of type <code>TChannel</code> to the specified endpoint address.
  overload: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.IChannelFactory`1
  langs:
  - csharp
  name: CreateChannel(EndpointAddress,Uri)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress,Uri)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(EndpointAddress,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.
  remarks: The transport address specified by the `via` is the location to which a message should initially be sent on its way to some other remote address specified by the `to` at which the service is located. In most Internet scenarios, the `via` URI is the same as the <xref:System.ServiceModel.EndpointAddress.Uri%2A> of the final `to` address of the service. You only distinguish between these two addresses when you want to do some kind of manual routing. Note that any channels created by this channel factory are closed when the channel factory is closed. For a discussion of addressing, see the [Addresses](../Topic/Endpoint%20Addresses.md) topic.
  syntax:
    content: public TChannel CreateChannel (System.ServiceModel.EndpointAddress to, Uri via);
    parameters:
    - id: to
      type: System.ServiceModel.EndpointAddress
      description: The <xref href="System.ServiceModel.EndpointAddress"></xref> that provides the location of the service.
    - id: via
      type: System.Uri
      description: The <xref href="System.Uri"></xref> that contains the transport address to which the message is sent.
    return:
      type: TChannel
      description: A channel of type <code>TChannel</code> to the specified endpoint address and transport address.
  overload: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ServiceModel.Channels\IChannelFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ServiceModel.Channels/IChannelFactory`1.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Channels.IChannelFactory`1
  isExternal: false
  name: CreateChannel(EndpointAddress)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(EndpointAddress)
- uid: TChannel
  isExternal: true
  name: TChannel
  nameWithType: TChannel
  fullName: TChannel
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.IChannelFactory`1
  isExternal: false
  name: CreateChannel(EndpointAddress,Uri)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress,Uri)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(EndpointAddress,Uri)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel*
  parent: System.ServiceModel.Channels.IChannelFactory`1
  isExternal: false
  name: CreateChannel
  nameWithType: IChannelFactory<TChannel>.CreateChannel
