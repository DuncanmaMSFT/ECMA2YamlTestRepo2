### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ExportFactory`1
  id: ExportFactory`1
  children:
  - System.ComponentModel.Composition.ExportFactory`1.#ctor(System.Func{System.Tuple{`0,System.Action}})
  - System.ComponentModel.Composition.ExportFactory`1.CreateExport
  langs:
  - csharp
  name: ExportFactory<T>
  nameWithType: ExportFactory<T>
  fullName: System.ComponentModel.Composition.ExportFactory<T>
  type: Class
  summary: A factory that creates new instances of a part that provides the specified export.
  remarks: "When you refer indirectly to a part by using a <xref:System.Lazy%601> object, the <xref:System.Lazy%601.Value%2A> property always returns a reference to the same object. In some circumstances, you might want each reference to result in the creation of a new object. ExportFactory(T) is designed for those scenarios.  \n  \n ExportFactory(T) can be used in a similar fashion to <xref:System.Lazy%601> when creating attributed parts. That is, an import contract that is defined on ExportFactory(T) with a generic parameter of `T` will match an export that is defined on `T`. For example, the follow export and import match:  \n  \n```c#  \n[Export]  \npublic String myData = \"Example Data.\";  \n  \n[Import]  \npublic ExportFactory<String> theData { get; set; }  \n```  \n  \n```vb  \n<Export()>  \nPublic myData As String = \"Example Data.\"  \n  \n<Import()>  \nPublic Property theData As ExportFactory(Of String)  \n```  \n  \n The <xref:System.ComponentModel.Composition.ExportFactory%601.CreateExport%2A?displayProperty=fullName> method returns an <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object, which has two pieces. The <xref:System.ComponentModel.Composition.ExportLifetimeContext%601.Value%2A?displayProperty=fullName> property provides access to the created part. Calling the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601.Dispose%2A> method of the <xref:System.ComponentModel.Composition.ExportLifetimeContext%601> object cleans up the created part and all of its dependencies, thereby allowing the part's lifetime to be managed without reference to the container that created it."
  syntax:
    content: public class ExportFactory<T>
    typeParameters:
    - id: T
      description: The type of the export.
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel.Composition\ExportFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel.Composition/ExportFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ComponentModel.Composition.ExportFactory`1.#ctor(System.Func{System.Tuple{`0,System.Action}})
  id: '#ctor(System.Func{System.Tuple{`0,System.Action}})'
  parent: System.ComponentModel.Composition.ExportFactory`1
  langs:
  - csharp
  name: ExportFactory<T>(Func<Tuple<T,Action>>)
  nameWithType: ExportFactory<T>.ExportFactory<T>(Func<Tuple<T,Action>>)
  fullName: System.ComponentModel.Composition.ExportFactory<T>.ExportFactory<T>(Func<Tuple<T,Action>>)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Initializes a new instance of the <xref href="stem.ComponentModel.Composition.ExportFactory%601"></xref> class.
  syntax:
    content: public ExportFactory (Func<Tuple<T,Action>> exportLifetimeContextCreator);
    parameters:
    - id: exportLifetimeContextCreator
      type: System.Func{System.Tuple{T,System.Action}}
      description: A function that returns the exported value and an <xref href="System.Action"></xref> that releases it.
  overload: System.ComponentModel.Composition.ExportFactory`1.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel.Composition\ExportFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel.Composition/ExportFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.ComponentModel.Composition.ExportFactory`1.CreateExport
  id: CreateExport
  parent: System.ComponentModel.Composition.ExportFactory`1
  langs:
  - csharp
  name: CreateExport()
  nameWithType: ExportFactory<T>.CreateExport()
  fullName: System.ComponentModel.Composition.ExportFactory<T>.CreateExport()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Creates an instance of the factory's export type.
  syntax:
    content: public System.ComponentModel.Composition.ExportLifetimeContext<T> CreateExport ();
    parameters: []
    return:
      type: System.ComponentModel.Composition.ExportLifetimeContext`1
      description: A valid instance of the factory's exported type.
  overload: System.ComponentModel.Composition.ExportFactory`1.CreateExport*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.ComponentModel.Composition\ExportFactory`1.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.ComponentModel.Composition/ExportFactory`1.xml
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Composition.ExportFactory`1.#ctor(System.Func{System.Tuple{`0,System.Action}})
  parent: System.ComponentModel.Composition.ExportFactory`1
  isExternal: false
  name: ExportFactory<T>(Func<Tuple<T,Action>>)
  nameWithType: ExportFactory<T>.ExportFactory<T>(Func<Tuple<T,Action>>)
  fullName: System.ComponentModel.Composition.ExportFactory<T>.ExportFactory<T>(Func<Tuple<T,Action>>)
- uid: System.Func{System.Tuple{T,System.Action}}
  parent: System
  isExternal: false
  name: Func<Tuple<T,Action>>
  nameWithType: Func<Tuple<T,Action>>
  fullName: System.Func<System.Tuple<T,System.Action>>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Tuple<T,System.Action>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple<T,System.Action>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: Action
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.ExportFactory`1.CreateExport
  parent: System.ComponentModel.Composition.ExportFactory`1
  isExternal: false
  name: CreateExport()
  nameWithType: ExportFactory<T>.CreateExport()
  fullName: System.ComponentModel.Composition.ExportFactory<T>.CreateExport()
- uid: System.ComponentModel.Composition.ExportLifetimeContext`1
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ExportLifetimeContext<T>
  nameWithType: ExportLifetimeContext<T>
  fullName: System.ComponentModel.Composition.ExportLifetimeContext<T>
- uid: System.ComponentModel.Composition.ExportFactory`1.#ctor*
  parent: System.ComponentModel.Composition.ExportFactory`1
  isExternal: false
  name: ExportFactory<T>
  nameWithType: ExportFactory<T>.ExportFactory<T>
- uid: System.ComponentModel.Composition.ExportFactory`1.CreateExport*
  parent: System.ComponentModel.Composition.ExportFactory`1
  isExternal: false
  name: CreateExport
  nameWithType: ExportFactory<T>.CreateExport
