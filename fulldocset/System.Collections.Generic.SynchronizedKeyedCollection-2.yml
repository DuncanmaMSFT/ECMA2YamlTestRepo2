### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2
  id: SynchronizedKeyedCollection`2
  children:
  - System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor
  - System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey(`1,`0)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems
  - System.Collections.Generic.SynchronizedKeyedCollection`2.Contains(`0)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary
  - System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem(`1)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem(System.Int32,`1)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.Item(`0)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.Remove(`0)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem(System.Int32)
  - System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem(System.Int32,`1)
  langs:
  - csharp
  name: SynchronizedKeyedCollection<K,T>
  nameWithType: SynchronizedKeyedCollection<K,T>
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>
  type: Class
  summary: Provides a thread-safe collection that contains objects of a type specified by a generic parameter and that are grouped by keys.
  remarks: Inherited by <xref:System.ServiceModel.UriSchemeKeyedCollection> for use hosting.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public abstract class SynchronizedKeyedCollection<K,T> : System.Collections.Generic.SynchronizedCollection<T>
    typeParameters:
    - id: K
      description: The type of the key used to group the items contained in the collection.
    - id: T
      description: The type of items contained in the thread-safe, keyed collection.
  inheritance:
  - System.Object
  - System.Collections.Generic.SynchronizedCollection`1
  implements: []
  inheritedMembers:
  - System.Collections.Generic.SynchronizedCollection`1.Add(`0)
  - System.Collections.Generic.SynchronizedCollection`1.Clear
  - System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.Count
  - System.Collections.Generic.SynchronizedCollection`1.GetEnumerator
  - System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)
  - System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)
  - System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)
  - System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.Items
  - System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)
  - System.Collections.Generic.SynchronizedCollection`1.SyncRoot
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)
  - System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: SynchronizedKeyedCollection<K,T>()
  nameWithType: SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>()
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="stem.Collections.Generic.SynchronizedKeyedCollection%602"></xref> class.
  syntax:
    content: protected SynchronizedKeyedCollection ();
    parameters: []
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: SynchronizedKeyedCollection<K,T>(Object)
  nameWithType: SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="stem.Collections.Generic.SynchronizedKeyedCollection%602"></xref> class with access synchronized by an explicitly specified object.
  remarks: If multiple instances of the <xref:System.Collections.Generic.SynchronizedKeyedCollection%602> are created using the same `syncRoot`, then access is protected across all instances.
  syntax:
    content: protected SynchronizedKeyedCollection (object syncRoot);
    parameters:
    - id: syncRoot
      type: System.Object
      description: The object used to synchronize access to the thread-safe collection.
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>syncRoot</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>)
  nameWithType: SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="stem.Collections.Generic.SynchronizedKeyedCollection%602"></xref> class with access synchronized by an explicitly specified object and with keys compared in a specified way.
  remarks: The generic parameter `K` used by the <xref:System.Collections.Generic.IEqualityComparer%601> input parameter is the first generic parameter for this class.  This allows us to compare keys for equality in a customized way that can be used, for example, to optimize on the most critical aspects of the comparison.
  syntax:
    content: protected SynchronizedKeyedCollection (object syncRoot, System.Collections.Generic.IEqualityComparer<K> comparer);
    parameters:
    - id: syncRoot
      type: System.Object
      description: The object used to synchronize access to the thread-safe collection.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{K}
      description: The <xref href="stem.Collections.Generic.IEqualityComparer%601"></xref> of type <code>K</code> used to compare key objects of type <code>K</code> for equality.
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>syncRoot</code> is `null` or <code>comparer</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  id: '#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0},System.Int32)'
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>,Int32)
  nameWithType: SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>,Int32)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>,Int32)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Initializes a new instance of the <xref href="stem.Collections.Generic.SynchronizedKeyedCollection%602"></xref> class with access synchronized by an explicitly specified object and with keys compared in a specified way.
  remarks: Setting `dictionaryCreationThreshold` to -1 assigns the <xref:System.Int32> (2,147,483,647; hexadecimal 0x7FFFFFFF) to it.
  syntax:
    content: protected SynchronizedKeyedCollection (object syncRoot, System.Collections.Generic.IEqualityComparer<K> comparer, int dictionaryCreationThreshold);
    parameters:
    - id: syncRoot
      type: System.Object
      description: The object used to synchronize access to the thread-safe collection.
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{K}
      description: The <xref href="stem.Collections.Generic.IEqualityComparer%601"></xref> of type <code>K</code> used to compare key objects of type <code>K</code> for equality.
    - id: dictionaryCreationThreshold
      type: System.Int32
      description: The number of items required to create a dictionary for the collection.
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>syncRoot</code> is `null` or <code>comparer</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>dictionaryCreationThreshold</code> is less than -1.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey(`1,`0)
  id: ChangeItemKey(`1,`0)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: ChangeItemKey(T,K)
  nameWithType: SynchronizedKeyedCollection<K,T>.ChangeItemKey(T,K)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.ChangeItemKey(T,K)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Changes the key for a specified item in the synchronized collection.
  syntax:
    content: protected void ChangeItemKey (T item, K newKey);
    parameters:
    - id: item
      type: T
      description: The item whose key is being changed.
    - id: newKey
      type: K
      description: The new key for the specified item.
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems
  id: ClearItems
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: ClearItems()
  nameWithType: SynchronizedKeyedCollection<K,T>.ClearItems()
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.ClearItems()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Clears all items from the collection.
  syntax:
    content: protected override void ClearItems ();
    parameters: []
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: Contains(K)
  nameWithType: SynchronizedKeyedCollection<K,T>.Contains(K)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.Contains(K)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Returns a value that indicates whether the collection contains an item with a specified key.
  syntax:
    content: public bool Contains (K key);
    parameters:
    - id: key
      type: K
      description: The key of type <code>K</code> being tested for.
    return:
      type: System.Boolean
      description: '`true` if the collection contains an item with the key specified; otherwise, `false`.'
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.Contains*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary
  id: Dictionary
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: Dictionary
  nameWithType: SynchronizedKeyedCollection<K,T>.Dictionary
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.Dictionary
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Gets the dictionary associated with the collection.
  syntax:
    content: protected System.Collections.Generic.IDictionary<K,T> Dictionary { get; }
    return:
      type: System.Collections.Generic.IDictionary{K,T}
      description: The <xref href="stem.Collections.Generic.IDictionary%602"></xref> that contains the key-item pairs for the collection.
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem(`1)
  id: GetKeyForItem(`1)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: GetKeyForItem(T)
  nameWithType: SynchronizedKeyedCollection<K,T>.GetKeyForItem(T)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.GetKeyForItem(T)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: When overridden in a derived class, gets the key for a specified item.
  syntax:
    content: protected abstract K GetKeyForItem (T item);
    parameters:
    - id: item
      type: T
      description: The item of type <code>T</code> whose key is being retrieved.
    return:
      type: K
      description: The key of type K for the specified <code>item</code> of type <code>T</code>.
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem(System.Int32,`1)
  id: InsertItem(System.Int32,`1)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: InsertItem(Int32,T)
  nameWithType: SynchronizedKeyedCollection<K,T>.InsertItem(Int32,T)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.InsertItem(Int32,T)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Inserts an item into the collection at a specified location.
  syntax:
    content: protected override void InsertItem (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index that specifies the insertion location for the item in the collection.
    - id: item
      type: T
      description: The item of type <code>T</code> to be inserted into the collection.
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: Item(K)
  nameWithType: SynchronizedKeyedCollection<K,T>.Item(K)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.Item(K)
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Gets the items with a specified key from the collection.
  syntax:
    content: public T this[K key] { get; }
    parameters:
    - id: key
      type: K
      description: The key for the item being retrieved.
    return:
      type: T
      description: The item of type <code>T</code> from the collection with the key specified.
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.Item*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: Remove(K)
  nameWithType: SynchronizedKeyedCollection<K,T>.Remove(K)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.Remove(K)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Removes an item with a specified key from the collection and returns a value that indicates whether an item was removed.
  syntax:
    content: public bool Remove (K key);
    parameters:
    - id: key
      type: K
      description: The key of the item to be removed.
    return:
      type: System.Boolean
      description: '`true` if an item with the specified key was removed; otherwise, `false`.'
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.Remove*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: RemoveItem(Int32)
  nameWithType: SynchronizedKeyedCollection<K,T>.RemoveItem(Int32)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.RemoveItem(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Removes an item at a specified location from the collection.
  syntax:
    content: protected override void RemoveItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index that specifies the location of the item that is removed from the collection.
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem(System.Int32,`1)
  id: SetItem(System.Int32,`1)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  langs:
  - csharp
  name: SetItem(Int32,T)
  nameWithType: SynchronizedKeyedCollection<K,T>.SetItem(Int32,T)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.SetItem(Int32,T)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.Collections.Generic
  summary: Replaces an item at a specified location of the collection with a new item.
  syntax:
    content: protected override void SetItem (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index that specifies the insertion location for the item in the collection.
    - id: item
      type: T
      description: The item of type <code>T</code> to be inserted into the collection.
  overload: System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Collections.Generic\SynchronizedKeyedCollection`2.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Collections.Generic/SynchronizedKeyedCollection`2.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Collections.Generic.SynchronizedCollection`1
  isExternal: false
  name: System.Collections.Generic.SynchronizedCollection<T>
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: SynchronizedKeyedCollection<K,T>()
  nameWithType: SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>()
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>()
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: SynchronizedKeyedCollection<K,T>(Object)
  nameWithType: SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0})
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>)
  nameWithType: SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>)
- uid: System.Collections.Generic.IEqualityComparer{K}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<K>
  nameWithType: IEqualityComparer<K>
  fullName: System.Collections.Generic.IEqualityComparer<K>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: IEqualityComparer<K>
  - name: <
    nameWithType: <
    fullName: <
  - uid: K
    name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0},System.Int32)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>,Int32)
  nameWithType: SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>,Int32)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>(Object,IEqualityComparer<K>,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey(`1,`0)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: ChangeItemKey(T,K)
  nameWithType: SynchronizedKeyedCollection<K,T>.ChangeItemKey(T,K)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.ChangeItemKey(T,K)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: K
  isExternal: true
  name: K
  nameWithType: K
  fullName: K
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: ClearItems()
  nameWithType: SynchronizedKeyedCollection<K,T>.ClearItems()
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.ClearItems()
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Contains(`0)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: Contains(K)
  nameWithType: SynchronizedKeyedCollection<K,T>.Contains(K)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.Contains(K)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: Dictionary
  nameWithType: SynchronizedKeyedCollection<K,T>.Dictionary
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.Dictionary
- uid: System.Collections.Generic.IDictionary{K,T}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<K,T>
  nameWithType: IDictionary<K,T>
  fullName: System.Collections.Generic.IDictionary<K,T>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<K,T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: K
    name: K
    nameWithType: K
    fullName: K
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem(`1)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: GetKeyForItem(T)
  nameWithType: SynchronizedKeyedCollection<K,T>.GetKeyForItem(T)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.GetKeyForItem(T)
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem(System.Int32,`1)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: InsertItem(Int32,T)
  nameWithType: SynchronizedKeyedCollection<K,T>.InsertItem(Int32,T)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.InsertItem(Int32,T)
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Item(`0)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: Item(K)
  nameWithType: SynchronizedKeyedCollection<K,T>.Item(K)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.Item(K)
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Remove(`0)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: Remove(K)
  nameWithType: SynchronizedKeyedCollection<K,T>.Remove(K)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.Remove(K)
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem(System.Int32)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: RemoveItem(Int32)
  nameWithType: SynchronizedKeyedCollection<K,T>.RemoveItem(Int32)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.RemoveItem(Int32)
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem(System.Int32,`1)
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: SetItem(Int32,T)
  nameWithType: SynchronizedKeyedCollection<K,T>.SetItem(Int32,T)
  fullName: System.Collections.Generic.SynchronizedKeyedCollection<K,T>.SetItem(Int32,T)
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: SynchronizedKeyedCollection<K,T>
  nameWithType: SynchronizedKeyedCollection<K,T>.SynchronizedKeyedCollection<K,T>
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: ChangeItemKey
  nameWithType: SynchronizedKeyedCollection<K,T>.ChangeItemKey
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: ClearItems
  nameWithType: SynchronizedKeyedCollection<K,T>.ClearItems
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Contains*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: Contains
  nameWithType: SynchronizedKeyedCollection<K,T>.Contains
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: Dictionary
  nameWithType: SynchronizedKeyedCollection<K,T>.Dictionary
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: GetKeyForItem
  nameWithType: SynchronizedKeyedCollection<K,T>.GetKeyForItem
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: InsertItem
  nameWithType: SynchronizedKeyedCollection<K,T>.InsertItem
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Item*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: Item
  nameWithType: SynchronizedKeyedCollection<K,T>.Item
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.Remove*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: Remove
  nameWithType: SynchronizedKeyedCollection<K,T>.Remove
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: RemoveItem
  nameWithType: SynchronizedKeyedCollection<K,T>.RemoveItem
- uid: System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem*
  parent: System.Collections.Generic.SynchronizedKeyedCollection`2
  isExternal: false
  name: SetItem
  nameWithType: SynchronizedKeyedCollection<K,T>.SetItem
