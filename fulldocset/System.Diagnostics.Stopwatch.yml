### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Stopwatch
  id: Stopwatch
  children:
  - System.Diagnostics.Stopwatch.#ctor
  - System.Diagnostics.Stopwatch.Elapsed
  - System.Diagnostics.Stopwatch.ElapsedMilliseconds
  - System.Diagnostics.Stopwatch.ElapsedTicks
  - System.Diagnostics.Stopwatch.Frequency
  - System.Diagnostics.Stopwatch.GetTimestamp
  - System.Diagnostics.Stopwatch.IsHighResolution
  - System.Diagnostics.Stopwatch.IsRunning
  - System.Diagnostics.Stopwatch.Reset
  - System.Diagnostics.Stopwatch.Restart
  - System.Diagnostics.Stopwatch.Start
  - System.Diagnostics.Stopwatch.StartNew
  - System.Diagnostics.Stopwatch.Stop
  langs:
  - csharp
  name: Stopwatch
  nameWithType: Stopwatch
  fullName: System.Diagnostics.Stopwatch
  type: Class
  summary: "Provides a set of methods and properties that you can use to accurately measure elapsed time.  \n  \n To browse the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#System/services/monitoring/system/diagnosticts/Stopwatch.cs#ceb0ba9cc88de82e)."
  syntax:
    content: public class Stopwatch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: Stopwatch()
  nameWithType: Stopwatch.Stopwatch()
  fullName: System.Diagnostics.Stopwatch.Stopwatch()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Initializes a new instance of the <xref href="System.Diagnostics.Stopwatch"></xref> class.
  syntax:
    content: public Stopwatch ();
    parameters: []
  overload: System.Diagnostics.Stopwatch.#ctor*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.Elapsed
  id: Elapsed
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: Elapsed
  nameWithType: Stopwatch.Elapsed
  fullName: System.Diagnostics.Stopwatch.Elapsed
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Gets the total elapsed time measured by the current instance.
  syntax:
    content: public TimeSpan Elapsed { get; }
    return:
      type: System.TimeSpan
      description: To be added.
  overload: System.Diagnostics.Stopwatch.Elapsed*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.ElapsedMilliseconds
  id: ElapsedMilliseconds
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: ElapsedMilliseconds
  nameWithType: Stopwatch.ElapsedMilliseconds
  fullName: System.Diagnostics.Stopwatch.ElapsedMilliseconds
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Gets the total elapsed time measured by the current instance, in milliseconds.
  syntax:
    content: public long ElapsedMilliseconds { get; }
    return:
      type: System.Int64
      description: To be added.
  overload: System.Diagnostics.Stopwatch.ElapsedMilliseconds*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.ElapsedTicks
  id: ElapsedTicks
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: ElapsedTicks
  nameWithType: Stopwatch.ElapsedTicks
  fullName: System.Diagnostics.Stopwatch.ElapsedTicks
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Gets the total elapsed time measured by the current instance, in timer ticks.
  syntax:
    content: public long ElapsedTicks { get; }
    return:
      type: System.Int64
      description: To be added.
  overload: System.Diagnostics.Stopwatch.ElapsedTicks*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.Frequency
  id: Frequency
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: Frequency
  nameWithType: Stopwatch.Frequency
  fullName: System.Diagnostics.Stopwatch.Frequency
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Gets the frequency of the timer as the number of ticks per second. This field is read-only.
  syntax:
    content: public static readonly long Frequency;
    return:
      type: System.Int64
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.GetTimestamp
  id: GetTimestamp
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: GetTimestamp()
  nameWithType: Stopwatch.GetTimestamp()
  fullName: System.Diagnostics.Stopwatch.GetTimestamp()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Gets the current number of ticks in the timer mechanism.
  syntax:
    content: public static long GetTimestamp ();
    parameters: []
    return:
      type: System.Int64
      description: To be added.
  overload: System.Diagnostics.Stopwatch.GetTimestamp*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.IsHighResolution
  id: IsHighResolution
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: IsHighResolution
  nameWithType: Stopwatch.IsHighResolution
  fullName: System.Diagnostics.Stopwatch.IsHighResolution
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Indicates whether the timer is based on a high-resolution performance counter. This field is read-only.
  syntax:
    content: public static readonly bool IsHighResolution;
    return:
      type: System.Boolean
      description: To be added.
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.IsRunning
  id: IsRunning
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: IsRunning
  nameWithType: Stopwatch.IsRunning
  fullName: System.Diagnostics.Stopwatch.IsRunning
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Gets a value indicating whether the <xref href="System.Diagnostics.Stopwatch"></xref> timer is running.
  syntax:
    content: public bool IsRunning { get; }
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Diagnostics.Stopwatch.IsRunning*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.Reset
  id: Reset
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: Reset()
  nameWithType: Stopwatch.Reset()
  fullName: System.Diagnostics.Stopwatch.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Stops time interval measurement and resets the elapsed time to zero.
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Diagnostics.Stopwatch.Reset*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.Restart
  id: Restart
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: Restart()
  nameWithType: Stopwatch.Restart()
  fullName: System.Diagnostics.Stopwatch.Restart()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.
  syntax:
    content: public void Restart ();
    parameters: []
  overload: System.Diagnostics.Stopwatch.Restart*
  exceptions: []
  version:
  - netframework-40
- uid: System.Diagnostics.Stopwatch.Start
  id: Start
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: Start()
  nameWithType: Stopwatch.Start()
  fullName: System.Diagnostics.Stopwatch.Start()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Starts, or resumes, measuring elapsed time for an interval.
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Diagnostics.Stopwatch.Start*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.StartNew
  id: StartNew
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: StartNew()
  nameWithType: Stopwatch.StartNew()
  fullName: System.Diagnostics.Stopwatch.StartNew()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Initializes a new <xref href="System.Diagnostics.Stopwatch"></xref> instance, sets the elapsed time property to zero, and starts measuring elapsed time.
  syntax:
    content: public static System.Diagnostics.Stopwatch StartNew ();
    parameters: []
    return:
      type: System.Diagnostics.Stopwatch
      description: To be added.
  overload: System.Diagnostics.Stopwatch.StartNew*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.Diagnostics.Stopwatch.Stop
  id: Stop
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  name: Stop()
  nameWithType: Stopwatch.Stop()
  fullName: System.Diagnostics.Stopwatch.Stop()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: Stops measuring elapsed time for an interval.
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Diagnostics.Stopwatch.Stop*
  exceptions: []
  version:
  - netframework-20
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Stopwatch.#ctor
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Stopwatch()
  nameWithType: Stopwatch.Stopwatch()
  fullName: System.Diagnostics.Stopwatch.Stopwatch()
- uid: System.Diagnostics.Stopwatch.Elapsed
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Elapsed
  nameWithType: Stopwatch.Elapsed
  fullName: System.Diagnostics.Stopwatch.Elapsed
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Diagnostics.Stopwatch.ElapsedMilliseconds
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: ElapsedMilliseconds
  nameWithType: Stopwatch.ElapsedMilliseconds
  fullName: System.Diagnostics.Stopwatch.ElapsedMilliseconds
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.Stopwatch.ElapsedTicks
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: ElapsedTicks
  nameWithType: Stopwatch.ElapsedTicks
  fullName: System.Diagnostics.Stopwatch.ElapsedTicks
- uid: System.Diagnostics.Stopwatch.Frequency
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Frequency
  nameWithType: Stopwatch.Frequency
  fullName: System.Diagnostics.Stopwatch.Frequency
- uid: System.Diagnostics.Stopwatch.GetTimestamp
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: GetTimestamp()
  nameWithType: Stopwatch.GetTimestamp()
  fullName: System.Diagnostics.Stopwatch.GetTimestamp()
- uid: System.Diagnostics.Stopwatch.IsHighResolution
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: IsHighResolution
  nameWithType: Stopwatch.IsHighResolution
  fullName: System.Diagnostics.Stopwatch.IsHighResolution
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Stopwatch.IsRunning
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: IsRunning
  nameWithType: Stopwatch.IsRunning
  fullName: System.Diagnostics.Stopwatch.IsRunning
- uid: System.Diagnostics.Stopwatch.Reset
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Reset()
  nameWithType: Stopwatch.Reset()
  fullName: System.Diagnostics.Stopwatch.Reset()
- uid: System.Diagnostics.Stopwatch.Restart
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Restart()
  nameWithType: Stopwatch.Restart()
  fullName: System.Diagnostics.Stopwatch.Restart()
- uid: System.Diagnostics.Stopwatch.Start
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Start()
  nameWithType: Stopwatch.Start()
  fullName: System.Diagnostics.Stopwatch.Start()
- uid: System.Diagnostics.Stopwatch.StartNew
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: StartNew()
  nameWithType: Stopwatch.StartNew()
  fullName: System.Diagnostics.Stopwatch.StartNew()
- uid: System.Diagnostics.Stopwatch
  parent: System.Diagnostics
  isExternal: false
  name: Stopwatch
  nameWithType: Stopwatch
  fullName: System.Diagnostics.Stopwatch
- uid: System.Diagnostics.Stopwatch.Stop
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Stop()
  nameWithType: Stopwatch.Stop()
  fullName: System.Diagnostics.Stopwatch.Stop()
- uid: System.Diagnostics.Stopwatch.#ctor*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Stopwatch
  nameWithType: Stopwatch.Stopwatch
- uid: System.Diagnostics.Stopwatch.Elapsed*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Elapsed
  nameWithType: Stopwatch.Elapsed
- uid: System.Diagnostics.Stopwatch.ElapsedMilliseconds*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: ElapsedMilliseconds
  nameWithType: Stopwatch.ElapsedMilliseconds
- uid: System.Diagnostics.Stopwatch.ElapsedTicks*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: ElapsedTicks
  nameWithType: Stopwatch.ElapsedTicks
- uid: System.Diagnostics.Stopwatch.GetTimestamp*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: GetTimestamp
  nameWithType: Stopwatch.GetTimestamp
- uid: System.Diagnostics.Stopwatch.IsRunning*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: IsRunning
  nameWithType: Stopwatch.IsRunning
- uid: System.Diagnostics.Stopwatch.Reset*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Reset
  nameWithType: Stopwatch.Reset
- uid: System.Diagnostics.Stopwatch.Restart*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Restart
  nameWithType: Stopwatch.Restart
- uid: System.Diagnostics.Stopwatch.Start*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Start
  nameWithType: Stopwatch.Start
- uid: System.Diagnostics.Stopwatch.StartNew*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: StartNew
  nameWithType: Stopwatch.StartNew
- uid: System.Diagnostics.Stopwatch.Stop*
  parent: System.Diagnostics.Stopwatch
  isExternal: false
  name: Stop
  nameWithType: Stopwatch.Stop
