### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.ParameterBuilder
  id: ParameterBuilder
  children:
  - System.Reflection.Emit.ParameterBuilder.Attributes
  - System.Reflection.Emit.ParameterBuilder.GetToken
  - System.Reflection.Emit.ParameterBuilder.IsIn
  - System.Reflection.Emit.ParameterBuilder.IsOptional
  - System.Reflection.Emit.ParameterBuilder.IsOut
  - System.Reflection.Emit.ParameterBuilder.Name
  - System.Reflection.Emit.ParameterBuilder.Position
  - System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.ParameterBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)
  - System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: ParameterBuilder
  nameWithType: ParameterBuilder
  fullName: System.Reflection.Emit.ParameterBuilder
  type: Class
  summary: Creates or associates parameter information.
  remarks: "Parameter attributes need to consistent with the method signature. If you specify `Out` attributes for a parameter, you should ensure that the type of that method parameter is a `ByRef` type.  \n  \n Some ParameterBuilder attributes require that you call <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> with viable parameters in order for the Microsoft intermediate language (MSIL) to work correctly at runtime. For example, if you define a ParameterBuilder with ParameterAttributes.Out for parameter 1 of a `MethodBuilder`, then parameter 1 of <xref:System.Reflection.Emit.MethodBuilder> must be a reference such as Type.GetType(\"System.String&\"), rather than Type.GetType(\"System.String\")."
  example:
  - "The following example demonstrates how to create a dynamic method with a parameter passed by reference using `ParameterBuilder`.  \n  \n [!code-cpp[System.Reflection.Emit.ParameterBuilder Example#1](~/add/codesnippet/cpp/t-system.reflection.emit_12_1.cpp)]\n [!code-cs[System.Reflection.Emit.ParameterBuilder Example#1](~/add/codesnippet/csharp/t-system.reflection.emit_12_1.cs)]\n [!code-vb[System.Reflection.Emit.ParameterBuilder Example#1](~/add/codesnippet/visualbasic/t-system.reflection.emit_12_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ParameterBuilder))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class ParameterBuilder : System.Runtime.InteropServices._ParameterBuilder
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices._ParameterBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.Attributes
  id: Attributes
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: Attributes
  nameWithType: ParameterBuilder.Attributes
  fullName: System.Reflection.Emit.ParameterBuilder.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the attributes for this parameter.
  remarks: The values of the attribute correspond to the values of the <xref:System.Reflection.ParameterAttributes> enumeration.
  syntax:
    content: public virtual int Attributes { get; }
    return:
      type: System.Int32
      description: Read-only. Retrieves the attributes for this parameter.
  overload: System.Reflection.Emit.ParameterBuilder.Attributes*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.GetToken
  id: GetToken
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: GetToken()
  nameWithType: ParameterBuilder.GetToken()
  fullName: System.Reflection.Emit.ParameterBuilder.GetToken()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the token for this parameter.
  syntax:
    content: public virtual System.Reflection.Emit.ParameterToken GetToken ();
    parameters: []
    return:
      type: System.Reflection.Emit.ParameterToken
      description: Returns the token for this parameter.
  overload: System.Reflection.Emit.ParameterBuilder.GetToken*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.IsIn
  id: IsIn
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: IsIn
  nameWithType: ParameterBuilder.IsIn
  fullName: System.Reflection.Emit.ParameterBuilder.IsIn
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves whether this is an input parameter.
  remarks: This method depends on an optional metadata flag. This flag can be inserted by compilers, but the compilers are not obligated to do so.
  syntax:
    content: public bool IsIn { get; }
    return:
      type: System.Boolean
      description: Read-only. Retrieves whether this is an input parameter.
  overload: System.Reflection.Emit.ParameterBuilder.IsIn*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.IsOptional
  id: IsOptional
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: IsOptional
  nameWithType: ParameterBuilder.IsOptional
  fullName: System.Reflection.Emit.ParameterBuilder.IsOptional
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves whether this parameter is optional.
  syntax:
    content: public bool IsOptional { get; }
    return:
      type: System.Boolean
      description: Read-only. Specifies whether this parameter is optional.
  overload: System.Reflection.Emit.ParameterBuilder.IsOptional*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.IsOut
  id: IsOut
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: IsOut
  nameWithType: ParameterBuilder.IsOut
  fullName: System.Reflection.Emit.ParameterBuilder.IsOut
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves whether this parameter is an output parameter.
  syntax:
    content: public bool IsOut { get; }
    return:
      type: System.Boolean
      description: Read-only. Retrieves whether this parameter is an output parameter.
  overload: System.Reflection.Emit.ParameterBuilder.IsOut*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.Name
  id: Name
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: Name
  nameWithType: ParameterBuilder.Name
  fullName: System.Reflection.Emit.ParameterBuilder.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the name of this parameter.
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: Read-only. Retrieves the name of this parameter.
  overload: System.Reflection.Emit.ParameterBuilder.Name*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.Position
  id: Position
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: Position
  nameWithType: ParameterBuilder.Position
  fullName: System.Reflection.Emit.ParameterBuilder.Position
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the signature position for this parameter.
  syntax:
    content: public virtual int Position { get; }
    return:
      type: System.Int32
      description: Read-only. Retrieves the signature position for this parameter.
  overload: System.Reflection.Emit.ParameterBuilder.Position*
  exceptions: []
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  id: SetConstant(System.Object)
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: SetConstant(Object)
  nameWithType: ParameterBuilder.SetConstant(Object)
  fullName: System.Reflection.Emit.ParameterBuilder.SetConstant(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the default value of the parameter.
  remarks: '`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`. If the parameter type is a reference type, CLS compliance requires `defaultValue` to be `null`. However, starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], `defaultValue` can be non-null for a reference type as long as the value can be assigned to that reference type. For example, an `Int32` value can be assigned to a parameter of type <xref:System.Object>. This is not CLS-compliant, but it can be useful in interop scenarios.'
  syntax:
    content: public virtual void SetConstant (object defaultValue);
    parameters:
    - id: defaultValue
      type: System.Object
      description: The default value of this parameter.
  overload: System.Reflection.Emit.ParameterBuilder.SetConstant*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The parameter is not one of the supported types.  \n  \n -or-  \n  \n The type of <code>defaultValue</code> does not match the type of the parameter.  \n  \n -or-  \n  \n The parameter is of type <xref href=\"System.Object\"></xref> or other reference type, <code>defaultValue</code> is not `null`, and the value cannot be assigned to the reference type."
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a custom attribute builder.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class to define the custom attribute.
  overload: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>con</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: SetCustomAttribute(ConstructorInfo,Byte[])
  nameWithType: ParameterBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a specified custom attribute blob.
  remarks: See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attributes.
  overload: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>con</code> or <code>binaryAttribute</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)
  id: SetMarshal(System.Reflection.Emit.UnmanagedMarshal)
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: SetMarshal(UnmanagedMarshal)
  nameWithType: ParameterBuilder.SetMarshal(UnmanagedMarshal)
  fullName: System.Reflection.Emit.ParameterBuilder.SetMarshal(UnmanagedMarshal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Specifies the marshaling for this parameter.
  remarks: "This method should throw the following exception but currently does not:  \n  \n <xref:System.InvalidOperationException> if the containing type has been created using TypeBuilder.CreateType()."
  syntax:
    content: public virtual void SetMarshal (System.Reflection.Emit.UnmanagedMarshal unmanagedMarshal);
    parameters:
    - id: unmanagedMarshal
      type: System.Reflection.Emit.UnmanagedMarshal
      description: The marshaling information for this parameter.
  overload: System.Reflection.Emit.ParameterBuilder.SetMarshal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>unmanagedMarshal</code> is `null`.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: _ParameterBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: ParameterBuilder._ParameterBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: void _ParameterBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: Passed-in array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: Count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: Caller-allocated array which receives the IDs corresponding to the names.
  overload: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: _ParameterBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: ParameterBuilder._ParameterBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: void _ParameterBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: Receives a pointer to the requested type information object.
  overload: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: _ParameterBuilder.GetTypeInfoCount(UInt32)
  nameWithType: ParameterBuilder._ParameterBuilder.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: void _ParameterBuilder.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: Points to a location that receives the number of type information interfaces provided by the object.
  overload: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.ParameterBuilder
  langs:
  - csharp
  name: _ParameterBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: ParameterBuilder._ParameterBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.ParameterBuilder._ParameterBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: void _ParameterBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: Identifies the member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: Pointer to the location where the result is to be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: Pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  overload: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: The method is called late-bound using the COM <code>IDispatch</code> interface.
  original_ecmaxml_local_path: E:\mdoc\ECMA2YamlTestRepo2\fulldocset\xml\System.Reflection.Emit\ParameterBuilder.xml
  content_git_url: https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/masterwithyml/fulldocset/xml/System.Reflection.Emit/ParameterBuilder.xml
  version:
  - netframework-3.0
  - netframework-3.5-client
  - netframework-3.5
  - netframework-4.0-client
  - netframework-4.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NotImplementedException
  parent: System
  isExternal: false
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: System.Reflection.Emit.ParameterBuilder.Attributes
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: Attributes
  nameWithType: ParameterBuilder.Attributes
  fullName: System.Reflection.Emit.ParameterBuilder.Attributes
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.ParameterBuilder.GetToken
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: GetToken()
  nameWithType: ParameterBuilder.GetToken()
  fullName: System.Reflection.Emit.ParameterBuilder.GetToken()
- uid: System.Reflection.Emit.ParameterToken
  parent: System.Reflection.Emit
  isExternal: false
  name: ParameterToken
  nameWithType: ParameterToken
  fullName: System.Reflection.Emit.ParameterToken
- uid: System.Reflection.Emit.ParameterBuilder.IsIn
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: IsIn
  nameWithType: ParameterBuilder.IsIn
  fullName: System.Reflection.Emit.ParameterBuilder.IsIn
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Emit.ParameterBuilder.IsOptional
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: IsOptional
  nameWithType: ParameterBuilder.IsOptional
  fullName: System.Reflection.Emit.ParameterBuilder.IsOptional
- uid: System.Reflection.Emit.ParameterBuilder.IsOut
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: IsOut
  nameWithType: ParameterBuilder.IsOut
  fullName: System.Reflection.Emit.ParameterBuilder.IsOut
- uid: System.Reflection.Emit.ParameterBuilder.Name
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: Name
  nameWithType: ParameterBuilder.Name
  fullName: System.Reflection.Emit.ParameterBuilder.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.Emit.ParameterBuilder.Position
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: Position
  nameWithType: ParameterBuilder.Position
  fullName: System.Reflection.Emit.ParameterBuilder.Position
- uid: System.Reflection.Emit.ParameterBuilder.SetConstant(System.Object)
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: SetConstant(Object)
  nameWithType: ParameterBuilder.SetConstant(Object)
  fullName: System.Reflection.Emit.ParameterBuilder.SetConstant(Object)
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(CustomAttributeBuilder)
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: SetCustomAttribute(ConstructorInfo,Byte[])
  nameWithType: ParameterBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  fullName: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Emit.ParameterBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: SetMarshal(UnmanagedMarshal)
  nameWithType: ParameterBuilder.SetMarshal(UnmanagedMarshal)
  fullName: System.Reflection.Emit.ParameterBuilder.SetMarshal(UnmanagedMarshal)
- uid: System.Reflection.Emit.UnmanagedMarshal
  parent: System.Reflection.Emit
  isExternal: false
  name: UnmanagedMarshal
  nameWithType: UnmanagedMarshal
  fullName: System.Reflection.Emit.UnmanagedMarshal
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: _ParameterBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: ParameterBuilder._ParameterBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: _ParameterBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: ParameterBuilder._ParameterBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: _ParameterBuilder.GetTypeInfoCount(UInt32)
  nameWithType: ParameterBuilder._ParameterBuilder.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.ParameterBuilder._ParameterBuilder.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: _ParameterBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: ParameterBuilder._ParameterBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.ParameterBuilder._ParameterBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.ParameterBuilder.Attributes*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: Attributes
  nameWithType: ParameterBuilder.Attributes
- uid: System.Reflection.Emit.ParameterBuilder.GetToken*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: GetToken
  nameWithType: ParameterBuilder.GetToken
- uid: System.Reflection.Emit.ParameterBuilder.IsIn*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: IsIn
  nameWithType: ParameterBuilder.IsIn
- uid: System.Reflection.Emit.ParameterBuilder.IsOptional*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: IsOptional
  nameWithType: ParameterBuilder.IsOptional
- uid: System.Reflection.Emit.ParameterBuilder.IsOut*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: IsOut
  nameWithType: ParameterBuilder.IsOut
- uid: System.Reflection.Emit.ParameterBuilder.Name*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: Name
  nameWithType: ParameterBuilder.Name
- uid: System.Reflection.Emit.ParameterBuilder.Position*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: Position
  nameWithType: ParameterBuilder.Position
- uid: System.Reflection.Emit.ParameterBuilder.SetConstant*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: SetConstant
  nameWithType: ParameterBuilder.SetConstant
- uid: System.Reflection.Emit.ParameterBuilder.SetCustomAttribute*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: SetCustomAttribute
  nameWithType: ParameterBuilder.SetCustomAttribute
- uid: System.Reflection.Emit.ParameterBuilder.SetMarshal*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: SetMarshal
  nameWithType: ParameterBuilder.SetMarshal
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetIDsOfNames*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames
  nameWithType: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.GetIDsOfNames
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfo*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo
  nameWithType: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.GetTypeInfo
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#GetTypeInfoCount*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount
  nameWithType: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.GetTypeInfoCount
- uid: System.Reflection.Emit.ParameterBuilder.System#Runtime#InteropServices#_ParameterBuilder#Invoke*
  parent: System.Reflection.Emit.ParameterBuilder
  isExternal: false
  name: System.Runtime.InteropServices._ParameterBuilder.Invoke
  nameWithType: ParameterBuilder.System.Runtime.InteropServices._ParameterBuilder.Invoke
