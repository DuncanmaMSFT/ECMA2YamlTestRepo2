### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.RequestContext
  id: RequestContext
  children:
  - System.ServiceModel.Channels.RequestContext.#ctor
  - System.ServiceModel.Channels.RequestContext.Abort
  - System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.RequestContext.Close
  - System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  - System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  - System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  - System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  - System.ServiceModel.Channels.RequestContext.RequestMessage
  - System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose
  langs:
  - csharp
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.ServiceModel.Channels.RequestContext
  type: Class
  summary: Provides a reply that is correlated to an incoming request.
  syntax:
    content: 'public abstract class RequestContext : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: RequestContext()
  nameWithType: RequestContext.RequestContext()
  fullName: System.ServiceModel.Channels.RequestContext.RequestContext()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Channels.RequestContext"></xref> class.
  syntax:
    content: protected RequestContext ();
    parameters: []
  overload: System.ServiceModel.Channels.RequestContext.#ctor*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.Abort
  id: Abort
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Abort()
  nameWithType: RequestContext.Abort()
  fullName: System.ServiceModel.Channels.RequestContext.Abort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, aborts processing the request associated with the context.
  syntax:
    content: public abstract void Abort ();
    parameters: []
  overload: System.ServiceModel.Channels.RequestContext.Abort*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: BeginReply(Message,AsyncCallback,Object)
  nameWithType: RequestContext.BeginReply(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.RequestContext.BeginReply(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.
  syntax:
    content: public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: To be added.
    - id: callback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.Channels.RequestContext.BeginReply*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: BeginReply(Message,TimeSpan,AsyncCallback,Object)
  nameWithType: RequestContext.BeginReply(Message,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.RequestContext.BeginReply(Message,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.
  syntax:
    content: public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
    - id: callback
      type: System.AsyncCallback
      description: To be added.
    - id: state
      type: System.Object
      description: To be added.
    return:
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.Channels.RequestContext.BeginReply*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.Close
  id: Close
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Close()
  nameWithType: RequestContext.Close()
  fullName: System.ServiceModel.Channels.RequestContext.Close()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.
  syntax:
    content: public abstract void Close ();
    parameters: []
  overload: System.ServiceModel.Channels.RequestContext.Close*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  id: Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Close(TimeSpan)
  nameWithType: RequestContext.Close(TimeSpan)
  fullName: System.ServiceModel.Channels.RequestContext.Close(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.
  syntax:
    content: public abstract void Close (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: To be added.
  overload: System.ServiceModel.Channels.RequestContext.Close*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RequestContext.Dispose(Boolean)
  fullName: System.ServiceModel.Channels.RequestContext.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Releases resources associated with the context.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  overload: System.ServiceModel.Channels.RequestContext.Dispose*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  id: EndReply(System.IAsyncResult)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: EndReply(IAsyncResult)
  nameWithType: RequestContext.EndReply(IAsyncResult)
  fullName: System.ServiceModel.Channels.RequestContext.EndReply(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, completes an asynchronous operation to reply to a request message.
  syntax:
    content: public abstract void EndReply (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: To be added.
  overload: System.ServiceModel.Channels.RequestContext.EndReply*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  id: Reply(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Reply(Message)
  nameWithType: RequestContext.Reply(Message)
  fullName: System.ServiceModel.Channels.RequestContext.Reply(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, replies to a request message.
  syntax:
    content: public abstract void Reply (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: To be added.
  overload: System.ServiceModel.Channels.RequestContext.Reply*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  id: Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: Reply(Message,TimeSpan)
  nameWithType: RequestContext.Reply(Message,TimeSpan)
  fullName: System.ServiceModel.Channels.RequestContext.Reply(Message,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, replies to a request message within a specified interval of time.
  syntax:
    content: public abstract void Reply (System.ServiceModel.Channels.Message message, TimeSpan timeout);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: To be added.
    - id: timeout
      type: System.TimeSpan
      description: To be added.
  overload: System.ServiceModel.Channels.RequestContext.Reply*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.RequestMessage
  id: RequestMessage
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: RequestMessage
  nameWithType: RequestContext.RequestMessage
  fullName: System.ServiceModel.Channels.RequestContext.RequestMessage
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: When overridden in a derived class, gets the message that contains the request.
  syntax:
    content: public abstract System.ServiceModel.Channels.Message RequestMessage { get; }
    return:
      type: System.ServiceModel.Channels.Message
      description: To be added.
  overload: System.ServiceModel.Channels.RequestContext.RequestMessage*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
- uid: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: RequestContext.System.IDisposable.Dispose()
  fullName: System.ServiceModel.Channels.RequestContext.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: Releases both managed and unmanaged resources associated with the context.
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose*
  exceptions: []
  version:
  - netframework-30
  - netframework-35
  - netframework-40
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Channels.RequestContext.#ctor
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: RequestContext()
  nameWithType: RequestContext.RequestContext()
  fullName: System.ServiceModel.Channels.RequestContext.RequestContext()
- uid: System.ServiceModel.Channels.RequestContext.Abort
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Abort()
  nameWithType: RequestContext.Abort()
  fullName: System.ServiceModel.Channels.RequestContext.Abort()
- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: BeginReply(Message,AsyncCallback,Object)
  nameWithType: RequestContext.BeginReply(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.RequestContext.BeginReply(Message,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: BeginReply(Message,TimeSpan,AsyncCallback,Object)
  nameWithType: RequestContext.BeginReply(Message,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.RequestContext.BeginReply(Message,TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.RequestContext.Close
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Close()
  nameWithType: RequestContext.Close()
  fullName: System.ServiceModel.Channels.RequestContext.Close()
- uid: System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Close(TimeSpan)
  nameWithType: RequestContext.Close(TimeSpan)
  fullName: System.ServiceModel.Channels.RequestContext.Close(TimeSpan)
- uid: System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RequestContext.Dispose(Boolean)
  fullName: System.ServiceModel.Channels.RequestContext.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: EndReply(IAsyncResult)
  nameWithType: RequestContext.EndReply(IAsyncResult)
  fullName: System.ServiceModel.Channels.RequestContext.EndReply(IAsyncResult)
- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Reply(Message)
  nameWithType: RequestContext.Reply(Message)
  fullName: System.ServiceModel.Channels.RequestContext.Reply(Message)
- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Reply(Message,TimeSpan)
  nameWithType: RequestContext.Reply(Message,TimeSpan)
  fullName: System.ServiceModel.Channels.RequestContext.Reply(Message,TimeSpan)
- uid: System.ServiceModel.Channels.RequestContext.RequestMessage
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: RequestMessage
  nameWithType: RequestContext.RequestMessage
  fullName: System.ServiceModel.Channels.RequestContext.RequestMessage
- uid: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: RequestContext.System.IDisposable.Dispose()
  fullName: System.ServiceModel.Channels.RequestContext.System.IDisposable.Dispose()
- uid: System.ServiceModel.Channels.RequestContext.#ctor*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: RequestContext
  nameWithType: RequestContext.RequestContext
- uid: System.ServiceModel.Channels.RequestContext.Abort*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Abort
  nameWithType: RequestContext.Abort
- uid: System.ServiceModel.Channels.RequestContext.BeginReply*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: BeginReply
  nameWithType: RequestContext.BeginReply
- uid: System.ServiceModel.Channels.RequestContext.Close*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Close
  nameWithType: RequestContext.Close
- uid: System.ServiceModel.Channels.RequestContext.Dispose*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Dispose
  nameWithType: RequestContext.Dispose
- uid: System.ServiceModel.Channels.RequestContext.EndReply*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: EndReply
  nameWithType: RequestContext.EndReply
- uid: System.ServiceModel.Channels.RequestContext.Reply*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: Reply
  nameWithType: RequestContext.Reply
- uid: System.ServiceModel.Channels.RequestContext.RequestMessage*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: RequestMessage
  nameWithType: RequestContext.RequestMessage
- uid: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose*
  parent: System.ServiceModel.Channels.RequestContext
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: RequestContext.System.IDisposable.Dispose
